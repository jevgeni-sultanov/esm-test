// src/viewer.html
var viewer_default = `\uFEFF<!DOCTYPE html>
<!--
Copyright 2012 Mozilla Foundation

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

Adobe CMap resources are covered by their own copyright but the same license:

    Copyright 1990-2015 Adobe Systems Incorporated.

See https://github.com/adobe-type-tools/cmap-resources
-->
<html dir="ltr" mozdisallowselectionprint>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <meta name="google" content="notranslate">
    <title>PDF.js viewer</title>
  </head>

  <body tabindex="1">
    <div id="outerContainer">

      <div id="sidebarContainer">
        <div id="toolbarSidebar">
          <div id="toolbarSidebarLeft">
            <div id="sidebarViewButtons" class="splitToolbarButton toggled" role="radiogroup">
              <button id="viewThumbnail" class="toolbarButton toggled" type="button" title="Show Thumbnails" tabindex="2" data-l10n-id="pdfjs-thumbs-button" role="radio" aria-checked="true" aria-controls="thumbnailView">
                <span data-l10n-id="pdfjs-thumbs-button-label">Thumbnails</span>
              </button>
              <button id="viewOutline" class="toolbarButton" type="button" title="Show Document Outline (double-click to expand/collapse all items)" tabindex="3" data-l10n-id="pdfjs-document-outline-button" role="radio" aria-checked="false" aria-controls="outlineView">
                <span data-l10n-id="pdfjs-document-outline-button-label">Document Outline</span>
              </button>
              <button id="viewAttachments" class="toolbarButton" type="button" title="Show Attachments" tabindex="4" data-l10n-id="pdfjs-attachments-button" role="radio" aria-checked="false" aria-controls="attachmentsView">
                <span data-l10n-id="pdfjs-attachments-button-label">Attachments</span>
              </button>
              <button id="viewLayers" class="toolbarButton" type="button" title="Show Layers (double-click to reset all layers to the default state)" tabindex="5" data-l10n-id="pdfjs-layers-button" role="radio" aria-checked="false" aria-controls="layersView">
                <span data-l10n-id="pdfjs-layers-button-label">Layers</span>
              </button>
            </div>
          </div>

          <div id="toolbarSidebarRight">
            <div id="outlineOptionsContainer">
              <div class="verticalToolbarSeparator"></div>

              <button id="currentOutlineItem" class="toolbarButton" type="button" disabled="disabled" title="Find Current Outline Item" tabindex="6" data-l10n-id="pdfjs-current-outline-item-button">
                <span data-l10n-id="pdfjs-current-outline-item-button-label">Current Outline Item</span>
              </button>
            </div>
          </div>
        </div>
        <div id="sidebarContent">
          <div id="thumbnailView"></div>
        </div>
        <div id="sidebarResizer"></div>
      </div>  <!-- sidebarContainer -->

      <div id="mainContainer">
        <div class="findbar hidden doorHanger" id="findbar">
          <div id="findbarInputContainer">
            <span class="loadingInput end">
              <input id="findInput" class="toolbarField" title="Find" placeholder="Find in document\u2026" tabindex="91" data-l10n-id="pdfjs-find-input" aria-invalid="false">
            </span>
            <div class="splitToolbarButton">
              <button id="findPrevious" class="toolbarButton" type="button" title="Find the previous occurrence of the phrase" tabindex="92" data-l10n-id="pdfjs-find-previous-button">
                <span data-l10n-id="pdfjs-find-previous-button-label">Previous</span>
              </button>
              <div class="splitToolbarButtonSeparator"></div>
              <button id="findNext" class="toolbarButton" type="button" title="Find the next occurrence of the phrase" tabindex="93" data-l10n-id="pdfjs-find-next-button">
                <span data-l10n-id="pdfjs-find-next-button-label">Next</span>
              </button>
            </div>
          </div>

          <div id="findbarOptionsOneContainer">
            <input type="checkbox" id="findHighlightAll" class="toolbarField" tabindex="94">
            <label for="findHighlightAll" class="toolbarLabel" data-l10n-id="pdfjs-find-highlight-checkbox">Highlight All</label>
            <input type="checkbox" id="findMatchCase" class="toolbarField" tabindex="95">
            <label for="findMatchCase" class="toolbarLabel" data-l10n-id="pdfjs-find-match-case-checkbox-label">Match Case</label>
          </div>
          <div id="findbarOptionsTwoContainer">
            <input type="checkbox" id="findMatchDiacritics" class="toolbarField" tabindex="96">
            <label for="findMatchDiacritics" class="toolbarLabel" data-l10n-id="pdfjs-find-match-diacritics-checkbox-label">Match Diacritics</label>
            <input type="checkbox" id="findEntireWord" class="toolbarField" tabindex="97">
            <label for="findEntireWord" class="toolbarLabel" data-l10n-id="pdfjs-find-entire-word-checkbox-label">Whole Words</label>
          </div>

          <div id="findbarMessageContainer" aria-live="polite">
            <span id="findResultsCount" class="toolbarLabel"></span>
            <span id="findMsg" class="toolbarLabel"></span>
          </div>
        </div>  <!-- findbar -->

        <div class="editorParamsToolbar hidden doorHangerRight" id="editorHighlightParamsToolbar">
          <div id="highlightParamsToolbarContainer" class="editorParamsToolbarContainer">
            <div id="editorHighlightColorPicker" class="colorPicker">
              <span id="highlightColorPickerLabel" class="editorParamsLabel" data-l10n-id="pdfjs-editor-highlight-colorpicker-label">Highlight color</span>
            </div>
            <div id="editorHighlightThickness">
              <label for="editorFreeHighlightThickness" class="editorParamsLabel" data-l10n-id="pdfjs-editor-free-highlight-thickness-input">Thickness</label>
              <div class="thicknessPicker">
                <input type="range" id="editorFreeHighlightThickness" class="editorParamsSlider" data-l10n-id="pdfjs-editor-free-highlight-thickness-title" value="12" min="8" max="24" step="1" tabindex="101">
              </div>
            </div>
            <div id="editorHighlightVisibility">
              <div class="divider"></div>
              <div class="toggler">
                <label for="editorHighlightShowAll" class="editorParamsLabel" data-l10n-id="pdfjs-editor-highlight-show-all-button-label">Show all</label>
                <button id="editorHighlightShowAll" class="toggle-button" type="button" data-l10n-id="pdfjs-editor-highlight-show-all-button" aria-pressed="true" tabindex="102"></button>
              </div>
            </div>
          </div>
        </div>

        <div class="editorParamsToolbar hidden doorHangerRight" id="editorFreeTextParamsToolbar">
          <div class="editorParamsToolbarContainer">
            <div class="editorParamsSetter">
              <label for="editorFreeTextColor" class="editorParamsLabel" data-l10n-id="pdfjs-editor-free-text-color-input">Color</label>
              <input type="color" id="editorFreeTextColor" class="editorParamsColor" tabindex="103">
            </div>
            <div class="editorParamsSetter">
              <label for="editorFreeTextFontSize" class="editorParamsLabel" data-l10n-id="pdfjs-editor-free-text-size-input">Size</label>
              <input type="range" id="editorFreeTextFontSize" class="editorParamsSlider" value="10" min="5" max="100" step="1" tabindex="104">
            </div>
          </div>
        </div>

        <div class="editorParamsToolbar hidden doorHangerRight" id="editorInkParamsToolbar">
          <div class="editorParamsToolbarContainer">
            <div class="editorParamsSetter">
              <label for="editorInkColor" class="editorParamsLabel" data-l10n-id="pdfjs-editor-ink-color-input">Color</label>
              <input type="color" id="editorInkColor" class="editorParamsColor" tabindex="105">
            </div>
            <div class="editorParamsSetter">
              <label for="editorInkThickness" class="editorParamsLabel" data-l10n-id="pdfjs-editor-ink-thickness-input">Thickness</label>
              <input type="range" id="editorInkThickness" class="editorParamsSlider" value="1" min="1" max="20" step="1" tabindex="106">
            </div>
            <div class="editorParamsSetter">
              <label for="editorInkOpacity" class="editorParamsLabel" data-l10n-id="pdfjs-editor-ink-opacity-input">Opacity</label>
              <input type="range" id="editorInkOpacity" class="editorParamsSlider" value="100" min="1" max="100" step="1" tabindex="107">
            </div>
          </div>
        </div>

        <div class="editorParamsToolbar hidden doorHangerRight" id="editorStampParamsToolbar">
          <div class="editorParamsToolbarContainer">
            <button id="editorStampAddImage" class="toolbarButton labeled" type="button" title="Add image" tabindex="108" data-l10n-id="pdfjs-editor-stamp-add-image-button">
              <span class="editorParamsLabel" data-l10n-id="pdfjs-editor-stamp-add-image-button-label">Add image</span>
            </button>
          </div>
        </div>

        <div id="secondaryToolbar" class="secondaryToolbar hidden doorHangerRight">
          <div id="secondaryToolbarButtonContainer">
            <button id="secondaryOpenFile" class="toolbarButton labeled" type="button" title="Open File" tabindex="51" data-l10n-id="pdfjs-open-file-button">
              <span data-l10n-id="pdfjs-open-file-button-label">Open</span>
            </button>

            <button id="secondaryPrint" class="toolbarButton labeled visibleMediumView" type="button" title="Print" tabindex="52" data-l10n-id="pdfjs-print-button">
              <span data-l10n-id="pdfjs-print-button-label">Print</span>
            </button>

            <button id="secondaryDownload" class="toolbarButton labeled visibleMediumView" type="button" title="Save" tabindex="53" data-l10n-id="pdfjs-save-button">
              <span data-l10n-id="pdfjs-save-button-label">Save</span>
            </button>

            <div class="horizontalToolbarSeparator"></div>

            <button id="presentationMode" class="toolbarButton labeled" type="button" title="Switch to Presentation Mode" tabindex="54" data-l10n-id="pdfjs-presentation-mode-button">
              <span data-l10n-id="pdfjs-presentation-mode-button-label">Presentation Mode</span>
            </button>

            <a href="#" id="viewBookmark" class="toolbarButton labeled" title="Current Page (View URL from Current Page)" tabindex="55" data-l10n-id="pdfjs-bookmark-button">
              <span data-l10n-id="pdfjs-bookmark-button-label">Current Page</span>
            </a>

            <div id="viewBookmarkSeparator" class="horizontalToolbarSeparator"></div>

            <button id="firstPage" class="toolbarButton labeled" type="button" title="Go to First Page" tabindex="56" data-l10n-id="pdfjs-first-page-button">
              <span data-l10n-id="pdfjs-first-page-button-label">Go to First Page</span>
            </button>
            <button id="lastPage" class="toolbarButton labeled" type="button" title="Go to Last Page" tabindex="57" data-l10n-id="pdfjs-last-page-button">
              <span data-l10n-id="pdfjs-last-page-button-label">Go to Last Page</span>
            </button>

            <div class="horizontalToolbarSeparator"></div>

            <button id="pageRotateCw" class="toolbarButton labeled" type="button" title="Rotate Clockwise" tabindex="58" data-l10n-id="pdfjs-page-rotate-cw-button">
              <span data-l10n-id="pdfjs-page-rotate-cw-button-label">Rotate Clockwise</span>
            </button>
            <button id="pageRotateCcw" class="toolbarButton labeled" type="button" title="Rotate Counterclockwise" tabindex="59" data-l10n-id="pdfjs-page-rotate-ccw-button">
              <span data-l10n-id="pdfjs-page-rotate-ccw-button-label">Rotate Counterclockwise</span>
            </button>

            <div class="horizontalToolbarSeparator"></div>

            <div id="cursorToolButtons" role="radiogroup">
              <button id="cursorSelectTool" class="toolbarButton labeled toggled" type="button" title="Enable Text Selection Tool" tabindex="60" data-l10n-id="pdfjs-cursor-text-select-tool-button" role="radio" aria-checked="true">
                <span data-l10n-id="pdfjs-cursor-text-select-tool-button-label">Text Selection Tool</span>
              </button>
              <button id="cursorHandTool" class="toolbarButton labeled" type="button" title="Enable Hand Tool" tabindex="61" data-l10n-id="pdfjs-cursor-hand-tool-button" role="radio" aria-checked="false">
                <span data-l10n-id="pdfjs-cursor-hand-tool-button-label">Hand Tool</span>
              </button>
            </div>

            <div class="horizontalToolbarSeparator"></div>

            <div id="scrollModeButtons" role="radiogroup">
              <button id="scrollPage" class="toolbarButton labeled" type="button" title="Use Page Scrolling" tabindex="62" data-l10n-id="pdfjs-scroll-page-button" role="radio" aria-checked="false">
                <span data-l10n-id="pdfjs-scroll-page-button-label">Page Scrolling</span>
              </button>
              <button id="scrollVertical" class="toolbarButton labeled toggled" type="button" title="Use Vertical Scrolling" tabindex="63" data-l10n-id="pdfjs-scroll-vertical-button" role="radio" aria-checked="true">
                <span data-l10n-id="pdfjs-scroll-vertical-button-label" >Vertical Scrolling</span>
              </button>
              <button id="scrollHorizontal" class="toolbarButton labeled" type="button" title="Use Horizontal Scrolling" tabindex="64" data-l10n-id="pdfjs-scroll-horizontal-button" role="radio" aria-checked="false">
                <span data-l10n-id="pdfjs-scroll-horizontal-button-label">Horizontal Scrolling</span>
              </button>
              <button id="scrollWrapped" class="toolbarButton labeled" type="button" title="Use Wrapped Scrolling" tabindex="65" data-l10n-id="pdfjs-scroll-wrapped-button" role="radio" aria-checked="false">
                <span data-l10n-id="pdfjs-scroll-wrapped-button-label">Wrapped Scrolling</span>
              </button>
            </div>

            <div class="horizontalToolbarSeparator"></div>

            <div id="spreadModeButtons" role="radiogroup">
              <button id="spreadNone" class="toolbarButton labeled toggled" type="button" title="Do not join page spreads" tabindex="66" data-l10n-id="pdfjs-spread-none-button" role="radio" aria-checked="true">
                <span data-l10n-id="pdfjs-spread-none-button-label">No Spreads</span>
              </button>
              <button id="spreadOdd" class="toolbarButton labeled" type="button" title="Join page spreads starting with odd-numbered pages" tabindex="67" data-l10n-id="pdfjs-spread-odd-button" role="radio" aria-checked="false">
                <span data-l10n-id="pdfjs-spread-odd-button-label">Odd Spreads</span>
              </button>
              <button id="spreadEven" class="toolbarButton labeled" type="button" title="Join page spreads starting with even-numbered pages" tabindex="68" data-l10n-id="pdfjs-spread-even-button" role="radio" aria-checked="false">
                <span data-l10n-id="pdfjs-spread-even-button-label">Even Spreads</span>
              </button>
            </div>

            <div id="imageAltTextSettingsSeparator" class="horizontalToolbarSeparator hidden"></div>
            <button id="imageAltTextSettings" type="button" class="toolbarButton labeled hidden" title="Image alt text settings" tabindex="69" data-l10n-id="pdfjs-image-alt-text-settings-button" aria-controls="altTextSettingsDialog">
              <span data-l10n-id="pdfjs-image-alt-text-settings-button-label">Image alt text settings</span>
            </button>

            <div class="horizontalToolbarSeparator"></div>

            <button id="documentProperties" class="toolbarButton labeled" type="button" title="Document Properties\u2026" tabindex="70" data-l10n-id="pdfjs-document-properties-button" aria-controls="documentPropertiesDialog">
              <span data-l10n-id="pdfjs-document-properties-button-label">Document Properties\u2026</span>
            </button>
          </div>
        </div>  <!-- secondaryToolbar -->

        <div class="toolbar">
          <div id="toolbarContainer">
            <div id="toolbarViewer">
              <div id="toolbarViewerLeft">
                <button id="sidebarToggle" class="toolbarButton icon icon-sidebar" type="button" title="Toggle Sidebar" tabindex="11" data-l10n-id="pdfjs-toggle-sidebar-button" aria-expanded="false" aria-controls="sidebarContainer">
                  <span data-l10n-id="pdfjs-toggle-sidebar-button-label">Toggle Sidebar</span>
                </button>
                <div class="splitToolbarButton hiddenSmallView">
                  <span class="toolbarTitle">Page</span>
                  <div class="toolbarButtonGroup">
                    <button class="toolbarButton icon icon-left" title="Previous Page" id="previous" type="button" tabindex="13" data-l10n-id="pdfjs-previous-button">
                      <span data-l10n-id="pdfjs-previous-button-label">Previous</span>
                    </button>
                    <span class="loadingInput start">
                    <input type="number" id="pageNumber" class="toolbarField" title="Page" value="1" min="1" tabindex="15" data-l10n-id="pdfjs-page-input" autocomplete="off">
                  </span>
                    <button class="toolbarButton icon icon-right" title="Next Page" id="next" type="button" tabindex="14" data-l10n-id="pdfjs-next-button">
                      <span data-l10n-id="pdfjs-next-button-label">Next</span>
                    </button>
                  </div>
                  <span id="numPages" class="toolbarLabel"></span>
                </div>
                <div>
                  <div class="splitToolbarButton">
                    <button id="zoomOut" class="toolbarButton icon icon-zoom-out" type="button" title="Zoom Out" tabindex="21" data-l10n-id="pdfjs-zoom-out-button">
                      <span data-l10n-id="pdfjs-zoom-out-button-label">Zoom Out</span>
                    </button>
                    <button id="zoomIn" class="toolbarButton icon icon-zoom-in" type="button" title="Zoom In" tabindex="22" data-l10n-id="pdfjs-zoom-in-button">
                      <span data-l10n-id="pdfjs-zoom-in-button-label">Zoom In</span>
                    </button>
                  </div>
                  <span id="scaleSelectContainer" class="dropdownToolbarButton hidden">
                  <select id="scaleSelect" title="Zoom" tabindex="23" data-l10n-id="pdfjs-zoom-select">
                    <option id="pageAutoOption" title="" value="auto" selected="selected" data-l10n-id="pdfjs-page-scale-auto">Automatic Zoom</option>
                    <option id="pageActualOption" title="" value="page-actual" data-l10n-id="pdfjs-page-scale-actual">Actual Size</option>
                    <option id="pageFitOption" title="" value="page-fit" data-l10n-id="pdfjs-page-scale-fit">Page Fit</option>
                    <option id="pageWidthOption" title="" value="page-width" data-l10n-id="pdfjs-page-scale-width">Page Width</option>
                    <option id="customScaleOption" title="" value="custom" disabled="disabled" hidden="true" data-l10n-id="pdfjs-page-scale-percent" data-l10n-args='{ "scale": 0 }'>0%</option>
                    <option title="" value="0.5" data-l10n-id="pdfjs-page-scale-percent" data-l10n-args='{ "scale": 50 }'>50%</option>
                    <option title="" value="0.75" data-l10n-id="pdfjs-page-scale-percent" data-l10n-args='{ "scale": 75 }'>75%</option>
                    <option title="" value="1" data-l10n-id="pdfjs-page-scale-percent" data-l10n-args='{ "scale": 100 }'>100%</option>
                    <option title="" value="1.25" data-l10n-id="pdfjs-page-scale-percent" data-l10n-args='{ "scale": 125 }'>125%</option>
                    <option title="" value="1.5" data-l10n-id="pdfjs-page-scale-percent" data-l10n-args='{ "scale": 150 }'>150%</option>
                    <option title="" value="2" data-l10n-id="pdfjs-page-scale-percent" data-l10n-args='{ "scale": 200 }'>200%</option>
                    <option title="" value="3" data-l10n-id="pdfjs-page-scale-percent" data-l10n-args='{ "scale": 300 }'>300%</option>
                    <option title="" value="4" data-l10n-id="pdfjs-page-scale-percent" data-l10n-args='{ "scale": 400 }'>400%</option>
                  </select>
                </span>
                </div>
              </div>
              <div id="toolbarViewerRight">
                <div id="editorModeButtons" class="splitToolbarButton toggled" role="radiogroup">
                  <button id="editorHighlight" class="toolbarButton hidden" type="button" disabled="disabled" title="Highlight" role="radio" aria-checked="false" aria-controls="editorHighlightParamsToolbar" tabindex="31" data-l10n-id="pdfjs-editor-highlight-button">
                    <span data-l10n-id="pdfjs-editor-highlight-button-label">Highlight</span>
                  </button>
                  <button id="editorFreeText" class="toolbarButton hidden" type="button" disabled="disabled" title="Text" role="radio" aria-checked="false" aria-controls="editorFreeTextParamsToolbar" tabindex="32" data-l10n-id="pdfjs-editor-free-text-button">
                    <span data-l10n-id="pdfjs-editor-free-text-button-label">Text</span>
                  </button>
                  <button id="editorInk" class="toolbarButton hidden" type="button" disabled="disabled" title="Draw" role="radio" aria-checked="false" aria-controls="editorInkParamsToolbar" tabindex="33" data-l10n-id="pdfjs-editor-ink-button">
                    <span data-l10n-id="pdfjs-editor-ink-button-label">Draw</span>
                  </button>
                  <button id="editorStamp" class="toolbarButton hidden" type="button" disabled="disabled" title="Add or edit images" role="radio" aria-checked="false" aria-controls="editorStampParamsToolbar" tabindex="34" data-l10n-id="pdfjs-editor-stamp-button">
                    <span data-l10n-id="pdfjs-editor-stamp-button-label">Add or edit images</span>
                  </button>
                </div>

                <button id="print" class="toolbarButton hiddenMediumView icon icon-print" type="button" title="Print" tabindex="41" data-l10n-id="pdfjs-print-button">
                  <span data-l10n-id="pdfjs-print-button-label">Print</span>
                </button>

                <button id="download" class="toolbarButton hiddenMediumView icon icon-download" type="button" title="Save" tabindex="42" data-l10n-id="pdfjs-save-button">
                  <span data-l10n-id="pdfjs-save-button-label">Save</span>
                </button>

                <button id="upload" class="toolbarButton hiddenMediumView icon icon-upload" type="button" title="Upload" data-l10n-id="pdfjs-upload-button">
                  <span data-l10n-id="pdfjs-save-button-label">Upload</span>
                </button>

                <button id="secondaryToolbarToggle" class="toolbarButton hidden" type="button" title="Tools" tabindex="43" data-l10n-id="pdfjs-tools-button" aria-expanded="false" aria-controls="secondaryToolbar">
                  <span data-l10n-id="pdfjs-tools-button-label">Tools</span>
                </button>
              </div>
            </div>
            <div id="loadingBar">
              <div class="progress">
                <div class="glimmer">
                </div>
              </div>
            </div>
          </div>
        </div>

        <div id="viewerContainer" tabindex="0">
          <div id="viewer" class="pdfViewer"></div>
        </div>
      </div> <!-- mainContainer -->

      <div id="dialogContainer">
        <dialog id="passwordDialog">
          <div class="row">
            <label for="password" id="passwordText" data-l10n-id="pdfjs-password-label">Enter the password to open this PDF file:</label>
          </div>
          <div class="row">
            <input type="password" id="password" class="toolbarField">
          </div>
          <div class="buttonRow">
            <button id="passwordCancel" class="dialogButton" type="button"><span data-l10n-id="pdfjs-password-cancel-button">Cancel</span></button>
            <button id="passwordSubmit" class="dialogButton" type="button"><span data-l10n-id="pdfjs-password-ok-button">OK</span></button>
          </div>
        </dialog>
        <dialog id="documentPropertiesDialog">
          <div class="row">
            <span id="fileNameLabel" data-l10n-id="pdfjs-document-properties-file-name">File name:</span>
            <p id="fileNameField" aria-labelledby="fileNameLabel">-</p>
          </div>
          <div class="row">
            <span id="fileSizeLabel" data-l10n-id="pdfjs-document-properties-file-size">File size:</span>
            <p id="fileSizeField" aria-labelledby="fileSizeLabel">-</p>
          </div>
          <div class="separator"></div>
          <div class="row">
            <span id="titleLabel" data-l10n-id="pdfjs-document-properties-title">Title:</span>
            <p id="titleField" aria-labelledby="titleLabel">-</p>
          </div>
          <div class="row">
            <span id="authorLabel" data-l10n-id="pdfjs-document-properties-author">Author:</span>
            <p id="authorField" aria-labelledby="authorLabel">-</p>
          </div>
          <div class="row">
            <span id="subjectLabel" data-l10n-id="pdfjs-document-properties-subject">Subject:</span>
            <p id="subjectField" aria-labelledby="subjectLabel">-</p>
          </div>
          <div class="row">
            <span id="keywordsLabel" data-l10n-id="pdfjs-document-properties-keywords">Keywords:</span>
            <p id="keywordsField" aria-labelledby="keywordsLabel">-</p>
          </div>
          <div class="row">
            <span id="creationDateLabel" data-l10n-id="pdfjs-document-properties-creation-date">Creation Date:</span>
            <p id="creationDateField" aria-labelledby="creationDateLabel">-</p>
          </div>
          <div class="row">
            <span id="modificationDateLabel" data-l10n-id="pdfjs-document-properties-modification-date">Modification Date:</span>
            <p id="modificationDateField" aria-labelledby="modificationDateLabel">-</p>
          </div>
          <div class="row">
            <span id="creatorLabel" data-l10n-id="pdfjs-document-properties-creator">Creator:</span>
            <p id="creatorField" aria-labelledby="creatorLabel">-</p>
          </div>
          <div class="separator"></div>
          <div class="row">
            <span id="producerLabel" data-l10n-id="pdfjs-document-properties-producer">PDF Producer:</span>
            <p id="producerField" aria-labelledby="producerLabel">-</p>
          </div>
          <div class="row">
            <span id="versionLabel" data-l10n-id="pdfjs-document-properties-version">PDF Version:</span>
            <p id="versionField" aria-labelledby="versionLabel">-</p>
          </div>
          <div class="row">
            <span id="pageCountLabel" data-l10n-id="pdfjs-document-properties-page-count">Page Count:</span>
            <p id="pageCountField" aria-labelledby="pageCountLabel">-</p>
          </div>
          <div class="row">
            <span id="pageSizeLabel" data-l10n-id="pdfjs-document-properties-page-size">Page Size:</span>
            <p id="pageSizeField" aria-labelledby="pageSizeLabel">-</p>
          </div>
          <div class="separator"></div>
          <div class="row">
            <span id="linearizedLabel" data-l10n-id="pdfjs-document-properties-linearized">Fast Web View:</span>
            <p id="linearizedField" aria-labelledby="linearizedLabel">-</p>
          </div>
          <div class="buttonRow">
            <button id="documentPropertiesClose" class="dialogButton" type="button"><span data-l10n-id="pdfjs-document-properties-close-button">Close</span></button>
          </div>
        </dialog>
        <dialog class="dialog altText" id="altTextDialog" aria-labelledby="dialogLabel" aria-describedby="dialogDescription">
          <div id="altTextContainer" class="mainContainer">
            <div id="overallDescription">
              <span id="dialogLabel" data-l10n-id="pdfjs-editor-alt-text-dialog-label" class="title">Choose an option</span>
              <span id="dialogDescription" data-l10n-id="pdfjs-editor-alt-text-dialog-description">
                Alt text (alternative text) helps when people can\u2019t see the image or when it doesn\u2019t load.
              </span>
            </div>
            <div id="addDescription">
              <div class="radio">
                <div class="radioButton">
                  <input type="radio" id="descriptionButton" name="altTextOption" tabindex="0" aria-describedby="descriptionAreaLabel" checked>
                  <label for="descriptionButton" data-l10n-id="pdfjs-editor-alt-text-add-description-label">Add a description</label>
                </div>
                <div class="radioLabel">
                  <span id="descriptionAreaLabel" data-l10n-id="pdfjs-editor-alt-text-add-description-description">
                    Aim for 1-2 sentences that describe the subject, setting, or actions.
                  </span>
                </div>
              </div>
              <div class="descriptionArea">
                <textarea id="descriptionTextarea" placeholder="For example, \u201CA young man sits down at a table to eat a meal\u201D" aria-labelledby="descriptionAreaLabel" data-l10n-id="pdfjs-editor-alt-text-textarea" tabindex="0"></textarea>
              </div>
            </div>
            <div id="markAsDecorative">
              <div class="radio">
                <div class="radioButton">
                  <input type="radio" id="decorativeButton" name="altTextOption" aria-describedby="decorativeLabel">
                  <label for="decorativeButton" data-l10n-id="pdfjs-editor-alt-text-mark-decorative-label">Mark as decorative</label>
                </div>
                <div class="radioLabel">
                  <span id="decorativeLabel" data-l10n-id="pdfjs-editor-alt-text-mark-decorative-description">
                    This is used for ornamental images, like borders or watermarks.
                  </span>
                </div>
              </div>
            </div>
            <div id="buttons">
              <button id="altTextCancel" class="secondaryButton" type="button" tabindex="0"><span data-l10n-id="pdfjs-editor-alt-text-cancel-button">Cancel</span></button>
              <button id="altTextSave" class="primaryButton" type="button" tabindex="0"><span data-l10n-id="pdfjs-editor-alt-text-save-button">Save</span></button>
            </div>
          </div>
        </dialog>
        <dialog class="dialog newAltText" id="newAltTextDialog" aria-labelledby="newAltTextTitle" aria-describedby="newAltTextDescription" tabindex="0">
          <div id="newAltTextContainer" class="mainContainer">
            <div class="title">
              <span id="newAltTextTitle" data-l10n-id="pdfjs-editor-new-alt-text-dialog-edit-label" role="sectionhead" tabindex="0">Edit alt text (image description)</span>
            </div>
            <div id="mainContent">
              <div id="descriptionAndSettings">
                <div id="descriptionInstruction">
                  <div id="newAltTextDescriptionContainer">
                    <div class="altTextSpinner" role="status" aria-live="polite"></div>
                    <textarea id="newAltTextDescriptionTextarea" placeholder="Write your description here\u2026" aria-labelledby="descriptionAreaLabel" data-l10n-id="pdfjs-editor-new-alt-text-textarea" tabindex="0"></textarea>
                  </div>
                  <span id="newAltTextDescription" role="note" data-l10n-id="pdfjs-editor-new-alt-text-description">Short description for people who can\u2019t see the image or when the image doesn\u2019t load.</span>
                  <div id="newAltTextDisclaimer" role="note"><div><span data-l10n-id="pdfjs-editor-new-alt-text-disclaimer1">This alt text was created automatically and may be inaccurate.</span> <a href="https://support.mozilla.org/en-US/kb/pdf-alt-text" target="_blank" rel="noopener noreferrer" id="newAltTextLearnMore" data-l10n-id="pdfjs-editor-new-alt-text-disclaimer-learn-more-url" tabindex="0">Learn more</a></div></div>
                </div>
                <div id="newAltTextCreateAutomatically" class="toggler">
                  <button id="newAltTextCreateAutomaticallyButton" class="toggle-button" type="button" aria-pressed="true" tabindex="0"></button>
                  <label for="newAltTextCreateAutomaticallyButton" class="togglerLabel" data-l10n-id="pdfjs-editor-new-alt-text-create-automatically-button-label">Create alt text automatically</label>
                </div>
                <div id="newAltTextDownloadModel" class="hidden">
                  <span id="newAltTextDownloadModelDescription" data-l10n-id="pdfjs-editor-new-alt-text-ai-model-downloading-progress" aria-valuemin="0" data-l10n-args='{ "totalSize": 0, "downloadedSize": 0 }'>Downloading alt text AI model (0 of 0 MB)</span>
                </div>
              </div>
              <div id="newAltTextImagePreview"></div>
            </div>
            <div id="newAltTextError" class="messageBar">
              <div>
                <div>
                  <span class="title" data-l10n-id="pdfjs-editor-new-alt-text-error-title">Couldn\u2019t create alt text automatically</span>
                  <span  class="description" data-l10n-id="pdfjs-editor-new-alt-text-error-description">Please write your own alt text or try again later.</span>
                </div>
                <button id="newAltTextCloseButton" class="closeButton" type="button" tabindex="0" title="Close"><span data-l10n-id="pdfjs-editor-new-alt-text-error-close-button">Close</span></button>
              </div>
            </div>
            <div id="newAltTextButtons" class="dialogButtonsGroup">
              <button id="newAltTextCancel" type="button" class="secondaryButton hidden" tabindex="0"><span data-l10n-id="pdfjs-editor-alt-text-cancel-button">Cancel</span></button>
              <button id="newAltTextNotNow" type="button" class="secondaryButton" tabindex="0"><span data-l10n-id="pdfjs-editor-new-alt-text-not-now-button">Not now</span></button>
              <button id="newAltTextSave" type="button" class="primaryButton" tabindex="0"><span data-l10n-id="pdfjs-editor-alt-text-save-button">Save</span></button>
            </div>
          </div>
        </dialog>

        <dialog class="dialog" id="altTextSettingsDialog" aria-labelledby="altTextSettingsTitle">
          <div id="altTextSettingsContainer" class="mainContainer">
            <div class="title">
              <span id="altTextSettingsTitle" data-l10n-id="pdfjs-editor-alt-text-settings-dialog-label" role="sectionhead" tabindex="0" class="title">Image alt text settings</span>
            </div>
            <div id="automaticAltText">
              <span data-l10n-id="pdfjs-editor-alt-text-settings-automatic-title">Automatic alt text</span>
              <div id="automaticSettings">
                <div id="createModelSetting">
                  <div class="toggler">
                    <button id="createModelButton" type="button" class="toggle-button" aria-pressed="true" tabindex="0"></button>
                    <label for="createModelButton" class="togglerLabel" data-l10n-id="pdfjs-editor-alt-text-settings-create-model-button-label">Create alt text automatically</label>
                  </div>
                  <div id="createModelDescription" class="description">
                    <span data-l10n-id="pdfjs-editor-alt-text-settings-create-model-description">Suggests descriptions to help people who can\u2019t see the image or when the image doesn\u2019t load.</span> <a href="https://support.mozilla.org/en-US/kb/pdf-alt-text" target="_blank" rel="noopener noreferrer" id="altTextSettingsLearnMore" data-l10n-id="pdfjs-editor-new-alt-text-disclaimer-learn-more-url" tabindex="0">Learn more</a>
                  </div>
                </div>
                <div id="aiModelSettings">
                  <div>
                    <span data-l10n-id="pdfjs-editor-alt-text-settings-download-model-label" data-l10n-args='{ "totalSize": 180 }'>Alt text AI model (180MB)</span>
                    <div id="aiModelDescription" class="description">
                      <span data-l10n-id="pdfjs-editor-alt-text-settings-ai-model-description">Runs locally on your device so your data stays private. Required for automatic alt text.</span>
                    </div>
                  </div>
                  <button id="deleteModelButton" type="button" class="secondaryButton" tabindex="0"><span data-l10n-id="pdfjs-editor-alt-text-settings-delete-model-button">Delete</span></button>
                  <button id="downloadModelButton" type="button" class="secondaryButton" tabindex="0"><span data-l10n-id="pdfjs-editor-alt-text-settings-download-model-button">Download</span></button>
                </div>
              </div>
            </div>
            <div class="dialogSeparator"></div>
            <div id="altTextEditor">
              <span data-l10n-id="pdfjs-editor-alt-text-settings-editor-title">Alt text editor</span>
              <div id="showAltTextEditor">
                <div class="toggler">
                  <button id="showAltTextDialogButton" type="button" class="toggle-button" aria-pressed="true" tabindex="0"></button>
                  <label for="showAltTextDialogButton" class="togglerLabel" data-l10n-id="pdfjs-editor-alt-text-settings-show-dialog-button-label">Show alt text editor right away when adding an image</label>
                </div>
                <div id="showAltTextDialogDescription" class="description">
                  <span data-l10n-id="pdfjs-editor-alt-text-settings-show-dialog-description">Helps you make sure all your images have alt text.</span>
                </div>
              </div>
            </div>
            <div id="buttons" class="dialogButtonsGroup">
              <button id="altTextSettingsCloseButton" type="button" class="primaryButton" tabindex="0"><span data-l10n-id="pdfjs-editor-alt-text-settings-close-button">Close</span></button>
            </div>
          </div>
        </dialog>
        <dialog id="printServiceDialog" style="min-width: 200px;">
          <div class="row">
            <span data-l10n-id="pdfjs-print-progress-message">Preparing document for printing\u2026</span>
          </div>
          <div class="row">
            <progress value="0" max="100"></progress>
            <span data-l10n-id="pdfjs-print-progress-percent" data-l10n-args='{ "progress": 0 }' class="relative-progress">0%</span>
          </div>
          <div class="buttonRow">
            <button id="printCancel" class="dialogButton" type="button"><span data-l10n-id="pdfjs-print-progress-close-button">Cancel</span></button>
          </div>
        </dialog>
      </div>  <!-- dialogContainer -->

    </div> <!-- outerContainer -->
    <div id="printContainer"></div>
  </body>
</html>
`;

// src/viewer.css
var viewer_default2 = `/* Copyright 2014 Mozilla Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
@import "../node_modules/@fortawesome/fontawesome-free/css/all.min.css";

.dialog{
  --dialog-bg-color:white;
  --dialog-border-color:white;
  --dialog-shadow:0 2px 14px 0 rgb(58 57 68 / 0.2);
  --text-primary-color:#15141a;
  --text-secondary-color:#5b5b66;
  --hover-filter:brightness(0.9);
  --focus-ring-color:#0060df;
  --focus-ring-outline:2px solid var(--focus-ring-color);
  --link-fg-color:#0060df;
  --link-hover-fg-color:#0250bb;
  --separator-color:#f0f0f4;

  --textarea-border-color:#8f8f9d;
  --textarea-bg-color:white;
  --textarea-fg-color:var(--text-secondary-color);

  --radio-bg-color:#f0f0f4;
  --radio-checked-bg-color:#fbfbfe;
  --radio-border-color:#8f8f9d;
  --radio-checked-border-color:#0060df;

  --button-secondary-bg-color:#f0f0f4;
  --button-secondary-fg-color:var(--text-primary-color);
  --button-secondary-border-color:var(--button-secondary-bg-color);
  --button-secondary-hover-bg-color:var(--button-secondary-bg-color);
  --button-secondary-hover-fg-color:var(--button-secondary-fg-color);
  --button-secondary-hover-border-color:var(--button-secondary-hover-bg-color);

  --button-primary-bg-color:#0060df;
  --button-primary-fg-color:#fbfbfe;
  --button-primary-border-color:var(--button-primary-bg-color);
  --button-primary-hover-bg-color:var(--button-primary-bg-color);
  --button-primary-hover-fg-color:var(--button-primary-fg-color);
  --button-primary-hover-border-color:var(--button-primary-hover-bg-color);
}

@media (prefers-color-scheme: dark){

:where(html:not(.is-light)) .dialog{
    --dialog-bg-color:#1c1b22;
    --dialog-border-color:#1c1b22;
    --dialog-shadow:0 2px 14px 0 #15141a;
    --text-primary-color:#fbfbfe;
    --text-secondary-color:#cfcfd8;
    --focus-ring-color:#0df;
    --hover-filter:brightness(1.4);
    --link-fg-color:#0df;
    --link-hover-fg-color:#80ebff;
    --separator-color:#52525e;

    --textarea-bg-color:#42414d;

    --radio-bg-color:#2b2a33;
    --radio-checked-bg-color:#15141a;
    --radio-checked-border-color:#0df;

    --button-secondary-bg-color:#2b2a33;
    --button-primary-bg-color:#0df;
    --button-primary-fg-color:#15141a;
}
  }

:where(html.is-dark) .dialog{
    --dialog-bg-color:#1c1b22;
    --dialog-border-color:#1c1b22;
    --dialog-shadow:0 2px 14px 0 #15141a;
    --text-primary-color:#fbfbfe;
    --text-secondary-color:#cfcfd8;
    --focus-ring-color:#0df;
    --hover-filter:brightness(1.4);
    --link-fg-color:#0df;
    --link-hover-fg-color:#80ebff;
    --separator-color:#52525e;

    --textarea-bg-color:#42414d;

    --radio-bg-color:#2b2a33;
    --radio-checked-bg-color:#15141a;
    --radio-checked-border-color:#0df;

    --button-secondary-bg-color:#2b2a33;
    --button-primary-bg-color:#0df;
    --button-primary-fg-color:#15141a;
}

@media screen and (forced-colors: active){

.dialog{
    --dialog-bg-color:Canvas;
    --dialog-border-color:CanvasText;
    --dialog-shadow:none;
    --text-primary-color:CanvasText;
    --text-secondary-color:CanvasText;
    --hover-filter:none;
    --focus-ring-color:ButtonBorder;
    --link-fg-color:LinkText;
    --link-hover-fg-color:LinkText;
    --separator-color:CanvasText;

    --textarea-border-color:ButtonBorder;
    --textarea-bg-color:Field;
    --textarea-fg-color:ButtonText;

    --radio-bg-color:ButtonFace;
    --radio-checked-bg-color:ButtonFace;
    --radio-border-color:ButtonText;
    --radio-checked-border-color:ButtonText;

    --button-secondary-bg-color:ButtonFace;
    --button-secondary-fg-color:ButtonText;
    --button-secondary-border-color:ButtonText;
    --button-secondary-hover-bg-color:AccentColor;
    --button-secondary-hover-fg-color:AccentColorText;

    --button-primary-bg-color:ButtonText;
    --button-primary-fg-color:ButtonFace;
    --button-primary-hover-bg-color:AccentColor;
    --button-primary-hover-fg-color:AccentColorText;
}
  }

.dialog{

  font:message-box;
  font-size:13px;
  font-weight:400;
  line-height:150%;
  border-radius:4px;
  padding:12px 16px;
  border:1px solid var(--dialog-border-color);
  background:var(--dialog-bg-color);
  color:var(--text-primary-color);
  box-shadow:var(--dialog-shadow);
}

:is(.dialog .mainContainer) *:focus-visible{
      outline:var(--focus-ring-outline);
      outline-offset:2px;
    }

:is(.dialog .mainContainer) .title{
      display:flex;
      width:auto;
      flex-direction:column;
      justify-content:flex-end;
      align-items:flex-start;
      gap:12px;
    }

:is(:is(.dialog .mainContainer) .title)  > span{
        font-size:13px;
        font-style:normal;
        font-weight:590;
        line-height:150%;
      }

:is(.dialog .mainContainer) .dialogSeparator{
      width:100%;
      height:1px;
      margin-block:4px;
      background-color:var(--separator-color);
    }

:is(.dialog .mainContainer) .dialogButtonsGroup{
      display:flex;
      gap:12px;
      align-self:flex-end;
    }

:is(.dialog .mainContainer) .radio{
      display:flex;
      flex-direction:column;
      align-items:flex-start;
      gap:4px;
    }

:is(:is(.dialog .mainContainer) .radio)  > .radioButton{
        display:flex;
        gap:8px;
        align-self:stretch;
        align-items:center;
      }

:is(:is(:is(.dialog .mainContainer) .radio) > .radioButton) input{
          -webkit-appearance:none;
             -moz-appearance:none;
                  appearance:none;
          box-sizing:border-box;
          width:16px;
          height:16px;
          border-radius:50%;
          background-color:var(--radio-bg-color);
          border:1px solid var(--radio-border-color);
        }

:is(:is(:is(:is(.dialog .mainContainer) .radio) > .radioButton) input):hover{
            filter:var(--hover-filter);
          }

:is(:is(:is(:is(.dialog .mainContainer) .radio) > .radioButton) input):checked{
            background-color:var(--radio-checked-bg-color);
            border:4px solid var(--radio-checked-border-color);
          }

:is(:is(.dialog .mainContainer) .radio)  > .radioLabel{
        display:flex;
        padding-inline-start:24px;
        align-items:flex-start;
        gap:10px;
        align-self:stretch;
      }

:is(:is(:is(.dialog .mainContainer) .radio) > .radioLabel)  > span{
          flex:1 0 0;
          font-size:11px;
          color:var(--text-secondary-color);
        }

:is(.dialog .mainContainer) button:not(:is(.toggle-button,.closeButton)){
      border-radius:4px;
      border:1px solid;
      font:menu;
      font-weight:600;
      padding:4px 16px;
      width:auto;
      height:32px;
    }

:is(:is(.dialog .mainContainer) button:not(:is(.toggle-button,.closeButton))):hover{
        cursor:pointer;
        filter:var(--hover-filter);
      }

.secondaryButton:is(:is(.dialog .mainContainer) button:not(:is(.toggle-button,.closeButton))){
        color:var(--button-secondary-fg-color);
        background-color:var(--button-secondary-bg-color);
        border-color:var(--button-secondary-border-color);
      }

.secondaryButton:is(:is(.dialog .mainContainer) button:not(:is(.toggle-button,.closeButton))):hover{
          color:var(--button-secondary-hover-fg-color);
          background-color:var(--button-secondary-hover-bg-color);
          border-color:var(--button-secondary-hover-border-color);
        }

.primaryButton:is(:is(.dialog .mainContainer) button:not(:is(.toggle-button,.closeButton))){
        color:var(--button-primary-fg-color);
        background-color:var(--button-primary-bg-color);
        border-color:var(--button-primary-border-color);
        opacity:1;
      }

.primaryButton:is(:is(.dialog .mainContainer) button:not(:is(.toggle-button,.closeButton))):hover{
          color:var(--button-primary-hover-fg-color);
          background-color:var(--button-primary-hover-bg-color);
          border-color:var(--button-primary-hover-border-color);
        }

:is(.dialog .mainContainer) a{
      color:var(--link-fg-color);
    }

:is(:is(.dialog .mainContainer) a):hover{
        color:var(--link-hover-fg-color);
      }

:is(.dialog .mainContainer) textarea{
      font:inherit;
      padding:8px;
      resize:none;
      margin:0;
      box-sizing:border-box;
      border-radius:4px;
      border:1px solid var(--textarea-border-color);
      background:var(--textarea-bg-color);
      color:var(--textarea-fg-color);
    }

:is(:is(.dialog .mainContainer) textarea):focus{
        outline-offset:0;
        border-color:transparent;
      }

:is(:is(.dialog .mainContainer) textarea):disabled{
        pointer-events:none;
        opacity:0.4;
      }

:is(.dialog .mainContainer) .messageBar{
      --message-bar-warning-icon:url(public/images/messageBar_warning.svg);
      --closing-button-icon:url(public/images/messageBar_closingButton.svg);

      --message-bar-bg-color:#ffebcd;
      --message-bar-fg-color:#15141a;
      --message-bar-border-color:rgb(0 0 0 / 0.08);
      --message-bar-icon-color:#cd411e;
      --message-bar-close-button-border-radius:4px;
      --message-bar-close-button-border:none;
      --message-bar-close-button-color:var(--text-primary-color);
      --message-bar-close-button-hover-bg-color:rgb(21 20 26 / 0.14);
      --message-bar-close-button-active-bg-color:rgb(21 20 26 / 0.21);
      --message-bar-close-button-focus-bg-color:rgb(21 20 26 / 0.07);
      --message-bar-close-button-color-hover:var(--text-primary-color);
    }

@media (prefers-color-scheme: dark){

:where(html:not(.is-light)) :is(.dialog .mainContainer) .messageBar{
        --message-bar-bg-color:#5a3100;
        --message-bar-fg-color:#fbfbfe;
        --message-bar-border-color:rgb(255 255 255 / 0.08);
        --message-bar-icon-color:#e49c49;
        --message-bar-close-button-hover-bg-color:rgb(251 251 254 / 0.14);
        --message-bar-close-button-active-bg-color:rgb(251 251 254 / 0.21);
        --message-bar-close-button-focus-bg-color:rgb(251 251 254 / 0.07);
    }
      }

:where(html.is-dark) :is(.dialog .mainContainer) .messageBar{
        --message-bar-bg-color:#5a3100;
        --message-bar-fg-color:#fbfbfe;
        --message-bar-border-color:rgb(255 255 255 / 0.08);
        --message-bar-icon-color:#e49c49;
        --message-bar-close-button-hover-bg-color:rgb(251 251 254 / 0.14);
        --message-bar-close-button-active-bg-color:rgb(251 251 254 / 0.21);
        --message-bar-close-button-focus-bg-color:rgb(251 251 254 / 0.07);
    }

@media screen and (forced-colors: active){

:is(.dialog .mainContainer) .messageBar{
        --message-bar-bg-color:HighlightText;
        --message-bar-fg-color:CanvasText;
        --message-bar-border-color:CanvasText;
        --message-bar-icon-color:CanvasText;
        --message-bar-close-button-color:ButtonText;
        --message-bar-close-button-border:1px solid ButtonText;
        --message-bar-close-button-hover-bg-color:ButtonText;
        --message-bar-close-button-active-bg-color:ButtonText;
        --message-bar-close-button-focus-bg-color:ButtonText;
        --message-bar-close-button-color-hover:HighlightText;
    }
      }

:is(.dialog .mainContainer) .messageBar{

      display:flex;
      position:relative;
      padding:12px 8px 12px 0;
      flex-direction:column;
      justify-content:center;
      align-items:flex-start;
      gap:8px;
      align-self:stretch;

      border-radius:4px;
      border:1px solid var(--message-bar-border-color);
      background:var(--message-bar-bg-color);
      color:var(--message-bar-fg-color);
    }

:is(:is(.dialog .mainContainer) .messageBar)  > div{
        display:flex;
        padding-inline-start:16px;
        align-items:flex-start;
        gap:8px;
        align-self:stretch;
      }

:is(:is(:is(.dialog .mainContainer) .messageBar) > div)::before{
          content:"";
          display:inline-block;
          width:16px;
          height:16px;
          -webkit-mask-image:var(--message-bar-warning-icon);
                  mask-image:var(--message-bar-warning-icon);
          -webkit-mask-size:cover;
                  mask-size:cover;
          background-color:var(--message-bar-icon-color);
        }

:is(:is(:is(.dialog .mainContainer) .messageBar) > div)  > div{
          display:flex;
          flex-direction:column;
          align-items:flex-start;
          gap:8px;
          flex:1 0 0;
        }

:is(:is(:is(:is(.dialog .mainContainer) .messageBar) > div) > div) .title{
            font-size:13px;
            font-weight:590;
          }

:is(:is(:is(:is(.dialog .mainContainer) .messageBar) > div) > div) .description{
            font-size:13px;
          }

:is(:is(.dialog .mainContainer) .messageBar) .closeButton{
        position:absolute;
        width:32px;
        height:32px;
        inset-inline-end:8px;
        inset-block-start:8px;
        background:none;
        border-radius:var(--message-bar-close-button-border-radius);
        border:var(--message-bar-close-button-border);
      }

:is(:is(:is(.dialog .mainContainer) .messageBar) .closeButton)::before{
          content:"";
          display:inline-block;
          width:16px;
          height:16px;
          -webkit-mask-image:var(--closing-button-icon);
                  mask-image:var(--closing-button-icon);
          -webkit-mask-size:cover;
                  mask-size:cover;
          background-color:var(--message-bar-close-button-color);
        }

:is(:is(:is(.dialog .mainContainer) .messageBar) .closeButton):is(:hover,:active,:focus)::before{
          background-color:var(--message-bar-close-button-color-hover);
        }

:is(:is(:is(.dialog .mainContainer) .messageBar) .closeButton):hover{
          background-color:var(--message-bar-close-button-hover-bg-color);
        }

:is(:is(:is(.dialog .mainContainer) .messageBar) .closeButton):active{
          background-color:var(--message-bar-close-button-active-bg-color);
        }

:is(:is(:is(.dialog .mainContainer) .messageBar) .closeButton):focus{
          background-color:var(--message-bar-close-button-focus-bg-color);
        }

:is(:is(:is(.dialog .mainContainer) .messageBar) .closeButton)  > span{
          display:inline-block;
          width:0;
          height:0;
          overflow:hidden;
        }

:is(.dialog .mainContainer) .toggler{
      display:flex;
      align-items:center;
      gap:8px;
      align-self:stretch;
    }

:is(:is(.dialog .mainContainer) .toggler)  > .togglerLabel{
        -webkit-user-select:none;
           -moz-user-select:none;
                user-select:none;
      }

.textLayer{
  position:absolute;
  text-align:initial;
  inset:0;
  overflow:clip;
  opacity:1;
  line-height:1;
  -webkit-text-size-adjust:none;
     -moz-text-size-adjust:none;
          text-size-adjust:none;
  forced-color-adjust:none;
  transform-origin:0 0;
  caret-color:CanvasText;
  z-index:0;
}

.textLayer.highlighting{
    touch-action:none;
  }

.textLayer :is(span,br){
    color:transparent;
    position:absolute;
    white-space:pre;
    cursor:text;
    transform-origin:0% 0%;
  }

.textLayer  > :not(.markedContent),.textLayer .markedContent span:not(.markedContent){
    z-index:1;
  }

.textLayer span.markedContent{
    top:0;
    height:0;
  }

.textLayer .highlight{
    --highlight-bg-color:rgb(180 0 170 / 0.25);
    --highlight-selected-bg-color:rgb(0 100 0 / 0.25);
    --highlight-backdrop-filter:none;
    --highlight-selected-backdrop-filter:none;
  }

@media screen and (forced-colors: active){

.textLayer .highlight{
      --highlight-bg-color:transparent;
      --highlight-selected-bg-color:transparent;
      --highlight-backdrop-filter:var(--hcm-highlight-filter);
      --highlight-selected-backdrop-filter:var(
        --hcm-highlight-selected-filter
      );
  }
    }

.textLayer .highlight{

    margin:-1px;
    padding:1px;
    background-color:var(--highlight-bg-color);
    -webkit-backdrop-filter:var(--highlight-backdrop-filter);
            backdrop-filter:var(--highlight-backdrop-filter);
    border-radius:4px;
  }

.appended:is(.textLayer .highlight){
      position:initial;
    }

.begin:is(.textLayer .highlight){
      border-radius:4px 0 0 4px;
    }

.end:is(.textLayer .highlight){
      border-radius:0 4px 4px 0;
    }

.middle:is(.textLayer .highlight){
      border-radius:0;
    }

.selected:is(.textLayer .highlight){
      background-color:var(--highlight-selected-bg-color);
      -webkit-backdrop-filter:var(--highlight-selected-backdrop-filter);
              backdrop-filter:var(--highlight-selected-backdrop-filter);
    }

.textLayer ::-moz-selection{
    background:rgba(0 0 255 / 0.25);
    background:color-mix(in srgb, AccentColor, transparent 75%);
  }

.textLayer ::selection{
    background:rgba(0 0 255 / 0.25);
    background:color-mix(in srgb, AccentColor, transparent 75%);
  }

.textLayer br::-moz-selection{
    background:transparent;
  }

.textLayer br::selection{
    background:transparent;
  }

.textLayer .endOfContent{
    display:block;
    position:absolute;
    inset:100% 0 0;
    z-index:0;
    cursor:default;
    -webkit-user-select:none;
       -moz-user-select:none;
            user-select:none;
  }

.textLayer.selecting .endOfContent{
    top:0;
  }

.annotationLayer{
  --annotation-unfocused-field-background:url("data:image/svg+xml;charset=UTF-8,<svg width='1px' height='1px' xmlns='http://www.w3.org/2000/svg'><rect width='100%' height='100%' style='fill:rgba(0, 54, 255, 0.13);'/></svg>");
  --input-focus-border-color:Highlight;
  --input-focus-outline:1px solid Canvas;
  --input-unfocused-border-color:transparent;
  --input-disabled-border-color:transparent;
  --input-hover-border-color:black;
  --link-outline:none;
}

@media screen and (forced-colors: active){

.annotationLayer{
    --input-focus-border-color:CanvasText;
    --input-unfocused-border-color:ActiveText;
    --input-disabled-border-color:GrayText;
    --input-hover-border-color:Highlight;
    --link-outline:1.5px solid LinkText;
}

    .annotationLayer .textWidgetAnnotation :is(input,textarea):required,.annotationLayer .choiceWidgetAnnotation select:required,.annotationLayer .buttonWidgetAnnotation:is(.checkBox,.radioButton) input:required{
      outline:1.5px solid selectedItem;
    }

    .annotationLayer .linkAnnotation{
      outline:var(--link-outline);
    }

      :is(.annotationLayer .linkAnnotation):hover{
        -webkit-backdrop-filter:var(--hcm-highlight-filter);
                backdrop-filter:var(--hcm-highlight-filter);
      }

      :is(.annotationLayer .linkAnnotation) > a:hover{
        opacity:0 !important;
        background:none !important;
        box-shadow:none;
      }

    .annotationLayer .popupAnnotation .popup{
      outline:calc(1.5px * var(--scale-factor)) solid CanvasText !important;
      background-color:ButtonFace !important;
      color:ButtonText !important;
    }

    .annotationLayer .highlightArea:hover::after{
      position:absolute;
      top:0;
      left:0;
      width:100%;
      height:100%;
      -webkit-backdrop-filter:var(--hcm-highlight-filter);
              backdrop-filter:var(--hcm-highlight-filter);
      content:"";
      pointer-events:none;
    }

    .annotationLayer .popupAnnotation.focused .popup{
      outline:calc(3px * var(--scale-factor)) solid Highlight !important;
    }
  }

.annotationLayer{

  position:absolute;
  top:0;
  left:0;
  pointer-events:none;
  transform-origin:0 0;
}

.annotationLayer[data-main-rotation="90"] .norotate{
    transform:rotate(270deg) translateX(-100%);
  }

.annotationLayer[data-main-rotation="180"] .norotate{
    transform:rotate(180deg) translate(-100%, -100%);
  }

.annotationLayer[data-main-rotation="270"] .norotate{
    transform:rotate(90deg) translateY(-100%);
  }

.annotationLayer.disabled section,.annotationLayer.disabled .popup{
      pointer-events:none;
    }

.annotationLayer .annotationContent{
    position:absolute;
    width:100%;
    height:100%;
    pointer-events:none;
  }

.freetext:is(.annotationLayer .annotationContent){
      background:transparent;
      border:none;
      inset:0;
      overflow:visible;
      white-space:nowrap;
      font:10px sans-serif;
      line-height:1.35;
      -webkit-user-select:none;
         -moz-user-select:none;
              user-select:none;
    }

.annotationLayer section{
    position:absolute;
    text-align:initial;
    pointer-events:auto;
    box-sizing:border-box;
    transform-origin:0 0;
  }

:is(.annotationLayer section):has(div.annotationContent) canvas.annotationContent{
        display:none;
      }

.textLayer.selecting ~ .annotationLayer section{
    pointer-events:none;
  }

.annotationLayer :is(.linkAnnotation,.buttonWidgetAnnotation.pushButton) > a{
    position:absolute;
    font-size:1em;
    top:0;
    left:0;
    width:100%;
    height:100%;
  }

.annotationLayer :is(.linkAnnotation,.buttonWidgetAnnotation.pushButton):not(.hasBorder) > a:hover{
    opacity:0.2;
    background-color:rgb(255 255 0);
    box-shadow:0 2px 10px rgb(255 255 0);
  }

.annotationLayer .linkAnnotation.hasBorder:hover{
    background-color:rgb(255 255 0 / 0.2);
  }

.annotationLayer .hasBorder{
    background-size:100% 100%;
  }

.annotationLayer .textAnnotation img{
    position:absolute;
    cursor:pointer;
    width:100%;
    height:100%;
    top:0;
    left:0;
  }

.annotationLayer .textWidgetAnnotation :is(input,textarea),.annotationLayer .choiceWidgetAnnotation select,.annotationLayer .buttonWidgetAnnotation:is(.checkBox,.radioButton) input{
    background-image:var(--annotation-unfocused-field-background);
    border:2px solid var(--input-unfocused-border-color);
    box-sizing:border-box;
    font:calc(9px * var(--scale-factor)) sans-serif;
    height:100%;
    margin:0;
    vertical-align:top;
    width:100%;
  }

.annotationLayer .textWidgetAnnotation :is(input,textarea):required,.annotationLayer .choiceWidgetAnnotation select:required,.annotationLayer .buttonWidgetAnnotation:is(.checkBox,.radioButton) input:required{
    outline:1.5px solid red;
  }

.annotationLayer .choiceWidgetAnnotation select option{
    padding:0;
  }

.annotationLayer .buttonWidgetAnnotation.radioButton input{
    border-radius:50%;
  }

.annotationLayer .textWidgetAnnotation textarea{
    resize:none;
  }

.annotationLayer .textWidgetAnnotation [disabled]:is(input,textarea),.annotationLayer .choiceWidgetAnnotation select[disabled],.annotationLayer .buttonWidgetAnnotation:is(.checkBox,.radioButton) input[disabled]{
    background:none;
    border:2px solid var(--input-disabled-border-color);
    cursor:not-allowed;
  }

.annotationLayer .textWidgetAnnotation :is(input,textarea):hover,.annotationLayer .choiceWidgetAnnotation select:hover,.annotationLayer .buttonWidgetAnnotation:is(.checkBox,.radioButton) input:hover{
    border:2px solid var(--input-hover-border-color);
  }

.annotationLayer .textWidgetAnnotation :is(input,textarea):hover,.annotationLayer .choiceWidgetAnnotation select:hover,.annotationLayer .buttonWidgetAnnotation.checkBox input:hover{
    border-radius:2px;
  }

.annotationLayer .textWidgetAnnotation :is(input,textarea):focus,.annotationLayer .choiceWidgetAnnotation select:focus{
    background:none;
    border:2px solid var(--input-focus-border-color);
    border-radius:2px;
    outline:var(--input-focus-outline);
  }

.annotationLayer .buttonWidgetAnnotation:is(.checkBox,.radioButton) :focus{
    background-image:none;
    background-color:transparent;
  }

.annotationLayer .buttonWidgetAnnotation.checkBox :focus{
    border:2px solid var(--input-focus-border-color);
    border-radius:2px;
    outline:var(--input-focus-outline);
  }

.annotationLayer .buttonWidgetAnnotation.radioButton :focus{
    border:2px solid var(--input-focus-border-color);
    outline:var(--input-focus-outline);
  }

.annotationLayer .buttonWidgetAnnotation.checkBox input:checked::before,.annotationLayer .buttonWidgetAnnotation.checkBox input:checked::after,.annotationLayer .buttonWidgetAnnotation.radioButton input:checked::before{
    background-color:CanvasText;
    content:"";
    display:block;
    position:absolute;
  }

.annotationLayer .buttonWidgetAnnotation.checkBox input:checked::before,.annotationLayer .buttonWidgetAnnotation.checkBox input:checked::after{
    height:80%;
    left:45%;
    width:1px;
  }

.annotationLayer .buttonWidgetAnnotation.checkBox input:checked::before{
    transform:rotate(45deg);
  }

.annotationLayer .buttonWidgetAnnotation.checkBox input:checked::after{
    transform:rotate(-45deg);
  }

.annotationLayer .buttonWidgetAnnotation.radioButton input:checked::before{
    border-radius:50%;
    height:50%;
    left:25%;
    top:25%;
    width:50%;
  }

.annotationLayer .textWidgetAnnotation input.comb{
    font-family:monospace;
    padding-left:2px;
    padding-right:0;
  }

.annotationLayer .textWidgetAnnotation input.comb:focus{
    width:103%;
  }

.annotationLayer .buttonWidgetAnnotation:is(.checkBox,.radioButton) input{
    -webkit-appearance:none;
       -moz-appearance:none;
            appearance:none;
  }

.annotationLayer .fileAttachmentAnnotation .popupTriggerArea{
    height:100%;
    width:100%;
  }

.annotationLayer .popupAnnotation{
    position:absolute;
    font-size:calc(9px * var(--scale-factor));
    pointer-events:none;
    width:-moz-max-content;
    width:max-content;
    max-width:45%;
    height:auto;
  }

.annotationLayer .popup{
    background-color:rgb(255 255 153);
    box-shadow:0 calc(2px * var(--scale-factor)) calc(5px * var(--scale-factor)) rgb(136 136 136);
    border-radius:calc(2px * var(--scale-factor));
    outline:1.5px solid rgb(255 255 74);
    padding:calc(6px * var(--scale-factor));
    cursor:pointer;
    font:message-box;
    white-space:normal;
    word-wrap:break-word;
    pointer-events:auto;
  }

.annotationLayer .popupAnnotation.focused .popup{
    outline-width:3px;
  }

.annotationLayer .popup *{
    font-size:calc(9px * var(--scale-factor));
  }

.annotationLayer .popup > .header{
    display:inline-block;
  }

.annotationLayer .popup > .header h1{
    display:inline;
  }

.annotationLayer .popup > .header .popupDate{
    display:inline-block;
    margin-left:calc(5px * var(--scale-factor));
    width:-moz-fit-content;
    width:fit-content;
  }

.annotationLayer .popupContent{
    border-top:1px solid rgb(51 51 51);
    margin-top:calc(2px * var(--scale-factor));
    padding-top:calc(2px * var(--scale-factor));
  }

.annotationLayer .richText > *{
    white-space:pre-wrap;
    font-size:calc(9px * var(--scale-factor));
  }

.annotationLayer .popupTriggerArea{
    cursor:pointer;
  }

.annotationLayer section svg{
    position:absolute;
    width:100%;
    height:100%;
    top:0;
    left:0;
  }

.annotationLayer .annotationTextContent{
    position:absolute;
    width:100%;
    height:100%;
    opacity:0;
    color:transparent;
    -webkit-user-select:none;
       -moz-user-select:none;
            user-select:none;
    pointer-events:none;
  }

:is(.annotationLayer .annotationTextContent) span{
      width:100%;
      display:inline-block;
    }

.annotationLayer svg.quadrilateralsContainer{
    contain:strict;
    width:0;
    height:0;
    position:absolute;
    top:0;
    left:0;
    z-index:-1;
  }

:root{
  --xfa-unfocused-field-background:url("data:image/svg+xml;charset=UTF-8,<svg width='1px' height='1px' xmlns='http://www.w3.org/2000/svg'><rect width='100%' height='100%' style='fill:rgba(0, 54, 255, 0.13);'/></svg>");
  --xfa-focus-outline:auto;
}

@media screen and (forced-colors: active){
  :root{
    --xfa-focus-outline:2px solid CanvasText;
  }
  .xfaLayer *:required{
    outline:1.5px solid selectedItem;
  }
}

.xfaLayer{
  background-color:transparent;
}

.xfaLayer .highlight{
  margin:-1px;
  padding:1px;
  background-color:rgb(239 203 237);
  border-radius:4px;
}

.xfaLayer .highlight.appended{
  position:initial;
}

.xfaLayer .highlight.begin{
  border-radius:4px 0 0 4px;
}

.xfaLayer .highlight.end{
  border-radius:0 4px 4px 0;
}

.xfaLayer .highlight.middle{
  border-radius:0;
}

.xfaLayer .highlight.selected{
  background-color:rgb(203 223 203);
}

.xfaPage{
  overflow:hidden;
  position:relative;
}

.xfaContentarea{
  position:absolute;
}

.xfaPrintOnly{
  display:none;
}

.xfaLayer{
  position:absolute;
  text-align:initial;
  top:0;
  left:0;
  transform-origin:0 0;
  line-height:1.2;
}

.xfaLayer *{
  color:inherit;
  font:inherit;
  font-style:inherit;
  font-weight:inherit;
  font-kerning:inherit;
  letter-spacing:-0.01px;
  text-align:inherit;
  text-decoration:inherit;
  box-sizing:border-box;
  background-color:transparent;
  padding:0;
  margin:0;
  pointer-events:auto;
  line-height:inherit;
}

.xfaLayer *:required{
  outline:1.5px solid red;
}

.xfaLayer div,
.xfaLayer svg,
.xfaLayer svg *{
  pointer-events:none;
}

.xfaLayer a{
  color:blue;
}

.xfaRich li{
  margin-left:3em;
}

.xfaFont{
  color:black;
  font-weight:normal;
  font-kerning:none;
  font-size:10px;
  font-style:normal;
  letter-spacing:0;
  text-decoration:none;
  vertical-align:0;
}

.xfaCaption{
  overflow:hidden;
  flex:0 0 auto;
}

.xfaCaptionForCheckButton{
  overflow:hidden;
  flex:1 1 auto;
}

.xfaLabel{
  height:100%;
  width:100%;
}

.xfaLeft{
  display:flex;
  flex-direction:row;
  align-items:center;
}

.xfaRight{
  display:flex;
  flex-direction:row-reverse;
  align-items:center;
}

:is(.xfaLeft, .xfaRight) > :is(.xfaCaption, .xfaCaptionForCheckButton){
  max-height:100%;
}

.xfaTop{
  display:flex;
  flex-direction:column;
  align-items:flex-start;
}

.xfaBottom{
  display:flex;
  flex-direction:column-reverse;
  align-items:flex-start;
}

:is(.xfaTop, .xfaBottom) > :is(.xfaCaption, .xfaCaptionForCheckButton){
  width:100%;
}

.xfaBorder{
  background-color:transparent;
  position:absolute;
  pointer-events:none;
}

.xfaWrapped{
  width:100%;
  height:100%;
}

:is(.xfaTextfield, .xfaSelect):focus{
  background-image:none;
  background-color:transparent;
  outline:var(--xfa-focus-outline);
  outline-offset:-1px;
}

:is(.xfaCheckbox, .xfaRadio):focus{
  outline:var(--xfa-focus-outline);
}

.xfaTextfield,
.xfaSelect{
  height:100%;
  width:100%;
  flex:1 1 auto;
  border:none;
  resize:none;
  background-image:var(--xfa-unfocused-field-background);
}

.xfaSelect{
  padding-inline:2px;
}

:is(.xfaTop, .xfaBottom) > :is(.xfaTextfield, .xfaSelect){
  flex:0 1 auto;
}

.xfaButton{
  cursor:pointer;
  width:100%;
  height:100%;
  border:none;
  text-align:center;
}

.xfaLink{
  width:100%;
  height:100%;
  position:absolute;
  top:0;
  left:0;
}

.xfaCheckbox,
.xfaRadio{
  width:100%;
  height:100%;
  flex:0 0 auto;
  border:none;
}

.xfaRich{
  white-space:pre-wrap;
  width:100%;
  height:100%;
}

.xfaImage{
  -o-object-position:left top;
     object-position:left top;
  -o-object-fit:contain;
     object-fit:contain;
  width:100%;
  height:100%;
}

.xfaLrTb,
.xfaRlTb,
.xfaTb{
  display:flex;
  flex-direction:column;
  align-items:stretch;
}

.xfaLr{
  display:flex;
  flex-direction:row;
  align-items:stretch;
}

.xfaRl{
  display:flex;
  flex-direction:row-reverse;
  align-items:stretch;
}

.xfaTb > div{
  justify-content:left;
}

.xfaPosition{
  position:relative;
}

.xfaArea{
  position:relative;
}

.xfaValignMiddle{
  display:flex;
  align-items:center;
}

.xfaTable{
  display:flex;
  flex-direction:column;
  align-items:stretch;
}

.xfaTable .xfaRow{
  display:flex;
  flex-direction:row;
  align-items:stretch;
}

.xfaTable .xfaRlRow{
  display:flex;
  flex-direction:row-reverse;
  align-items:stretch;
  flex:1;
}

.xfaTable .xfaRlRow > div{
  flex:1;
}

:is(.xfaNonInteractive, .xfaDisabled, .xfaReadOnly) :is(input, textarea){
  background:initial;
}

@media print{
  .xfaTextfield,
  .xfaSelect{
    background:transparent;
  }

  .xfaSelect{
    -webkit-appearance:none;
       -moz-appearance:none;
            appearance:none;
    text-indent:1px;
    text-overflow:"";
  }
}

.canvasWrapper svg{
    transform:none;
  }

[data-main-rotation="90"]:is(.canvasWrapper svg) mask,[data-main-rotation="90"]:is(.canvasWrapper svg) use:not(.clip,.mask){
        transform:matrix(0, 1, -1, 0, 1, 0);
      }

[data-main-rotation="180"]:is(.canvasWrapper svg) mask,[data-main-rotation="180"]:is(.canvasWrapper svg) use:not(.clip,.mask){
        transform:matrix(-1, 0, 0, -1, 1, 1);
      }

[data-main-rotation="270"]:is(.canvasWrapper svg) mask,[data-main-rotation="270"]:is(.canvasWrapper svg) use:not(.clip,.mask){
        transform:matrix(0, -1, 1, 0, 0, 1);
      }

.highlight:is(.canvasWrapper svg){
      --blend-mode:multiply;
    }

@media screen and (forced-colors: active){

.highlight:is(.canvasWrapper svg){
        --blend-mode:difference;
    }
      }

.highlight:is(.canvasWrapper svg){

      position:absolute;
      mix-blend-mode:var(--blend-mode);
    }

.highlight:is(.canvasWrapper svg):not(.free){
        fill-rule:evenodd;
      }

.highlightOutline:is(.canvasWrapper svg){
      position:absolute;
      mix-blend-mode:normal;
      fill-rule:evenodd;
      fill:none;
    }

.highlightOutline.hovered:is(.canvasWrapper svg):not(.free):not(.selected){
          stroke:var(--hover-outline-color);
          stroke-width:var(--outline-width);
        }

.highlightOutline.selected:is(.canvasWrapper svg):not(.free) .mainOutline{
            stroke:var(--outline-around-color);
            stroke-width:calc(
              var(--outline-width) + 2 * var(--outline-around-width)
            );
          }

.highlightOutline.selected:is(.canvasWrapper svg):not(.free) .secondaryOutline{
            stroke:var(--outline-color);
            stroke-width:var(--outline-width);
          }

.highlightOutline.free.hovered:is(.canvasWrapper svg):not(.selected){
          stroke:var(--hover-outline-color);
          stroke-width:calc(2 * var(--outline-width));
        }

.highlightOutline.free.selected:is(.canvasWrapper svg) .mainOutline{
            stroke:var(--outline-around-color);
            stroke-width:calc(
              2 * (var(--outline-width) + var(--outline-around-width))
            );
          }

.highlightOutline.free.selected:is(.canvasWrapper svg) .secondaryOutline{
            stroke:var(--outline-color);
            stroke-width:calc(2 * var(--outline-width));
          }

.toggle-button{
  --button-background-color:#f0f0f4;
  --button-background-color-hover:#e0e0e6;
  --button-background-color-active:#cfcfd8;
  --color-accent-primary:#0060df;
  --color-accent-primary-hover:#0250bb;
  --color-accent-primary-active:#054096;
  --border-interactive-color:#8f8f9d;
  --border-radius-circle:9999px;
  --border-width:1px;
  --size-item-small:16px;
  --size-item-large:32px;
  --color-canvas:white;
}

@media (prefers-color-scheme: dark){

:where(html:not(.is-light)) .toggle-button{
    --button-background-color:color-mix(in srgb, currentColor 7%, transparent);
    --button-background-color-hover:color-mix(
      in srgb,
      currentColor 14%,
      transparent
    );
    --button-background-color-active:color-mix(
      in srgb,
      currentColor 21%,
      transparent
    );
    --color-accent-primary:#0df;
    --color-accent-primary-hover:#80ebff;
    --color-accent-primary-active:#aaf2ff;
    --border-interactive-color:#bfbfc9;
    --color-canvas:#1c1b22;
}
  }

:where(html.is-dark) .toggle-button{
    --button-background-color:color-mix(in srgb, currentColor 7%, transparent);
    --button-background-color-hover:color-mix(
      in srgb,
      currentColor 14%,
      transparent
    );
    --button-background-color-active:color-mix(
      in srgb,
      currentColor 21%,
      transparent
    );
    --color-accent-primary:#0df;
    --color-accent-primary-hover:#80ebff;
    --color-accent-primary-active:#aaf2ff;
    --border-interactive-color:#bfbfc9;
    --color-canvas:#1c1b22;
}

@media (forced-colors: active){

.toggle-button{
    --color-accent-primary:ButtonText;
    --color-accent-primary-hover:SelectedItem;
    --color-accent-primary-active:SelectedItem;
    --border-interactive-color:ButtonText;
    --button-background-color:ButtonFace;
    --border-interactive-color-hover:SelectedItem;
    --border-interactive-color-active:SelectedItem;
    --border-interactive-color-disabled:GrayText;
    --color-canvas:ButtonText;
}
  }

.toggle-button{

  --toggle-background-color:var(--button-background-color);
  --toggle-background-color-hover:var(--button-background-color-hover);
  --toggle-background-color-active:var(--button-background-color-active);
  --toggle-background-color-pressed:var(--color-accent-primary);
  --toggle-background-color-pressed-hover:var(--color-accent-primary-hover);
  --toggle-background-color-pressed-active:var(--color-accent-primary-active);
  --toggle-border-color:var(--border-interactive-color);
  --toggle-border-color-hover:var(--toggle-border-color);
  --toggle-border-color-active:var(--toggle-border-color);
  --toggle-border-radius:var(--border-radius-circle);
  --toggle-border-width:var(--border-width);
  --toggle-height:var(--size-item-small);
  --toggle-width:var(--size-item-large);
  --toggle-dot-background-color:var(--toggle-border-color);
  --toggle-dot-background-color-hover:var(--toggle-dot-background-color);
  --toggle-dot-background-color-active:var(--toggle-dot-background-color);
  --toggle-dot-background-color-on-pressed:var(--color-canvas);
  --toggle-dot-margin:1px;
  --toggle-dot-height:calc(
    var(--toggle-height) - 2 * var(--toggle-dot-margin) - 2 *
      var(--toggle-border-width)
  );
  --toggle-dot-width:var(--toggle-dot-height);
  --toggle-dot-transform-x:calc(
    var(--toggle-width) - 4 * var(--toggle-dot-margin) - var(--toggle-dot-width)
  );

  -webkit-appearance:none;

     -moz-appearance:none;

          appearance:none;
  padding:0;
  margin:0;
  border:var(--toggle-border-width) solid var(--toggle-border-color);
  height:var(--toggle-height);
  width:var(--toggle-width);
  border-radius:var(--toggle-border-radius);
  background:var(--toggle-background-color);
  box-sizing:border-box;
  flex-shrink:0;
}

.toggle-button:focus-visible{
    outline:var(--focus-outline);
    outline-offset:var(--focus-outline-offset);
  }

.toggle-button:enabled:hover{
    background:var(--toggle-background-color-hover);
    border-color:var(--toggle-border-color);
  }

.toggle-button:enabled:active{
    background:var(--toggle-background-color-active);
    border-color:var(--toggle-border-color);
  }

.toggle-button[aria-pressed="true"]{
    background:var(--toggle-background-color-pressed);
    border-color:transparent;
  }

.toggle-button[aria-pressed="true"]:enabled:hover{
    background:var(--toggle-background-color-pressed-hover);
    border-color:transparent;
  }

.toggle-button[aria-pressed="true"]:enabled:active{
    background:var(--toggle-background-color-pressed-active);
    border-color:transparent;
  }

.toggle-button::before{
    display:block;
    content:"";
    background-color:var(--toggle-dot-background-color);
    height:var(--toggle-dot-height);
    width:var(--toggle-dot-width);
    margin:var(--toggle-dot-margin);
    border-radius:var(--toggle-border-radius);
    translate:0;
  }

.toggle-button[aria-pressed="true"]::before{
    translate:var(--toggle-dot-transform-x);
    background-color:var(--toggle-dot-background-color-on-pressed);
  }

.toggle-button[aria-pressed="true"]:enabled:hover::before,.toggle-button[aria-pressed="true"]:enabled:active::before{
    background-color:var(--toggle-dot-background-color-on-pressed);
  }

[dir="rtl"] .toggle-button[aria-pressed="true"]::before{
    translate:calc(-1 * var(--toggle-dot-transform-x));
  }

@media (prefers-reduced-motion: no-preference){
    .toggle-button::before{
      transition:translate 100ms;
    }
  }

@media (prefers-contrast){
    .toggle-button:enabled:hover{
      border-color:var(--toggle-border-color-hover);
    }

    .toggle-button:enabled:active{
      border-color:var(--toggle-border-color-active);
    }

    .toggle-button[aria-pressed="true"]:enabled{
      border-color:var(--toggle-border-color);
      position:relative;
    }

    .toggle-button[aria-pressed="true"]:enabled:hover,.toggle-button[aria-pressed="true"]:enabled:hover:active{
      border-color:var(--toggle-border-color-hover);
    }

    .toggle-button[aria-pressed="true"]:enabled:active{
      background-color:var(--toggle-dot-background-color-active);
      border-color:var(--toggle-dot-background-color-hover);
    }

    .toggle-button:hover::before,.toggle-button:active::before{
      background-color:var(--toggle-dot-background-color-hover);
    }
  }

@media (forced-colors){

.toggle-button{
    --toggle-dot-background-color:var(--color-accent-primary);
    --toggle-dot-background-color-hover:var(--color-accent-primary-hover);
    --toggle-dot-background-color-active:var(--color-accent-primary-active);
    --toggle-dot-background-color-on-pressed:var(--button-background-color);
    --toggle-background-color-disabled:var(--button-background-color-disabled);
    --toggle-border-color-hover:var(--border-interactive-color-hover);
    --toggle-border-color-active:var(--border-interactive-color-active);
    --toggle-border-color-disabled:var(--border-interactive-color-disabled);
}

    .toggle-button[aria-pressed="true"]:enabled::after{
      border:1px solid var(--button-background-color);
      content:"";
      position:absolute;
      height:var(--toggle-height);
      width:var(--toggle-width);
      display:block;
      border-radius:var(--toggle-border-radius);
      inset:-2px;
    }

    .toggle-button[aria-pressed="true"]:enabled:active::after{
      border-color:var(--toggle-border-color-active);
    }
  }

:root{
  --outline-width:2px;
  --outline-color:#0060df;
  --outline-around-width:1px;
  --outline-around-color:#f0f0f4;
  --hover-outline-around-color:var(--outline-around-color);
  --focus-outline:solid var(--outline-width) var(--outline-color);
  --unfocus-outline:solid var(--outline-width) transparent;
  --focus-outline-around:solid var(--outline-around-width) var(--outline-around-color);
  --hover-outline-color:#8f8f9d;
  --hover-outline:solid var(--outline-width) var(--hover-outline-color);
  --hover-outline-around:solid var(--outline-around-width) var(--hover-outline-around-color);
  --freetext-line-height:1.35;
  --freetext-padding:2px;
  --resizer-bg-color:var(--outline-color);
  --resizer-size:6px;
  --resizer-shift:calc(
    0px - (var(--outline-width) + var(--resizer-size)) / 2 -
      var(--outline-around-width)
  );
  --editorFreeText-editing-cursor:text;
  --editorInk-editing-cursor:url(public/images/cursor-editorInk.svg) 0 16, pointer;
  --editorHighlight-editing-cursor:url(public/images/cursor-editorTextHighlight.svg) 24 24, text;
  --editorFreeHighlight-editing-cursor:url(public/images/cursor-editorFreeHighlight.svg) 1 18, pointer;

  --new-alt-text-warning-image:url(public/images/altText_warning.svg);
}
.visuallyHidden{
  position:absolute;
  top:0;
  left:0;
  border:0;
  margin:0;
  padding:0;
  width:0;
  height:0;
  overflow:hidden;
  white-space:nowrap;
  font-size:0;
}

.textLayer.highlighting{
  cursor:var(--editorFreeHighlight-editing-cursor);
}

.textLayer.highlighting:not(.free) span{
    cursor:var(--editorHighlight-editing-cursor);
  }

.textLayer.highlighting.free span{
    cursor:var(--editorFreeHighlight-editing-cursor);
  }

#viewerContainer.pdfPresentationMode:fullscreen .noAltTextBadge{
    display:none !important;
  }

@media (min-resolution: 1.1dppx){
  :root{
    --editorFreeText-editing-cursor:url(public/images/cursor-editorFreeText.svg) 0 16, text;
  }
}

@media screen and (forced-colors: active){
  :root{
    --outline-color:CanvasText;
    --outline-around-color:ButtonFace;
    --resizer-bg-color:ButtonText;
    --hover-outline-color:Highlight;
    --hover-outline-around-color:SelectedItemText;
  }
}

[data-editor-rotation="90"]{
  transform:rotate(90deg);
}

[data-editor-rotation="180"]{
  transform:rotate(180deg);
}

[data-editor-rotation="270"]{
  transform:rotate(270deg);
}

.annotationEditorLayer{
  background:transparent;
  position:absolute;
  inset:0;
  font-size:calc(100px * var(--scale-factor));
  transform-origin:0 0;
  cursor:auto;
}

.annotationEditorLayer .selectedEditor{
    z-index:100000 !important;
  }

.annotationEditorLayer.drawing *{
    pointer-events:none !important;
  }

.annotationEditorLayer.waiting{
  content:"";
  cursor:wait;
  position:absolute;
  inset:0;
  width:100%;
  height:100%;
}

.annotationEditorLayer.disabled{
  pointer-events:none;
}

.annotationEditorLayer.freetextEditing{
  cursor:var(--editorFreeText-editing-cursor);
}

.annotationEditorLayer.inkEditing{
  cursor:var(--editorInk-editing-cursor);
}

.annotationEditorLayer :is(.freeTextEditor, .inkEditor, .stampEditor){
  position:absolute;
  background:transparent;
  z-index:1;
  transform-origin:0 0;
  cursor:auto;
  max-width:100%;
  max-height:100%;
  border:var(--unfocus-outline);
}

.draggable.selectedEditor:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor)){
    cursor:move;
  }

.moving:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor)){
    touch-action:none;
  }

.selectedEditor:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor)){
    border:var(--focus-outline);
    outline:var(--focus-outline-around);
  }

.selectedEditor:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor))::before{
      content:"";
      position:absolute;
      inset:0;
      border:var(--focus-outline-around);
      pointer-events:none;
    }

:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor)):hover:not(.selectedEditor){
    border:var(--hover-outline);
    outline:var(--hover-outline-around);
  }

:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor)):hover:not(.selectedEditor)::before{
      content:"";
      position:absolute;
      inset:0;
      border:var(--focus-outline-around);
    }

:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar{
    --editor-toolbar-delete-image:url(public/images/editor-toolbar-delete.svg);
    --editor-toolbar-bg-color:#f0f0f4;
    --editor-toolbar-highlight-image:url(public/images/toolbarButton-editorHighlight.svg);
    --editor-toolbar-fg-color:#2e2e56;
    --editor-toolbar-border-color:#8f8f9d;
    --editor-toolbar-hover-border-color:var(--editor-toolbar-border-color);
    --editor-toolbar-hover-bg-color:#e0e0e6;
    --editor-toolbar-hover-fg-color:var(--editor-toolbar-fg-color);
    --editor-toolbar-hover-outline:none;
    --editor-toolbar-focus-outline-color:#0060df;
    --editor-toolbar-shadow:0 2px 6px 0 rgb(58 57 68 / 0.2);
    --editor-toolbar-vert-offset:6px;
    --editor-toolbar-height:28px;
    --editor-toolbar-padding:2px;
    --alt-text-done-color:#2ac3a2;
    --alt-text-warning-color:#0090ed;
    --alt-text-hover-done-color:var(--alt-text-done-color);
    --alt-text-hover-warning-color:var(--alt-text-warning-color);
  }

@media (prefers-color-scheme: dark){

:where(html:not(.is-light)) :is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar{
      --editor-toolbar-bg-color:#2b2a33;
      --editor-toolbar-fg-color:#fbfbfe;
      --editor-toolbar-hover-bg-color:#52525e;
      --editor-toolbar-focus-outline-color:#0df;
      --alt-text-done-color:#54ffbd;
      --alt-text-warning-color:#80ebff;
  }
    }

:where(html.is-dark) :is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar{
      --editor-toolbar-bg-color:#2b2a33;
      --editor-toolbar-fg-color:#fbfbfe;
      --editor-toolbar-hover-bg-color:#52525e;
      --editor-toolbar-focus-outline-color:#0df;
      --alt-text-done-color:#54ffbd;
      --alt-text-warning-color:#80ebff;
  }

@media screen and (forced-colors: active){

:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar{
      --editor-toolbar-bg-color:ButtonFace;
      --editor-toolbar-fg-color:ButtonText;
      --editor-toolbar-border-color:ButtonText;
      --editor-toolbar-hover-border-color:AccentColor;
      --editor-toolbar-hover-bg-color:ButtonFace;
      --editor-toolbar-hover-fg-color:AccentColor;
      --editor-toolbar-hover-outline:2px solid var(--editor-toolbar-hover-border-color);
      --editor-toolbar-focus-outline-color:ButtonBorder;
      --editor-toolbar-shadow:none;
      --alt-text-done-color:var(--editor-toolbar-fg-color);
      --alt-text-warning-color:var(--editor-toolbar-fg-color);
      --alt-text-hover-done-color:var(--editor-toolbar-hover-fg-color);
      --alt-text-hover-warning-color:var(--editor-toolbar-hover-fg-color);
  }
    }

:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar{

    display:flex;
    width:-moz-fit-content;
    width:fit-content;
    height:var(--editor-toolbar-height);
    flex-direction:column;
    justify-content:center;
    align-items:center;
    cursor:default;
    pointer-events:auto;
    box-sizing:content-box;
    padding:var(--editor-toolbar-padding);

    position:absolute;
    inset-inline-end:0;
    inset-block-start:calc(100% + var(--editor-toolbar-vert-offset));

    border-radius:6px;
    background-color:var(--editor-toolbar-bg-color);
    border:1px solid var(--editor-toolbar-border-color);
    box-shadow:var(--editor-toolbar-shadow);
  }

.hidden:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar){
      display:none;
    }

:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar):has(:focus-visible){
      border-color:transparent;
    }

[dir="ltr"] :is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar){
      transform-origin:100% 0;
    }

[dir="rtl"] :is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar){
      transform-origin:0 0;
    }

:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons{
      display:flex;
      justify-content:center;
      align-items:center;
      gap:0;
      height:100%;
    }

:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) .divider{
        width:1px;
        height:calc(
          2 * var(--editor-toolbar-padding) + var(--editor-toolbar-height)
        );
        background-color:var(--editor-toolbar-border-color);
        display:inline-block;
        margin-inline:2px;
      }

:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) .highlightButton{
        width:var(--editor-toolbar-height);
      }

:is(:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) .highlightButton)::before{
          content:"";
          -webkit-mask-image:var(--editor-toolbar-highlight-image);
                  mask-image:var(--editor-toolbar-highlight-image);
          -webkit-mask-repeat:no-repeat;
                  mask-repeat:no-repeat;
          -webkit-mask-position:center;
                  mask-position:center;
          display:inline-block;
          background-color:var(--editor-toolbar-fg-color);
          width:100%;
          height:100%;
        }

:is(:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) .highlightButton):hover::before{
          background-color:var(--editor-toolbar-hover-fg-color);
        }

:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) .delete{
        width:var(--editor-toolbar-height);
      }

:is(:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) .delete)::before{
          content:"";
          -webkit-mask-image:var(--editor-toolbar-delete-image);
                  mask-image:var(--editor-toolbar-delete-image);
          -webkit-mask-repeat:no-repeat;
                  mask-repeat:no-repeat;
          -webkit-mask-position:center;
                  mask-position:center;
          display:inline-block;
          background-color:var(--editor-toolbar-fg-color);
          width:100%;
          height:100%;
        }

:is(:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) .delete):hover::before{
          background-color:var(--editor-toolbar-hover-fg-color);
        }

:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons)  > *{
        height:var(--editor-toolbar-height);
      }

:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons)  > :not(.divider){
        border:none;
        background-color:transparent;
        cursor:pointer;
      }

:is(:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) > :not(.divider)):hover{
          border-radius:2px;
          background-color:var(--editor-toolbar-hover-bg-color);
          color:var(--editor-toolbar-hover-fg-color);
          outline:var(--editor-toolbar-hover-outline);
          outline-offset:1px;
        }

:is(:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) > :not(.divider)):hover:active{
            outline:none;
          }

:is(:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) > :not(.divider)):focus-visible{
          border-radius:2px;
          outline:2px solid var(--editor-toolbar-focus-outline-color);
        }

:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) .altText{
        --alt-text-add-image:url(public/images/altText_add.svg);
        --alt-text-done-image:url(public/images/altText_done.svg);

        display:flex;
        align-items:center;
        justify-content:center;
        width:-moz-max-content;
        width:max-content;
        padding-inline:8px;
        pointer-events:all;
        font:menu;
        font-weight:590;
        font-size:12px;
        color:var(--editor-toolbar-fg-color);
      }

:is(:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) .altText):disabled{
          pointer-events:none;
        }

:is(:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) .altText)::before{
          content:"";
          -webkit-mask-image:var(--alt-text-add-image);
                  mask-image:var(--alt-text-add-image);
          -webkit-mask-repeat:no-repeat;
                  mask-repeat:no-repeat;
          -webkit-mask-position:center;
                  mask-position:center;
          display:inline-block;
          width:12px;
          height:13px;
          background-color:var(--editor-toolbar-fg-color);
          margin-inline-end:4px;
        }

:is(:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) .altText):hover::before{
          background-color:var(--editor-toolbar-hover-fg-color);
        }

.done:is(:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) .altText)::before{
          -webkit-mask-image:var(--alt-text-done-image);
                  mask-image:var(--alt-text-done-image);
        }

.new:is(:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) .altText)::before{
            width:16px;
            height:16px;
            -webkit-mask-image:var(--new-alt-text-warning-image);
                    mask-image:var(--new-alt-text-warning-image);
            background-color:var(--alt-text-warning-color);
            -webkit-mask-size:cover;
                    mask-size:cover;
          }

.new:is(:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) .altText):hover::before{
            background-color:var(--alt-text-hover-warning-color);
          }

.new.done:is(:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) .altText)::before{
              -webkit-mask-image:var(--alt-text-done-image);
                      mask-image:var(--alt-text-done-image);
              background-color:var(--alt-text-done-color);
            }

.new.done:is(:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) .altText):hover::before{
              background-color:var(--alt-text-hover-done-color);
            }

:is(:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) .altText) .tooltip{
          display:none;
        }

.show:is(:is(:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) .altText) .tooltip){
            --alt-text-tooltip-bg:#f0f0f4;
            --alt-text-tooltip-fg:#15141a;
            --alt-text-tooltip-border:#8f8f9d;
            --alt-text-tooltip-shadow:0px 2px 6px 0px rgb(58 57 68 / 0.2);
          }

@media (prefers-color-scheme: dark){

:where(html:not(.is-light)) .show:is(:is(:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) .altText) .tooltip){
              --alt-text-tooltip-bg:#1c1b22;
              --alt-text-tooltip-fg:#fbfbfe;
              --alt-text-tooltip-shadow:0px 2px 6px 0px #15141a;
          }
            }

:where(html.is-dark) .show:is(:is(:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) .altText) .tooltip){
              --alt-text-tooltip-bg:#1c1b22;
              --alt-text-tooltip-fg:#fbfbfe;
              --alt-text-tooltip-shadow:0px 2px 6px 0px #15141a;
          }

@media screen and (forced-colors: active){

.show:is(:is(:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) .altText) .tooltip){
              --alt-text-tooltip-bg:Canvas;
              --alt-text-tooltip-fg:CanvasText;
              --alt-text-tooltip-border:CanvasText;
              --alt-text-tooltip-shadow:none;
          }
            }

.show:is(:is(:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor,.highlightEditor),.textLayer) .editToolbar) .buttons) .altText) .tooltip){

            display:inline-flex;
            flex-direction:column;
            align-items:center;
            justify-content:center;
            position:absolute;
            top:calc(100% + 2px);
            inset-inline-start:0;
            padding-block:2px 3px;
            padding-inline:3px;
            max-width:300px;
            width:-moz-max-content;
            width:max-content;
            height:auto;
            font-size:12px;

            border:0.5px solid var(--alt-text-tooltip-border);
            background:var(--alt-text-tooltip-bg);
            box-shadow:var(--alt-text-tooltip-shadow);
            color:var(--alt-text-tooltip-fg);

            pointer-events:none;
          }

.annotationEditorLayer .freeTextEditor{
  padding:calc(var(--freetext-padding) * var(--scale-factor));
  width:auto;
  height:auto;
  touch-action:none;
}

.annotationEditorLayer .freeTextEditor .internal{
  background:transparent;
  border:none;
  inset:0;
  overflow:visible;
  white-space:nowrap;
  font:10px sans-serif;
  line-height:var(--freetext-line-height);
  -webkit-user-select:none;
     -moz-user-select:none;
          user-select:none;
}

.annotationEditorLayer .freeTextEditor .overlay{
  position:absolute;
  display:none;
  background:transparent;
  inset:0;
  width:100%;
  height:100%;
}

.annotationEditorLayer freeTextEditor .overlay.enabled{
  display:block;
}

.annotationEditorLayer .freeTextEditor .internal:empty::before{
  content:attr(default-content);
  color:gray;
}

.annotationEditorLayer .freeTextEditor .internal:focus{
  outline:none;
  -webkit-user-select:auto;
     -moz-user-select:auto;
          user-select:auto;
}

.annotationEditorLayer .inkEditor{
  width:100%;
  height:100%;
}

.annotationEditorLayer .inkEditor.editing{
  cursor:inherit;
}

.annotationEditorLayer .inkEditor .inkEditorCanvas{
  position:absolute;
  inset:0;
  width:100%;
  height:100%;
  touch-action:none;
}

.annotationEditorLayer .stampEditor{
  width:auto;
  height:auto;
}

:is(.annotationEditorLayer .stampEditor) canvas{
    position:absolute;
    width:100%;
    height:100%;
    margin:0;
    top:0;
    left:0;
  }

:is(.annotationEditorLayer .stampEditor) .noAltTextBadge{
    --no-alt-text-badge-border-color:#f0f0f4;
    --no-alt-text-badge-bg-color:#cfcfd8;
    --no-alt-text-badge-fg-color:#5b5b66;
  }

@media (prefers-color-scheme: dark){

:where(html:not(.is-light)) :is(.annotationEditorLayer .stampEditor) .noAltTextBadge{
      --no-alt-text-badge-border-color:#52525e;
      --no-alt-text-badge-bg-color:#fbfbfe;
      --no-alt-text-badge-fg-color:#15141a;
  }
    }

:where(html.is-dark) :is(.annotationEditorLayer .stampEditor) .noAltTextBadge{
      --no-alt-text-badge-border-color:#52525e;
      --no-alt-text-badge-bg-color:#fbfbfe;
      --no-alt-text-badge-fg-color:#15141a;
  }

@media screen and (forced-colors: active){

:is(.annotationEditorLayer .stampEditor) .noAltTextBadge{
      --no-alt-text-badge-border-color:ButtonText;
      --no-alt-text-badge-bg-color:ButtonFace;
      --no-alt-text-badge-fg-color:ButtonText;
  }
    }

:is(.annotationEditorLayer .stampEditor) .noAltTextBadge{

    position:absolute;
    inset-inline-end:5px;
    inset-block-end:5px;
    display:inline-flex;
    width:32px;
    height:32px;
    padding:3px;
    justify-content:center;
    align-items:center;
    pointer-events:none;
    z-index:1;

    border-radius:2px;
    border:1px solid var(--no-alt-text-badge-border-color);
    background:var(--no-alt-text-badge-bg-color);
  }

:is(:is(.annotationEditorLayer .stampEditor) .noAltTextBadge)::before{
      content:"";
      display:inline-block;
      width:16px;
      height:16px;
      -webkit-mask-image:var(--new-alt-text-warning-image);
              mask-image:var(--new-alt-text-warning-image);
      -webkit-mask-size:cover;
              mask-size:cover;
      background-color:var(--no-alt-text-badge-fg-color);
    }

:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor)) > .resizers{
      position:absolute;
      inset:0;
    }

.hidden:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor)) > .resizers){
        display:none;
      }

:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor)) > .resizers) > .resizer{
        width:var(--resizer-size);
        height:var(--resizer-size);
        background:content-box var(--resizer-bg-color);
        border:var(--focus-outline-around);
        border-radius:2px;
        position:absolute;
      }

.topLeft:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor)) > .resizers) > .resizer){
          top:var(--resizer-shift);
          left:var(--resizer-shift);
        }

.topMiddle:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor)) > .resizers) > .resizer){
          top:var(--resizer-shift);
          left:calc(50% + var(--resizer-shift));
        }

.topRight:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor)) > .resizers) > .resizer){
          top:var(--resizer-shift);
          right:var(--resizer-shift);
        }

.middleRight:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor)) > .resizers) > .resizer){
          top:calc(50% + var(--resizer-shift));
          right:var(--resizer-shift);
        }

.bottomRight:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor)) > .resizers) > .resizer){
          bottom:var(--resizer-shift);
          right:var(--resizer-shift);
        }

.bottomMiddle:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor)) > .resizers) > .resizer){
          bottom:var(--resizer-shift);
          left:calc(50% + var(--resizer-shift));
        }

.bottomLeft:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor)) > .resizers) > .resizer){
          bottom:var(--resizer-shift);
          left:var(--resizer-shift);
        }

.middleLeft:is(:is(:is(.annotationEditorLayer :is(.freeTextEditor,.inkEditor,.stampEditor)) > .resizers) > .resizer){
          top:calc(50% + var(--resizer-shift));
          left:var(--resizer-shift);
        }

.topLeft:is(:is(.annotationEditorLayer[data-main-rotation="0"] :is([data-editor-rotation="0"],[data-editor-rotation="180"]),.annotationEditorLayer[data-main-rotation="90"] :is([data-editor-rotation="270"],[data-editor-rotation="90"]),.annotationEditorLayer[data-main-rotation="180"] :is([data-editor-rotation="180"],[data-editor-rotation="0"]),.annotationEditorLayer[data-main-rotation="270"] :is([data-editor-rotation="90"],[data-editor-rotation="270"])) > .resizers > .resizer),.bottomRight:is(:is(.annotationEditorLayer[data-main-rotation="0"] :is([data-editor-rotation="0"],[data-editor-rotation="180"]),.annotationEditorLayer[data-main-rotation="90"] :is([data-editor-rotation="270"],[data-editor-rotation="90"]),.annotationEditorLayer[data-main-rotation="180"] :is([data-editor-rotation="180"],[data-editor-rotation="0"]),.annotationEditorLayer[data-main-rotation="270"] :is([data-editor-rotation="90"],[data-editor-rotation="270"])) > .resizers > .resizer){
        cursor:nwse-resize;
      }

.topMiddle:is(:is(.annotationEditorLayer[data-main-rotation="0"] :is([data-editor-rotation="0"],[data-editor-rotation="180"]),.annotationEditorLayer[data-main-rotation="90"] :is([data-editor-rotation="270"],[data-editor-rotation="90"]),.annotationEditorLayer[data-main-rotation="180"] :is([data-editor-rotation="180"],[data-editor-rotation="0"]),.annotationEditorLayer[data-main-rotation="270"] :is([data-editor-rotation="90"],[data-editor-rotation="270"])) > .resizers > .resizer),.bottomMiddle:is(:is(.annotationEditorLayer[data-main-rotation="0"] :is([data-editor-rotation="0"],[data-editor-rotation="180"]),.annotationEditorLayer[data-main-rotation="90"] :is([data-editor-rotation="270"],[data-editor-rotation="90"]),.annotationEditorLayer[data-main-rotation="180"] :is([data-editor-rotation="180"],[data-editor-rotation="0"]),.annotationEditorLayer[data-main-rotation="270"] :is([data-editor-rotation="90"],[data-editor-rotation="270"])) > .resizers > .resizer){
        cursor:ns-resize;
      }

.topRight:is(:is(.annotationEditorLayer[data-main-rotation="0"] :is([data-editor-rotation="0"],[data-editor-rotation="180"]),.annotationEditorLayer[data-main-rotation="90"] :is([data-editor-rotation="270"],[data-editor-rotation="90"]),.annotationEditorLayer[data-main-rotation="180"] :is([data-editor-rotation="180"],[data-editor-rotation="0"]),.annotationEditorLayer[data-main-rotation="270"] :is([data-editor-rotation="90"],[data-editor-rotation="270"])) > .resizers > .resizer),.bottomLeft:is(:is(.annotationEditorLayer[data-main-rotation="0"] :is([data-editor-rotation="0"],[data-editor-rotation="180"]),.annotationEditorLayer[data-main-rotation="90"] :is([data-editor-rotation="270"],[data-editor-rotation="90"]),.annotationEditorLayer[data-main-rotation="180"] :is([data-editor-rotation="180"],[data-editor-rotation="0"]),.annotationEditorLayer[data-main-rotation="270"] :is([data-editor-rotation="90"],[data-editor-rotation="270"])) > .resizers > .resizer){
        cursor:nesw-resize;
      }

.middleRight:is(:is(.annotationEditorLayer[data-main-rotation="0"] :is([data-editor-rotation="0"],[data-editor-rotation="180"]),.annotationEditorLayer[data-main-rotation="90"] :is([data-editor-rotation="270"],[data-editor-rotation="90"]),.annotationEditorLayer[data-main-rotation="180"] :is([data-editor-rotation="180"],[data-editor-rotation="0"]),.annotationEditorLayer[data-main-rotation="270"] :is([data-editor-rotation="90"],[data-editor-rotation="270"])) > .resizers > .resizer),.middleLeft:is(:is(.annotationEditorLayer[data-main-rotation="0"] :is([data-editor-rotation="0"],[data-editor-rotation="180"]),.annotationEditorLayer[data-main-rotation="90"] :is([data-editor-rotation="270"],[data-editor-rotation="90"]),.annotationEditorLayer[data-main-rotation="180"] :is([data-editor-rotation="180"],[data-editor-rotation="0"]),.annotationEditorLayer[data-main-rotation="270"] :is([data-editor-rotation="90"],[data-editor-rotation="270"])) > .resizers > .resizer){
        cursor:ew-resize;
      }

.topLeft:is(:is(.annotationEditorLayer[data-main-rotation="0"] :is([data-editor-rotation="90"],[data-editor-rotation="270"]),.annotationEditorLayer[data-main-rotation="90"] :is([data-editor-rotation="0"],[data-editor-rotation="180"]),.annotationEditorLayer[data-main-rotation="180"] :is([data-editor-rotation="270"],[data-editor-rotation="90"]),.annotationEditorLayer[data-main-rotation="270"] :is([data-editor-rotation="180"],[data-editor-rotation="0"])) > .resizers > .resizer),.bottomRight:is(:is(.annotationEditorLayer[data-main-rotation="0"] :is([data-editor-rotation="90"],[data-editor-rotation="270"]),.annotationEditorLayer[data-main-rotation="90"] :is([data-editor-rotation="0"],[data-editor-rotation="180"]),.annotationEditorLayer[data-main-rotation="180"] :is([data-editor-rotation="270"],[data-editor-rotation="90"]),.annotationEditorLayer[data-main-rotation="270"] :is([data-editor-rotation="180"],[data-editor-rotation="0"])) > .resizers > .resizer){
        cursor:nesw-resize;
      }

.topMiddle:is(:is(.annotationEditorLayer[data-main-rotation="0"] :is([data-editor-rotation="90"],[data-editor-rotation="270"]),.annotationEditorLayer[data-main-rotation="90"] :is([data-editor-rotation="0"],[data-editor-rotation="180"]),.annotationEditorLayer[data-main-rotation="180"] :is([data-editor-rotation="270"],[data-editor-rotation="90"]),.annotationEditorLayer[data-main-rotation="270"] :is([data-editor-rotation="180"],[data-editor-rotation="0"])) > .resizers > .resizer),.bottomMiddle:is(:is(.annotationEditorLayer[data-main-rotation="0"] :is([data-editor-rotation="90"],[data-editor-rotation="270"]),.annotationEditorLayer[data-main-rotation="90"] :is([data-editor-rotation="0"],[data-editor-rotation="180"]),.annotationEditorLayer[data-main-rotation="180"] :is([data-editor-rotation="270"],[data-editor-rotation="90"]),.annotationEditorLayer[data-main-rotation="270"] :is([data-editor-rotation="180"],[data-editor-rotation="0"])) > .resizers > .resizer){
        cursor:ew-resize;
      }

.topRight:is(:is(.annotationEditorLayer[data-main-rotation="0"] :is([data-editor-rotation="90"],[data-editor-rotation="270"]),.annotationEditorLayer[data-main-rotation="90"] :is([data-editor-rotation="0"],[data-editor-rotation="180"]),.annotationEditorLayer[data-main-rotation="180"] :is([data-editor-rotation="270"],[data-editor-rotation="90"]),.annotationEditorLayer[data-main-rotation="270"] :is([data-editor-rotation="180"],[data-editor-rotation="0"])) > .resizers > .resizer),.bottomLeft:is(:is(.annotationEditorLayer[data-main-rotation="0"] :is([data-editor-rotation="90"],[data-editor-rotation="270"]),.annotationEditorLayer[data-main-rotation="90"] :is([data-editor-rotation="0"],[data-editor-rotation="180"]),.annotationEditorLayer[data-main-rotation="180"] :is([data-editor-rotation="270"],[data-editor-rotation="90"]),.annotationEditorLayer[data-main-rotation="270"] :is([data-editor-rotation="180"],[data-editor-rotation="0"])) > .resizers > .resizer){
        cursor:nwse-resize;
      }

.middleRight:is(:is(.annotationEditorLayer[data-main-rotation="0"] :is([data-editor-rotation="90"],[data-editor-rotation="270"]),.annotationEditorLayer[data-main-rotation="90"] :is([data-editor-rotation="0"],[data-editor-rotation="180"]),.annotationEditorLayer[data-main-rotation="180"] :is([data-editor-rotation="270"],[data-editor-rotation="90"]),.annotationEditorLayer[data-main-rotation="270"] :is([data-editor-rotation="180"],[data-editor-rotation="0"])) > .resizers > .resizer),.middleLeft:is(:is(.annotationEditorLayer[data-main-rotation="0"] :is([data-editor-rotation="90"],[data-editor-rotation="270"]),.annotationEditorLayer[data-main-rotation="90"] :is([data-editor-rotation="0"],[data-editor-rotation="180"]),.annotationEditorLayer[data-main-rotation="180"] :is([data-editor-rotation="270"],[data-editor-rotation="90"]),.annotationEditorLayer[data-main-rotation="270"] :is([data-editor-rotation="180"],[data-editor-rotation="0"])) > .resizers > .resizer){
        cursor:ns-resize;
      }

:is(.annotationEditorLayer :is([data-main-rotation="0"] [data-editor-rotation="90"],[data-main-rotation="90"] [data-editor-rotation="0"],[data-main-rotation="180"] [data-editor-rotation="270"],[data-main-rotation="270"] [data-editor-rotation="180"])) .editToolbar{
      rotate:270deg;
    }

[dir="ltr"] :is(:is(.annotationEditorLayer :is([data-main-rotation="0"] [data-editor-rotation="90"],[data-main-rotation="90"] [data-editor-rotation="0"],[data-main-rotation="180"] [data-editor-rotation="270"],[data-main-rotation="270"] [data-editor-rotation="180"])) .editToolbar){
        inset-inline-end:calc(0px - var(--editor-toolbar-vert-offset));
        inset-block-start:0;
      }

[dir="rtl"] :is(:is(.annotationEditorLayer :is([data-main-rotation="0"] [data-editor-rotation="90"],[data-main-rotation="90"] [data-editor-rotation="0"],[data-main-rotation="180"] [data-editor-rotation="270"],[data-main-rotation="270"] [data-editor-rotation="180"])) .editToolbar){
        inset-inline-end:calc(100% + var(--editor-toolbar-vert-offset));
        inset-block-start:0;
      }

:is(.annotationEditorLayer :is([data-main-rotation="0"] [data-editor-rotation="180"],[data-main-rotation="90"] [data-editor-rotation="90"],[data-main-rotation="180"] [data-editor-rotation="0"],[data-main-rotation="270"] [data-editor-rotation="270"])) .editToolbar{
      rotate:180deg;
      inset-inline-end:100%;
      inset-block-start:calc(0pc - var(--editor-toolbar-vert-offset));
    }

:is(.annotationEditorLayer :is([data-main-rotation="0"] [data-editor-rotation="270"],[data-main-rotation="90"] [data-editor-rotation="180"],[data-main-rotation="180"] [data-editor-rotation="90"],[data-main-rotation="270"] [data-editor-rotation="0"])) .editToolbar{
      rotate:90deg;
    }

[dir="ltr"] :is(:is(.annotationEditorLayer :is([data-main-rotation="0"] [data-editor-rotation="270"],[data-main-rotation="90"] [data-editor-rotation="180"],[data-main-rotation="180"] [data-editor-rotation="90"],[data-main-rotation="270"] [data-editor-rotation="0"])) .editToolbar){
        inset-inline-end:calc(100% + var(--editor-toolbar-vert-offset));
        inset-block-start:100%;
      }

[dir="rtl"] :is(:is(.annotationEditorLayer :is([data-main-rotation="0"] [data-editor-rotation="270"],[data-main-rotation="90"] [data-editor-rotation="180"],[data-main-rotation="180"] [data-editor-rotation="90"],[data-main-rotation="270"] [data-editor-rotation="0"])) .editToolbar){
        inset-inline-start:calc(0px - var(--editor-toolbar-vert-offset));
        inset-block-start:0;
      }

.dialog.altText::backdrop{
    -webkit-mask:url(#alttext-manager-mask);
            mask:url(#alttext-manager-mask);
  }

.dialog.altText.positioned{
    margin:0;
  }

.dialog.altText #altTextContainer{
    width:300px;
    height:-moz-fit-content;
    height:fit-content;
    display:inline-flex;
    flex-direction:column;
    align-items:flex-start;
    gap:16px;
  }

:is(.dialog.altText #altTextContainer) #overallDescription{
      display:flex;
      flex-direction:column;
      align-items:flex-start;
      gap:4px;
      align-self:stretch;
    }

:is(:is(.dialog.altText #altTextContainer) #overallDescription) span{
        align-self:stretch;
      }

:is(:is(.dialog.altText #altTextContainer) #overallDescription) .title{
        font-size:13px;
        font-style:normal;
        font-weight:590;
      }

:is(.dialog.altText #altTextContainer) #addDescription{
      display:flex;
      flex-direction:column;
      align-items:stretch;
      gap:8px;
    }

:is(:is(.dialog.altText #altTextContainer) #addDescription) .descriptionArea{
        flex:1;
        padding-inline:24px 10px;
      }

:is(:is(:is(.dialog.altText #altTextContainer) #addDescription) .descriptionArea) textarea{
          width:100%;
          min-height:75px;
        }

:is(.dialog.altText #altTextContainer) #buttons{
      display:flex;
      justify-content:flex-end;
      align-items:flex-start;
      gap:8px;
      align-self:stretch;
    }

.dialog.newAltText{
  --new-alt-text-ai-disclaimer-icon:url(public/images/altText_disclaimer.svg);
  --new-alt-text-spinner-icon:url(public/images/altText_spinner.svg);
  --preview-image-bg-color:#f0f0f4;
  --preview-image-border:none;
}

@media (prefers-color-scheme: dark){

:where(html:not(.is-light)) .dialog.newAltText{
    --preview-image-bg-color:#2b2a33;
}
  }

:where(html.is-dark) .dialog.newAltText{
    --preview-image-bg-color:#2b2a33;
}

@media screen and (forced-colors: active){

.dialog.newAltText{
    --preview-image-bg-color:ButtonFace;
    --preview-image-border:1px solid ButtonText;
}
  }

.dialog.newAltText{

  width:80%;
  max-width:570px;
  min-width:300px;
  padding:0;
}

.dialog.newAltText.noAi #newAltTextDisclaimer,.dialog.newAltText.noAi #newAltTextCreateAutomatically{
      display:none !important;
    }

.dialog.newAltText.aiInstalling #newAltTextCreateAutomatically{
      display:none !important;
    }

.dialog.newAltText.aiInstalling #newAltTextDownloadModel{
      display:flex !important;
    }

.dialog.newAltText.error #newAltTextNotNow{
      display:none !important;
    }

.dialog.newAltText.error #newAltTextCancel{
      display:inline-block !important;
    }

.dialog.newAltText:not(.error) #newAltTextError{
    display:none !important;
  }

.dialog.newAltText #newAltTextContainer{
    display:flex;
    width:auto;
    padding:16px;
    flex-direction:column;
    justify-content:flex-end;
    align-items:flex-start;
    gap:12px;
    flex:0 1 auto;
    line-height:normal;
  }

:is(.dialog.newAltText #newAltTextContainer) #mainContent{
      display:flex;
      justify-content:flex-end;
      align-items:flex-start;
      gap:12px;
      align-self:stretch;
      flex:1 1 auto;
    }

:is(:is(.dialog.newAltText #newAltTextContainer) #mainContent) #descriptionAndSettings{
        display:flex;
        flex-direction:column;
        align-items:flex-start;
        gap:16px;
        flex:1 0 0;
        align-self:stretch;
      }

:is(:is(.dialog.newAltText #newAltTextContainer) #mainContent) #descriptionInstruction{
        display:flex;
        flex-direction:column;
        align-items:flex-start;
        gap:8px;
        align-self:stretch;
        flex:1 1 auto;
      }

:is(:is(:is(.dialog.newAltText #newAltTextContainer) #mainContent) #descriptionInstruction) #newAltTextDescriptionContainer{
          width:100%;
          height:70px;
          position:relative;
        }

:is(:is(:is(:is(.dialog.newAltText #newAltTextContainer) #mainContent) #descriptionInstruction) #newAltTextDescriptionContainer) textarea{
            width:100%;
            height:100%;
            padding:8px;
          }

:is(:is(:is(:is(:is(.dialog.newAltText #newAltTextContainer) #mainContent) #descriptionInstruction) #newAltTextDescriptionContainer) textarea)::-moz-placeholder{
              color:var(--text-secondary-color);
            }

:is(:is(:is(:is(:is(.dialog.newAltText #newAltTextContainer) #mainContent) #descriptionInstruction) #newAltTextDescriptionContainer) textarea)::placeholder{
              color:var(--text-secondary-color);
            }

:is(:is(:is(:is(.dialog.newAltText #newAltTextContainer) #mainContent) #descriptionInstruction) #newAltTextDescriptionContainer) .altTextSpinner{
            display:none;
            position:absolute;
            width:16px;
            height:16px;
            inset-inline-start:8px;
            inset-block-start:8px;
            -webkit-mask-size:cover;
                    mask-size:cover;
            background-color:var(--text-secondary-color);
            pointer-events:none;
          }

.loading:is(:is(:is(:is(.dialog.newAltText #newAltTextContainer) #mainContent) #descriptionInstruction) #newAltTextDescriptionContainer) textarea::-moz-placeholder{
              color:transparent;
            }

.loading:is(:is(:is(:is(.dialog.newAltText #newAltTextContainer) #mainContent) #descriptionInstruction) #newAltTextDescriptionContainer) textarea::placeholder{
              color:transparent;
            }

.loading:is(:is(:is(:is(.dialog.newAltText #newAltTextContainer) #mainContent) #descriptionInstruction) #newAltTextDescriptionContainer) .altTextSpinner{
              display:inline-block;
              -webkit-mask-image:var(--new-alt-text-spinner-icon);
                      mask-image:var(--new-alt-text-spinner-icon);
            }

:is(:is(:is(.dialog.newAltText #newAltTextContainer) #mainContent) #descriptionInstruction) #newAltTextDescription{
          font-size:11px;
        }

:is(:is(:is(.dialog.newAltText #newAltTextContainer) #mainContent) #descriptionInstruction) #newAltTextDisclaimer{
          display:flex;
          flex-direction:row;
          align-items:flex-start;
          gap:4px;
          font-size:11px;
        }

:is(:is(:is(:is(.dialog.newAltText #newAltTextContainer) #mainContent) #descriptionInstruction) #newAltTextDisclaimer)::before{
            content:"";
            display:inline-block;
            width:17px;
            height:16px;
            -webkit-mask-image:var(--new-alt-text-ai-disclaimer-icon);
                    mask-image:var(--new-alt-text-ai-disclaimer-icon);
            -webkit-mask-size:cover;
                    mask-size:cover;
            background-color:var(--text-secondary-color);
            flex:1 0 auto;
          }

:is(:is(.dialog.newAltText #newAltTextContainer) #mainContent) #newAltTextDownloadModel{
        display:flex;
        align-items:center;
        gap:4px;
        align-self:stretch;
      }

:is(:is(:is(.dialog.newAltText #newAltTextContainer) #mainContent) #newAltTextDownloadModel)::before{
          content:"";
          display:inline-block;
          width:16px;
          height:16px;
          -webkit-mask-image:var(--new-alt-text-spinner-icon);
                  mask-image:var(--new-alt-text-spinner-icon);
          -webkit-mask-size:cover;
                  mask-size:cover;
          background-color:var(--text-secondary-color);
        }

:is(:is(.dialog.newAltText #newAltTextContainer) #mainContent) #newAltTextImagePreview{
        width:180px;
        aspect-ratio:1;
        display:flex;
        justify-content:center;
        align-items:center;
        flex:0 0 auto;
        background-color:var(--preview-image-bg-color);
        border:var(--preview-image-border);
      }

:is(:is(:is(.dialog.newAltText #newAltTextContainer) #mainContent) #newAltTextImagePreview)  > canvas{
          max-width:100%;
          max-height:100%;
        }

.colorPicker{
  --hover-outline-color:#0250bb;
  --selected-outline-color:#0060df;
  --swatch-border-color:#cfcfd8;
}

@media (prefers-color-scheme: dark){

:where(html:not(.is-light)) .colorPicker{
    --hover-outline-color:#80ebff;
    --selected-outline-color:#aaf2ff;
    --swatch-border-color:#52525e;
}
  }

:where(html.is-dark) .colorPicker{
    --hover-outline-color:#80ebff;
    --selected-outline-color:#aaf2ff;
    --swatch-border-color:#52525e;
}

@media screen and (forced-colors: active){

.colorPicker{
    --hover-outline-color:Highlight;
    --selected-outline-color:var(--hover-outline-color);
    --swatch-border-color:ButtonText;
}
  }

.colorPicker .swatch{
    width:16px;
    height:16px;
    border:1px solid var(--swatch-border-color);
    border-radius:100%;
    outline-offset:2px;
    box-sizing:border-box;
    forced-color-adjust:none;
  }

.colorPicker button:is(:hover,.selected) > .swatch{
    border:none;
  }

.annotationEditorLayer[data-main-rotation="0"] .highlightEditor:not(.free) > .editToolbar{
      rotate:0deg;
    }

.annotationEditorLayer[data-main-rotation="90"] .highlightEditor:not(.free) > .editToolbar{
      rotate:270deg;
    }

.annotationEditorLayer[data-main-rotation="180"] .highlightEditor:not(.free) > .editToolbar{
      rotate:180deg;
    }

.annotationEditorLayer[data-main-rotation="270"] .highlightEditor:not(.free) > .editToolbar{
      rotate:90deg;
    }

.annotationEditorLayer .highlightEditor{
    position:absolute;
    background:transparent;
    z-index:1;
    cursor:auto;
    max-width:100%;
    max-height:100%;
    border:none;
    outline:none;
    pointer-events:none;
    transform-origin:0 0;
  }

:is(.annotationEditorLayer .highlightEditor):not(.free){
      transform:none;
    }

:is(.annotationEditorLayer .highlightEditor) .internal{
      position:absolute;
      top:0;
      left:0;
      width:100%;
      height:100%;
      pointer-events:auto;
    }

.disabled:is(.annotationEditorLayer .highlightEditor) .internal{
      pointer-events:none;
    }

.selectedEditor:is(.annotationEditorLayer .highlightEditor) .internal{
        cursor:pointer;
      }

:is(.annotationEditorLayer .highlightEditor) .editToolbar{
      --editor-toolbar-colorpicker-arrow-image:url(public/images/toolbarButton-menuArrow.svg);

      transform-origin:center !important;
    }

:is(:is(:is(.annotationEditorLayer .highlightEditor) .editToolbar) .buttons) .colorPicker{
          position:relative;
          width:auto;
          display:flex;
          justify-content:center;
          align-items:center;
          gap:4px;
          padding:4px;
        }

:is(:is(:is(:is(.annotationEditorLayer .highlightEditor) .editToolbar) .buttons) .colorPicker)::after{
            content:"";
            -webkit-mask-image:var(--editor-toolbar-colorpicker-arrow-image);
                    mask-image:var(--editor-toolbar-colorpicker-arrow-image);
            -webkit-mask-repeat:no-repeat;
                    mask-repeat:no-repeat;
            -webkit-mask-position:center;
                    mask-position:center;
            display:inline-block;
            background-color:var(--editor-toolbar-fg-color);
            width:12px;
            height:12px;
          }

:is(:is(:is(:is(.annotationEditorLayer .highlightEditor) .editToolbar) .buttons) .colorPicker):hover::after{
            background-color:var(--editor-toolbar-hover-fg-color);
          }

:is(:is(:is(:is(.annotationEditorLayer .highlightEditor) .editToolbar) .buttons) .colorPicker):has(.dropdown:not(.hidden)){
            background-color:var(--editor-toolbar-hover-bg-color);
          }

:is(:is(:is(:is(.annotationEditorLayer .highlightEditor) .editToolbar) .buttons) .colorPicker):has(.dropdown:not(.hidden))::after{
              scale:-1;
            }

:is(:is(:is(:is(.annotationEditorLayer .highlightEditor) .editToolbar) .buttons) .colorPicker) .dropdown{
            position:absolute;
            display:flex;
            justify-content:center;
            align-items:center;
            flex-direction:column;
            gap:11px;
            padding-block:8px;
            border-radius:6px;
            background-color:var(--editor-toolbar-bg-color);
            border:1px solid var(--editor-toolbar-border-color);
            box-shadow:var(--editor-toolbar-shadow);
            inset-block-start:calc(100% + 4px);
            width:calc(100% + 2 * var(--editor-toolbar-padding));
          }

:is(:is(:is(:is(:is(.annotationEditorLayer .highlightEditor) .editToolbar) .buttons) .colorPicker) .dropdown) button{
              width:100%;
              height:auto;
              border:none;
              cursor:pointer;
              display:flex;
              justify-content:center;
              align-items:center;
              background:none;
            }

:is(:is(:is(:is(:is(:is(.annotationEditorLayer .highlightEditor) .editToolbar) .buttons) .colorPicker) .dropdown) button):is(:active,:focus-visible){
                outline:none;
              }

:is(:is(:is(:is(:is(:is(.annotationEditorLayer .highlightEditor) .editToolbar) .buttons) .colorPicker) .dropdown) button)  > .swatch{
                outline-offset:2px;
              }

[aria-selected="true"]:is(:is(:is(:is(:is(:is(.annotationEditorLayer .highlightEditor) .editToolbar) .buttons) .colorPicker) .dropdown) button) > .swatch{
                outline:2px solid var(--selected-outline-color);
              }

:is(:is(:is(:is(:is(:is(.annotationEditorLayer .highlightEditor) .editToolbar) .buttons) .colorPicker) .dropdown) button):is(:hover,:active,:focus-visible) > .swatch{
                outline:2px solid var(--hover-outline-color);
              }

.editorParamsToolbar:has(#highlightParamsToolbarContainer){
  padding:unset;
}

#highlightParamsToolbarContainer{
  height:auto;
  padding-inline:10px;
  padding-block:10px 16px;
  gap:16px;
  display:flex;
  flex-direction:column;
  box-sizing:border-box;
}

#highlightParamsToolbarContainer .editorParamsLabel{
    width:-moz-fit-content;
    width:fit-content;
    inset-inline-start:0;
  }

#highlightParamsToolbarContainer .colorPicker{
    display:flex;
    flex-direction:column;
    gap:8px;
  }

:is(#highlightParamsToolbarContainer .colorPicker) .dropdown{
      display:flex;
      justify-content:space-between;
      align-items:center;
      flex-direction:row;
      height:auto;
    }

:is(:is(#highlightParamsToolbarContainer .colorPicker) .dropdown) button{
        width:auto;
        height:auto;
        border:none;
        cursor:pointer;
        display:flex;
        justify-content:center;
        align-items:center;
        background:none;
        flex:0 0 auto;
      }

:is(:is(:is(#highlightParamsToolbarContainer .colorPicker) .dropdown) button) .swatch{
          width:24px;
          height:24px;
        }

:is(:is(:is(#highlightParamsToolbarContainer .colorPicker) .dropdown) button):is(:active,:focus-visible){
          outline:none;
        }

[aria-selected="true"]:is(:is(:is(#highlightParamsToolbarContainer .colorPicker) .dropdown) button) > .swatch{
          outline:2px solid var(--selected-outline-color);
        }

:is(:is(:is(#highlightParamsToolbarContainer .colorPicker) .dropdown) button):is(:hover,:active,:focus-visible) > .swatch{
          outline:2px solid var(--hover-outline-color);
        }

#highlightParamsToolbarContainer #editorHighlightThickness{
    display:flex;
    flex-direction:column;
    align-items:center;
    gap:4px;
    align-self:stretch;
  }

:is(#highlightParamsToolbarContainer #editorHighlightThickness) .editorParamsLabel{
      width:100%;
      height:auto;
      align-self:stretch;
    }

:is(#highlightParamsToolbarContainer #editorHighlightThickness) .thicknessPicker{
      display:flex;
      justify-content:space-between;
      align-items:center;
      align-self:stretch;

      --example-color:#bfbfc9;
    }

@media (prefers-color-scheme: dark){

:where(html:not(.is-light)) :is(#highlightParamsToolbarContainer #editorHighlightThickness) .thicknessPicker{
        --example-color:#80808e;
    }
      }

:where(html.is-dark) :is(#highlightParamsToolbarContainer #editorHighlightThickness) .thicknessPicker{
        --example-color:#80808e;
    }

@media screen and (forced-colors: active){

:is(#highlightParamsToolbarContainer #editorHighlightThickness) .thicknessPicker{
        --example-color:CanvasText;
    }
      }

:is(:is(:is(#highlightParamsToolbarContainer #editorHighlightThickness) .thicknessPicker) > .editorParamsSlider[disabled]){
        opacity:0.4;
      }

:is(:is(#highlightParamsToolbarContainer #editorHighlightThickness) .thicknessPicker)::before,:is(:is(#highlightParamsToolbarContainer #editorHighlightThickness) .thicknessPicker)::after{
        content:"";
        width:8px;
        aspect-ratio:1;
        display:block;
        border-radius:100%;
        background-color:var(--example-color);
      }

:is(:is(#highlightParamsToolbarContainer #editorHighlightThickness) .thicknessPicker)::after{
        width:24px;
      }

:is(:is(#highlightParamsToolbarContainer #editorHighlightThickness) .thicknessPicker) .editorParamsSlider{
        width:unset;
        height:14px;
      }

#highlightParamsToolbarContainer #editorHighlightVisibility{
    display:flex;
    flex-direction:column;
    align-items:flex-start;
    gap:8px;
    align-self:stretch;
  }

:is(#highlightParamsToolbarContainer #editorHighlightVisibility) .divider{
      --divider-color:#d7d7db;
    }

@media (prefers-color-scheme: dark){

:where(html:not(.is-light)) :is(#highlightParamsToolbarContainer #editorHighlightVisibility) .divider{
        --divider-color:#8f8f9d;
    }
      }

:where(html.is-dark) :is(#highlightParamsToolbarContainer #editorHighlightVisibility) .divider{
        --divider-color:#8f8f9d;
    }

@media screen and (forced-colors: active){

:is(#highlightParamsToolbarContainer #editorHighlightVisibility) .divider{
        --divider-color:CanvasText;
    }
      }

:is(#highlightParamsToolbarContainer #editorHighlightVisibility) .divider{

      margin-block:4px;
      width:100%;
      height:1px;
      background-color:var(--divider-color);
    }

:is(#highlightParamsToolbarContainer #editorHighlightVisibility) .toggler{
      display:flex;
      justify-content:space-between;
      align-items:center;
      align-self:stretch;
    }

#altTextSettingsDialog{
  padding:16px;
}

#altTextSettingsDialog #altTextSettingsContainer{
    display:flex;
    width:573px;
    flex-direction:column;
    gap:16px;
  }

:is(#altTextSettingsDialog #altTextSettingsContainer) .mainContainer{
      gap:16px;
    }

:is(#altTextSettingsDialog #altTextSettingsContainer) .description{
      color:var(--text-secondary-color);
    }

:is(#altTextSettingsDialog #altTextSettingsContainer) #aiModelSettings{
      display:flex;
      flex-direction:column;
      gap:12px;
    }

:is(:is(#altTextSettingsDialog #altTextSettingsContainer) #aiModelSettings) button{
        width:-moz-fit-content;
        width:fit-content;
      }

.download:is(:is(#altTextSettingsDialog #altTextSettingsContainer) #aiModelSettings) #deleteModelButton{
          display:none;
        }

:is(:is(#altTextSettingsDialog #altTextSettingsContainer) #aiModelSettings):not(.download) #downloadModelButton{
          display:none;
        }

:is(#altTextSettingsDialog #altTextSettingsContainer) #automaticAltText,:is(#altTextSettingsDialog #altTextSettingsContainer) #altTextEditor{
      display:flex;
      flex-direction:column;
      gap:8px;
    }

:is(#altTextSettingsDialog #altTextSettingsContainer) #createModelDescription,:is(#altTextSettingsDialog #altTextSettingsContainer) #aiModelSettings,:is(#altTextSettingsDialog #altTextSettingsContainer) #showAltTextDialogDescription{
      padding-inline-start:40px;
    }

:is(#altTextSettingsDialog #altTextSettingsContainer) #automaticSettings{
      display:flex;
      flex-direction:column;
      gap:16px;
    }

:root{
  --viewer-container-height:0;
  --pdfViewer-padding-bottom:0;
  --page-margin:1px auto -8px;
  --page-border:9px solid transparent;
  --spreadHorizontalWrapped-margin-LR:-3.5px;
  --loading-icon-delay:400ms;
}

@media screen and (forced-colors: active){
  :root{
    --pdfViewer-padding-bottom:9px;
    --page-margin:8px auto -1px;
    --page-border:1px solid CanvasText;
    --spreadHorizontalWrapped-margin-LR:3.5px;
  }
}

[data-main-rotation="90"]{
  transform:rotate(90deg) translateY(-100%);
}
[data-main-rotation="180"]{
  transform:rotate(180deg) translate(-100%, -100%);
}
[data-main-rotation="270"]{
  transform:rotate(270deg) translateX(-100%);
}

#hiddenCopyElement,
.hiddenCanvasElement{
  position:absolute;
  top:0;
  left:0;
  width:0;
  height:0;
  display:none;
}

.pdfViewer{
  --scale-factor:1;

  padding-bottom:var(--pdfViewer-padding-bottom);

  --hcm-highlight-filter:none;
  --hcm-highlight-selected-filter:none;
}

@media screen and (forced-colors: active){

.pdfViewer{
    --hcm-highlight-filter:invert(100%);
}
  }

.pdfViewer.copyAll{
    cursor:wait;
  }

.pdfViewer .canvasWrapper{
    overflow:hidden;
    width:100%;
    height:100%;
  }

:is(.pdfViewer .canvasWrapper) canvas{
      margin:0;
      display:block;
    }

[hidden]:is(:is(.pdfViewer .canvasWrapper) canvas){
        display:none;
      }

[zooming]:is(:is(.pdfViewer .canvasWrapper) canvas){
        width:100%;
        height:100%;
      }

:is(:is(.pdfViewer .canvasWrapper) canvas) .structTree{
        contain:strict;
      }

.pdfViewer .page{
  direction:ltr;
  width:816px;
  height:1056px;
  margin:var(--page-margin);
  position:relative;
  overflow:visible;
  border:var(--page-border);
  background-clip:content-box;
  background-color:rgb(255 255 255);
}

.pdfViewer .dummyPage{
  position:relative;
  width:0;
  height:var(--viewer-container-height);
}

.pdfViewer.noUserSelect{
  -webkit-user-select:none;
     -moz-user-select:none;
          user-select:none;
}

.pdfViewer.removePageBorders .page{
  margin:0 auto 10px;
  border:none;
}

.pdfViewer:is(.scrollHorizontal, .scrollWrapped),
.spread{
  margin-inline:3.5px;
  text-align:center;
}

.pdfViewer.scrollHorizontal,
.spread{
  white-space:nowrap;
}

.pdfViewer.removePageBorders,
.pdfViewer:is(.scrollHorizontal, .scrollWrapped) .spread{
  margin-inline:0;
}

.spread :is(.page, .dummyPage),
.pdfViewer:is(.scrollHorizontal, .scrollWrapped) :is(.page, .spread){
  display:inline-block;
  vertical-align:middle;
}

.spread .page,
.pdfViewer:is(.scrollHorizontal, .scrollWrapped) .page{
  margin-inline:var(--spreadHorizontalWrapped-margin-LR);
}

.pdfViewer.removePageBorders .spread .page,
.pdfViewer.removePageBorders:is(.scrollHorizontal, .scrollWrapped) .page{
  margin-inline:5px;
}

.pdfViewer .page.loadingIcon::after{
  position:absolute;
  top:0;
  left:0;
  content:"";
  width:100%;
  height:100%;
  background:url("public/images/loading-icon.gif") center no-repeat;
  display:none;
  transition-property:display;
  transition-delay:var(--loading-icon-delay);
  z-index:5;
  contain:strict;
}

.pdfViewer .page.loading::after{
  display:block;
}

.pdfViewer .page:not(.loading)::after{
  transition-property:none;
  display:none;
}

.pdfPresentationMode .pdfViewer{
  padding-bottom:0;
}

.pdfPresentationMode .spread{
  margin:0;
}

.pdfPresentationMode .pdfViewer .page{
  margin:0 auto;
  border:2px solid transparent;
}

:root{
  --dir-factor:1;
  --inline-start:left;
  --inline-end:right;

  --sidebar-width:200px;
  --sidebar-transition-duration:200ms;
  --sidebar-transition-timing-function:ease;

  --toolbar-icon-opacity:1;
  --doorhanger-icon-opacity:0.9;
  --editor-toolbar-base-offset:105px;

  --main-color:rgb(12 12 13);
  --body-bg-color:rgb(234 246 244);
  --progressBar-color:rgb(10 132 255);
  --progressBar-bg-color:rgb(221 221 222);
  --progressBar-blend-color:rgb(116 177 239);
  --scrollbar-color:auto;
  --scrollbar-bg-color:auto;
  --toolbar-icon-bg-color:rgb(0 0 0);
  --toolbar-icon-hover-bg-color:rgb(0 0 0);

  --sidebar-narrow-bg-color:rgb(212 212 215 / 0.9);
  --sidebar-toolbar-bg-color:rgb(245 246 247);
  --toolbar-bg-color:rgb(255 255 255);
  --toolbar-border-color:rgb(184 184 184);
  --toolbar-box-shadow:0 1px 0 var(--toolbar-border-color);
  --toolbar-border-bottom:none;
  --toolbar-height:50px;
  --toolbarSidebar-box-shadow:inset calc(-1px * var(--dir-factor)) 0 0 rgb(0 0 0 / 0.25), 0 1px 0 rgb(0 0 0 / 0.15), 0 0 1px rgb(0 0 0 / 0.1);
  --toolbarSidebar-border-bottom:none;
  --button-color:rgb(34 55 72);
  --button-hover-color:rgb(9 174 152);
  --button-hover-text-color:rgb(255 255 255);
  --button-group-color:rgb(34 55 72);
  --toggled-btn-color:rgb(0 0 0);
  --toggled-btn-bg-color:rgb(0 0 0 / 0.3);
  --toggled-hover-active-btn-color:rgb(0 0 0 / 0.4);
  --toggled-hover-btn-outline:none;
  --dropdown-btn-bg-color:rgb(215 215 219);
  --dropdown-btn-border:none;
  --separator-color:rgb(0 0 0 / 0.3);
  --field-color:rgb(6 6 6);
  --field-bg-color:rgb(255 255 255);
  --field-border-color:rgb(187 187 188);
  --treeitem-color:rgb(0 0 0 / 0.8);
  --treeitem-bg-color:rgb(0 0 0 / 0.15);
  --treeitem-hover-color:rgb(0 0 0 / 0.9);
  --treeitem-selected-color:rgb(0 0 0 / 0.9);
  --treeitem-selected-bg-color:rgb(0 0 0 / 0.25);
  --thumbnail-hover-color:rgb(9 174 152);
  --thumbnail-selected-color:rgb(34 55 72);
  --thumbnail-text-color:rgb(255 255 255);
  --doorhanger-bg-color:rgb(255 255 255);
  --doorhanger-border-color:rgb(12 12 13 / 0.2);
  --doorhanger-hover-color:rgb(12 12 13);
  --doorhanger-hover-bg-color:rgb(237 237 237);
  --doorhanger-separator-color:rgb(222 222 222);
  --dialog-button-border:none;
  --dialog-button-bg-color:rgb(12 12 13 / 0.1);
  --dialog-button-hover-bg-color:rgb(12 12 13 / 0.3);

  --loading-icon:url(public/images/loading.svg);
  --treeitem-expanded-icon:url(public/images/treeitem-expanded.svg);
  --treeitem-collapsed-icon:url(public/images/treeitem-collapsed.svg);
  --toolbarButton-editorFreeText-icon:url(public/images/toolbarButton-editorFreeText.svg);
  --toolbarButton-editorHighlight-icon:url(public/images/toolbarButton-editorHighlight.svg);
  --toolbarButton-editorInk-icon:url(public/images/toolbarButton-editorInk.svg);
  --toolbarButton-editorStamp-icon:url(public/images/toolbarButton-editorStamp.svg);
  --toolbarButton-menuArrow-icon:url(public/images/toolbarButton-menuArrow.svg);
  --toolbarButton-sidebarToggle-icon:url(public/images/toolbarButton-sidebarToggle.svg);
  --toolbarButton-secondaryToolbarToggle-icon:url(public/images/toolbarButton-secondaryToolbarToggle.svg);
  --toolbarButton-pageUp-icon:url(public/images/toolbarButton-pageUp.svg);
  --toolbarButton-pageDown-icon:url(public/images/toolbarButton-pageDown.svg);
  --toolbarButton-zoomOut-icon:url(public/images/toolbarButton-zoomOut.svg);
  --toolbarButton-zoomIn-icon:url(public/images/toolbarButton-zoomIn.svg);
  --toolbarButton-presentationMode-icon:url(public/images/toolbarButton-presentationMode.svg);
  --toolbarButton-print-icon:url(public/images/toolbarButton-print.svg);
  --toolbarButton-openFile-icon:url(public/images/toolbarButton-openFile.svg);
  --toolbarButton-download-icon:url(public/images/toolbarButton-download.svg);
  --toolbarButton-bookmark-icon:url(public/images/toolbarButton-bookmark.svg);
  --toolbarButton-viewThumbnail-icon:url(public/images/toolbarButton-viewThumbnail.svg);
  --toolbarButton-viewOutline-icon:url(public/images/toolbarButton-viewOutline.svg);
  --toolbarButton-viewAttachments-icon:url(public/images/toolbarButton-viewAttachments.svg);
  --toolbarButton-viewLayers-icon:url(public/images/toolbarButton-viewLayers.svg);
  --toolbarButton-currentOutlineItem-icon:url(public/images/toolbarButton-currentOutlineItem.svg);
  --toolbarButton-search-icon:url(public/images/toolbarButton-search.svg);
  --findbarButton-previous-icon:url(public/images/findbarButton-previous.svg);
  --findbarButton-next-icon:url(public/images/findbarButton-next.svg);
  --secondaryToolbarButton-firstPage-icon:url(public/images/secondaryToolbarButton-firstPage.svg);
  --secondaryToolbarButton-lastPage-icon:url(public/images/secondaryToolbarButton-lastPage.svg);
  --secondaryToolbarButton-rotateCcw-icon:url(public/images/secondaryToolbarButton-rotateCcw.svg);
  --secondaryToolbarButton-rotateCw-icon:url(public/images/secondaryToolbarButton-rotateCw.svg);
  --secondaryToolbarButton-selectTool-icon:url(public/images/secondaryToolbarButton-selectTool.svg);
  --secondaryToolbarButton-handTool-icon:url(public/images/secondaryToolbarButton-handTool.svg);
  --secondaryToolbarButton-scrollPage-icon:url(public/images/secondaryToolbarButton-scrollPage.svg);
  --secondaryToolbarButton-scrollVertical-icon:url(public/images/secondaryToolbarButton-scrollVertical.svg);
  --secondaryToolbarButton-scrollHorizontal-icon:url(public/images/secondaryToolbarButton-scrollHorizontal.svg);
  --secondaryToolbarButton-scrollWrapped-icon:url(public/images/secondaryToolbarButton-scrollWrapped.svg);
  --secondaryToolbarButton-spreadNone-icon:url(public/images/secondaryToolbarButton-spreadNone.svg);
  --secondaryToolbarButton-spreadOdd-icon:url(public/images/secondaryToolbarButton-spreadOdd.svg);
  --secondaryToolbarButton-spreadEven-icon:url(public/images/secondaryToolbarButton-spreadEven.svg);
  --secondaryToolbarButton-imageAltTextSettings-icon:var(
    --toolbarButton-editorStamp-icon
  );
  --secondaryToolbarButton-documentProperties-icon:url(public/images/secondaryToolbarButton-documentProperties.svg);
  --editorParams-stampAddImage-icon:url(public/images/toolbarButton-zoomIn.svg);
}

[dir="rtl"]:root{
  --dir-factor:-1;
  --inline-start:right;
  --inline-end:left;
}

@media (prefers-color-scheme: dark){
  :root:where(:not(.is-light)){
    --main-color:rgb(249 249 250);
    --body-bg-color:rgb(42 42 46);
    --progressBar-color:rgb(0 96 223);
    --progressBar-bg-color:rgb(40 40 43);
    --progressBar-blend-color:rgb(20 68 133);
    --scrollbar-color:rgb(121 121 123);
    --scrollbar-bg-color:rgb(35 35 39);
    --toolbar-icon-bg-color:rgb(255 255 255);
    --toolbar-icon-hover-bg-color:rgb(255 255 255);

    --sidebar-narrow-bg-color:rgb(42 42 46 / 0.9);
    --sidebar-toolbar-bg-color:rgb(50 50 52);
    --toolbar-bg-color:rgb(56 56 61);
    --toolbar-border-color:rgb(12 12 13);
    --button-hover-color:rgb(102 102 103);
    --toggled-btn-color:rgb(255 255 255);
    --toggled-btn-bg-color:rgb(0 0 0 / 0.3);
    --toggled-hover-active-btn-color:rgb(0 0 0 / 0.4);
    --dropdown-btn-bg-color:rgb(74 74 79);
    --separator-color:rgb(0 0 0 / 0.3);
    --field-color:rgb(250 250 250);
    --field-bg-color:rgb(64 64 68);
    --field-border-color:rgb(115 115 115);
    --treeitem-color:rgb(255 255 255 / 0.8);
    --treeitem-bg-color:rgb(255 255 255 / 0.15);
    --treeitem-hover-color:rgb(255 255 255 / 0.9);
    --treeitem-selected-color:rgb(255 255 255 / 0.9);
    --treeitem-selected-bg-color:rgb(255 255 255 / 0.25);
    --thumbnail-hover-color:rgb(255 255 255 / 0.1);
    --thumbnail-selected-color:rgb(255 255 255 / 0.2);
    --doorhanger-bg-color:rgb(74 74 79);
    --doorhanger-border-color:rgb(39 39 43);
    --doorhanger-hover-color:rgb(249 249 250);
    --doorhanger-hover-bg-color:rgb(93 94 98);
    --doorhanger-separator-color:rgb(92 92 97);
    --dialog-button-bg-color:rgb(92 92 97);
    --dialog-button-hover-bg-color:rgb(115 115 115);
  }
}

:root:where(.is-dark){
    --main-color:rgb(249 249 250);
    --body-bg-color:rgb(42 42 46);
    --progressBar-color:rgb(0 96 223);
    --progressBar-bg-color:rgb(40 40 43);
    --progressBar-blend-color:rgb(20 68 133);
    --scrollbar-color:rgb(121 121 123);
    --scrollbar-bg-color:rgb(35 35 39);
    --toolbar-icon-bg-color:rgb(255 255 255);
    --toolbar-icon-hover-bg-color:rgb(255 255 255);

    --sidebar-narrow-bg-color:rgb(42 42 46 / 0.9);
    --sidebar-toolbar-bg-color:rgb(50 50 52);
    --toolbar-bg-color:rgb(56 56 61);
    --toolbar-border-color:rgb(12 12 13);
    --button-hover-color:rgb(102 102 103);
    --toggled-btn-color:rgb(255 255 255);
    --toggled-btn-bg-color:rgb(0 0 0 / 0.3);
    --toggled-hover-active-btn-color:rgb(0 0 0 / 0.4);
    --dropdown-btn-bg-color:rgb(74 74 79);
    --separator-color:rgb(0 0 0 / 0.3);
    --field-color:rgb(250 250 250);
    --field-bg-color:rgb(64 64 68);
    --field-border-color:rgb(115 115 115);
    --treeitem-color:rgb(255 255 255 / 0.8);
    --treeitem-bg-color:rgb(255 255 255 / 0.15);
    --treeitem-hover-color:rgb(255 255 255 / 0.9);
    --treeitem-selected-color:rgb(255 255 255 / 0.9);
    --treeitem-selected-bg-color:rgb(255 255 255 / 0.25);
    --thumbnail-hover-color:rgb(255 255 255 / 0.1);
    --thumbnail-selected-color:rgb(255 255 255 / 0.2);
    --doorhanger-bg-color:rgb(74 74 79);
    --doorhanger-border-color:rgb(39 39 43);
    --doorhanger-hover-color:rgb(249 249 250);
    --doorhanger-hover-bg-color:rgb(93 94 98);
    --doorhanger-separator-color:rgb(92 92 97);
    --dialog-button-bg-color:rgb(92 92 97);
    --dialog-button-hover-bg-color:rgb(115 115 115);
  }

@media screen and (forced-colors: active){
  :root{
    --button-hover-color:Highlight;
    --doorhanger-hover-bg-color:Highlight;
    --toolbar-icon-opacity:1;
    --toolbar-icon-bg-color:ButtonText;
    --toolbar-icon-hover-bg-color:ButtonFace;
    --toggled-hover-active-btn-color:ButtonText;
    --toggled-hover-btn-outline:2px solid ButtonBorder;
    --toolbar-border-color:CanvasText;
    --toolbar-border-bottom:1px solid var(--toolbar-border-color);
    --toolbar-box-shadow:none;
    --toggled-btn-color:HighlightText;
    --toggled-btn-bg-color:LinkText;
    --doorhanger-hover-color:ButtonFace;
    --doorhanger-border-color-whcm:1px solid ButtonText;
    --doorhanger-triangle-opacity-whcm:0;
    --dialog-button-border:1px solid Highlight;
    --dialog-button-hover-bg-color:Highlight;
    --dialog-button-hover-color:ButtonFace;
    --dropdown-btn-border:1px solid ButtonText;
    --field-border-color:ButtonText;
    --main-color:CanvasText;
    --separator-color:GrayText;
    --doorhanger-separator-color:GrayText;
    --toolbarSidebar-box-shadow:none;
    --toolbarSidebar-border-bottom:1px solid var(--toolbar-border-color);
  }
}

@media screen and (prefers-reduced-motion: reduce){
  :root{
    --sidebar-transition-duration:0;
  }
}

*{
  padding:0;
  margin:0;
}

html,
body{
  height:100%;
  width:100%;
}

body{
  background-color:var(--body-bg-color);
  scrollbar-color:var(--scrollbar-color) var(--scrollbar-bg-color);
}

body.wait::before{
    content:"";
    position:fixed;
    width:100%;
    height:100%;
    z-index:100000;
    cursor:wait;
  }

.hidden,
[hidden]{
  display:none !important;
}

#viewerContainer.pdfPresentationMode:fullscreen{
  top:0;
  background-color:rgb(0 0 0);
  width:100%;
  height:100%;
  overflow:hidden;
  cursor:none;
  -webkit-user-select:none;
     -moz-user-select:none;
          user-select:none;
}

.pdfPresentationMode:fullscreen section:not([data-internal-link]){
  pointer-events:none;
}

.pdfPresentationMode:fullscreen .textLayer span{
  cursor:none;
}

.pdfPresentationMode.pdfPresentationModeControls > *,
.pdfPresentationMode.pdfPresentationModeControls .textLayer span{
  cursor:default;
}

#outerContainer{
  width:100%;
  height:100%;
  position:relative;
}

#sidebarContainer{
  position:absolute;
  inset-block:var(--toolbar-height) 0;
  inset-inline-start:calc(-1 * var(--sidebar-width));
  width:var(--sidebar-width);
  visibility:hidden;
  z-index:100;
  font:message-box;
  border-top:1px solid rgb(51 51 51);
  border-inline-end:var(--doorhanger-border-color-whcm);
  transition-property:inset-inline-start;
  transition-duration:var(--sidebar-transition-duration);
  transition-timing-function:var(--sidebar-transition-timing-function);
}

#outerContainer:is(.sidebarMoving, .sidebarOpen) #sidebarContainer{
  visibility:visible;
}
#outerContainer.sidebarOpen #sidebarContainer{
  inset-inline-start:0;
}

#mainContainer{
  position:absolute;
  inset:0;
  min-width:350px;
}

#sidebarContent{
  inset-block:0;
  inset-inline-start:0;
  overflow:auto;
  position:absolute;
  width:100%;
  box-shadow:inset calc(-1px * var(--dir-factor)) 0 0 rgb(0 0 0 / 0.25);
}

#viewerContainer{
  overflow:auto;
  position:absolute;
  inset:var(--toolbar-height) 0 0;
  outline:none;
}
#viewerContainer:not(.pdfPresentationMode){
  transition-duration:var(--sidebar-transition-duration);
  transition-timing-function:var(--sidebar-transition-timing-function);
}

#outerContainer.sidebarOpen #viewerContainer:not(.pdfPresentationMode){
  inset-inline-start:var(--sidebar-width);
  transition-property:inset-inline-start;
}

.toolbar{
  position:relative;
  inset-inline:0;
  z-index:9999;
  cursor:default;
  font:message-box;
}

:is(.toolbar, .editorParamsToolbar, #sidebarContainer)
  :is(input, button, select){
  outline:none;
  font:message-box;
}

#toolbarContainer{
  width:100%;
}

#toolbarSidebar{
  visibility:hidden;
  width:100%;
  height:var(--toolbar-height);
  background-color:var(--sidebar-toolbar-bg-color);
  box-shadow:var(--toolbarSidebar-box-shadow);
  border-bottom:var(--toolbarSidebar-border-bottom);
}

#sidebarResizer{
  position:absolute;
  inset-block:0;
  inset-inline-end:-6px;
  width:6px;
  z-index:200;
  cursor:ew-resize;
}

#toolbarContainer,
.editorParamsToolbar{
  position:relative;
  height:var(--toolbar-height);
  background-color:var(--toolbar-bg-color);
  box-shadow:var(--toolbar-box-shadow);
  border-bottom:var(--toolbar-border-bottom);
}

#toolbarViewer{
  display:flex;
  justify-content:space-between;
  align-items:center;
  height:var(--toolbar-height);
}

#loadingBar{
  --progressBar-percent:0%;
  --progressBar-end-offset:0;

  position:absolute;
  inset-inline:0 var(--progressBar-end-offset);
  height:4px;
  background-color:var(--progressBar-bg-color);
  border-bottom:1px solid var(--toolbar-border-color);
  transition-property:inset-inline-start;
  transition-duration:var(--sidebar-transition-duration);
  transition-timing-function:var(--sidebar-transition-timing-function);
}

#outerContainer.sidebarOpen #loadingBar{
  inset-inline-start:var(--sidebar-width);
}

#loadingBar .progress{
  position:absolute;
  top:0;
  inset-inline-start:0;
  width:100%;
  transform:scaleX(var(--progressBar-percent));
  transform-origin:calc(50% - 50% * var(--dir-factor)) 0;
  height:100%;
  background-color:var(--progressBar-color);
  overflow:hidden;
  transition:transform 200ms;
}

@keyframes progressIndeterminate{
  0%{
    transform:translateX(calc(-142px * var(--dir-factor)));
  }
  100%{
    transform:translateX(0);
  }
}

#loadingBar.indeterminate .progress{
  transform:none;
  background-color:var(--progressBar-bg-color);
  transition:none;
}

#loadingBar.indeterminate .progress .glimmer{
  position:absolute;
  top:0;
  inset-inline-start:0;
  height:100%;
  width:calc(100% + 150px);
  background:repeating-linear-gradient(
    135deg,
    var(--progressBar-blend-color) 0,
    var(--progressBar-bg-color) 5px,
    var(--progressBar-bg-color) 45px,
    var(--progressBar-color) 55px,
    var(--progressBar-color) 95px,
    var(--progressBar-blend-color) 100px
  );
  animation:progressIndeterminate 1s linear infinite;
}

#outerContainer.sidebarResizing
  :is(#sidebarContainer, #viewerContainer, #loadingBar){
  transition-duration:0s;
}

.editorParamsToolbar{
  background-color:var(--doorhanger-bg-color);
  top:var(--toolbar-height);
  position:absolute;
  z-index:30000;
  height:auto;
  inset-inline-end:4px;
  padding:6px 0 10px;
  margin:4px 2px;
  font:message-box;
  font-size:12px;
  line-height:14px;
  text-align:left;
  cursor:default;
}

.editorParamsToolbarContainer{
  width:220px;
  margin-bottom:-4px;
}

.editorParamsToolbarContainer > .editorParamsSetter{
  min-height:26px;
  display:flex;
  align-items:center;
  justify-content:space-between;
  padding-inline:10px;
}

.editorParamsToolbarContainer .editorParamsLabel{
  padding-inline-end:10px;
  flex:none;
  font:menu;
  font-size:13px;
  font-style:normal;
  font-weight:400;
  line-height:150%;
  color:var(--main-color);
}

.editorParamsToolbarContainer .editorParamsColor{
  width:32px;
  height:32px;
  flex:none;
}

.editorParamsToolbarContainer .editorParamsSlider{
  background-color:transparent;
  width:90px;
  flex:0 1 0;
}

.editorParamsToolbarContainer .editorParamsSlider::-moz-range-progress{
  background-color:black;
}

.editorParamsToolbarContainer .editorParamsSlider::-webkit-slider-runnable-track,
.editorParamsToolbarContainer .editorParamsSlider::-moz-range-track{
  background-color:black;
}

.editorParamsToolbarContainer .editorParamsSlider::-webkit-slider-thumb,
.editorParamsToolbarContainer .editorParamsSlider::-moz-range-thumb{
  background-color:white;
}

#editorStampParamsToolbar{
  inset-inline-end:calc(var(--editor-toolbar-base-offset) + 0px);
}

#editorInkParamsToolbar{
  inset-inline-end:calc(var(--editor-toolbar-base-offset) + 28px);
}

#editorFreeTextParamsToolbar{
  inset-inline-end:calc(var(--editor-toolbar-base-offset) + 56px);
}

#editorHighlightParamsToolbar{
  inset-inline-end:calc(var(--editor-toolbar-base-offset) + 84px);
}

#editorStampAddImage::before{
  -webkit-mask-image:var(--editorParams-stampAddImage-icon);
          mask-image:var(--editorParams-stampAddImage-icon);
}

.doorHanger,
.doorHangerRight{
  border-radius:2px;
  box-shadow:0 1px 5px var(--doorhanger-border-color), 0 0 0 1px var(--doorhanger-border-color);
  border:var(--doorhanger-border-color-whcm);
}
:is(.doorHanger, .doorHangerRight)::after,
:is(.doorHanger, .doorHangerRight)::before{
  bottom:100%;
  border:8px solid rgb(0 0 0 / 0);
  content:" ";
  height:0;
  width:0;
  position:absolute;
  pointer-events:none;
  opacity:var(--doorhanger-triangle-opacity-whcm);
}
.doorHanger::after{
  inset-inline-start:10px;
  margin-inline-start:-8px;
  border-bottom-color:var(--toolbar-bg-color);
}
.doorHangerRight::after{
  inset-inline-end:10px;
  margin-inline-end:-8px;
  border-bottom-color:var(--doorhanger-bg-color);
}
:is(.doorHanger, .doorHangerRight)::before{
  border-bottom-color:var(--doorhanger-border-color);
  border-width:9px;
}
.doorHanger::before{
  inset-inline-start:10px;
  margin-inline-start:-9px;
}
.doorHangerRight::before{
  inset-inline-end:10px;
  margin-inline-end:-9px;
}

#toolbarViewerLeft,
#toolbarSidebarLeft{
  float:var(--inline-start);
}
#toolbarViewerRight,
#toolbarSidebarRight{
  float:var(--inline-end);
}

#toolbarViewerLeft > *,
#toolbarViewerMiddle > *,
#toolbarViewerRight > *,
#toolbarSidebarLeft *,
#toolbarSidebarRight *{
  position:relative;
  float:var(--inline-start);
}

#toolbarViewerLeft{
  padding-inline-start:10px;
}
#toolbarViewerRight{
  padding-inline-end:10px;
}
#toolbarSidebarRight{
  padding-inline-end:2px;
}

.splitToolbarButton{
  margin:2px;
  display:flex;
  align-items:center;
}
.splitToolbarButton > .toolbarButton{
  float:var(--inline-start);
}

.toolbarButtonGroup{
  display:flex;
  align-items:center;
}

.toolbarButton,
.dialogButton{
  border:none;
  background:none;
  width:28px;
  height:28px;
  outline:none;
}

.dialogButton:is(:hover, :focus-visible){
  background-color:var(--dialog-button-hover-bg-color);
}

.dialogButton:is(:hover, :focus-visible) > span{
  color:var(--dialog-button-hover-color);
}

.toolbarButton > span{
  display:inline-block;
  width:0;
  height:0;
  overflow:hidden;
}

:is(.toolbarButton, .dialogButton)[disabled]{
  opacity:0.5;
}

.splitToolbarButton > .toolbarButton:is(:hover, :focus-visible),
.dropdownToolbarButton:hover{
  background-color:var(--button-hover-color);
  color:var(--button-hover-text-color);
}
.splitToolbarButton > .toolbarButton{
  position:relative;
  margin:0;
}
#toolbarSidebar .splitToolbarButton > .toolbarButton{
  margin-inline-end:2px;
}

.splitToolbarButtonSeparator{
  float:var(--inline-start);
  margin:4px 0;
  width:1px;
  height:20px;
  background-color:var(--separator-color);
}

.toolbarButton,
.dropdownToolbarButton,
.dialogButton{
  min-width:16px;
  margin:2px 1px;
  padding:2px 6px 0;
  border:none;
  border-radius:2px;
  color:var(--main-color);
  font-size:12px;
  line-height:14px;
  -webkit-user-select:none;
     -moz-user-select:none;
          user-select:none;
  cursor:default;
  box-sizing:border-box;
}

.toolbarButton:is(:hover, :focus-visible){
  background-color:var(--button-hover-color);
  color:var(--button-hover-text-color);
}

.toolbarButton.toggled,
.splitToolbarButton.toggled > .toolbarButton.toggled{
  background-color:var(--toggled-btn-bg-color);
  color:var(--toggled-btn-color);
}

.toolbarButton.toggled:hover,
.splitToolbarButton.toggled > .toolbarButton.toggled:hover{
  outline:var(--toggled-hover-btn-outline) !important;
}

.toolbarButton.toggled::before{
  background-color:var(--toggled-btn-color);
}

.toolbarButton.toggled:hover:active,
.splitToolbarButton.toggled > .toolbarButton.toggled:hover:active{
  background-color:var(--toggled-hover-active-btn-color);
}

.dropdownToolbarButton{
  display:flex;
  width:-moz-fit-content;
  width:fit-content;
  min-width:140px;
  padding:0;
  background-color:var(--dropdown-btn-bg-color);
  border:var(--dropdown-btn-border);
}
.dropdownToolbarButton::after{
  top:6px;
  inset-inline-end:6px;
  pointer-events:none;
  -webkit-mask-image:var(--toolbarButton-menuArrow-icon);
          mask-image:var(--toolbarButton-menuArrow-icon);
}

.dropdownToolbarButton > select{
  -webkit-appearance:none;
     -moz-appearance:none;
          appearance:none;
  width:inherit;
  min-width:inherit;
  height:28px;
  font-size:12px;
  color:var(--main-color);
  margin:0;
  padding-block:1px 2px;
  padding-inline:6px 38px;
  border:none;
  background-color:var(--dropdown-btn-bg-color);
}
.dropdownToolbarButton > select:is(:hover, :focus-visible){
  background-color:var(--button-hover-color);
  color:var(--toggled-btn-color);
}
.dropdownToolbarButton > select > option{
  background:var(--doorhanger-bg-color);
  color:var(--main-color);
}

.toolbarButtonSpacer{
  width:30px;
  display:inline-block;
  height:1px;
}

:is(.toolbarButton, .treeItemToggler)::before,
.dropdownToolbarButton::after{
  position:absolute;
  display:inline-block;
  width:16px;
  height:16px;

  content:"";
  background-color:var(--toolbar-icon-bg-color);
  -webkit-mask-size:cover;
          mask-size:cover;
}

.dropdownToolbarButton:is(:hover, :focus-visible, :active)::after{
  background-color:var(--toolbar-icon-hover-bg-color);
}

.toolbarButton::before{
  opacity:var(--toolbar-icon-opacity);
  top:6px;
  left:6px;
}

.toolbarButton:is(:hover, :focus-visible)::before{
  background-color:var(--toolbar-icon-hover-bg-color);
}

#sidebarToggle::before{
  transform:scaleX(var(--dir-factor));
}

#secondaryToolbarToggle::before{
  -webkit-mask-image:var(--toolbarButton-secondaryToolbarToggle-icon);
          mask-image:var(--toolbarButton-secondaryToolbarToggle-icon);
  transform:scaleX(var(--dir-factor));
}

#editorFreeText::before{
  -webkit-mask-image:var(--toolbarButton-editorFreeText-icon);
          mask-image:var(--toolbarButton-editorFreeText-icon);
}

#editorHighlight::before{
  -webkit-mask-image:var(--toolbarButton-editorHighlight-icon);
          mask-image:var(--toolbarButton-editorHighlight-icon);
}

#editorInk::before{
  -webkit-mask-image:var(--toolbarButton-editorInk-icon);
          mask-image:var(--toolbarButton-editorInk-icon);
}

#editorStamp::before{
  -webkit-mask-image:var(--toolbarButton-editorStamp-icon);
          mask-image:var(--toolbarButton-editorStamp-icon);
}

#viewThumbnail::before{
  -webkit-mask-image:var(--toolbarButton-viewThumbnail-icon);
          mask-image:var(--toolbarButton-viewThumbnail-icon);
}

#viewOutline::before{
  -webkit-mask-image:var(--toolbarButton-viewOutline-icon);
          mask-image:var(--toolbarButton-viewOutline-icon);
  transform:scaleX(var(--dir-factor));
}

#viewAttachments::before{
  -webkit-mask-image:var(--toolbarButton-viewAttachments-icon);
          mask-image:var(--toolbarButton-viewAttachments-icon);
}

#viewLayers::before{
  -webkit-mask-image:var(--toolbarButton-viewLayers-icon);
          mask-image:var(--toolbarButton-viewLayers-icon);
}

#currentOutlineItem::before{
  -webkit-mask-image:var(--toolbarButton-currentOutlineItem-icon);
          mask-image:var(--toolbarButton-currentOutlineItem-icon);
  transform:scaleX(var(--dir-factor));
}

#viewFind::before{
  -webkit-mask-image:var(--toolbarButton-search-icon);
          mask-image:var(--toolbarButton-search-icon);
}

.icon{
  position:relative;
  display:inline-block;
  text-rendering:auto;
  -webkit-font-smoothing:antialiased;
  font:var(--fa-font-solid) !important;
}

.icon::before{
  background-color:transparent !important;
  font-size:20px;
}

.icon-sidebar::before{
  content:"\\f0c9";
}

.icon-left::before{
  content:"\\f053";
}

.icon-right::before{
  content:"\\f054";
}

.icon-zoom-out::before{
  content:"\\f010";
}

.icon-zoom-in::before{
  content:"\\f00e";
}

.icon-print::before{
  content:"\\f02f";
}

.icon-download::before{
  content:"\\f019";
}

.icon-upload::before{
  content:"\\f093";
}

.pdfSidebarNotification::after{
  position:absolute;
  display:inline-block;
  top:2px;
  inset-inline-end:2px;
  content:"";
  background-color:rgb(112 219 85);
  height:9px;
  width:9px;
  border-radius:50%;
}

.verticalToolbarSeparator{
  display:block;
  margin:5px 2px;
  width:1px;
  height:22px;
  background-color:var(--separator-color);
}
.horizontalToolbarSeparator{
  display:block;
  margin:6px 0;
  height:1px;
  width:100%;
  background-color:var(--doorhanger-separator-color);
}

.toolbarField{
  padding:4px 7px;
  margin:3px 0;
  border-radius:2px;
  background-color:var(--field-bg-color);
  background-clip:padding-box;
  border:1px solid var(--field-border-color);
  box-shadow:none;
  color:var(--field-color);
  font-size:12px;
  line-height:16px;
  outline:none;
}

.toolbarField[type="checkbox"]{
  opacity:0;
  position:absolute !important;
  left:0;
  margin:10px 0 3px;
  margin-inline-start:7px;
}

#pageNumber{
  border:1px solid var(--button-group-color);
  padding:0;
  margin:0;
  -moz-appearance:textfield;
  text-align:center;
  width:40px;
  background-size:0 0;
  transition-property:none;
}

#pageNumber::-webkit-inner-spin-button{
    -webkit-appearance:none;
  }

.loadingInput:has( > .loading:is(#pageNumber))::after{
    display:block;
    visibility:visible;

    transition-property:visibility;
    transition-delay:var(--loading-icon-delay);
  }

.loadingInput::after{
    position:absolute;
    visibility:hidden;
    display:none;
    top:calc(50% - 8px);
    width:16px;
    height:16px;

    content:"";
    background-color:var(--toolbar-icon-bg-color);
    -webkit-mask-size:cover;
            mask-size:cover;
    -webkit-mask-image:var(--loading-icon);
            mask-image:var(--loading-icon);
  }

.loadingInput.start::after{
    inset-inline-start:4px;
  }

.loadingInput.end::after{
    inset-inline-end:4px;
  }

.toolbarField:focus{
  border-color:#0a84ff;
}

.toolbarTitle{
  padding:0 10px;
}

.toolbarLabel{
  min-width:16px;
  padding:7px;
  margin:2px;
  border-radius:2px;
  color:black;
  font:message-box;
  line-height:14px;
  text-align:left;
  -webkit-user-select:none;
     -moz-user-select:none;
          user-select:none;
  cursor:default;
}

#numPages.toolbarLabel{
  padding-inline-start:3px;
}

#thumbnailView,
#outlineView,
#attachmentsView,
#layersView{
  position:absolute;
  width:calc(100% - 8px);
  inset-block:0;
  padding:4px 4px 0;
  overflow:auto;
  -webkit-user-select:none;
     -moz-user-select:none;
          user-select:none;
}
#thumbnailView{
  width:calc(100% - 60px);
  padding:10px 30px 0;
}

#thumbnailView > a:is(:active, :focus){
  outline:0;
}

.thumbnail{
  --thumbnail-width:0;
  --thumbnail-height:0;

  display:flex;
  flex-direction:column;
  align-items:center;
  gap:8px;
  float:var(--inline-start);
  width:var(--thumbnail-width);
  height:var(--thumbnail-height);
  margin:0 10px 40px;
  padding:1px;
  border:3px solid transparent;
  border-radius:4px;
}

#thumbnailView > a:last-of-type > .thumbnail{
  margin-bottom:10px;
}

a:focus > .thumbnail,
.thumbnail:hover{
  border-color:var(--thumbnail-hover-color);
}
.thumbnail.selected{
  border-color:var(--thumbnail-selected-color) !important;
}

.thumbnailImage{
  width:var(--thumbnail-width);
  height:var(--thumbnail-height);
  opacity:0.9;
}
a:focus > .thumbnail > .thumbnailImage,
.thumbnail:hover > .thumbnailImage,
.thumbnail:hover > .thumbnailNumber{
  opacity:0.95;
}
.thumbnail:hover > .thumbnailImage,
.thumbnail:hover > .thumbnailNumber{
  opacity:1 !important;
}

.thumbnail:not([data-loaded]) > .thumbnailImage{
  width:calc(var(--thumbnail-width) - 2px);
  height:calc(var(--thumbnail-height) - 2px);
  border:1px dashed rgb(132 132 132);
}

.thumbnailNumber{
  padding:1px 15px;
  min-width:10px;
  background-color:var(--thumbnail-selected-color);
  border:1px solid var(--thumbnail-selected-color);
  border-radius:4px;
  text-align:center;
  font-size:14px;
  color:var(--thumbnail-text-color);
}

.treeWithDeepNesting > .treeItem,
.treeItem > .treeItems{
  margin-inline-start:20px;
}

.treeItem > a{
  text-decoration:none;
  display:inline-block;
  min-width:calc(100% - 4px);
  height:auto;
  margin-bottom:1px;
  padding:2px 0 5px;
  padding-inline-start:4px;
  border-radius:2px;
  color:var(--treeitem-color);
  font-size:13px;
  line-height:15px;
  -webkit-user-select:none;
     -moz-user-select:none;
          user-select:none;
  white-space:normal;
  cursor:pointer;
}

#layersView .treeItem > a *{
  cursor:pointer;
}
#layersView .treeItem > a > label{
  padding-inline-start:4px;
}
#layersView .treeItem > a > label > input{
  float:var(--inline-start);
  margin-top:1px;
}

.treeItemToggler{
  position:relative;
  float:var(--inline-start);
  height:0;
  width:0;
  color:rgb(255 255 255 / 0.5);
}
.treeItemToggler::before{
  inset-inline-end:4px;
  -webkit-mask-image:var(--treeitem-expanded-icon);
          mask-image:var(--treeitem-expanded-icon);
}
.treeItemToggler.treeItemsHidden::before{
  -webkit-mask-image:var(--treeitem-collapsed-icon);
          mask-image:var(--treeitem-collapsed-icon);
  transform:scaleX(var(--dir-factor));
}
.treeItemToggler.treeItemsHidden ~ .treeItems{
  display:none;
}

.treeItem.selected > a{
  background-color:var(--treeitem-selected-bg-color);
  color:var(--treeitem-selected-color);
}

.treeItemToggler:hover,
.treeItemToggler:hover + a,
.treeItemToggler:hover ~ .treeItems,
.treeItem > a:hover{
  background-color:var(--treeitem-bg-color);
  background-clip:padding-box;
  border-radius:2px;
  color:var(--treeitem-hover-color);
}

#outlineOptionsContainer{
  display:none;
}

#sidebarContainer:has(#outlineView:not(.hidden)) #outlineOptionsContainer{
    display:inherit;
  }

.dialogButton{
  width:auto;
  margin:3px 4px 2px !important;
  padding:2px 11px;
  color:var(--main-color);
  background-color:var(--dialog-button-bg-color);
  border:var(--dialog-button-border) !important;
}

dialog{
  margin:auto;
  padding:15px;
  border-spacing:4px;
  color:var(--main-color);
  font:message-box;
  font-size:12px;
  line-height:14px;
  background-color:var(--doorhanger-bg-color);
  border:1px solid rgb(0 0 0 / 0.5);
  border-radius:4px;
  box-shadow:0 1px 4px rgb(0 0 0 / 0.3);
}
dialog::backdrop{
  background-color:rgb(0 0 0 / 0.2);
}

dialog > .row{
  display:table-row;
}

dialog > .row > *{
  display:table-cell;
}

dialog .toolbarField{
  margin:5px 0;
}

dialog .separator{
  display:block;
  margin:4px 0;
  height:1px;
  width:100%;
  background-color:var(--separator-color);
}

dialog .buttonRow{
  text-align:center;
  vertical-align:middle;
}

dialog :link{
  color:rgb(255 255 255);
}

#passwordDialog{
  text-align:center;
}
#passwordDialog .toolbarField{
  width:200px;
}

#documentPropertiesDialog{
  text-align:left;
}
#documentPropertiesDialog .row > *{
  min-width:100px;
  text-align:start;
}
#documentPropertiesDialog .row > span{
  width:125px;
  word-wrap:break-word;
}
#documentPropertiesDialog .row > p{
  max-width:225px;
  word-wrap:break-word;
}
#documentPropertiesDialog .buttonRow{
  margin-top:10px;
}

.grab-to-pan-grab{
  cursor:grab !important;
}
.grab-to-pan-grab
  *:not(input):not(textarea):not(button):not(select):not(:link){
  cursor:inherit !important;
}
.grab-to-pan-grab:active,
.grab-to-pan-grabbing{
  cursor:grabbing !important;
}
.grab-to-pan-grabbing{
  position:fixed;
  background:rgb(0 0 0 / 0);
  display:block;
  inset:0;
  overflow:hidden;
  z-index:50000;
}

.toolbarButton{
  width:30px;
  height:33px;
  cursor:pointer;
  color:var(--button-color);
  transition-property:background-color;
  transition-duration:var(--sidebar-transition-duration);
  transition-timing-function:var(--sidebar-transition-timing-function);
}

.toolbarButton.labeled{
    border-radius:0;
    display:inline-block;
    height:auto;
    margin:0;
    padding:0 0 1px;
    padding-inline-start:36px;
    position:relative;
    min-height:26px;
    min-width:100%;
    text-align:start;
    white-space:normal;
    width:auto;
  }

.toolbarButton.labeled:is(a){
      padding-top:5px;
      text-decoration:none;
    }

.toolbarButton.labeled[href="#"]:is(a){
        opacity:0.5;
        pointer-events:none;
      }

.toolbarButton.labeled::before{
      inset-inline-start:12px;
      opacity:var(--doorhanger-icon-opacity);
      top:5px;
    }

.toolbarButton.labeled:not(.toggled):is(:hover,:focus-visible){
      background-color:var(--doorhanger-hover-bg-color);
      color:var(--doorhanger-hover-color);
    }

.toolbarButton.labeled  > span{
      display:unset;
      padding-inline-end:4px;
    }

#secondaryToolbar{
  background-color:var(--doorhanger-bg-color);
  cursor:default;
  font:message-box;
  font-size:12px;
  height:auto;
  inset-inline-end:4px;
  line-height:14px;
  margin:4px 2px;
  padding:6px 0 10px;
  position:absolute;
  text-align:left;
  top:var(--toolbar-height);
  z-index:30000;
}

#secondaryToolbar :is(button,a){
    font:message-box;
    outline:none;
  }

#secondaryToolbar #secondaryToolbarButtonContainer{
    margin-bottom:-4px;
    max-height:calc(var(--viewer-container-height) - 40px);
    max-width:220px;
    min-height:26px;
    overflow-y:auto;
  }

:is(#secondaryToolbar #secondaryToolbarButtonContainer) #secondaryOpenFile::before{
      -webkit-mask-image:var(--toolbarButton-openFile-icon);
              mask-image:var(--toolbarButton-openFile-icon);
    }

:is(#secondaryToolbar #secondaryToolbarButtonContainer) #secondaryPrint::before{
      -webkit-mask-image:var(--toolbarButton-print-icon);
              mask-image:var(--toolbarButton-print-icon);
    }

:is(#secondaryToolbar #secondaryToolbarButtonContainer) #secondaryDownload::before{
      -webkit-mask-image:var(--toolbarButton-download-icon);
              mask-image:var(--toolbarButton-download-icon);
    }

:is(#secondaryToolbar #secondaryToolbarButtonContainer) #presentationMode::before{
      -webkit-mask-image:var(--toolbarButton-presentationMode-icon);
              mask-image:var(--toolbarButton-presentationMode-icon);
    }

:is(#secondaryToolbar #secondaryToolbarButtonContainer) #viewBookmark::before{
      -webkit-mask-image:var(--toolbarButton-bookmark-icon);
              mask-image:var(--toolbarButton-bookmark-icon);
    }

:is(#secondaryToolbar #secondaryToolbarButtonContainer) #firstPage::before{
      -webkit-mask-image:var(--secondaryToolbarButton-firstPage-icon);
              mask-image:var(--secondaryToolbarButton-firstPage-icon);
    }

:is(#secondaryToolbar #secondaryToolbarButtonContainer) #lastPage::before{
      -webkit-mask-image:var(--secondaryToolbarButton-lastPage-icon);
              mask-image:var(--secondaryToolbarButton-lastPage-icon);
    }

:is(#secondaryToolbar #secondaryToolbarButtonContainer) #pageRotateCcw::before{
      -webkit-mask-image:var(--secondaryToolbarButton-rotateCcw-icon);
              mask-image:var(--secondaryToolbarButton-rotateCcw-icon);
    }

:is(#secondaryToolbar #secondaryToolbarButtonContainer) #pageRotateCw::before{
      -webkit-mask-image:var(--secondaryToolbarButton-rotateCw-icon);
              mask-image:var(--secondaryToolbarButton-rotateCw-icon);
    }

:is(#secondaryToolbar #secondaryToolbarButtonContainer) #cursorSelectTool::before{
      -webkit-mask-image:var(--secondaryToolbarButton-selectTool-icon);
              mask-image:var(--secondaryToolbarButton-selectTool-icon);
    }

:is(#secondaryToolbar #secondaryToolbarButtonContainer) #cursorHandTool::before{
      -webkit-mask-image:var(--secondaryToolbarButton-handTool-icon);
              mask-image:var(--secondaryToolbarButton-handTool-icon);
    }

:is(#secondaryToolbar #secondaryToolbarButtonContainer) #scrollPage::before{
      -webkit-mask-image:var(--secondaryToolbarButton-scrollPage-icon);
              mask-image:var(--secondaryToolbarButton-scrollPage-icon);
    }

:is(#secondaryToolbar #secondaryToolbarButtonContainer) #scrollVertical::before{
      -webkit-mask-image:var(--secondaryToolbarButton-scrollVertical-icon);
              mask-image:var(--secondaryToolbarButton-scrollVertical-icon);
    }

:is(#secondaryToolbar #secondaryToolbarButtonContainer) #scrollHorizontal::before{
      -webkit-mask-image:var(--secondaryToolbarButton-scrollHorizontal-icon);
              mask-image:var(--secondaryToolbarButton-scrollHorizontal-icon);
    }

:is(#secondaryToolbar #secondaryToolbarButtonContainer) #scrollWrapped::before{
      -webkit-mask-image:var(--secondaryToolbarButton-scrollWrapped-icon);
              mask-image:var(--secondaryToolbarButton-scrollWrapped-icon);
    }

:is(#secondaryToolbar #secondaryToolbarButtonContainer) #spreadNone::before{
      -webkit-mask-image:var(--secondaryToolbarButton-spreadNone-icon);
              mask-image:var(--secondaryToolbarButton-spreadNone-icon);
    }

:is(#secondaryToolbar #secondaryToolbarButtonContainer) #spreadOdd::before{
      -webkit-mask-image:var(--secondaryToolbarButton-spreadOdd-icon);
              mask-image:var(--secondaryToolbarButton-spreadOdd-icon);
    }

:is(#secondaryToolbar #secondaryToolbarButtonContainer) #spreadEven::before{
      -webkit-mask-image:var(--secondaryToolbarButton-spreadEven-icon);
              mask-image:var(--secondaryToolbarButton-spreadEven-icon);
    }

:is(#secondaryToolbar #secondaryToolbarButtonContainer) #imageAltTextSettings::before{
      -webkit-mask-image:var(--secondaryToolbarButton-imageAltTextSettings-icon);
              mask-image:var(--secondaryToolbarButton-imageAltTextSettings-icon);
    }

:is(#secondaryToolbar #secondaryToolbarButtonContainer) #documentProperties::before{
      -webkit-mask-image:var(--secondaryToolbarButton-documentProperties-icon);
              mask-image:var(--secondaryToolbarButton-documentProperties-icon);
    }

#findbar{
  background-color:var(--toolbar-bg-color);
  cursor:default;
  font:message-box;
  font-size:12px;
  height:auto;
  inset-inline-start:64px;
  line-height:14px;
  margin:4px 2px;
  min-width:300px;
  padding:0 4px;
  position:absolute;
  text-align:left;
  top:var(--toolbar-height);
  z-index:30000;
}

#findbar *{
    float:var(--inline-start);
    position:relative;
  }

#findbar  > div{
    height:var(--toolbar-height);
  }

#findbar :is(button,input){
    font:message-box;
    outline:none;
  }

[type="checkbox"]:is(#findbar input){
      pointer-events:none;
    }

[type="checkbox"]:is(#findbar input):checked + .toolbarLabel{
        background-color:var(--toggled-btn-bg-color) !important;
        color:var(--toggled-btn-color);
      }

#findbar label{
    -webkit-user-select:none;
       -moz-user-select:none;
            user-select:none;
  }

#findbar :is(label:hover,input:focus-visible + label){
    background-color:var(--button-hover-color);
    color:var(--toggled-btn-color);
  }

#findbar #findbarInputContainer{
    margin-inline-end:4px;
  }

:is(#findbar #findbarInputContainer) #findInput{
      width:200px;
    }

:is(:is(#findbar #findbarInputContainer) #findInput)::-moz-placeholder{
        font-style:normal;
      }

:is(:is(#findbar #findbarInputContainer) #findInput)::placeholder{
        font-style:normal;
      }

.loadingInput:has( > [data-status="pending"]:is(:is(#findbar #findbarInputContainer) #findInput))::after{
        display:block;
        visibility:visible;
      }

[data-status="notFound"]:is(:is(#findbar #findbarInputContainer) #findInput){
        background-color:rgb(255 102 102);
      }

:is(#findbar #findbarInputContainer) #findPrevious::before{
      -webkit-mask-image:var(--findbarButton-previous-icon);
              mask-image:var(--findbarButton-previous-icon);
    }

:is(#findbar #findbarInputContainer) #findNext::before{
      -webkit-mask-image:var(--findbarButton-next-icon);
              mask-image:var(--findbarButton-next-icon);
    }

:is(#findbar #findbarMessageContainer) #findResultsCount{
      background-color:rgb(217 217 217);
      color:rgb(82 82 82);
      margin:5px;
      padding:4px 5px;
      text-align:center;
    }

[data-status="notFound"]:is(:is(#findbar #findbarMessageContainer) #findMsg){
        font-weight:bold;
      }

:is(#findbar #findbarMessageContainer) *:empty{
      display:none;
    }

#findbar.wrapContainers  > div{
      clear:both;
    }

#findbar.wrapContainers  > #findbarMessageContainer{
      height:auto;
    }

:is(#findbar.wrapContainers > #findbarMessageContainer)  > *{
        clear:both;
      }

@media all and (max-width: 690px){
    #findbar{
      inset-inline-start:34px;
    }
  }

@page{
  margin:0;
}

#printContainer{
  display:none;
}

@media print{
  body{
    background:rgb(0 0 0 / 0) none;
  }
  body[data-pdfjsprinting] #outerContainer{
    display:none;
  }
  body[data-pdfjsprinting] #printContainer{
    display:block;
  }
  #printContainer{
    height:100%;
  }
  #printContainer > .printedPage{
    page-break-after:always;
    page-break-inside:avoid;
    height:100%;
    width:100%;

    display:flex;
    flex-direction:column;
    justify-content:center;
    align-items:center;
  }

  #printContainer > .xfaPrintedPage .xfaPage{
    position:absolute;
  }

  #printContainer > .xfaPrintedPage{
    page-break-after:always;
    page-break-inside:avoid;
    width:100%;
    height:100%;
    position:relative;
  }

  #printContainer > .printedPage :is(canvas, img){
    max-width:100%;
    max-height:100%;

    direction:ltr;
    display:block;
  }
}

.visibleMediumView{
  display:none !important;
}

@media all and (max-width: 900px){
  #toolbarViewerMiddle{
    display:table;
    margin:auto;
    left:auto;
    position:inherit;
    transform:none;
  }
}

@media all and (max-width: 840px){
  #sidebarContainer{
    background-color:var(--sidebar-narrow-bg-color);
  }
  #outerContainer.sidebarOpen #viewerContainer{
    inset-inline-start:0 !important;
  }
}

@media all and (max-width: 750px){
  :root{
    --editor-toolbar-base-offset:40px;
  }
  #outerContainer .hiddenMediumView{
    display:none !important;
  }
  #outerContainer .visibleMediumView{
    display:inherit !important;
  }
}

@media all and (max-width: 690px){
  .hiddenSmallView,
  .hiddenSmallView *{
    display:none !important;
  }
  .toolbarButtonSpacer{
    width:0;
  }
}

@media all and (max-width: 560px){
  #scaleSelectContainer{
    display:none;
  }
}
`;

// src/viewer.mjs
var viewer_default3 = '/**\n * @licstart The following is the entire license notice for the\n * JavaScript code in this page\n *\n * Copyright 2024 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * JavaScript code in this page\n */\n\n/******/ // The require scope\n/******/ var __webpack_require__ = {};\n/******/ \n/************************************************************************/\n/******/ /* webpack/runtime/define property getters */\n/******/ (() => {\n/******/ 	// define getter functions for harmony exports\n/******/ 	__webpack_require__.d = (exports, definition) => {\n/******/ 		for(var key in definition) {\n/******/ 			if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ 				Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ 			}\n/******/ 		}\n/******/ 	};\n/******/ })();\n/******/ \n/******/ /* webpack/runtime/hasOwnProperty shorthand */\n/******/ (() => {\n/******/ 	__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ })();\n/******/ \n/************************************************************************/\nvar __webpack_exports__ = {};\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  PDFViewerApplication: () => (/* reexport */ PDFViewerApplication),\n  PDFViewerApplicationConstants: () => (/* binding */ AppConstants),\n  PDFViewerApplicationOptions: () => (/* reexport */ AppOptions)\n});\n\n;// CONCATENATED MODULE:./ui_utils.js\nconst DEFAULT_SCALE_VALUE = "auto";\nconst DEFAULT_SCALE = 1.0;\nconst DEFAULT_SCALE_DELTA = 1.1;\nconst MIN_SCALE = 0.1;\nconst MAX_SCALE = 10.0;\nconst UNKNOWN_SCALE = 0;\nconst MAX_AUTO_SCALE = 1.25;\nconst SCROLLBAR_PADDING = 40;\nconst VERTICAL_PADDING = 5;\nconst RenderingStates = {\n  INITIAL: 0,\n  RUNNING: 1,\n  PAUSED: 2,\n  FINISHED: 3\n};\nconst PresentationModeState = {\n  UNKNOWN: 0,\n  NORMAL: 1,\n  CHANGING: 2,\n  FULLSCREEN: 3\n};\nconst SidebarView = {\n  UNKNOWN: -1,\n  NONE: 0,\n  THUMBS: 1,\n  OUTLINE: 2,\n  ATTACHMENTS: 3,\n  LAYERS: 4\n};\nconst TextLayerMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_PERMISSIONS: 2\n};\nconst ScrollMode = {\n  UNKNOWN: -1,\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n  WRAPPED: 2,\n  PAGE: 3\n};\nconst SpreadMode = {\n  UNKNOWN: -1,\n  NONE: 0,\n  ODD: 1,\n  EVEN: 2\n};\nconst CursorTool = {\n  SELECT: 0,\n  HAND: 1,\n  ZOOM: 2\n};\nconst AutoPrintRegExp = /\\bprint\\s*\\(/;\nclass OutputScale {\n  constructor() {\n    const pixelRatio = window.devicePixelRatio || 1;\n    this.sx = pixelRatio;\n    this.sy = pixelRatio;\n  }\n  get scaled() {\n    return this.sx !== 1 || this.sy !== 1;\n  }\n}\nfunction scrollIntoView(element, spot, scrollMatches = false) {\n  let parent = element.offsetParent;\n  if (!parent) {\n    console.error("offsetParent is not set -- cannot scroll");\n    return;\n  }\n  let offsetY = element.offsetTop + element.clientTop;\n  let offsetX = element.offsetLeft + element.clientLeft;\n  while (parent.clientHeight === parent.scrollHeight && parent.clientWidth === parent.scrollWidth || scrollMatches && (parent.classList.contains("markedContent") || getComputedStyle(parent).overflow === "hidden")) {\n    offsetY += parent.offsetTop;\n    offsetX += parent.offsetLeft;\n    parent = parent.offsetParent;\n    if (!parent) {\n      return;\n    }\n  }\n  if (spot) {\n    if (spot.top !== undefined) {\n      offsetY += spot.top;\n    }\n    if (spot.left !== undefined) {\n      offsetX += spot.left;\n      parent.scrollLeft = offsetX;\n    }\n  }\n  parent.scrollTop = offsetY;\n}\nfunction watchScroll(viewAreaElement, callback, abortSignal = undefined) {\n  const debounceScroll = function (evt) {\n    if (rAF) {\n      return;\n    }\n    rAF = window.requestAnimationFrame(function viewAreaElementScrolled() {\n      rAF = null;\n      const currentX = viewAreaElement.scrollLeft;\n      const lastX = state.lastX;\n      if (currentX !== lastX) {\n        state.right = currentX > lastX;\n      }\n      state.lastX = currentX;\n      const currentY = viewAreaElement.scrollTop;\n      const lastY = state.lastY;\n      if (currentY !== lastY) {\n        state.down = currentY > lastY;\n      }\n      state.lastY = currentY;\n      callback(state);\n    });\n  };\n  const state = {\n    right: true,\n    down: true,\n    lastX: viewAreaElement.scrollLeft,\n    lastY: viewAreaElement.scrollTop,\n    _eventHandler: debounceScroll\n  };\n  let rAF = null;\n  viewAreaElement.addEventListener("scroll", debounceScroll, {\n    useCapture: true,\n    signal: abortSignal\n  });\n  abortSignal?.addEventListener("abort", () => window.cancelAnimationFrame(rAF), {\n    once: true\n  });\n  return state;\n}\nfunction parseQueryString(query) {\n  const params = new Map();\n  for (const [key, value] of new URLSearchParams(query)) {\n    params.set(key.toLowerCase(), value);\n  }\n  return params;\n}\nconst InvisibleCharsRegExp = /[\\x00-\\x1F]/g;\nfunction removeNullCharacters(str, replaceInvisible = false) {\n  if (!InvisibleCharsRegExp.test(str)) {\n    return str;\n  }\n  if (replaceInvisible) {\n    return str.replaceAll(InvisibleCharsRegExp, m => m === "\\x00" ? "" : " ");\n  }\n  return str.replaceAll("\\x00", "");\n}\nfunction binarySearchFirstItem(items, condition, start = 0) {\n  let minIndex = start;\n  let maxIndex = items.length - 1;\n  if (maxIndex < 0 || !condition(items[maxIndex])) {\n    return items.length;\n  }\n  if (condition(items[minIndex])) {\n    return minIndex;\n  }\n  while (minIndex < maxIndex) {\n    const currentIndex = minIndex + maxIndex >> 1;\n    const currentItem = items[currentIndex];\n    if (condition(currentItem)) {\n      maxIndex = currentIndex;\n    } else {\n      minIndex = currentIndex + 1;\n    }\n  }\n  return minIndex;\n}\nfunction approximateFraction(x) {\n  if (Math.floor(x) === x) {\n    return [x, 1];\n  }\n  const xinv = 1 / x;\n  const limit = 8;\n  if (xinv > limit) {\n    return [1, limit];\n  } else if (Math.floor(xinv) === xinv) {\n    return [1, xinv];\n  }\n  const x_ = x > 1 ? xinv : x;\n  let a = 0,\n    b = 1,\n    c = 1,\n    d = 1;\n  while (true) {\n    const p = a + c,\n      q = b + d;\n    if (q > limit) {\n      break;\n    }\n    if (x_ <= p / q) {\n      c = p;\n      d = q;\n    } else {\n      a = p;\n      b = q;\n    }\n  }\n  let result;\n  if (x_ - a / b < c / d - x_) {\n    result = x_ === x ? [a, b] : [b, a];\n  } else {\n    result = x_ === x ? [c, d] : [d, c];\n  }\n  return result;\n}\nfunction floorToDivide(x, div) {\n  return x - x % div;\n}\nfunction getPageSizeInches({\n  view,\n  userUnit,\n  rotate\n}) {\n  const [x1, y1, x2, y2] = view;\n  const changeOrientation = rotate % 180 !== 0;\n  const width = (x2 - x1) / 72 * userUnit;\n  const height = (y2 - y1) / 72 * userUnit;\n  return {\n    width: changeOrientation ? height : width,\n    height: changeOrientation ? width : height\n  };\n}\nfunction backtrackBeforeAllVisibleElements(index, views, top) {\n  if (index < 2) {\n    return index;\n  }\n  let elt = views[index].div;\n  let pageTop = elt.offsetTop + elt.clientTop;\n  if (pageTop >= top) {\n    elt = views[index - 1].div;\n    pageTop = elt.offsetTop + elt.clientTop;\n  }\n  for (let i = index - 2; i >= 0; --i) {\n    elt = views[i].div;\n    if (elt.offsetTop + elt.clientTop + elt.clientHeight <= pageTop) {\n      break;\n    }\n    index = i;\n  }\n  return index;\n}\nfunction getVisibleElements({\n  scrollEl,\n  views,\n  sortByVisibility = false,\n  horizontal = false,\n  rtl = false\n}) {\n  const top = scrollEl.scrollTop,\n    bottom = top + scrollEl.clientHeight;\n  const left = scrollEl.scrollLeft,\n    right = left + scrollEl.clientWidth;\n  function isElementBottomAfterViewTop(view) {\n    const element = view.div;\n    const elementBottom = element.offsetTop + element.clientTop + element.clientHeight;\n    return elementBottom > top;\n  }\n  function isElementNextAfterViewHorizontally(view) {\n    const element = view.div;\n    const elementLeft = element.offsetLeft + element.clientLeft;\n    const elementRight = elementLeft + element.clientWidth;\n    return rtl ? elementLeft < right : elementRight > left;\n  }\n  const visible = [],\n    ids = new Set(),\n    numViews = views.length;\n  let firstVisibleElementInd = binarySearchFirstItem(views, horizontal ? isElementNextAfterViewHorizontally : isElementBottomAfterViewTop);\n  if (firstVisibleElementInd > 0 && firstVisibleElementInd < numViews && !horizontal) {\n    firstVisibleElementInd = backtrackBeforeAllVisibleElements(firstVisibleElementInd, views, top);\n  }\n  let lastEdge = horizontal ? right : -1;\n  for (let i = firstVisibleElementInd; i < numViews; i++) {\n    const view = views[i],\n      element = view.div;\n    const currentWidth = element.offsetLeft + element.clientLeft;\n    const currentHeight = element.offsetTop + element.clientTop;\n    const viewWidth = element.clientWidth,\n      viewHeight = element.clientHeight;\n    const viewRight = currentWidth + viewWidth;\n    const viewBottom = currentHeight + viewHeight;\n    if (lastEdge === -1) {\n      if (viewBottom >= bottom) {\n        lastEdge = viewBottom;\n      }\n    } else if ((horizontal ? currentWidth : currentHeight) > lastEdge) {\n      break;\n    }\n    if (viewBottom <= top || currentHeight >= bottom || viewRight <= left || currentWidth >= right) {\n      continue;\n    }\n    const hiddenHeight = Math.max(0, top - currentHeight) + Math.max(0, viewBottom - bottom);\n    const hiddenWidth = Math.max(0, left - currentWidth) + Math.max(0, viewRight - right);\n    const fractionHeight = (viewHeight - hiddenHeight) / viewHeight,\n      fractionWidth = (viewWidth - hiddenWidth) / viewWidth;\n    const percent = fractionHeight * fractionWidth * 100 | 0;\n    visible.push({\n      id: view.id,\n      x: currentWidth,\n      y: currentHeight,\n      view,\n      percent,\n      widthPercent: fractionWidth * 100 | 0\n    });\n    ids.add(view.id);\n  }\n  const first = visible[0],\n    last = visible.at(-1);\n  if (sortByVisibility) {\n    visible.sort(function (a, b) {\n      const pc = a.percent - b.percent;\n      if (Math.abs(pc) > 0.001) {\n        return -pc;\n      }\n      return a.id - b.id;\n    });\n  }\n  return {\n    first,\n    last,\n    views: visible,\n    ids\n  };\n}\nfunction normalizeWheelEventDirection(evt) {\n  let delta = Math.hypot(evt.deltaX, evt.deltaY);\n  const angle = Math.atan2(evt.deltaY, evt.deltaX);\n  if (-0.25 * Math.PI < angle && angle < 0.75 * Math.PI) {\n    delta = -delta;\n  }\n  return delta;\n}\nfunction normalizeWheelEventDelta(evt) {\n  const deltaMode = evt.deltaMode;\n  let delta = normalizeWheelEventDirection(evt);\n  const MOUSE_PIXELS_PER_LINE = 30;\n  const MOUSE_LINES_PER_PAGE = 30;\n  if (deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n    delta /= MOUSE_PIXELS_PER_LINE * MOUSE_LINES_PER_PAGE;\n  } else if (deltaMode === WheelEvent.DOM_DELTA_LINE) {\n    delta /= MOUSE_LINES_PER_PAGE;\n  }\n  return delta;\n}\nfunction isValidRotation(angle) {\n  return Number.isInteger(angle) && angle % 90 === 0;\n}\nfunction isValidScrollMode(mode) {\n  return Number.isInteger(mode) && Object.values(ScrollMode).includes(mode) && mode !== ScrollMode.UNKNOWN;\n}\nfunction isValidSpreadMode(mode) {\n  return Number.isInteger(mode) && Object.values(SpreadMode).includes(mode) && mode !== SpreadMode.UNKNOWN;\n}\nfunction isPortraitOrientation(size) {\n  return size.width <= size.height;\n}\nconst animationStarted = new Promise(function (resolve) {\n  window.requestAnimationFrame(resolve);\n});\nconst docStyle = document.documentElement.style;\nfunction clamp(v, min, max) {\n  return Math.min(Math.max(v, min), max);\n}\nclass ProgressBar {\n  #classList = null;\n  #disableAutoFetchTimeout = null;\n  #percent = 0;\n  #style = null;\n  #visible = true;\n  constructor(bar) {\n    this.#classList = bar.classList;\n    this.#style = bar.style;\n  }\n  get percent() {\n    return this.#percent;\n  }\n  set percent(val) {\n    this.#percent = clamp(val, 0, 100);\n    if (isNaN(val)) {\n      this.#classList.add("indeterminate");\n      return;\n    }\n    this.#classList.remove("indeterminate");\n    this.#style.setProperty("--progressBar-percent", `${this.#percent}%`);\n  }\n  setWidth(viewer) {\n    if (!viewer) {\n      return;\n    }\n    const container = viewer.parentNode;\n    const scrollbarWidth = container.offsetWidth - viewer.offsetWidth;\n    if (scrollbarWidth > 0) {\n      this.#style.setProperty("--progressBar-end-offset", `${scrollbarWidth}px`);\n    }\n  }\n  setDisableAutoFetch(delay = 5000) {\n    if (this.#percent === 100 || isNaN(this.#percent)) {\n      return;\n    }\n    if (this.#disableAutoFetchTimeout) {\n      clearTimeout(this.#disableAutoFetchTimeout);\n    }\n    this.show();\n    this.#disableAutoFetchTimeout = setTimeout(() => {\n      this.#disableAutoFetchTimeout = null;\n      this.hide();\n    }, delay);\n  }\n  hide() {\n    if (!this.#visible) {\n      return;\n    }\n    this.#visible = false;\n    this.#classList.add("hidden");\n  }\n  show() {\n    if (this.#visible) {\n      return;\n    }\n    this.#visible = true;\n    this.#classList.remove("hidden");\n  }\n}\nfunction getActiveOrFocusedElement() {\n  let curRoot = document;\n  let curActiveOrFocused = curRoot.activeElement || curRoot.querySelector(":focus");\n  while (curActiveOrFocused?.shadowRoot) {\n    curRoot = curActiveOrFocused.shadowRoot;\n    curActiveOrFocused = curRoot.activeElement || curRoot.querySelector(":focus");\n  }\n  return curActiveOrFocused;\n}\nfunction apiPageLayoutToViewerModes(layout) {\n  let scrollMode = ScrollMode.VERTICAL,\n    spreadMode = SpreadMode.NONE;\n  switch (layout) {\n    case "SinglePage":\n      scrollMode = ScrollMode.PAGE;\n      break;\n    case "OneColumn":\n      break;\n    case "TwoPageLeft":\n      scrollMode = ScrollMode.PAGE;\n    case "TwoColumnLeft":\n      spreadMode = SpreadMode.ODD;\n      break;\n    case "TwoPageRight":\n      scrollMode = ScrollMode.PAGE;\n    case "TwoColumnRight":\n      spreadMode = SpreadMode.EVEN;\n      break;\n  }\n  return {\n    scrollMode,\n    spreadMode\n  };\n}\nfunction apiPageModeToSidebarView(mode) {\n  switch (mode) {\n    case "UseNone":\n      return SidebarView.NONE;\n    case "UseThumbs":\n      return SidebarView.THUMBS;\n    case "UseOutlines":\n      return SidebarView.OUTLINE;\n    case "UseAttachments":\n      return SidebarView.ATTACHMENTS;\n    case "UseOC":\n      return SidebarView.LAYERS;\n  }\n  return SidebarView.NONE;\n}\nfunction toggleCheckedBtn(button, toggle, view = null) {\n  button.classList.toggle("toggled", toggle);\n  button.setAttribute("aria-checked", toggle);\n  view?.classList.toggle("hidden", !toggle);\n}\nfunction toggleExpandedBtn(button, toggle, view = null) {\n  button.classList.toggle("toggled", toggle);\n  button.setAttribute("aria-expanded", toggle);\n  view?.classList.toggle("hidden", !toggle);\n}\n\n;// CONCATENATED MODULE:./app_options.js\n{\n  var compatParams = new Map();\n  const userAgent = navigator.userAgent || "";\n  const platform = navigator.platform || "";\n  const maxTouchPoints = navigator.maxTouchPoints || 1;\n  const isAndroid = /Android/.test(userAgent);\n  const isIOS = /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent) || platform === "MacIntel" && maxTouchPoints > 1;\n  (function () {\n    if (isIOS || isAndroid) {\n      compatParams.set("maxCanvasPixels", 5242880);\n    }\n  })();\n  (function () {\n    if (isAndroid) {\n      compatParams.set("useSystemFonts", false);\n    }\n  })();\n}\nconst OptionKind = {\n  BROWSER: 0x01,\n  VIEWER: 0x02,\n  API: 0x04,\n  WORKER: 0x08,\n  EVENT_DISPATCH: 0x10,\n  PREFERENCE: 0x80\n};\nconst Type = {\n  BOOLEAN: 0x01,\n  NUMBER: 0x02,\n  OBJECT: 0x04,\n  STRING: 0x08,\n  UNDEFINED: 0x10\n};\nconst defaultOptions = {\n  allowedGlobalEvents: {\n    value: null,\n    kind: OptionKind.BROWSER\n  },\n  canvasMaxAreaInBytes: {\n    value: -1,\n    kind: OptionKind.BROWSER + OptionKind.API\n  },\n  isInAutomation: {\n    value: false,\n    kind: OptionKind.BROWSER\n  },\n  localeProperties: {\n    value: {\n      lang: navigator.language || "en-US"\n    },\n    kind: OptionKind.BROWSER\n  },\n  nimbusDataStr: {\n    value: "",\n    kind: OptionKind.BROWSER\n  },\n  supportsCaretBrowsingMode: {\n    value: false,\n    kind: OptionKind.BROWSER\n  },\n  supportsDocumentFonts: {\n    value: true,\n    kind: OptionKind.BROWSER\n  },\n  supportsIntegratedFind: {\n    value: false,\n    kind: OptionKind.BROWSER\n  },\n  supportsMouseWheelZoomCtrlKey: {\n    value: true,\n    kind: OptionKind.BROWSER\n  },\n  supportsMouseWheelZoomMetaKey: {\n    value: true,\n    kind: OptionKind.BROWSER\n  },\n  supportsPinchToZoom: {\n    value: true,\n    kind: OptionKind.BROWSER\n  },\n  toolbarDensity: {\n    value: 0,\n    kind: OptionKind.BROWSER + OptionKind.EVENT_DISPATCH\n  },\n  altTextLearnMoreUrl: {\n    value: "",\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  annotationEditorMode: {\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  annotationMode: {\n    value: 2,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  cursorToolOnLoad: {\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  debuggerSrc: {\n    value: "./debugger.mjs",\n    kind: OptionKind.VIEWER\n  },\n  defaultZoomDelay: {\n    value: 400,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  defaultZoomValue: {\n    value: "",\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  disableHistory: {\n    value: false,\n    kind: OptionKind.VIEWER\n  },\n  disablePageLabels: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  enableAltText: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  enableAltTextModelDownload: {\n    value: true,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE + OptionKind.EVENT_DISPATCH\n  },\n  enableGuessAltText: {\n    value: true,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE + OptionKind.EVENT_DISPATCH\n  },\n  enableHighlightFloatingButton: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  enableNewAltTextWhenAddingImage: {\n    value: true,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  enablePermissions: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  enablePrintAutoRotate: {\n    value: true,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  enableScripting: {\n    value: true,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  enableUpdatedAddImage: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  externalLinkRel: {\n    value: "noopener noreferrer nofollow",\n    kind: OptionKind.VIEWER\n  },\n  externalLinkTarget: {\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  highlightEditorColors: {\n    value: "yellow=#FFFF98,green=#53FFBC,blue=#80EBFF,pink=#FFCBE6,red=#FF4F5F",\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  historyUpdateUrl: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  ignoreDestinationZoom: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  imageResourcesPath: {\n    value: "./images/",\n    kind: OptionKind.VIEWER\n  },\n  maxCanvasPixels: {\n    value: 2 ** 25,\n    kind: OptionKind.VIEWER\n  },\n  forcePageColors: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  pageColorsBackground: {\n    value: "Canvas",\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  pageColorsForeground: {\n    value: "CanvasText",\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  pdfBugEnabled: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  printResolution: {\n    value: 150,\n    kind: OptionKind.VIEWER\n  },\n  sidebarViewOnLoad: {\n    value: -1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  scrollModeOnLoad: {\n    value: -1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  spreadModeOnLoad: {\n    value: -1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  textLayerMode: {\n    value: 1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  viewOnLoad: {\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  cMapPacked: {\n    value: true,\n    kind: OptionKind.API\n  },\n  cMapUrl: {\n    value: "./cmaps/",\n    kind: OptionKind.API\n  },\n  disableAutoFetch: {\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE\n  },\n  disableFontFace: {\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE\n  },\n  disableRange: {\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE\n  },\n  disableStream: {\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE\n  },\n  docBaseUrl: {\n    value: "",\n    kind: OptionKind.API\n  },\n  enableHWA: {\n    value: true,\n    kind: OptionKind.API + OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  enableXfa: {\n    value: true,\n    kind: OptionKind.API + OptionKind.PREFERENCE\n  },\n  fontExtraProperties: {\n    value: false,\n    kind: OptionKind.API\n  },\n  isEvalSupported: {\n    value: true,\n    kind: OptionKind.API\n  },\n  isOffscreenCanvasSupported: {\n    value: true,\n    kind: OptionKind.API\n  },\n  maxImageSize: {\n    value: -1,\n    kind: OptionKind.API\n  },\n  pdfBug: {\n    value: false,\n    kind: OptionKind.API\n  },\n  standardFontDataUrl: {\n    value: "./standard_fonts/",\n    kind: OptionKind.API\n  },\n  useSystemFonts: {\n    value: undefined,\n    kind: OptionKind.API,\n    type: Type.BOOLEAN + Type.UNDEFINED\n  },\n  verbosity: {\n    value: 1,\n    kind: OptionKind.API\n  },\n  workerPort: {\n    value: null,\n    kind: OptionKind.WORKER\n  },\n  workerSrc: {\n    value: "../public/pdf.worker.min.mjs",\n    kind: OptionKind.WORKER\n  }\n};\n{\n  defaultOptions.defaultUrl = {\n    value: "",\n    kind: OptionKind.VIEWER\n  };\n  defaultOptions.sandboxBundleSrc = {\n    value: "../public/pdf.sandbox.min.mjs",\n    kind: OptionKind.VIEWER\n  };\n  defaultOptions.viewerCssTheme = {\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  };\n  defaultOptions.enableFakeMLManager = {\n    value: true,\n    kind: OptionKind.VIEWER\n  };\n}\n{\n  defaultOptions.disablePreferences = {\n    value: false,\n    kind: OptionKind.VIEWER\n  };\n}\nclass AppOptions {\n  static eventBus;\n  static #opts = new Map();\n  static {\n    for (const name in defaultOptions) {\n      this.#opts.set(name, defaultOptions[name].value);\n    }\n    for (const [name, value] of compatParams) {\n      this.#opts.set(name, value);\n    }\n    this._hasInvokedSet = false;\n    this._checkDisablePreferences = () => {\n      if (this.get("disablePreferences")) {\n        return true;\n      }\n      if (this._hasInvokedSet) {\n        console.warn("The Preferences may override manually set AppOptions; " + \'please use the "disablePreferences"-option to prevent that.\');\n      }\n      return false;\n    };\n  }\n  static get(name) {\n    return this.#opts.get(name);\n  }\n  static getAll(kind = null, defaultOnly = false) {\n    const options = Object.create(null);\n    for (const name in defaultOptions) {\n      const defaultOpt = defaultOptions[name];\n      if (kind && !(kind & defaultOpt.kind)) {\n        continue;\n      }\n      options[name] = !defaultOnly ? this.#opts.get(name) : defaultOpt.value;\n    }\n    return options;\n  }\n  static set(name, value) {\n    this.setAll({\n      [name]: value\n    });\n  }\n  static setAll(options, prefs = false) {\n    this._hasInvokedSet ||= true;\n    let events;\n    for (const name in options) {\n      const defaultOpt = defaultOptions[name],\n        userOpt = options[name];\n      if (!defaultOpt || !(typeof userOpt === typeof defaultOpt.value || Type[(typeof userOpt).toUpperCase()] & defaultOpt.type)) {\n        continue;\n      }\n      const {\n        kind\n      } = defaultOpt;\n      if (prefs && !(kind & OptionKind.BROWSER || kind & OptionKind.PREFERENCE)) {\n        continue;\n      }\n      if (this.eventBus && kind & OptionKind.EVENT_DISPATCH) {\n        (events ||= new Map()).set(name, userOpt);\n      }\n      this.#opts.set(name, userOpt);\n    }\n    if (events) {\n      for (const [name, value] of events) {\n        this.eventBus.dispatch(name.toLowerCase(), {\n          source: this,\n          value\n        });\n      }\n    }\n  }\n}\n\n;// CONCATENATED MODULE:./pdf_link_service.js\n\nconst DEFAULT_LINK_REL = "noopener noreferrer nofollow";\nconst LinkTarget = {\n  NONE: 0,\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4\n};\nclass PDFLinkService {\n  externalLinkEnabled = true;\n  constructor({\n    eventBus,\n    externalLinkTarget = null,\n    externalLinkRel = null,\n    ignoreDestinationZoom = false\n  } = {}) {\n    this.eventBus = eventBus;\n    this.externalLinkTarget = externalLinkTarget;\n    this.externalLinkRel = externalLinkRel;\n    this._ignoreDestinationZoom = ignoreDestinationZoom;\n    this.baseUrl = null;\n    this.pdfDocument = null;\n    this.pdfViewer = null;\n    this.pdfHistory = null;\n  }\n  setDocument(pdfDocument, baseUrl = null) {\n    this.baseUrl = baseUrl;\n    this.pdfDocument = pdfDocument;\n  }\n  setViewer(pdfViewer) {\n    this.pdfViewer = pdfViewer;\n  }\n  setHistory(pdfHistory) {\n    this.pdfHistory = pdfHistory;\n  }\n  get pagesCount() {\n    return this.pdfDocument ? this.pdfDocument.numPages : 0;\n  }\n  get page() {\n    return this.pdfDocument ? this.pdfViewer.currentPageNumber : 1;\n  }\n  set page(value) {\n    if (this.pdfDocument) {\n      this.pdfViewer.currentPageNumber = value;\n    }\n  }\n  get rotation() {\n    return this.pdfDocument ? this.pdfViewer.pagesRotation : 0;\n  }\n  set rotation(value) {\n    if (this.pdfDocument) {\n      this.pdfViewer.pagesRotation = value;\n    }\n  }\n  get isInPresentationMode() {\n    return this.pdfDocument ? this.pdfViewer.isInPresentationMode : false;\n  }\n  async goToDestination(dest) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    let namedDest, explicitDest, pageNumber;\n    if (typeof dest === "string") {\n      namedDest = dest;\n      explicitDest = await this.pdfDocument.getDestination(dest);\n    } else {\n      namedDest = null;\n      explicitDest = await dest;\n    }\n    if (!Array.isArray(explicitDest)) {\n      console.error(`goToDestination: "${explicitDest}" is not a valid destination array, for dest="${dest}".`);\n      return;\n    }\n    const [destRef] = explicitDest;\n    if (destRef && typeof destRef === "object") {\n      pageNumber = this.pdfDocument.cachedPageNumber(destRef);\n      if (!pageNumber) {\n        try {\n          pageNumber = (await this.pdfDocument.getPageIndex(destRef)) + 1;\n        } catch {\n          console.error(`goToDestination: "${destRef}" is not a valid page reference, for dest="${dest}".`);\n          return;\n        }\n      }\n    } else if (Number.isInteger(destRef)) {\n      pageNumber = destRef + 1;\n    }\n    if (!pageNumber || pageNumber < 1 || pageNumber > this.pagesCount) {\n      console.error(`goToDestination: "${pageNumber}" is not a valid page number, for dest="${dest}".`);\n      return;\n    }\n    if (this.pdfHistory) {\n      this.pdfHistory.pushCurrentPosition();\n      this.pdfHistory.push({\n        namedDest,\n        explicitDest,\n        pageNumber\n      });\n    }\n    this.pdfViewer.scrollPageIntoView({\n      pageNumber,\n      destArray: explicitDest,\n      ignoreDestinationZoom: this._ignoreDestinationZoom\n    });\n  }\n  goToPage(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const pageNumber = typeof val === "string" && this.pdfViewer.pageLabelToPageNumber(val) || val | 0;\n    if (!(Number.isInteger(pageNumber) && pageNumber > 0 && pageNumber <= this.pagesCount)) {\n      console.error(`PDFLinkService.goToPage: "${val}" is not a valid page.`);\n      return;\n    }\n    if (this.pdfHistory) {\n      this.pdfHistory.pushCurrentPosition();\n      this.pdfHistory.pushPage(pageNumber);\n    }\n    this.pdfViewer.scrollPageIntoView({\n      pageNumber\n    });\n  }\n  addLinkAttributes(link, url, newWindow = false) {\n    if (!url || typeof url !== "string") {\n      throw new Error(\'A valid "url" parameter must provided.\');\n    }\n    const target = newWindow ? LinkTarget.BLANK : this.externalLinkTarget,\n      rel = this.externalLinkRel;\n    if (this.externalLinkEnabled) {\n      link.href = link.title = url;\n    } else {\n      link.href = "";\n      link.title = `Disabled: ${url}`;\n      link.onclick = () => false;\n    }\n    let targetStr = "";\n    switch (target) {\n      case LinkTarget.NONE:\n        break;\n      case LinkTarget.SELF:\n        targetStr = "_self";\n        break;\n      case LinkTarget.BLANK:\n        targetStr = "_blank";\n        break;\n      case LinkTarget.PARENT:\n        targetStr = "_parent";\n        break;\n      case LinkTarget.TOP:\n        targetStr = "_top";\n        break;\n    }\n    link.target = targetStr;\n    link.rel = typeof rel === "string" ? rel : DEFAULT_LINK_REL;\n  }\n  getDestinationHash(dest) {\n    if (typeof dest === "string") {\n      if (dest.length > 0) {\n        return this.getAnchorUrl("#" + escape(dest));\n      }\n    } else if (Array.isArray(dest)) {\n      const str = JSON.stringify(dest);\n      if (str.length > 0) {\n        return this.getAnchorUrl("#" + escape(str));\n      }\n    }\n    return this.getAnchorUrl("");\n  }\n  getAnchorUrl(anchor) {\n    return this.baseUrl ? this.baseUrl + anchor : anchor;\n  }\n  setHash(hash) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    let pageNumber, dest;\n    if (hash.includes("=")) {\n      const params = parseQueryString(hash);\n      if (params.has("search")) {\n        const query = params.get("search").replaceAll(\'"\', ""),\n          phrase = params.get("phrase") === "true";\n        this.eventBus.dispatch("findfromurlhash", {\n          source: this,\n          query: phrase ? query : query.match(/\\S+/g)\n        });\n      }\n      if (params.has("page")) {\n        pageNumber = params.get("page") | 0 || 1;\n      }\n      if (params.has("zoom")) {\n        const zoomArgs = params.get("zoom").split(",");\n        const zoomArg = zoomArgs[0];\n        const zoomArgNumber = parseFloat(zoomArg);\n        if (!zoomArg.includes("Fit")) {\n          dest = [null, {\n            name: "XYZ"\n          }, zoomArgs.length > 1 ? zoomArgs[1] | 0 : null, zoomArgs.length > 2 ? zoomArgs[2] | 0 : null, zoomArgNumber ? zoomArgNumber / 100 : zoomArg];\n        } else if (zoomArg === "Fit" || zoomArg === "FitB") {\n          dest = [null, {\n            name: zoomArg\n          }];\n        } else if (zoomArg === "FitH" || zoomArg === "FitBH" || zoomArg === "FitV" || zoomArg === "FitBV") {\n          dest = [null, {\n            name: zoomArg\n          }, zoomArgs.length > 1 ? zoomArgs[1] | 0 : null];\n        } else if (zoomArg === "FitR") {\n          if (zoomArgs.length !== 5) {\n            console.error(\'PDFLinkService.setHash: Not enough parameters for "FitR".\');\n          } else {\n            dest = [null, {\n              name: zoomArg\n            }, zoomArgs[1] | 0, zoomArgs[2] | 0, zoomArgs[3] | 0, zoomArgs[4] | 0];\n          }\n        } else {\n          console.error(`PDFLinkService.setHash: "${zoomArg}" is not a valid zoom value.`);\n        }\n      }\n      if (dest) {\n        this.pdfViewer.scrollPageIntoView({\n          pageNumber: pageNumber || this.page,\n          destArray: dest,\n          allowNegativeOffset: true\n        });\n      } else if (pageNumber) {\n        this.page = pageNumber;\n      }\n      if (params.has("pagemode")) {\n        this.eventBus.dispatch("pagemode", {\n          source: this,\n          mode: params.get("pagemode")\n        });\n      }\n      if (params.has("nameddest")) {\n        this.goToDestination(params.get("nameddest"));\n      }\n      return;\n    }\n    dest = unescape(hash);\n    try {\n      dest = JSON.parse(dest);\n      if (!Array.isArray(dest)) {\n        dest = dest.toString();\n      }\n    } catch {}\n    if (typeof dest === "string" || PDFLinkService.#isValidExplicitDest(dest)) {\n      this.goToDestination(dest);\n      return;\n    }\n    console.error(`PDFLinkService.setHash: "${unescape(hash)}" is not a valid destination.`);\n  }\n  executeNamedAction(action) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    switch (action) {\n      case "GoBack":\n        this.pdfHistory?.back();\n        break;\n      case "GoForward":\n        this.pdfHistory?.forward();\n        break;\n      case "NextPage":\n        this.pdfViewer.nextPage();\n        break;\n      case "PrevPage":\n        this.pdfViewer.previousPage();\n        break;\n      case "LastPage":\n        this.page = this.pagesCount;\n        break;\n      case "FirstPage":\n        this.page = 1;\n        break;\n      default:\n        break;\n    }\n    this.eventBus.dispatch("namedaction", {\n      source: this,\n      action\n    });\n  }\n  async executeSetOCGState(action) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const pdfDocument = this.pdfDocument,\n      optionalContentConfig = await this.pdfViewer.optionalContentConfigPromise;\n    if (pdfDocument !== this.pdfDocument) {\n      return;\n    }\n    optionalContentConfig.setOCGState(action);\n    this.pdfViewer.optionalContentConfigPromise = Promise.resolve(optionalContentConfig);\n  }\n  static #isValidExplicitDest(dest) {\n    if (!Array.isArray(dest) || dest.length < 2) {\n      return false;\n    }\n    const [page, zoom, ...args] = dest;\n    if (!(typeof page === "object" && Number.isInteger(page?.num) && Number.isInteger(page?.gen)) && !Number.isInteger(page)) {\n      return false;\n    }\n    if (!(typeof zoom === "object" && typeof zoom?.name === "string")) {\n      return false;\n    }\n    const argsLen = args.length;\n    let allowNull = true;\n    switch (zoom.name) {\n      case "XYZ":\n        if (argsLen < 2 || argsLen > 3) {\n          return false;\n        }\n        break;\n      case "Fit":\n      case "FitB":\n        return argsLen === 0;\n      case "FitH":\n      case "FitBH":\n      case "FitV":\n      case "FitBV":\n        if (argsLen > 1) {\n          return false;\n        }\n        break;\n      case "FitR":\n        if (argsLen !== 4) {\n          return false;\n        }\n        allowNull = false;\n        break;\n      default:\n        return false;\n    }\n    for (const arg of args) {\n      if (!(typeof arg === "number" || allowNull && arg === null)) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\nclass SimpleLinkService extends PDFLinkService {\n  setDocument(pdfDocument, baseUrl = null) {}\n}\n\n;// CONCATENATED MODULE:./pdfjs.js\nconst {\n  AbortException,\n  AnnotationEditorLayer,\n  AnnotationEditorParamsType,\n  AnnotationEditorType,\n  AnnotationEditorUIManager,\n  AnnotationLayer,\n  AnnotationMode,\n  build,\n  CMapCompressionType,\n  ColorPicker,\n  createValidAbsoluteUrl,\n  DOMSVGFactory,\n  DrawLayer,\n  FeatureTest,\n  fetchData,\n  getDocument,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl: pdfjs_getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  GlobalWorkerOptions,\n  ImageKind,\n  InvalidPDFException,\n  isDataScheme,\n  isPdfFile,\n  MissingPDFException,\n  noContextMenu,\n  normalizeUnicode,\n  OPS,\n  PasswordResponses,\n  PDFDataRangeTransport,\n  PDFDateString,\n  PDFWorker,\n  PermissionFlag,\n  PixelsPerInch,\n  RenderingCancelledException,\n  setLayerDimensions,\n  shadow,\n  TextLayer,\n  UnexpectedResponseException,\n  Util,\n  VerbosityLevel,\n  version,\n  XfaLayer\n} = globalThis.pdfjsLib;\n\n;// CONCATENATED MODULE:./event_utils.js\nconst WaitOnType = {\n  EVENT: "event",\n  TIMEOUT: "timeout"\n};\nasync function waitOnEventOrTimeout({\n  target,\n  name,\n  delay = 0\n}) {\n  if (typeof target !== "object" || !(name && typeof name === "string") || !(Number.isInteger(delay) && delay >= 0)) {\n    throw new Error("waitOnEventOrTimeout - invalid parameters.");\n  }\n  const {\n    promise,\n    resolve\n  } = Promise.withResolvers();\n  const ac = new AbortController();\n  function handler(type) {\n    ac.abort();\n    clearTimeout(timeout);\n    resolve(type);\n  }\n  const evtMethod = target instanceof EventBus ? "_on" : "addEventListener";\n  target[evtMethod](name, handler.bind(null, WaitOnType.EVENT), {\n    signal: ac.signal\n  });\n  const timeout = setTimeout(handler.bind(null, WaitOnType.TIMEOUT), delay);\n  return promise;\n}\nclass EventBus {\n  #listeners = Object.create(null);\n  on(eventName, listener, options = null) {\n    this._on(eventName, listener, {\n      external: true,\n      once: options?.once,\n      signal: options?.signal\n    });\n  }\n  off(eventName, listener, options = null) {\n    this._off(eventName, listener);\n  }\n  dispatch(eventName, data) {\n    const eventListeners = this.#listeners[eventName];\n    if (!eventListeners || eventListeners.length === 0) {\n      return;\n    }\n    let externalListeners;\n    for (const {\n      listener,\n      external,\n      once\n    } of eventListeners.slice(0)) {\n      if (once) {\n        this._off(eventName, listener);\n      }\n      if (external) {\n        (externalListeners ||= []).push(listener);\n        continue;\n      }\n      listener(data);\n    }\n    if (externalListeners) {\n      for (const listener of externalListeners) {\n        listener(data);\n      }\n      externalListeners = null;\n    }\n  }\n  _on(eventName, listener, options = null) {\n    let rmAbort = null;\n    if (options?.signal instanceof AbortSignal) {\n      const {\n        signal\n      } = options;\n      if (signal.aborted) {\n        console.error("Cannot use an `aborted` signal.");\n        return;\n      }\n      const onAbort = () => this._off(eventName, listener);\n      rmAbort = () => signal.removeEventListener("abort", onAbort);\n      signal.addEventListener("abort", onAbort);\n    }\n    const eventListeners = this.#listeners[eventName] ||= [];\n    eventListeners.push({\n      listener,\n      external: options?.external === true,\n      once: options?.once === true,\n      rmAbort\n    });\n  }\n  _off(eventName, listener, options = null) {\n    const eventListeners = this.#listeners[eventName];\n    if (!eventListeners) {\n      return;\n    }\n    for (let i = 0, ii = eventListeners.length; i < ii; i++) {\n      const evt = eventListeners[i];\n      if (evt.listener === listener) {\n        evt.rmAbort?.();\n        eventListeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n}\nclass FirefoxEventBus extends EventBus {\n  #externalServices;\n  #globalEventNames;\n  #isInAutomation;\n  constructor(globalEventNames, externalServices, isInAutomation) {\n    super();\n    this.#globalEventNames = globalEventNames;\n    this.#externalServices = externalServices;\n    this.#isInAutomation = isInAutomation;\n  }\n  dispatch(eventName, data) {\n    throw new Error("Not implemented: FirefoxEventBus.dispatch");\n  }\n}\n\n;// CONCATENATED MODULE:./external_services.js\nclass BaseExternalServices {\n  updateFindControlState(data) {}\n  updateFindMatchesCount(data) {}\n  initPassiveLoading() {}\n  reportTelemetry(data) {}\n  async createL10n() {\n    throw new Error("Not implemented: createL10n");\n  }\n  createScripting() {\n    throw new Error("Not implemented: createScripting");\n  }\n  updateEditorStates(data) {\n    throw new Error("Not implemented: updateEditorStates");\n  }\n  dispatchGlobalEvent(_event) {}\n}\n\n;// CONCATENATED MODULE:./preferences.js\n\nclass BasePreferences {\n  #defaults = Object.freeze({\n    altTextLearnMoreUrl: "",\n    annotationEditorMode: 0,\n    annotationMode: 2,\n    cursorToolOnLoad: 0,\n    defaultZoomDelay: 400,\n    defaultZoomValue: "",\n    disablePageLabels: false,\n    enableAltText: false,\n    enableAltTextModelDownload: true,\n    enableGuessAltText: true,\n    enableHighlightFloatingButton: false,\n    enableNewAltTextWhenAddingImage: true,\n    enablePermissions: false,\n    enablePrintAutoRotate: true,\n    enableScripting: true,\n    enableUpdatedAddImage: false,\n    externalLinkTarget: 0,\n    highlightEditorColors: "yellow=#FFFF98,green=#53FFBC,blue=#80EBFF,pink=#FFCBE6,red=#FF4F5F",\n    historyUpdateUrl: false,\n    ignoreDestinationZoom: false,\n    forcePageColors: false,\n    pageColorsBackground: "Canvas",\n    pageColorsForeground: "CanvasText",\n    pdfBugEnabled: false,\n    sidebarViewOnLoad: -1,\n    scrollModeOnLoad: -1,\n    spreadModeOnLoad: -1,\n    textLayerMode: 1,\n    viewOnLoad: 0,\n    disableAutoFetch: false,\n    disableFontFace: false,\n    disableRange: false,\n    disableStream: false,\n    enableHWA: true,\n    enableXfa: true,\n    viewerCssTheme: 0\n  });\n  #initializedPromise = null;\n  constructor() {\n    this.#initializedPromise = this._readFromStorage(this.#defaults).then(({\n      browserPrefs,\n      prefs\n    }) => {\n      if (AppOptions._checkDisablePreferences()) {\n        return;\n      }\n      AppOptions.setAll({\n        ...browserPrefs,\n        ...prefs\n      }, true);\n    });\n  }\n  async _writeToStorage(prefObj) {\n    throw new Error("Not implemented: _writeToStorage");\n  }\n  async _readFromStorage(prefObj) {\n    throw new Error("Not implemented: _readFromStorage");\n  }\n  async reset() {\n    await this.#initializedPromise;\n    AppOptions.setAll(this.#defaults, true);\n    await this._writeToStorage(this.#defaults);\n  }\n  async set(name, value) {\n    await this.#initializedPromise;\n    AppOptions.setAll({\n      [name]: value\n    }, true);\n    await this._writeToStorage(AppOptions.getAll(OptionKind.PREFERENCE));\n  }\n  async get(name) {\n    await this.#initializedPromise;\n    return AppOptions.get(name);\n  }\n  get initializedPromise() {\n    return this.#initializedPromise;\n  }\n}\n\n;// CONCATENATED MODULE: ./node_modules/@fluent/bundle/esm/types.js\nclass FluentType {\n  constructor(value) {\n    this.value = value;\n  }\n  valueOf() {\n    return this.value;\n  }\n}\nclass FluentNone extends FluentType {\n  constructor(value = "???") {\n    super(value);\n  }\n  toString(scope) {\n    return `{${this.value}}`;\n  }\n}\nclass FluentNumber extends FluentType {\n  constructor(value, opts = {}) {\n    super(value);\n    this.opts = opts;\n  }\n  toString(scope) {\n    try {\n      const nf = scope.memoizeIntlObject(Intl.NumberFormat, this.opts);\n      return nf.format(this.value);\n    } catch (err) {\n      scope.reportError(err);\n      return this.value.toString(10);\n    }\n  }\n}\nclass FluentDateTime extends FluentType {\n  constructor(value, opts = {}) {\n    super(value);\n    this.opts = opts;\n  }\n  toString(scope) {\n    try {\n      const dtf = scope.memoizeIntlObject(Intl.DateTimeFormat, this.opts);\n      return dtf.format(this.value);\n    } catch (err) {\n      scope.reportError(err);\n      return new Date(this.value).toISOString();\n    }\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/@fluent/bundle/esm/resolver.js\n\nconst MAX_PLACEABLES = 100;\nconst FSI = "\\u2068";\nconst PDI = "\\u2069";\nfunction match(scope, selector, key) {\n  if (key === selector) {\n    return true;\n  }\n  if (key instanceof FluentNumber && selector instanceof FluentNumber && key.value === selector.value) {\n    return true;\n  }\n  if (selector instanceof FluentNumber && typeof key === "string") {\n    let category = scope.memoizeIntlObject(Intl.PluralRules, selector.opts).select(selector.value);\n    if (key === category) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction getDefault(scope, variants, star) {\n  if (variants[star]) {\n    return resolvePattern(scope, variants[star].value);\n  }\n  scope.reportError(new RangeError("No default"));\n  return new FluentNone();\n}\nfunction getArguments(scope, args) {\n  const positional = [];\n  const named = Object.create(null);\n  for (const arg of args) {\n    if (arg.type === "narg") {\n      named[arg.name] = resolveExpression(scope, arg.value);\n    } else {\n      positional.push(resolveExpression(scope, arg));\n    }\n  }\n  return {\n    positional,\n    named\n  };\n}\nfunction resolveExpression(scope, expr) {\n  switch (expr.type) {\n    case "str":\n      return expr.value;\n    case "num":\n      return new FluentNumber(expr.value, {\n        minimumFractionDigits: expr.precision\n      });\n    case "var":\n      return resolveVariableReference(scope, expr);\n    case "mesg":\n      return resolveMessageReference(scope, expr);\n    case "term":\n      return resolveTermReference(scope, expr);\n    case "func":\n      return resolveFunctionReference(scope, expr);\n    case "select":\n      return resolveSelectExpression(scope, expr);\n    default:\n      return new FluentNone();\n  }\n}\nfunction resolveVariableReference(scope, {\n  name\n}) {\n  let arg;\n  if (scope.params) {\n    if (Object.prototype.hasOwnProperty.call(scope.params, name)) {\n      arg = scope.params[name];\n    } else {\n      return new FluentNone(`$${name}`);\n    }\n  } else if (scope.args && Object.prototype.hasOwnProperty.call(scope.args, name)) {\n    arg = scope.args[name];\n  } else {\n    scope.reportError(new ReferenceError(`Unknown variable: $${name}`));\n    return new FluentNone(`$${name}`);\n  }\n  if (arg instanceof FluentType) {\n    return arg;\n  }\n  switch (typeof arg) {\n    case "string":\n      return arg;\n    case "number":\n      return new FluentNumber(arg);\n    case "object":\n      if (arg instanceof Date) {\n        return new FluentDateTime(arg.getTime());\n      }\n    default:\n      scope.reportError(new TypeError(`Variable type not supported: $${name}, ${typeof arg}`));\n      return new FluentNone(`$${name}`);\n  }\n}\nfunction resolveMessageReference(scope, {\n  name,\n  attr\n}) {\n  const message = scope.bundle._messages.get(name);\n  if (!message) {\n    scope.reportError(new ReferenceError(`Unknown message: ${name}`));\n    return new FluentNone(name);\n  }\n  if (attr) {\n    const attribute = message.attributes[attr];\n    if (attribute) {\n      return resolvePattern(scope, attribute);\n    }\n    scope.reportError(new ReferenceError(`Unknown attribute: ${attr}`));\n    return new FluentNone(`${name}.${attr}`);\n  }\n  if (message.value) {\n    return resolvePattern(scope, message.value);\n  }\n  scope.reportError(new ReferenceError(`No value: ${name}`));\n  return new FluentNone(name);\n}\nfunction resolveTermReference(scope, {\n  name,\n  attr,\n  args\n}) {\n  const id = `-${name}`;\n  const term = scope.bundle._terms.get(id);\n  if (!term) {\n    scope.reportError(new ReferenceError(`Unknown term: ${id}`));\n    return new FluentNone(id);\n  }\n  if (attr) {\n    const attribute = term.attributes[attr];\n    if (attribute) {\n      scope.params = getArguments(scope, args).named;\n      const resolved = resolvePattern(scope, attribute);\n      scope.params = null;\n      return resolved;\n    }\n    scope.reportError(new ReferenceError(`Unknown attribute: ${attr}`));\n    return new FluentNone(`${id}.${attr}`);\n  }\n  scope.params = getArguments(scope, args).named;\n  const resolved = resolvePattern(scope, term.value);\n  scope.params = null;\n  return resolved;\n}\nfunction resolveFunctionReference(scope, {\n  name,\n  args\n}) {\n  let func = scope.bundle._functions[name];\n  if (!func) {\n    scope.reportError(new ReferenceError(`Unknown function: ${name}()`));\n    return new FluentNone(`${name}()`);\n  }\n  if (typeof func !== "function") {\n    scope.reportError(new TypeError(`Function ${name}() is not callable`));\n    return new FluentNone(`${name}()`);\n  }\n  try {\n    let resolved = getArguments(scope, args);\n    return func(resolved.positional, resolved.named);\n  } catch (err) {\n    scope.reportError(err);\n    return new FluentNone(`${name}()`);\n  }\n}\nfunction resolveSelectExpression(scope, {\n  selector,\n  variants,\n  star\n}) {\n  let sel = resolveExpression(scope, selector);\n  if (sel instanceof FluentNone) {\n    return getDefault(scope, variants, star);\n  }\n  for (const variant of variants) {\n    const key = resolveExpression(scope, variant.key);\n    if (match(scope, sel, key)) {\n      return resolvePattern(scope, variant.value);\n    }\n  }\n  return getDefault(scope, variants, star);\n}\nfunction resolveComplexPattern(scope, ptn) {\n  if (scope.dirty.has(ptn)) {\n    scope.reportError(new RangeError("Cyclic reference"));\n    return new FluentNone();\n  }\n  scope.dirty.add(ptn);\n  const result = [];\n  const useIsolating = scope.bundle._useIsolating && ptn.length > 1;\n  for (const elem of ptn) {\n    if (typeof elem === "string") {\n      result.push(scope.bundle._transform(elem));\n      continue;\n    }\n    scope.placeables++;\n    if (scope.placeables > MAX_PLACEABLES) {\n      scope.dirty.delete(ptn);\n      throw new RangeError(`Too many placeables expanded: ${scope.placeables}, ` + `max allowed is ${MAX_PLACEABLES}`);\n    }\n    if (useIsolating) {\n      result.push(FSI);\n    }\n    result.push(resolveExpression(scope, elem).toString(scope));\n    if (useIsolating) {\n      result.push(PDI);\n    }\n  }\n  scope.dirty.delete(ptn);\n  return result.join("");\n}\nfunction resolvePattern(scope, value) {\n  if (typeof value === "string") {\n    return scope.bundle._transform(value);\n  }\n  return resolveComplexPattern(scope, value);\n}\n;// CONCATENATED MODULE: ./node_modules/@fluent/bundle/esm/scope.js\nclass Scope {\n  constructor(bundle, errors, args) {\n    this.dirty = new WeakSet();\n    this.params = null;\n    this.placeables = 0;\n    this.bundle = bundle;\n    this.errors = errors;\n    this.args = args;\n  }\n  reportError(error) {\n    if (!this.errors || !(error instanceof Error)) {\n      throw error;\n    }\n    this.errors.push(error);\n  }\n  memoizeIntlObject(ctor, opts) {\n    let cache = this.bundle._intls.get(ctor);\n    if (!cache) {\n      cache = {};\n      this.bundle._intls.set(ctor, cache);\n    }\n    let id = JSON.stringify(opts);\n    if (!cache[id]) {\n      cache[id] = new ctor(this.bundle.locales, opts);\n    }\n    return cache[id];\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/@fluent/bundle/esm/builtins.js\n\nfunction values(opts, allowed) {\n  const unwrapped = Object.create(null);\n  for (const [name, opt] of Object.entries(opts)) {\n    if (allowed.includes(name)) {\n      unwrapped[name] = opt.valueOf();\n    }\n  }\n  return unwrapped;\n}\nconst NUMBER_ALLOWED = ["unitDisplay", "currencyDisplay", "useGrouping", "minimumIntegerDigits", "minimumFractionDigits", "maximumFractionDigits", "minimumSignificantDigits", "maximumSignificantDigits"];\nfunction NUMBER(args, opts) {\n  let arg = args[0];\n  if (arg instanceof FluentNone) {\n    return new FluentNone(`NUMBER(${arg.valueOf()})`);\n  }\n  if (arg instanceof FluentNumber) {\n    return new FluentNumber(arg.valueOf(), {\n      ...arg.opts,\n      ...values(opts, NUMBER_ALLOWED)\n    });\n  }\n  if (arg instanceof FluentDateTime) {\n    return new FluentNumber(arg.valueOf(), {\n      ...values(opts, NUMBER_ALLOWED)\n    });\n  }\n  throw new TypeError("Invalid argument to NUMBER");\n}\nconst DATETIME_ALLOWED = ["dateStyle", "timeStyle", "fractionalSecondDigits", "dayPeriod", "hour12", "weekday", "era", "year", "month", "day", "hour", "minute", "second", "timeZoneName"];\nfunction DATETIME(args, opts) {\n  let arg = args[0];\n  if (arg instanceof FluentNone) {\n    return new FluentNone(`DATETIME(${arg.valueOf()})`);\n  }\n  if (arg instanceof FluentDateTime) {\n    return new FluentDateTime(arg.valueOf(), {\n      ...arg.opts,\n      ...values(opts, DATETIME_ALLOWED)\n    });\n  }\n  if (arg instanceof FluentNumber) {\n    return new FluentDateTime(arg.valueOf(), {\n      ...values(opts, DATETIME_ALLOWED)\n    });\n  }\n  throw new TypeError("Invalid argument to DATETIME");\n}\n;// CONCATENATED MODULE: ./node_modules/@fluent/bundle/esm/memoizer.js\nconst cache = new Map();\nfunction getMemoizerForLocale(locales) {\n  const stringLocale = Array.isArray(locales) ? locales.join(" ") : locales;\n  let memoizer = cache.get(stringLocale);\n  if (memoizer === undefined) {\n    memoizer = new Map();\n    cache.set(stringLocale, memoizer);\n  }\n  return memoizer;\n}\n;// CONCATENATED MODULE: ./node_modules/@fluent/bundle/esm/bundle.js\n\n\n\n\n\nclass FluentBundle {\n  constructor(locales, {\n    functions,\n    useIsolating = true,\n    transform = v => v\n  } = {}) {\n    this._terms = new Map();\n    this._messages = new Map();\n    this.locales = Array.isArray(locales) ? locales : [locales];\n    this._functions = {\n      NUMBER: NUMBER,\n      DATETIME: DATETIME,\n      ...functions\n    };\n    this._useIsolating = useIsolating;\n    this._transform = transform;\n    this._intls = getMemoizerForLocale(locales);\n  }\n  hasMessage(id) {\n    return this._messages.has(id);\n  }\n  getMessage(id) {\n    return this._messages.get(id);\n  }\n  addResource(res, {\n    allowOverrides = false\n  } = {}) {\n    const errors = [];\n    for (let i = 0; i < res.body.length; i++) {\n      let entry = res.body[i];\n      if (entry.id.startsWith("-")) {\n        if (allowOverrides === false && this._terms.has(entry.id)) {\n          errors.push(new Error(`Attempt to override an existing term: "${entry.id}"`));\n          continue;\n        }\n        this._terms.set(entry.id, entry);\n      } else {\n        if (allowOverrides === false && this._messages.has(entry.id)) {\n          errors.push(new Error(`Attempt to override an existing message: "${entry.id}"`));\n          continue;\n        }\n        this._messages.set(entry.id, entry);\n      }\n    }\n    return errors;\n  }\n  formatPattern(pattern, args = null, errors = null) {\n    if (typeof pattern === "string") {\n      return this._transform(pattern);\n    }\n    let scope = new Scope(this, errors, args);\n    try {\n      let value = resolveComplexPattern(scope, pattern);\n      return value.toString(scope);\n    } catch (err) {\n      if (scope.errors && err instanceof Error) {\n        scope.errors.push(err);\n        return new FluentNone().toString(scope);\n      }\n      throw err;\n    }\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/@fluent/bundle/esm/resource.js\nconst RE_MESSAGE_START = /^(-?[a-zA-Z][\\w-]*) *= */gm;\nconst RE_ATTRIBUTE_START = /\\.([a-zA-Z][\\w-]*) *= */y;\nconst RE_VARIANT_START = /\\*?\\[/y;\nconst RE_NUMBER_LITERAL = /(-?[0-9]+(?:\\.([0-9]+))?)/y;\nconst RE_IDENTIFIER = /([a-zA-Z][\\w-]*)/y;\nconst RE_REFERENCE = /([$-])?([a-zA-Z][\\w-]*)(?:\\.([a-zA-Z][\\w-]*))?/y;\nconst RE_FUNCTION_NAME = /^[A-Z][A-Z0-9_-]*$/;\nconst RE_TEXT_RUN = /([^{}\\n\\r]+)/y;\nconst RE_STRING_RUN = /([^\\\\"\\n\\r]*)/y;\nconst RE_STRING_ESCAPE = /\\\\([\\\\"])/y;\nconst RE_UNICODE_ESCAPE = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{6})/y;\nconst RE_LEADING_NEWLINES = /^\\n+/;\nconst RE_TRAILING_SPACES = / +$/;\nconst RE_BLANK_LINES = / *\\r?\\n/g;\nconst RE_INDENT = /( *)$/;\nconst TOKEN_BRACE_OPEN = /{\\s*/y;\nconst TOKEN_BRACE_CLOSE = /\\s*}/y;\nconst TOKEN_BRACKET_OPEN = /\\[\\s*/y;\nconst TOKEN_BRACKET_CLOSE = /\\s*] */y;\nconst TOKEN_PAREN_OPEN = /\\s*\\(\\s*/y;\nconst TOKEN_ARROW = /\\s*->\\s*/y;\nconst TOKEN_COLON = /\\s*:\\s*/y;\nconst TOKEN_COMMA = /\\s*,?\\s*/y;\nconst TOKEN_BLANK = /\\s+/y;\nclass FluentResource {\n  constructor(source) {\n    this.body = [];\n    RE_MESSAGE_START.lastIndex = 0;\n    let cursor = 0;\n    while (true) {\n      let next = RE_MESSAGE_START.exec(source);\n      if (next === null) {\n        break;\n      }\n      cursor = RE_MESSAGE_START.lastIndex;\n      try {\n        this.body.push(parseMessage(next[1]));\n      } catch (err) {\n        if (err instanceof SyntaxError) {\n          continue;\n        }\n        throw err;\n      }\n    }\n    function test(re) {\n      re.lastIndex = cursor;\n      return re.test(source);\n    }\n    function consumeChar(char, errorClass) {\n      if (source[cursor] === char) {\n        cursor++;\n        return true;\n      }\n      if (errorClass) {\n        throw new errorClass(`Expected ${char}`);\n      }\n      return false;\n    }\n    function consumeToken(re, errorClass) {\n      if (test(re)) {\n        cursor = re.lastIndex;\n        return true;\n      }\n      if (errorClass) {\n        throw new errorClass(`Expected ${re.toString()}`);\n      }\n      return false;\n    }\n    function match(re) {\n      re.lastIndex = cursor;\n      let result = re.exec(source);\n      if (result === null) {\n        throw new SyntaxError(`Expected ${re.toString()}`);\n      }\n      cursor = re.lastIndex;\n      return result;\n    }\n    function match1(re) {\n      return match(re)[1];\n    }\n    function parseMessage(id) {\n      let value = parsePattern();\n      let attributes = parseAttributes();\n      if (value === null && Object.keys(attributes).length === 0) {\n        throw new SyntaxError("Expected message value or attributes");\n      }\n      return {\n        id,\n        value,\n        attributes\n      };\n    }\n    function parseAttributes() {\n      let attrs = Object.create(null);\n      while (test(RE_ATTRIBUTE_START)) {\n        let name = match1(RE_ATTRIBUTE_START);\n        let value = parsePattern();\n        if (value === null) {\n          throw new SyntaxError("Expected attribute value");\n        }\n        attrs[name] = value;\n      }\n      return attrs;\n    }\n    function parsePattern() {\n      let first;\n      if (test(RE_TEXT_RUN)) {\n        first = match1(RE_TEXT_RUN);\n      }\n      if (source[cursor] === "{" || source[cursor] === "}") {\n        return parsePatternElements(first ? [first] : [], Infinity);\n      }\n      let indent = parseIndent();\n      if (indent) {\n        if (first) {\n          return parsePatternElements([first, indent], indent.length);\n        }\n        indent.value = trim(indent.value, RE_LEADING_NEWLINES);\n        return parsePatternElements([indent], indent.length);\n      }\n      if (first) {\n        return trim(first, RE_TRAILING_SPACES);\n      }\n      return null;\n    }\n    function parsePatternElements(elements = [], commonIndent) {\n      while (true) {\n        if (test(RE_TEXT_RUN)) {\n          elements.push(match1(RE_TEXT_RUN));\n          continue;\n        }\n        if (source[cursor] === "{") {\n          elements.push(parsePlaceable());\n          continue;\n        }\n        if (source[cursor] === "}") {\n          throw new SyntaxError("Unbalanced closing brace");\n        }\n        let indent = parseIndent();\n        if (indent) {\n          elements.push(indent);\n          commonIndent = Math.min(commonIndent, indent.length);\n          continue;\n        }\n        break;\n      }\n      let lastIndex = elements.length - 1;\n      let lastElement = elements[lastIndex];\n      if (typeof lastElement === "string") {\n        elements[lastIndex] = trim(lastElement, RE_TRAILING_SPACES);\n      }\n      let baked = [];\n      for (let element of elements) {\n        if (element instanceof Indent) {\n          element = element.value.slice(0, element.value.length - commonIndent);\n        }\n        if (element) {\n          baked.push(element);\n        }\n      }\n      return baked;\n    }\n    function parsePlaceable() {\n      consumeToken(TOKEN_BRACE_OPEN, SyntaxError);\n      let selector = parseInlineExpression();\n      if (consumeToken(TOKEN_BRACE_CLOSE)) {\n        return selector;\n      }\n      if (consumeToken(TOKEN_ARROW)) {\n        let variants = parseVariants();\n        consumeToken(TOKEN_BRACE_CLOSE, SyntaxError);\n        return {\n          type: "select",\n          selector,\n          ...variants\n        };\n      }\n      throw new SyntaxError("Unclosed placeable");\n    }\n    function parseInlineExpression() {\n      if (source[cursor] === "{") {\n        return parsePlaceable();\n      }\n      if (test(RE_REFERENCE)) {\n        let [, sigil, name, attr = null] = match(RE_REFERENCE);\n        if (sigil === "$") {\n          return {\n            type: "var",\n            name\n          };\n        }\n        if (consumeToken(TOKEN_PAREN_OPEN)) {\n          let args = parseArguments();\n          if (sigil === "-") {\n            return {\n              type: "term",\n              name,\n              attr,\n              args\n            };\n          }\n          if (RE_FUNCTION_NAME.test(name)) {\n            return {\n              type: "func",\n              name,\n              args\n            };\n          }\n          throw new SyntaxError("Function names must be all upper-case");\n        }\n        if (sigil === "-") {\n          return {\n            type: "term",\n            name,\n            attr,\n            args: []\n          };\n        }\n        return {\n          type: "mesg",\n          name,\n          attr\n        };\n      }\n      return parseLiteral();\n    }\n    function parseArguments() {\n      let args = [];\n      while (true) {\n        switch (source[cursor]) {\n          case ")":\n            cursor++;\n            return args;\n          case undefined:\n            throw new SyntaxError("Unclosed argument list");\n        }\n        args.push(parseArgument());\n        consumeToken(TOKEN_COMMA);\n      }\n    }\n    function parseArgument() {\n      let expr = parseInlineExpression();\n      if (expr.type !== "mesg") {\n        return expr;\n      }\n      if (consumeToken(TOKEN_COLON)) {\n        return {\n          type: "narg",\n          name: expr.name,\n          value: parseLiteral()\n        };\n      }\n      return expr;\n    }\n    function parseVariants() {\n      let variants = [];\n      let count = 0;\n      let star;\n      while (test(RE_VARIANT_START)) {\n        if (consumeChar("*")) {\n          star = count;\n        }\n        let key = parseVariantKey();\n        let value = parsePattern();\n        if (value === null) {\n          throw new SyntaxError("Expected variant value");\n        }\n        variants[count++] = {\n          key,\n          value\n        };\n      }\n      if (count === 0) {\n        return null;\n      }\n      if (star === undefined) {\n        throw new SyntaxError("Expected default variant");\n      }\n      return {\n        variants,\n        star\n      };\n    }\n    function parseVariantKey() {\n      consumeToken(TOKEN_BRACKET_OPEN, SyntaxError);\n      let key;\n      if (test(RE_NUMBER_LITERAL)) {\n        key = parseNumberLiteral();\n      } else {\n        key = {\n          type: "str",\n          value: match1(RE_IDENTIFIER)\n        };\n      }\n      consumeToken(TOKEN_BRACKET_CLOSE, SyntaxError);\n      return key;\n    }\n    function parseLiteral() {\n      if (test(RE_NUMBER_LITERAL)) {\n        return parseNumberLiteral();\n      }\n      if (source[cursor] === \'"\') {\n        return parseStringLiteral();\n      }\n      throw new SyntaxError("Invalid expression");\n    }\n    function parseNumberLiteral() {\n      let [, value, fraction = ""] = match(RE_NUMBER_LITERAL);\n      let precision = fraction.length;\n      return {\n        type: "num",\n        value: parseFloat(value),\n        precision\n      };\n    }\n    function parseStringLiteral() {\n      consumeChar(\'"\', SyntaxError);\n      let value = "";\n      while (true) {\n        value += match1(RE_STRING_RUN);\n        if (source[cursor] === "\\\\") {\n          value += parseEscapeSequence();\n          continue;\n        }\n        if (consumeChar(\'"\')) {\n          return {\n            type: "str",\n            value\n          };\n        }\n        throw new SyntaxError("Unclosed string literal");\n      }\n    }\n    function parseEscapeSequence() {\n      if (test(RE_STRING_ESCAPE)) {\n        return match1(RE_STRING_ESCAPE);\n      }\n      if (test(RE_UNICODE_ESCAPE)) {\n        let [, codepoint4, codepoint6] = match(RE_UNICODE_ESCAPE);\n        let codepoint = parseInt(codepoint4 || codepoint6, 16);\n        return codepoint <= 0xd7ff || 0xe000 <= codepoint ? String.fromCodePoint(codepoint) : "\uFFFD";\n      }\n      throw new SyntaxError("Unknown escape sequence");\n    }\n    function parseIndent() {\n      let start = cursor;\n      consumeToken(TOKEN_BLANK);\n      switch (source[cursor]) {\n        case ".":\n        case "[":\n        case "*":\n        case "}":\n        case undefined:\n          return false;\n        case "{":\n          return makeIndent(source.slice(start, cursor));\n      }\n      if (source[cursor - 1] === " ") {\n        return makeIndent(source.slice(start, cursor));\n      }\n      return false;\n    }\n    function trim(text, re) {\n      return text.replace(re, "");\n    }\n    function makeIndent(blank) {\n      let value = blank.replace(RE_BLANK_LINES, "\\n");\n      let length = RE_INDENT.exec(blank)[1].length;\n      return new Indent(value, length);\n    }\n  }\n}\nclass Indent {\n  constructor(value, length) {\n    this.value = value;\n    this.length = length;\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/@fluent/bundle/esm/index.js\n\n\n\n;// CONCATENATED MODULE: ./node_modules/@fluent/dom/esm/overlay.js\nconst reOverlay = /<|&#?\\w+;/;\nconst TEXT_LEVEL_ELEMENTS = {\n  "http://www.w3.org/1999/xhtml": ["em", "strong", "small", "s", "cite", "q", "dfn", "abbr", "data", "time", "code", "var", "samp", "kbd", "sub", "sup", "i", "b", "u", "mark", "bdi", "bdo", "span", "br", "wbr"]\n};\nconst LOCALIZABLE_ATTRIBUTES = {\n  "http://www.w3.org/1999/xhtml": {\n    global: ["title", "aria-label", "aria-valuetext"],\n    a: ["download"],\n    area: ["download", "alt"],\n    input: ["alt", "placeholder"],\n    menuitem: ["label"],\n    menu: ["label"],\n    optgroup: ["label"],\n    option: ["label"],\n    track: ["label"],\n    img: ["alt"],\n    textarea: ["placeholder"],\n    th: ["abbr"]\n  },\n  "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul": {\n    global: ["accesskey", "aria-label", "aria-valuetext", "label", "title", "tooltiptext"],\n    description: ["value"],\n    key: ["key", "keycode"],\n    label: ["value"],\n    textbox: ["placeholder", "value"]\n  }\n};\nfunction translateElement(element, translation) {\n  const {\n    value\n  } = translation;\n  if (typeof value === "string") {\n    if (element.localName === "title" && element.namespaceURI === "http://www.w3.org/1999/xhtml") {\n      element.textContent = value;\n    } else if (!reOverlay.test(value)) {\n      element.textContent = value;\n    } else {\n      const templateElement = element.ownerDocument.createElementNS("http://www.w3.org/1999/xhtml", "template");\n      templateElement.innerHTML = value;\n      overlayChildNodes(templateElement.content, element);\n    }\n  }\n  overlayAttributes(translation, element);\n}\nfunction overlayChildNodes(fromFragment, toElement) {\n  for (const childNode of fromFragment.childNodes) {\n    if (childNode.nodeType === childNode.TEXT_NODE) {\n      continue;\n    }\n    if (childNode.hasAttribute("data-l10n-name")) {\n      const sanitized = getNodeForNamedElement(toElement, childNode);\n      fromFragment.replaceChild(sanitized, childNode);\n      continue;\n    }\n    if (isElementAllowed(childNode)) {\n      const sanitized = createSanitizedElement(childNode);\n      fromFragment.replaceChild(sanitized, childNode);\n      continue;\n    }\n    console.warn(`An element of forbidden type "${childNode.localName}" was found in ` + "the translation. Only safe text-level elements and elements with " + "data-l10n-name are allowed.");\n    fromFragment.replaceChild(createTextNodeFromTextContent(childNode), childNode);\n  }\n  toElement.textContent = "";\n  toElement.appendChild(fromFragment);\n}\nfunction hasAttribute(attributes, name) {\n  if (!attributes) {\n    return false;\n  }\n  for (let attr of attributes) {\n    if (attr.name === name) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction overlayAttributes(fromElement, toElement) {\n  const explicitlyAllowed = toElement.hasAttribute("data-l10n-attrs") ? toElement.getAttribute("data-l10n-attrs").split(",").map(i => i.trim()) : null;\n  for (const attr of Array.from(toElement.attributes)) {\n    if (isAttrNameLocalizable(attr.name, toElement, explicitlyAllowed) && !hasAttribute(fromElement.attributes, attr.name)) {\n      toElement.removeAttribute(attr.name);\n    }\n  }\n  if (!fromElement.attributes) {\n    return;\n  }\n  for (const attr of Array.from(fromElement.attributes)) {\n    if (isAttrNameLocalizable(attr.name, toElement, explicitlyAllowed) && toElement.getAttribute(attr.name) !== attr.value) {\n      toElement.setAttribute(attr.name, attr.value);\n    }\n  }\n}\nfunction getNodeForNamedElement(sourceElement, translatedChild) {\n  const childName = translatedChild.getAttribute("data-l10n-name");\n  const sourceChild = sourceElement.querySelector(`[data-l10n-name="${childName}"]`);\n  if (!sourceChild) {\n    console.warn(`An element named "${childName}" wasn\'t found in the source.`);\n    return createTextNodeFromTextContent(translatedChild);\n  }\n  if (sourceChild.localName !== translatedChild.localName) {\n    console.warn(`An element named "${childName}" was found in the translation ` + `but its type ${translatedChild.localName} didn\'t match the ` + `element found in the source (${sourceChild.localName}).`);\n    return createTextNodeFromTextContent(translatedChild);\n  }\n  sourceElement.removeChild(sourceChild);\n  const clone = sourceChild.cloneNode(false);\n  return shallowPopulateUsing(translatedChild, clone);\n}\nfunction createSanitizedElement(element) {\n  const clone = element.ownerDocument.createElement(element.localName);\n  return shallowPopulateUsing(element, clone);\n}\nfunction createTextNodeFromTextContent(element) {\n  return element.ownerDocument.createTextNode(element.textContent);\n}\nfunction isElementAllowed(element) {\n  const allowed = TEXT_LEVEL_ELEMENTS[element.namespaceURI];\n  return allowed && allowed.includes(element.localName);\n}\nfunction isAttrNameLocalizable(name, element, explicitlyAllowed = null) {\n  if (explicitlyAllowed && explicitlyAllowed.includes(name)) {\n    return true;\n  }\n  const allowed = LOCALIZABLE_ATTRIBUTES[element.namespaceURI];\n  if (!allowed) {\n    return false;\n  }\n  const attrName = name.toLowerCase();\n  const elemName = element.localName;\n  if (allowed.global.includes(attrName)) {\n    return true;\n  }\n  if (!allowed[elemName]) {\n    return false;\n  }\n  if (allowed[elemName].includes(attrName)) {\n    return true;\n  }\n  if (element.namespaceURI === "http://www.w3.org/1999/xhtml" && elemName === "input" && attrName === "value") {\n    const type = element.type.toLowerCase();\n    if (type === "submit" || type === "button" || type === "reset") {\n      return true;\n    }\n  }\n  return false;\n}\nfunction shallowPopulateUsing(fromElement, toElement) {\n  toElement.textContent = fromElement.textContent;\n  overlayAttributes(fromElement, toElement);\n  return toElement;\n}\n;// CONCATENATED MODULE: ./node_modules/cached-iterable/src/cached_iterable.mjs\nclass CachedIterable extends Array {\n  static from(iterable) {\n    if (iterable instanceof this) {\n      return iterable;\n    }\n    return new this(iterable);\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/cached-iterable/src/cached_sync_iterable.mjs\n\nclass CachedSyncIterable extends CachedIterable {\n  constructor(iterable) {\n    super();\n    if (Symbol.iterator in Object(iterable)) {\n      this.iterator = iterable[Symbol.iterator]();\n    } else {\n      throw new TypeError("Argument must implement the iteration protocol.");\n    }\n  }\n  [Symbol.iterator]() {\n    const cached = this;\n    let cur = 0;\n    return {\n      next() {\n        if (cached.length <= cur) {\n          cached.push(cached.iterator.next());\n        }\n        return cached[cur++];\n      }\n    };\n  }\n  touchNext(count = 1) {\n    let idx = 0;\n    while (idx++ < count) {\n      const last = this[this.length - 1];\n      if (last && last.done) {\n        break;\n      }\n      this.push(this.iterator.next());\n    }\n    return this[this.length - 1];\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/cached-iterable/src/cached_async_iterable.mjs\n\nclass CachedAsyncIterable extends CachedIterable {\n  constructor(iterable) {\n    super();\n    if (Symbol.asyncIterator in Object(iterable)) {\n      this.iterator = iterable[Symbol.asyncIterator]();\n    } else if (Symbol.iterator in Object(iterable)) {\n      this.iterator = iterable[Symbol.iterator]();\n    } else {\n      throw new TypeError("Argument must implement the iteration protocol.");\n    }\n  }\n  [Symbol.asyncIterator]() {\n    const cached = this;\n    let cur = 0;\n    return {\n      async next() {\n        if (cached.length <= cur) {\n          cached.push(cached.iterator.next());\n        }\n        return cached[cur++];\n      }\n    };\n  }\n  async touchNext(count = 1) {\n    let idx = 0;\n    while (idx++ < count) {\n      const last = this[this.length - 1];\n      if (last && (await last).done) {\n        break;\n      }\n      this.push(this.iterator.next());\n    }\n    return this[this.length - 1];\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/cached-iterable/src/index.mjs\n\n\n;// CONCATENATED MODULE: ./node_modules/@fluent/dom/esm/localization.js\n\nclass Localization {\n  constructor(resourceIds = [], generateBundles) {\n    this.resourceIds = resourceIds;\n    this.generateBundles = generateBundles;\n    this.onChange(true);\n  }\n  addResourceIds(resourceIds, eager = false) {\n    this.resourceIds.push(...resourceIds);\n    this.onChange(eager);\n    return this.resourceIds.length;\n  }\n  removeResourceIds(resourceIds) {\n    this.resourceIds = this.resourceIds.filter(r => !resourceIds.includes(r));\n    this.onChange();\n    return this.resourceIds.length;\n  }\n  async formatWithFallback(keys, method) {\n    const translations = [];\n    let hasAtLeastOneBundle = false;\n    for await (const bundle of this.bundles) {\n      hasAtLeastOneBundle = true;\n      const missingIds = keysFromBundle(method, bundle, keys, translations);\n      if (missingIds.size === 0) {\n        break;\n      }\n      if (typeof console !== "undefined") {\n        const locale = bundle.locales[0];\n        const ids = Array.from(missingIds).join(", ");\n        console.warn(`[fluent] Missing translations in ${locale}: ${ids}`);\n      }\n    }\n    if (!hasAtLeastOneBundle && typeof console !== "undefined") {\n      console.warn(`[fluent] Request for keys failed because no resource bundles got generated.\n  keys: ${JSON.stringify(keys)}.\n  resourceIds: ${JSON.stringify(this.resourceIds)}.`);\n    }\n    return translations;\n  }\n  formatMessages(keys) {\n    return this.formatWithFallback(keys, messageFromBundle);\n  }\n  formatValues(keys) {\n    return this.formatWithFallback(keys, valueFromBundle);\n  }\n  async formatValue(id, args) {\n    const [val] = await this.formatValues([{\n      id,\n      args\n    }]);\n    return val;\n  }\n  handleEvent() {\n    this.onChange();\n  }\n  onChange(eager = false) {\n    this.bundles = CachedAsyncIterable.from(this.generateBundles(this.resourceIds));\n    if (eager) {\n      this.bundles.touchNext(2);\n    }\n  }\n}\nfunction valueFromBundle(bundle, errors, message, args) {\n  if (message.value) {\n    return bundle.formatPattern(message.value, args, errors);\n  }\n  return null;\n}\nfunction messageFromBundle(bundle, errors, message, args) {\n  const formatted = {\n    value: null,\n    attributes: null\n  };\n  if (message.value) {\n    formatted.value = bundle.formatPattern(message.value, args, errors);\n  }\n  let attrNames = Object.keys(message.attributes);\n  if (attrNames.length > 0) {\n    formatted.attributes = new Array(attrNames.length);\n    for (let [i, name] of attrNames.entries()) {\n      let value = bundle.formatPattern(message.attributes[name], args, errors);\n      formatted.attributes[i] = {\n        name,\n        value\n      };\n    }\n  }\n  return formatted;\n}\nfunction keysFromBundle(method, bundle, keys, translations) {\n  const messageErrors = [];\n  const missingIds = new Set();\n  keys.forEach(({\n    id,\n    args\n  }, i) => {\n    if (translations[i] !== undefined) {\n      return;\n    }\n    let message = bundle.getMessage(id);\n    if (message) {\n      messageErrors.length = 0;\n      translations[i] = method(bundle, messageErrors, message, args);\n      if (messageErrors.length > 0 && typeof console !== "undefined") {\n        const locale = bundle.locales[0];\n        const errors = messageErrors.join(", ");\n        console.warn(`[fluent][resolver] errors in ${locale}/${id}: ${errors}.`);\n      }\n    } else {\n      missingIds.add(id);\n    }\n  });\n  return missingIds;\n}\n;// CONCATENATED MODULE: ./node_modules/@fluent/dom/esm/dom_localization.js\n\n\nconst L10NID_ATTR_NAME = "data-l10n-id";\nconst L10NARGS_ATTR_NAME = "data-l10n-args";\nconst L10N_ELEMENT_QUERY = `[${L10NID_ATTR_NAME}]`;\nclass DOMLocalization extends Localization {\n  constructor(resourceIds, generateBundles) {\n    super(resourceIds, generateBundles);\n    this.roots = new Set();\n    this.pendingrAF = null;\n    this.pendingElements = new Set();\n    this.windowElement = null;\n    this.mutationObserver = null;\n    this.observerConfig = {\n      attributes: true,\n      characterData: false,\n      childList: true,\n      subtree: true,\n      attributeFilter: [L10NID_ATTR_NAME, L10NARGS_ATTR_NAME]\n    };\n  }\n  onChange(eager = false) {\n    super.onChange(eager);\n    if (this.roots) {\n      this.translateRoots();\n    }\n  }\n  setAttributes(element, id, args) {\n    element.setAttribute(L10NID_ATTR_NAME, id);\n    if (args) {\n      element.setAttribute(L10NARGS_ATTR_NAME, JSON.stringify(args));\n    } else {\n      element.removeAttribute(L10NARGS_ATTR_NAME);\n    }\n    return element;\n  }\n  getAttributes(element) {\n    return {\n      id: element.getAttribute(L10NID_ATTR_NAME),\n      args: JSON.parse(element.getAttribute(L10NARGS_ATTR_NAME) || null)\n    };\n  }\n  connectRoot(newRoot) {\n    for (const root of this.roots) {\n      if (root === newRoot || root.contains(newRoot) || newRoot.contains(root)) {\n        throw new Error("Cannot add a root that overlaps with existing root.");\n      }\n    }\n    if (this.windowElement) {\n      if (this.windowElement !== newRoot.ownerDocument.defaultView) {\n        throw new Error(`Cannot connect a root:\n          DOMLocalization already has a root from a different window.`);\n      }\n    } else {\n      this.windowElement = newRoot.ownerDocument.defaultView;\n      this.mutationObserver = new this.windowElement.MutationObserver(mutations => this.translateMutations(mutations));\n    }\n    this.roots.add(newRoot);\n    this.mutationObserver.observe(newRoot, this.observerConfig);\n  }\n  disconnectRoot(root) {\n    this.roots.delete(root);\n    this.pauseObserving();\n    if (this.roots.size === 0) {\n      this.mutationObserver = null;\n      if (this.windowElement && this.pendingrAF) {\n        this.windowElement.cancelAnimationFrame(this.pendingrAF);\n      }\n      this.windowElement = null;\n      this.pendingrAF = null;\n      this.pendingElements.clear();\n      return true;\n    }\n    this.resumeObserving();\n    return false;\n  }\n  translateRoots() {\n    const roots = Array.from(this.roots);\n    return Promise.all(roots.map(root => this.translateFragment(root)));\n  }\n  pauseObserving() {\n    if (!this.mutationObserver) {\n      return;\n    }\n    this.translateMutations(this.mutationObserver.takeRecords());\n    this.mutationObserver.disconnect();\n  }\n  resumeObserving() {\n    if (!this.mutationObserver) {\n      return;\n    }\n    for (const root of this.roots) {\n      this.mutationObserver.observe(root, this.observerConfig);\n    }\n  }\n  translateMutations(mutations) {\n    for (const mutation of mutations) {\n      switch (mutation.type) {\n        case "attributes":\n          if (mutation.target.hasAttribute("data-l10n-id")) {\n            this.pendingElements.add(mutation.target);\n          }\n          break;\n        case "childList":\n          for (const addedNode of mutation.addedNodes) {\n            if (addedNode.nodeType === addedNode.ELEMENT_NODE) {\n              if (addedNode.childElementCount) {\n                for (const element of this.getTranslatables(addedNode)) {\n                  this.pendingElements.add(element);\n                }\n              } else if (addedNode.hasAttribute(L10NID_ATTR_NAME)) {\n                this.pendingElements.add(addedNode);\n              }\n            }\n          }\n          break;\n      }\n    }\n    if (this.pendingElements.size > 0) {\n      if (this.pendingrAF === null) {\n        this.pendingrAF = this.windowElement.requestAnimationFrame(() => {\n          this.translateElements(Array.from(this.pendingElements));\n          this.pendingElements.clear();\n          this.pendingrAF = null;\n        });\n      }\n    }\n  }\n  translateFragment(frag) {\n    return this.translateElements(this.getTranslatables(frag));\n  }\n  async translateElements(elements) {\n    if (!elements.length) {\n      return undefined;\n    }\n    const keys = elements.map(this.getKeysForElement);\n    const translations = await this.formatMessages(keys);\n    return this.applyTranslations(elements, translations);\n  }\n  applyTranslations(elements, translations) {\n    this.pauseObserving();\n    for (let i = 0; i < elements.length; i++) {\n      if (translations[i] !== undefined) {\n        translateElement(elements[i], translations[i]);\n      }\n    }\n    this.resumeObserving();\n  }\n  getTranslatables(element) {\n    const nodes = Array.from(element.querySelectorAll(L10N_ELEMENT_QUERY));\n    if (typeof element.hasAttribute === "function" && element.hasAttribute(L10NID_ATTR_NAME)) {\n      nodes.push(element);\n    }\n    return nodes;\n  }\n  getKeysForElement(element) {\n    return {\n      id: element.getAttribute(L10NID_ATTR_NAME),\n      args: JSON.parse(element.getAttribute(L10NARGS_ATTR_NAME) || null)\n    };\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/@fluent/dom/esm/index.js\n\n\n;// CONCATENATED MODULE:./l10n.js\nclass L10n {\n  #dir;\n  #elements = new Set();\n  #lang;\n  #l10n;\n  constructor({\n    lang,\n    isRTL\n  }, l10n = null) {\n    this.#lang = L10n.#fixupLangCode(lang);\n    this.#l10n = l10n;\n    this.#dir = isRTL ?? L10n.#isRTL(this.#lang) ? "rtl" : "ltr";\n  }\n  _setL10n(l10n) {\n    this.#l10n = l10n;\n  }\n  getLanguage() {\n    return this.#lang;\n  }\n  getDirection() {\n    return this.#dir;\n  }\n  async get(ids, args = null, fallback) {\n    if (Array.isArray(ids)) {\n      ids = ids.map(id => ({\n        id\n      }));\n      const messages = await this.#l10n.formatMessages(ids);\n      return messages.map(message => message.value);\n    }\n    const messages = await this.#l10n.formatMessages([{\n      id: ids,\n      args\n    }]);\n    return messages[0]?.value || fallback;\n  }\n  async translate(element) {\n    this.#elements.add(element);\n    try {\n      this.#l10n.connectRoot(element);\n      await this.#l10n.translateRoots();\n    } catch {}\n  }\n  async translateOnce(element) {\n    try {\n      await this.#l10n.translateElements([element]);\n    } catch (ex) {\n      console.error(`translateOnce: "${ex}".`);\n    }\n  }\n  async destroy() {\n    for (const element of this.#elements) {\n      this.#l10n.disconnectRoot(element);\n    }\n    this.#elements.clear();\n    this.#l10n.pauseObserving();\n  }\n  pause() {\n    this.#l10n.pauseObserving();\n  }\n  resume() {\n    this.#l10n.resumeObserving();\n  }\n  static #fixupLangCode(langCode) {\n    langCode = langCode?.toLowerCase() || "en-us";\n    const PARTIAL_LANG_CODES = {\n      en: "en-us",\n      es: "es-es",\n      fy: "fy-nl",\n      ga: "ga-ie",\n      gu: "gu-in",\n      hi: "hi-in",\n      hy: "hy-am",\n      nb: "nb-no",\n      ne: "ne-np",\n      nn: "nn-no",\n      pa: "pa-in",\n      pt: "pt-pt",\n      sv: "sv-se",\n      zh: "zh-cn"\n    };\n    return PARTIAL_LANG_CODES[langCode] || langCode;\n  }\n  static #isRTL(lang) {\n    const shortCode = lang.split("-", 1)[0];\n    return ["ar", "he", "fa", "ps", "ur"].includes(shortCode);\n  }\n}\nconst GenericL10n = null;\n\n;// CONCATENATED MODULE:./genericl10n.js\n\n\n\n\nfunction createBundle(lang, text) {\n  const resource = new FluentResource(text);\n  const bundle = new FluentBundle(lang);\n  const errors = bundle.addResource(resource);\n  if (errors.length) {\n    console.error("L10n errors", errors);\n  }\n  return bundle;\n}\nclass genericl10n_GenericL10n extends L10n {\n  constructor(lang) {\n    super({\n      lang\n    });\n    const generateBundles = !lang ? genericl10n_GenericL10n.#generateBundlesFallback.bind(genericl10n_GenericL10n, this.getLanguage()) : genericl10n_GenericL10n.#generateBundles.bind(genericl10n_GenericL10n, "en-us", this.getLanguage());\n    this._setL10n(new DOMLocalization([], generateBundles));\n  }\n  static async *#generateBundles(defaultLang, baseLang) {\n    const {\n      baseURL,\n      paths\n    } = await this.#getPaths();\n    const langs = [baseLang];\n    if (defaultLang !== baseLang) {\n      const shortLang = baseLang.split("-", 1)[0];\n      if (shortLang !== baseLang) {\n        langs.push(shortLang);\n      }\n      langs.push(defaultLang);\n    }\n    for (const lang of langs) {\n      const bundle = await this.#createBundle(lang, baseURL, paths);\n      if (bundle) {\n        yield bundle;\n      } else if (lang === "en-us") {\n        yield this.#createBundleFallback(lang);\n      }\n    }\n  }\n  static async #createBundle(lang, baseURL, paths) {\n    const path = paths[lang];\n    if (!path) {\n      return null;\n    }\n    const url = new URL(path, baseURL);\n    const text = await fetchData(url, "text");\n    return createBundle(lang, text);\n  }\n  static async #getPaths() {\n    try {\n      const {\n        href\n      } = document.querySelector(`link[type="application/l10n"]`);\n      const paths = await fetchData(href, "json");\n      return {\n        baseURL: href.replace(/[^/]*$/, "") || "./",\n        paths\n      };\n    } catch {}\n    return {\n      baseURL: "./",\n      paths: Object.create(null)\n    };\n  }\n  static async *#generateBundlesFallback(lang) {\n    yield this.#createBundleFallback(lang);\n  }\n  static async #createBundleFallback(lang) {\n    const text = "pdfjs-previous-button =\\n    .title = Previous Page\\npdfjs-previous-button-label = Previous\\npdfjs-next-button =\\n    .title = Next Page\\npdfjs-next-button-label = Next\\npdfjs-page-input =\\n    .title = Page\\npdfjs-of-pages = of { $pagesCount }\\npdfjs-page-of-pages = ({ $pageNumber } of { $pagesCount })\\npdfjs-zoom-out-button =\\n    .title = Zoom Out\\npdfjs-zoom-out-button-label = Zoom Out\\npdfjs-zoom-in-button =\\n    .title = Zoom In\\npdfjs-zoom-in-button-label = Zoom In\\npdfjs-zoom-select =\\n    .title = Zoom\\npdfjs-presentation-mode-button =\\n    .title = Switch to Presentation Mode\\npdfjs-presentation-mode-button-label = Presentation Mode\\npdfjs-open-file-button =\\n    .title = Open File\\npdfjs-open-file-button-label = Open\\npdfjs-print-button =\\n    .title = Print\\npdfjs-print-button-label = Print\\npdfjs-save-button =\\n    .title = Save\\npdfjs-save-button-label = Save\\npdfjs-upload-button =\\n    .title = Upload\\npdfjs-upload-button-label = Upload\\npdfjs-download-button =\\n    .title = Download\\npdfjs-download-button-label = Download\\npdfjs-bookmark-button =\\n    .title = Current Page (View URL from Current Page)\\npdfjs-bookmark-button-label = Current Page\\npdfjs-tools-button =\\n    .title = Tools\\npdfjs-tools-button-label = Tools\\npdfjs-first-page-button =\\n    .title = Go to First Page\\npdfjs-first-page-button-label = Go to First Page\\npdfjs-last-page-button =\\n    .title = Go to Last Page\\npdfjs-last-page-button-label = Go to Last Page\\npdfjs-page-rotate-cw-button =\\n    .title = Rotate Clockwise\\npdfjs-page-rotate-cw-button-label = Rotate Clockwise\\npdfjs-page-rotate-ccw-button =\\n    .title = Rotate Counterclockwise\\npdfjs-page-rotate-ccw-button-label = Rotate Counterclockwise\\npdfjs-cursor-text-select-tool-button =\\n    .title = Enable Text Selection Tool\\npdfjs-cursor-text-select-tool-button-label = Text Selection Tool\\npdfjs-cursor-hand-tool-button =\\n    .title = Enable Hand Tool\\npdfjs-cursor-hand-tool-button-label = Hand Tool\\npdfjs-scroll-page-button =\\n    .title = Use Page Scrolling\\npdfjs-scroll-page-button-label = Page Scrolling\\npdfjs-scroll-vertical-button =\\n    .title = Use Vertical Scrolling\\npdfjs-scroll-vertical-button-label = Vertical Scrolling\\npdfjs-scroll-horizontal-button =\\n    .title = Use Horizontal Scrolling\\npdfjs-scroll-horizontal-button-label = Horizontal Scrolling\\npdfjs-scroll-wrapped-button =\\n    .title = Use Wrapped Scrolling\\npdfjs-scroll-wrapped-button-label = Wrapped Scrolling\\npdfjs-spread-none-button =\\n    .title = Do not join page spreads\\npdfjs-spread-none-button-label = No Spreads\\npdfjs-spread-odd-button =\\n    .title = Join page spreads starting with odd-numbered pages\\npdfjs-spread-odd-button-label = Odd Spreads\\npdfjs-spread-even-button =\\n    .title = Join page spreads starting with even-numbered pages\\npdfjs-spread-even-button-label = Even Spreads\\npdfjs-document-properties-button =\\n    .title = Document Properties\\u2026\\npdfjs-document-properties-button-label = Document Properties\\u2026\\npdfjs-document-properties-file-name = File name:\\npdfjs-document-properties-file-size = File size:\\npdfjs-document-properties-size-kb = { NUMBER($kb, maximumSignificantDigits: 3) } KB ({ $b } bytes)\\npdfjs-document-properties-size-mb = { NUMBER($mb, maximumSignificantDigits: 3) } MB ({ $b } bytes)\\npdfjs-document-properties-title = Title:\\npdfjs-document-properties-author = Author:\\npdfjs-document-properties-subject = Subject:\\npdfjs-document-properties-keywords = Keywords:\\npdfjs-document-properties-creation-date = Creation Date:\\npdfjs-document-properties-modification-date = Modification Date:\\npdfjs-document-properties-date-time-string = { DATETIME($dateObj, dateStyle: \\"short\\", timeStyle: \\"medium\\") }\\npdfjs-document-properties-creator = Creator:\\npdfjs-document-properties-producer = PDF Producer:\\npdfjs-document-properties-version = PDF Version:\\npdfjs-document-properties-page-count = Page Count:\\npdfjs-document-properties-page-size = Page Size:\\npdfjs-document-properties-page-size-unit-inches = in\\npdfjs-document-properties-page-size-unit-millimeters = mm\\npdfjs-document-properties-page-size-orientation-portrait = portrait\\npdfjs-document-properties-page-size-orientation-landscape = landscape\\npdfjs-document-properties-page-size-name-a-three = A3\\npdfjs-document-properties-page-size-name-a-four = A4\\npdfjs-document-properties-page-size-name-letter = Letter\\npdfjs-document-properties-page-size-name-legal = Legal\\npdfjs-document-properties-page-size-dimension-string = { $width } \\xD7 { $height } { $unit } ({ $orientation })\\npdfjs-document-properties-page-size-dimension-name-string = { $width } \\xD7 { $height } { $unit } ({ $name }, { $orientation })\\npdfjs-document-properties-linearized = Fast Web View:\\npdfjs-document-properties-linearized-yes = Yes\\npdfjs-document-properties-linearized-no = No\\npdfjs-document-properties-close-button = Close\\npdfjs-print-progress-message = Preparing document for printing\\u2026\\npdfjs-print-progress-percent = { $progress }%\\npdfjs-print-progress-close-button = Cancel\\npdfjs-printing-not-supported = Warning: Printing is not fully supported by this browser.\\npdfjs-printing-not-ready = Warning: The PDF is not fully loaded for printing.\\npdfjs-toggle-sidebar-button =\\n    .title = Toggle Sidebar\\npdfjs-toggle-sidebar-notification-button =\\n    .title = Toggle Sidebar (document contains outline/attachments/layers)\\npdfjs-toggle-sidebar-button-label = Toggle Sidebar\\npdfjs-document-outline-button =\\n    .title = Show Document Outline (double-click to expand/collapse all items)\\npdfjs-document-outline-button-label = Document Outline\\npdfjs-attachments-button =\\n    .title = Show Attachments\\npdfjs-attachments-button-label = Attachments\\npdfjs-layers-button =\\n    .title = Show Layers (double-click to reset all layers to the default state)\\npdfjs-layers-button-label = Layers\\npdfjs-thumbs-button =\\n    .title = Show Thumbnails\\npdfjs-thumbs-button-label = Thumbnails\\npdfjs-current-outline-item-button =\\n    .title = Find Current Outline Item\\npdfjs-current-outline-item-button-label = Current Outline Item\\npdfjs-findbar-button =\\n    .title = Find in Document\\npdfjs-findbar-button-label = Find\\npdfjs-additional-layers = Additional Layers\\npdfjs-thumb-page-title =\\n    .title = Page { $page }\\npdfjs-thumb-page-canvas =\\n    .aria-label = Thumbnail of Page { $page }\\npdfjs-find-input =\\n    .title = Find\\n    .placeholder = Find in document\\u2026\\npdfjs-find-previous-button =\\n    .title = Find the previous occurrence of the phrase\\npdfjs-find-previous-button-label = Previous\\npdfjs-find-next-button =\\n    .title = Find the next occurrence of the phrase\\npdfjs-find-next-button-label = Next\\npdfjs-find-highlight-checkbox = Highlight All\\npdfjs-find-match-case-checkbox-label = Match Case\\npdfjs-find-match-diacritics-checkbox-label = Match Diacritics\\npdfjs-find-entire-word-checkbox-label = Whole Words\\npdfjs-find-reached-top = Reached top of document, continued from bottom\\npdfjs-find-reached-bottom = Reached end of document, continued from top\\npdfjs-find-match-count =\\n    { $total ->\\n        [one] { $current } of { $total } match\\n       *[other] { $current } of { $total } matches\\n    }\\npdfjs-find-match-count-limit =\\n    { $limit ->\\n        [one] More than { $limit } match\\n       *[other] More than { $limit } matches\\n    }\\npdfjs-find-not-found = Phrase not found\\npdfjs-page-scale-width = Page Width\\npdfjs-page-scale-fit = Page Fit\\npdfjs-page-scale-auto = Automatic Zoom\\npdfjs-page-scale-actual = Actual Size\\npdfjs-page-scale-percent = { $scale }%\\npdfjs-page-landmark =\\n    .aria-label = Page { $page }\\npdfjs-loading-error = An error occurred while loading the PDF.\\npdfjs-invalid-file-error = Invalid or corrupted PDF file.\\npdfjs-missing-file-error = Missing PDF file.\\npdfjs-unexpected-response-error = Unexpected server response.\\npdfjs-rendering-error = An error occurred while rendering the page.\\npdfjs-annotation-date-time-string = { DATETIME($dateObj, dateStyle: \\"short\\", timeStyle: \\"medium\\") }\\npdfjs-text-annotation-type =\\n    .alt = [{ $type } Annotation]\\npdfjs-password-label = Enter the password to open this PDF file.\\npdfjs-password-invalid = Invalid password. Please try again.\\npdfjs-password-ok-button = OK\\npdfjs-password-cancel-button = Cancel\\npdfjs-web-fonts-disabled = Web fonts are disabled: unable to use embedded PDF fonts.\\npdfjs-editor-free-text-button =\\n    .title = Text\\npdfjs-editor-free-text-button-label = Text\\npdfjs-editor-ink-button =\\n    .title = Draw\\npdfjs-editor-ink-button-label = Draw\\npdfjs-editor-stamp-button =\\n    .title = Add or edit images\\npdfjs-editor-stamp-button-label = Add or edit images\\npdfjs-editor-highlight-button =\\n    .title = Highlight\\npdfjs-editor-highlight-button-label = Highlight\\npdfjs-highlight-floating-button1 =\\n    .title = Highlight\\n    .aria-label = Highlight\\npdfjs-highlight-floating-button-label = Highlight\\npdfjs-editor-remove-ink-button =\\n    .title = Remove drawing\\npdfjs-editor-remove-freetext-button =\\n    .title = Remove text\\npdfjs-editor-remove-stamp-button =\\n    .title = Remove image\\npdfjs-editor-remove-highlight-button =\\n    .title = Remove highlight\\npdfjs-editor-free-text-color-input = Color\\npdfjs-editor-free-text-size-input = Size\\npdfjs-editor-ink-color-input = Color\\npdfjs-editor-ink-thickness-input = Thickness\\npdfjs-editor-ink-opacity-input = Opacity\\npdfjs-editor-stamp-add-image-button =\\n    .title = Add image\\npdfjs-editor-stamp-add-image-button-label = Add image\\npdfjs-editor-free-highlight-thickness-input = Thickness\\npdfjs-editor-free-highlight-thickness-title =\\n    .title = Change thickness when highlighting items other than text\\npdfjs-free-text =\\n    .aria-label = Text Editor\\npdfjs-free-text-default-content = Start typing\\u2026\\npdfjs-ink =\\n    .aria-label = Draw Editor\\npdfjs-ink-canvas =\\n    .aria-label = User-created image\\npdfjs-editor-alt-text-button-label = Alt text\\npdfjs-editor-alt-text-edit-button-label = Edit alt text\\npdfjs-editor-alt-text-dialog-label = Choose an option\\npdfjs-editor-alt-text-dialog-description = Alt text (alternative text) helps when people can\\u2019t see the image or when it doesn\\u2019t load.\\npdfjs-editor-alt-text-add-description-label = Add a description\\npdfjs-editor-alt-text-add-description-description = Aim for 1-2 sentences that describe the subject, setting, or actions.\\npdfjs-editor-alt-text-mark-decorative-label = Mark as decorative\\npdfjs-editor-alt-text-mark-decorative-description = This is used for ornamental images, like borders or watermarks.\\npdfjs-editor-alt-text-cancel-button = Cancel\\npdfjs-editor-alt-text-save-button = Save\\npdfjs-editor-alt-text-decorative-tooltip = Marked as decorative\\npdfjs-editor-alt-text-textarea =\\n    .placeholder = For example, \\u201CA young man sits down at a table to eat a meal\\u201D\\npdfjs-editor-resizer-top-left =\\n    .aria-label = Top left corner \\u2014 resize\\npdfjs-editor-resizer-top-middle =\\n    .aria-label = Top middle \\u2014 resize\\npdfjs-editor-resizer-top-right =\\n    .aria-label = Top right corner \\u2014 resize\\npdfjs-editor-resizer-middle-right =\\n    .aria-label = Middle right \\u2014 resize\\npdfjs-editor-resizer-bottom-right =\\n    .aria-label = Bottom right corner \\u2014 resize\\npdfjs-editor-resizer-bottom-middle =\\n    .aria-label = Bottom middle \\u2014 resize\\npdfjs-editor-resizer-bottom-left =\\n    .aria-label = Bottom left corner \\u2014 resize\\npdfjs-editor-resizer-middle-left =\\n    .aria-label = Middle left \\u2014 resize\\npdfjs-editor-highlight-colorpicker-label = Highlight color\\npdfjs-editor-colorpicker-button =\\n    .title = Change color\\npdfjs-editor-colorpicker-dropdown =\\n    .aria-label = Color choices\\npdfjs-editor-colorpicker-yellow =\\n    .title = Yellow\\npdfjs-editor-colorpicker-green =\\n    .title = Green\\npdfjs-editor-colorpicker-blue =\\n    .title = Blue\\npdfjs-editor-colorpicker-pink =\\n    .title = Pink\\npdfjs-editor-colorpicker-red =\\n    .title = Red\\npdfjs-editor-highlight-show-all-button-label = Show all\\npdfjs-editor-highlight-show-all-button =\\n    .title = Show all\\npdfjs-editor-new-alt-text-dialog-edit-label = Edit alt text (image description)\\npdfjs-editor-new-alt-text-dialog-add-label = Add alt text (image description)\\npdfjs-editor-new-alt-text-textarea =\\n    .placeholder = Write your description here\\u2026\\npdfjs-editor-new-alt-text-description = Short description for people who can\\u2019t see the image or when the image doesn\\u2019t load.\\npdfjs-editor-new-alt-text-disclaimer1 = This alt text was created automatically and may be inaccurate.\\npdfjs-editor-new-alt-text-disclaimer-learn-more-url = Learn more\\npdfjs-editor-new-alt-text-create-automatically-button-label = Create alt text automatically\\npdfjs-editor-new-alt-text-not-now-button = Not now\\npdfjs-editor-new-alt-text-error-title = Couldn\\u2019t create alt text automatically\\npdfjs-editor-new-alt-text-error-description = Please write your own alt text or try again later.\\npdfjs-editor-new-alt-text-error-close-button = Close\\npdfjs-editor-new-alt-text-ai-model-downloading-progress = Downloading alt text AI model ({ $downloadedSize } of { $totalSize } MB)\\n    .aria-valuetext = Downloading alt text AI model ({ $downloadedSize } of { $totalSize } MB)\\npdfjs-editor-new-alt-text-added-button-label = Alt text added\\npdfjs-editor-new-alt-text-missing-button-label = Missing alt text\\npdfjs-editor-new-alt-text-to-review-button-label = Review alt text\\npdfjs-editor-new-alt-text-generated-alt-text-with-disclaimer = Created automatically: { $generatedAltText }\\npdfjs-image-alt-text-settings-button =\\n    .title = Image alt text settings\\npdfjs-image-alt-text-settings-button-label = Image alt text settings\\npdfjs-editor-alt-text-settings-dialog-label = Image alt text settings\\npdfjs-editor-alt-text-settings-automatic-title = Automatic alt text\\npdfjs-editor-alt-text-settings-create-model-button-label = Create alt text automatically\\npdfjs-editor-alt-text-settings-create-model-description = Suggests descriptions to help people who can\\u2019t see the image or when the image doesn\\u2019t load.\\npdfjs-editor-alt-text-settings-download-model-label = Alt text AI model ({ $totalSize } MB)\\npdfjs-editor-alt-text-settings-ai-model-description = Runs locally on your device so your data stays private. Required for automatic alt text.\\npdfjs-editor-alt-text-settings-delete-model-button = Delete\\npdfjs-editor-alt-text-settings-download-model-button = Download\\npdfjs-editor-alt-text-settings-downloading-model-button = Downloading\\u2026\\npdfjs-editor-alt-text-settings-editor-title = Alt text editor\\npdfjs-editor-alt-text-settings-show-dialog-button-label = Show alt text editor right away when adding an image\\npdfjs-editor-alt-text-settings-show-dialog-description = Helps you make sure all your images have alt text.\\npdfjs-editor-alt-text-settings-close-button = Close";\n    return createBundle(lang, text);\n  }\n}\n\n;// CONCATENATED MODULE:./generic_scripting.js\n\nasync function docProperties(pdfDocument) {\n  const url = "",\n    baseUrl = url.split("#", 1)[0];\n  let {\n    info,\n    metadata,\n    contentDispositionFilename,\n    contentLength\n  } = await pdfDocument.getMetadata();\n  if (!contentLength) {\n    const {\n      length\n    } = await pdfDocument.getDownloadInfo();\n    contentLength = length;\n  }\n  return {\n    ...info,\n    baseURL: baseUrl,\n    filesize: contentLength,\n    filename: contentDispositionFilename || getPdfFilenameFromUrl(url),\n    metadata: metadata?.getRaw(),\n    authors: metadata?.get("dc:creator"),\n    numPages: pdfDocument.numPages,\n    URL: url\n  };\n}\nclass GenericScripting {\n  constructor(sandboxBundleSrc) {\n    this._ready = new Promise((resolve, reject) => {\n      const sandbox = import( /*webpackIgnore: true*/sandboxBundleSrc);\n      sandbox.then(pdfjsSandbox => {\n        resolve(pdfjsSandbox.QuickJSSandbox());\n      }).catch(reject);\n    });\n  }\n  async createSandbox(data) {\n    const sandbox = await this._ready;\n    sandbox.create(data);\n  }\n  async dispatchEventInSandbox(event) {\n    const sandbox = await this._ready;\n    setTimeout(() => sandbox.dispatchEvent(event), 0);\n  }\n  async destroySandbox() {\n    const sandbox = await this._ready;\n    sandbox.nukeSandbox();\n  }\n}\n\n;// CONCATENATED MODULE:./genericcom.js\n\n\n\n\n\nfunction initCom(app) {}\nclass Preferences extends BasePreferences {\n  async _writeToStorage(prefObj) {\n    localStorage.setItem("pdfjs.preferences", JSON.stringify(prefObj));\n  }\n  async _readFromStorage(prefObj) {\n    return {\n      prefs: JSON.parse(localStorage.getItem("pdfjs.preferences"))\n    };\n  }\n}\nclass ExternalServices extends BaseExternalServices {\n  async createL10n() {\n    return new genericl10n_GenericL10n(AppOptions.get("localeProperties")?.lang);\n  }\n  createScripting() {\n    return new GenericScripting(AppOptions.get("sandboxBundleSrc"));\n  }\n}\nclass MLManager {\n  async isEnabledFor(_name) {\n    return false;\n  }\n  async deleteModel(_service) {\n    return null;\n  }\n  isReady(_name) {\n    return false;\n  }\n  guess(_data) {}\n  toggleService(_name, _enabled) {}\n  static getFakeMLManager(options) {\n    return new FakeMLManager(options);\n  }\n}\nclass FakeMLManager {\n  eventBus = null;\n  hasProgress = false;\n  constructor({\n    enableGuessAltText,\n    enableAltTextModelDownload\n  }) {\n    this.enableGuessAltText = enableGuessAltText;\n    this.enableAltTextModelDownload = enableAltTextModelDownload;\n  }\n  setEventBus(eventBus, abortSignal) {\n    this.eventBus = eventBus;\n  }\n  async isEnabledFor(_name) {\n    return this.enableGuessAltText;\n  }\n  async deleteModel(_name) {\n    this.enableAltTextModelDownload = false;\n    return null;\n  }\n  async loadModel(_name) {}\n  async downloadModel(_name) {\n    this.hasProgress = true;\n    const {\n      promise,\n      resolve\n    } = Promise.withResolvers();\n    const total = 1e8;\n    const end = 1.5 * total;\n    const increment = 5e6;\n    let loaded = 0;\n    const id = setInterval(() => {\n      loaded += increment;\n      if (loaded <= end) {\n        this.eventBus.dispatch("loadaiengineprogress", {\n          source: this,\n          detail: {\n            total,\n            totalLoaded: loaded,\n            finished: loaded + increment >= end\n          }\n        });\n        return;\n      }\n      clearInterval(id);\n      this.hasProgress = false;\n      this.enableAltTextModelDownload = true;\n      resolve(true);\n    }, 900);\n    return promise;\n  }\n  isReady(_name) {\n    return this.enableAltTextModelDownload;\n  }\n  guess({\n    request: {\n      data\n    }\n  }) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(data ? {\n          output: "Fake alt text"\n        } : {\n          error: true\n        });\n      }, 3000);\n    });\n  }\n  toggleService(_name, enabled) {\n    this.enableGuessAltText = enabled;\n  }\n}\n\n;// CONCATENATED MODULE:./new_alt_text_manager.js\n\nclass NewAltTextManager {\n  #boundCancel = this.#cancel.bind(this);\n  #createAutomaticallyButton;\n  #currentEditor = null;\n  #cancelButton;\n  #descriptionContainer;\n  #dialog;\n  #disclaimer;\n  #downloadModel;\n  #downloadModelDescription;\n  #eventBus;\n  #firstTime = false;\n  #guessedAltText;\n  #isEditing = null;\n  #imagePreview;\n  #imageData;\n  #isAILoading = false;\n  #wasAILoading = false;\n  #learnMore;\n  #notNowButton;\n  #overlayManager;\n  #textarea;\n  #title;\n  #uiManager;\n  #previousAltText = null;\n  constructor({\n    descriptionContainer,\n    dialog,\n    imagePreview,\n    cancelButton,\n    disclaimer,\n    notNowButton,\n    saveButton,\n    textarea,\n    learnMore,\n    errorCloseButton,\n    createAutomaticallyButton,\n    downloadModel,\n    downloadModelDescription,\n    title\n  }, overlayManager, eventBus) {\n    this.#cancelButton = cancelButton;\n    this.#createAutomaticallyButton = createAutomaticallyButton;\n    this.#descriptionContainer = descriptionContainer;\n    this.#dialog = dialog;\n    this.#disclaimer = disclaimer;\n    this.#notNowButton = notNowButton;\n    this.#imagePreview = imagePreview;\n    this.#textarea = textarea;\n    this.#learnMore = learnMore;\n    this.#title = title;\n    this.#downloadModel = downloadModel;\n    this.#downloadModelDescription = downloadModelDescription;\n    this.#overlayManager = overlayManager;\n    this.#eventBus = eventBus;\n    dialog.addEventListener("close", this.#close.bind(this));\n    dialog.addEventListener("contextmenu", event => {\n      if (event.target !== this.#textarea) {\n        event.preventDefault();\n      }\n    });\n    cancelButton.addEventListener("click", this.#boundCancel);\n    notNowButton.addEventListener("click", this.#boundCancel);\n    saveButton.addEventListener("click", this.#save.bind(this));\n    errorCloseButton.addEventListener("click", () => {\n      this.#toggleError(false);\n    });\n    createAutomaticallyButton.addEventListener("click", async () => {\n      const checked = createAutomaticallyButton.getAttribute("aria-pressed") !== "true";\n      this.#currentEditor._reportTelemetry({\n        action: "pdfjs.image.alt_text.ai_generation_check",\n        data: {\n          status: checked\n        }\n      });\n      if (this.#uiManager) {\n        this.#uiManager.setPreference("enableGuessAltText", checked);\n        await this.#uiManager.mlManager.toggleService("altText", checked);\n      }\n      this.#toggleGuessAltText(checked, false);\n    });\n    textarea.addEventListener("focus", () => {\n      this.#wasAILoading = this.#isAILoading;\n      this.#toggleLoading(false);\n    });\n    textarea.addEventListener("blur", () => {\n      if (textarea.value) {\n        return;\n      }\n      this.#toggleLoading(this.#wasAILoading);\n    });\n    textarea.addEventListener("input", () => {\n      this.#toggleTitle();\n      this.#toggleDisclaimer();\n    });\n    eventBus._on("enableguessalttext", ({\n      value\n    }) => {\n      this.#toggleGuessAltText(value, false);\n    });\n    this.#overlayManager.register(dialog);\n    this.#learnMore.addEventListener("click", () => {\n      this.#currentEditor._reportTelemetry({\n        action: "pdfjs.image.alt_text.info",\n        data: {\n          topic: "alt_text"\n        }\n      });\n    });\n  }\n  #toggleLoading(value) {\n    if (!this.#uiManager || this.#isAILoading === value) {\n      return;\n    }\n    this.#isAILoading = value;\n    this.#descriptionContainer.classList.toggle("loading", value);\n  }\n  #toggleError(value) {\n    if (!this.#uiManager) {\n      return;\n    }\n    this.#dialog.classList.toggle("error", value);\n  }\n  #toggleTitle() {\n    const isEditing = this.#isAILoading || !!this.#textarea.value;\n    if (this.#isEditing === isEditing) {\n      return;\n    }\n    this.#isEditing = isEditing;\n    this.#title.setAttribute("data-l10n-id", `pdfjs-editor-new-alt-text-dialog-${isEditing ? "edit" : "add"}-label`);\n  }\n  async #toggleGuessAltText(value, isInitial = false) {\n    if (!this.#uiManager) {\n      return;\n    }\n    this.#dialog.classList.toggle("aiDisabled", !value);\n    this.#createAutomaticallyButton.setAttribute("aria-pressed", value);\n    if (value) {\n      const {\n        altTextLearnMoreUrl\n      } = this.#uiManager.mlManager;\n      if (altTextLearnMoreUrl) {\n        this.#learnMore.href = altTextLearnMoreUrl;\n      }\n      this.#mlGuessAltText(isInitial);\n    } else {\n      this.#toggleLoading(false);\n      this.#isAILoading = false;\n      this.#toggleTitle();\n      this.#toggleDisclaimer();\n    }\n  }\n  #toggleNotNow() {\n    this.#notNowButton.classList.toggle("hidden", !this.#firstTime);\n    this.#cancelButton.classList.toggle("hidden", this.#firstTime);\n  }\n  #toggleAI(value) {\n    this.#dialog.classList.toggle("noAi", !value);\n    this.#toggleTitle();\n  }\n  #toggleDisclaimer(value = null) {\n    if (!this.#uiManager) {\n      return;\n    }\n    const hidden = value === null ? !this.#guessedAltText || this.#guessedAltText !== this.#textarea.value : !value;\n    this.#disclaimer.classList.toggle("hidden", hidden);\n  }\n  async #mlGuessAltText(isInitial) {\n    if (this.#isAILoading) {\n      return;\n    }\n    if (this.#textarea.value) {\n      return;\n    }\n    if (isInitial && this.#previousAltText !== null) {\n      return;\n    }\n    this.#guessedAltText = this.#currentEditor.guessedAltText;\n    if (this.#previousAltText === null && this.#guessedAltText) {\n      this.#addAltText(this.#guessedAltText);\n      this.#toggleDisclaimer();\n      this.#toggleTitle();\n      return;\n    }\n    this.#toggleLoading(true);\n    this.#toggleTitle();\n    this.#toggleDisclaimer(true);\n    let hasError = false;\n    try {\n      const altText = await this.#currentEditor.mlGuessAltText(this.#imageData, false);\n      if (altText) {\n        this.#guessedAltText = altText;\n        this.#wasAILoading = this.#isAILoading;\n        if (this.#isAILoading) {\n          this.#addAltText(altText);\n        }\n      }\n    } catch (e) {\n      console.error(e);\n      hasError = true;\n    }\n    this.#toggleLoading(false);\n    if (hasError && this.#uiManager) {\n      this.#toggleError(true);\n      this.#toggleTitle();\n      this.#toggleDisclaimer();\n    }\n  }\n  #addAltText(altText) {\n    if (!this.#uiManager || this.#textarea.value) {\n      return;\n    }\n    this.#textarea.value = altText;\n  }\n  #setProgress() {\n    this.#downloadModel.classList.toggle("hidden", false);\n    const callback = async ({\n      detail: {\n        finished,\n        total,\n        totalLoaded\n      }\n    }) => {\n      const ONE_MEGA_BYTES = 1e6;\n      totalLoaded = Math.min(0.99 * total, totalLoaded);\n      const totalSize = this.#downloadModelDescription.ariaValueMax = Math.round(total / ONE_MEGA_BYTES);\n      const downloadedSize = this.#downloadModelDescription.ariaValueNow = Math.round(totalLoaded / ONE_MEGA_BYTES);\n      this.#downloadModelDescription.setAttribute("data-l10n-args", JSON.stringify({\n        totalSize,\n        downloadedSize\n      }));\n      if (!finished) {\n        return;\n      }\n      this.#eventBus._off("loadaiengineprogress", callback);\n      this.#downloadModel.classList.toggle("hidden", true);\n      this.#toggleAI(true);\n      if (!this.#uiManager) {\n        return;\n      }\n      const {\n        mlManager\n      } = this.#uiManager;\n      mlManager.toggleService("altText", true);\n      this.#toggleGuessAltText(await mlManager.isEnabledFor("altText"), true);\n    };\n    this.#eventBus._on("loadaiengineprogress", callback);\n  }\n  async editAltText(uiManager, editor, firstTime) {\n    if (this.#currentEditor || !editor) {\n      return;\n    }\n    if (firstTime && editor.hasAltTextData()) {\n      editor.altTextFinish();\n      return;\n    }\n    this.#firstTime = firstTime;\n    let {\n      mlManager\n    } = uiManager;\n    let hasAI = !!mlManager;\n    if (mlManager && !mlManager.isReady("altText")) {\n      hasAI = false;\n      if (mlManager.hasProgress) {\n        this.#setProgress();\n      } else {\n        mlManager = null;\n      }\n    } else {\n      this.#downloadModel.classList.toggle("hidden", true);\n    }\n    const isAltTextEnabledPromise = mlManager?.isEnabledFor("altText");\n    this.#currentEditor = editor;\n    this.#uiManager = uiManager;\n    this.#uiManager.removeEditListeners();\n    ({\n      altText: this.#previousAltText\n    } = editor.altTextData);\n    this.#textarea.value = this.#previousAltText ?? "";\n    const AI_MAX_IMAGE_DIMENSION = 224;\n    let canvas;\n    if (mlManager) {\n      ({\n        canvas,\n        imageData: this.#imageData\n      } = editor.copyCanvas(AI_MAX_IMAGE_DIMENSION, true));\n      if (hasAI) {\n        this.#toggleGuessAltText(await isAltTextEnabledPromise, true);\n      }\n    } else {\n      ({\n        canvas\n      } = editor.copyCanvas(AI_MAX_IMAGE_DIMENSION, false));\n    }\n    canvas.setAttribute("role", "presentation");\n    this.#imagePreview.append(canvas);\n    this.#toggleNotNow();\n    this.#toggleAI(hasAI);\n    this.#toggleError(false);\n    try {\n      await this.#overlayManager.open(this.#dialog);\n    } catch (ex) {\n      this.#close();\n      throw ex;\n    }\n  }\n  #cancel() {\n    this.#currentEditor.altTextData = {\n      cancel: true\n    };\n    const altText = this.#textarea.value.trim();\n    this.#currentEditor._reportTelemetry({\n      action: "pdfjs.image.alt_text.dismiss",\n      data: {\n        alt_text_type: altText ? "present" : "empty",\n        flow: this.#firstTime ? "image_add" : "alt_text_edit"\n      }\n    });\n    this.#currentEditor._reportTelemetry({\n      action: "pdfjs.image.image_added",\n      data: {\n        alt_text_modal: true,\n        alt_text_type: "skipped"\n      }\n    });\n    this.#finish();\n  }\n  #finish() {\n    if (this.#overlayManager.active === this.#dialog) {\n      this.#overlayManager.close(this.#dialog);\n    }\n  }\n  #close() {\n    const canvas = this.#imagePreview.firstChild;\n    canvas.remove();\n    canvas.width = canvas.height = 0;\n    this.#imageData = null;\n    this.#toggleLoading(false);\n    this.#uiManager?.addEditListeners();\n    this.#currentEditor.altTextFinish();\n    this.#uiManager?.setSelected(this.#currentEditor);\n    this.#currentEditor = null;\n    this.#uiManager = null;\n  }\n  #save() {\n    const altText = this.#textarea.value.trim();\n    this.#currentEditor.altTextData = {\n      altText,\n      decorative: false\n    };\n    this.#currentEditor.altTextData.guessedAltText = this.#guessedAltText;\n    if (this.#guessedAltText && this.#guessedAltText !== altText) {\n      const guessedWords = new Set(this.#guessedAltText.split(/\\s+/));\n      const words = new Set(altText.split(/\\s+/));\n      this.#currentEditor._reportTelemetry({\n        action: "pdfjs.image.alt_text.user_edit",\n        data: {\n          total_words: guessedWords.size,\n          words_removed: guessedWords.difference(words).size,\n          words_added: words.difference(guessedWords).size\n        }\n      });\n    }\n    this.#currentEditor._reportTelemetry({\n      action: "pdfjs.image.image_added",\n      data: {\n        alt_text_modal: true,\n        alt_text_type: altText ? "present" : "empty"\n      }\n    });\n    this.#currentEditor._reportTelemetry({\n      action: "pdfjs.image.alt_text.save",\n      data: {\n        alt_text_type: altText ? "present" : "empty",\n        flow: this.#firstTime ? "image_add" : "alt_text_edit"\n      }\n    });\n    this.#finish();\n  }\n  destroy() {\n    this.#uiManager = null;\n    this.#finish();\n  }\n}\nclass ImageAltTextSettings {\n  #aiModelSettings;\n  #createModelButton;\n  #downloadModelButton;\n  #dialog;\n  #eventBus;\n  #mlManager;\n  #overlayManager;\n  #showAltTextDialogButton;\n  constructor({\n    dialog,\n    createModelButton,\n    aiModelSettings,\n    learnMore,\n    closeButton,\n    deleteModelButton,\n    downloadModelButton,\n    showAltTextDialogButton\n  }, overlayManager, eventBus, mlManager) {\n    this.#dialog = dialog;\n    this.#aiModelSettings = aiModelSettings;\n    this.#createModelButton = createModelButton;\n    this.#downloadModelButton = downloadModelButton;\n    this.#showAltTextDialogButton = showAltTextDialogButton;\n    this.#overlayManager = overlayManager;\n    this.#eventBus = eventBus;\n    this.#mlManager = mlManager;\n    const {\n      altTextLearnMoreUrl\n    } = mlManager;\n    if (altTextLearnMoreUrl) {\n      learnMore.href = altTextLearnMoreUrl;\n    }\n    dialog.addEventListener("contextmenu", noContextMenu);\n    createModelButton.addEventListener("click", async e => {\n      const checked = this.#togglePref("enableGuessAltText", e);\n      await mlManager.toggleService("altText", checked);\n      this.#reportTelemetry({\n        type: "stamp",\n        action: "pdfjs.image.alt_text.settings_ai_generation_check",\n        data: {\n          status: checked\n        }\n      });\n    });\n    showAltTextDialogButton.addEventListener("click", e => {\n      const checked = this.#togglePref("enableNewAltTextWhenAddingImage", e);\n      this.#reportTelemetry({\n        type: "stamp",\n        action: "pdfjs.image.alt_text.settings_edit_alt_text_check",\n        data: {\n          status: checked\n        }\n      });\n    });\n    deleteModelButton.addEventListener("click", this.#delete.bind(this, true));\n    downloadModelButton.addEventListener("click", this.#download.bind(this, true));\n    closeButton.addEventListener("click", this.#finish.bind(this));\n    learnMore.addEventListener("click", () => {\n      this.#reportTelemetry({\n        type: "stamp",\n        action: "pdfjs.image.alt_text.info",\n        data: {\n          topic: "ai_generation"\n        }\n      });\n    });\n    eventBus._on("enablealttextmodeldownload", ({\n      value\n    }) => {\n      if (value) {\n        this.#download(false);\n      } else {\n        this.#delete(false);\n      }\n    });\n    this.#overlayManager.register(dialog);\n  }\n  #reportTelemetry(data) {\n    this.#eventBus.dispatch("reporttelemetry", {\n      source: this,\n      details: {\n        type: "editing",\n        data\n      }\n    });\n  }\n  async #download(isFromUI = false) {\n    if (isFromUI) {\n      this.#downloadModelButton.disabled = true;\n      const span = this.#downloadModelButton.firstChild;\n      span.setAttribute("data-l10n-id", "pdfjs-editor-alt-text-settings-downloading-model-button");\n      await this.#mlManager.downloadModel("altText");\n      span.setAttribute("data-l10n-id", "pdfjs-editor-alt-text-settings-download-model-button");\n      this.#createModelButton.disabled = false;\n      this.#setPref("enableGuessAltText", true);\n      this.#mlManager.toggleService("altText", true);\n      this.#setPref("enableAltTextModelDownload", true);\n      this.#downloadModelButton.disabled = false;\n    }\n    this.#aiModelSettings.classList.toggle("download", false);\n    this.#createModelButton.setAttribute("aria-pressed", true);\n  }\n  async #delete(isFromUI = false) {\n    if (isFromUI) {\n      await this.#mlManager.deleteModel("altText");\n      this.#setPref("enableGuessAltText", false);\n      this.#setPref("enableAltTextModelDownload", false);\n    }\n    this.#aiModelSettings.classList.toggle("download", true);\n    this.#createModelButton.disabled = true;\n    this.#createModelButton.setAttribute("aria-pressed", false);\n  }\n  async open({\n    enableGuessAltText,\n    enableNewAltTextWhenAddingImage\n  }) {\n    const {\n      enableAltTextModelDownload\n    } = this.#mlManager;\n    this.#createModelButton.disabled = !enableAltTextModelDownload;\n    this.#createModelButton.setAttribute("aria-pressed", enableAltTextModelDownload && enableGuessAltText);\n    this.#showAltTextDialogButton.setAttribute("aria-pressed", enableNewAltTextWhenAddingImage);\n    this.#aiModelSettings.classList.toggle("download", !enableAltTextModelDownload);\n    await this.#overlayManager.open(this.#dialog);\n    this.#reportTelemetry({\n      type: "stamp",\n      action: "pdfjs.image.alt_text.settings_displayed"\n    });\n  }\n  #togglePref(name, {\n    target\n  }) {\n    const checked = target.getAttribute("aria-pressed") !== "true";\n    this.#setPref(name, checked);\n    target.setAttribute("aria-pressed", checked);\n    return checked;\n  }\n  #setPref(name, value) {\n    this.#eventBus.dispatch("setpreference", {\n      source: this,\n      name,\n      value\n    });\n  }\n  #finish() {\n    if (this.#overlayManager.active === this.#dialog) {\n      this.#overlayManager.close(this.#dialog);\n    }\n  }\n}\n\n;// CONCATENATED MODULE:./alt_text_manager.js\n\nclass AltTextManager {\n  #boundUpdateUIState = this.#updateUIState.bind(this);\n  #boundSetPosition = this.#setPosition.bind(this);\n  #boundOnClick = this.#onClick.bind(this);\n  #currentEditor = null;\n  #cancelButton;\n  #dialog;\n  #eventBus;\n  #hasUsedPointer = false;\n  #optionDescription;\n  #optionDecorative;\n  #overlayManager;\n  #saveButton;\n  #textarea;\n  #uiManager;\n  #previousAltText = null;\n  #svgElement = null;\n  #rectElement = null;\n  #container;\n  #telemetryData = null;\n  constructor({\n    dialog,\n    optionDescription,\n    optionDecorative,\n    textarea,\n    cancelButton,\n    saveButton\n  }, container, overlayManager, eventBus) {\n    this.#dialog = dialog;\n    this.#optionDescription = optionDescription;\n    this.#optionDecorative = optionDecorative;\n    this.#textarea = textarea;\n    this.#cancelButton = cancelButton;\n    this.#saveButton = saveButton;\n    this.#overlayManager = overlayManager;\n    this.#eventBus = eventBus;\n    this.#container = container;\n    dialog.addEventListener("close", this.#close.bind(this));\n    dialog.addEventListener("contextmenu", event => {\n      if (event.target !== this.#textarea) {\n        event.preventDefault();\n      }\n    });\n    cancelButton.addEventListener("click", this.#finish.bind(this));\n    saveButton.addEventListener("click", this.#save.bind(this));\n    optionDescription.addEventListener("change", this.#boundUpdateUIState);\n    optionDecorative.addEventListener("change", this.#boundUpdateUIState);\n    this.#overlayManager.register(dialog);\n  }\n  get _elements() {\n    return shadow(this, "_elements", [this.#optionDescription, this.#optionDecorative, this.#textarea, this.#saveButton, this.#cancelButton]);\n  }\n  #createSVGElement() {\n    if (this.#svgElement) {\n      return;\n    }\n    const svgFactory = new DOMSVGFactory();\n    const svg = this.#svgElement = svgFactory.createElement("svg");\n    svg.setAttribute("width", "0");\n    svg.setAttribute("height", "0");\n    const defs = svgFactory.createElement("defs");\n    svg.append(defs);\n    const mask = svgFactory.createElement("mask");\n    defs.append(mask);\n    mask.setAttribute("id", "alttext-manager-mask");\n    mask.setAttribute("maskContentUnits", "objectBoundingBox");\n    let rect = svgFactory.createElement("rect");\n    mask.append(rect);\n    rect.setAttribute("fill", "white");\n    rect.setAttribute("width", "1");\n    rect.setAttribute("height", "1");\n    rect.setAttribute("x", "0");\n    rect.setAttribute("y", "0");\n    rect = this.#rectElement = svgFactory.createElement("rect");\n    mask.append(rect);\n    rect.setAttribute("fill", "black");\n    this.#dialog.append(svg);\n  }\n  async editAltText(uiManager, editor) {\n    if (this.#currentEditor || !editor) {\n      return;\n    }\n    this.#createSVGElement();\n    this.#hasUsedPointer = false;\n    for (const element of this._elements) {\n      element.addEventListener("click", this.#boundOnClick);\n    }\n    const {\n      altText,\n      decorative\n    } = editor.altTextData;\n    if (decorative === true) {\n      this.#optionDecorative.checked = true;\n      this.#optionDescription.checked = false;\n    } else {\n      this.#optionDecorative.checked = false;\n      this.#optionDescription.checked = true;\n    }\n    this.#previousAltText = this.#textarea.value = altText?.trim() || "";\n    this.#updateUIState();\n    this.#currentEditor = editor;\n    this.#uiManager = uiManager;\n    this.#uiManager.removeEditListeners();\n    this.#eventBus._on("resize", this.#boundSetPosition);\n    try {\n      await this.#overlayManager.open(this.#dialog);\n      this.#setPosition();\n    } catch (ex) {\n      this.#close();\n      throw ex;\n    }\n  }\n  #setPosition() {\n    if (!this.#currentEditor) {\n      return;\n    }\n    const dialog = this.#dialog;\n    const {\n      style\n    } = dialog;\n    const {\n      x: containerX,\n      y: containerY,\n      width: containerW,\n      height: containerH\n    } = this.#container.getBoundingClientRect();\n    const {\n      innerWidth: windowW,\n      innerHeight: windowH\n    } = window;\n    const {\n      width: dialogW,\n      height: dialogH\n    } = dialog.getBoundingClientRect();\n    const {\n      x,\n      y,\n      width,\n      height\n    } = this.#currentEditor.getClientDimensions();\n    const MARGIN = 10;\n    const isLTR = this.#uiManager.direction === "ltr";\n    const xs = Math.max(x, containerX);\n    const xe = Math.min(x + width, containerX + containerW);\n    const ys = Math.max(y, containerY);\n    const ye = Math.min(y + height, containerY + containerH);\n    this.#rectElement.setAttribute("width", `${(xe - xs) / windowW}`);\n    this.#rectElement.setAttribute("height", `${(ye - ys) / windowH}`);\n    this.#rectElement.setAttribute("x", `${xs / windowW}`);\n    this.#rectElement.setAttribute("y", `${ys / windowH}`);\n    let left = null;\n    let top = Math.max(y, 0);\n    top += Math.min(windowH - (top + dialogH), 0);\n    if (isLTR) {\n      if (x + width + MARGIN + dialogW < windowW) {\n        left = x + width + MARGIN;\n      } else if (x > dialogW + MARGIN) {\n        left = x - dialogW - MARGIN;\n      }\n    } else if (x > dialogW + MARGIN) {\n      left = x - dialogW - MARGIN;\n    } else if (x + width + MARGIN + dialogW < windowW) {\n      left = x + width + MARGIN;\n    }\n    if (left === null) {\n      top = null;\n      left = Math.max(x, 0);\n      left += Math.min(windowW - (left + dialogW), 0);\n      if (y > dialogH + MARGIN) {\n        top = y - dialogH - MARGIN;\n      } else if (y + height + MARGIN + dialogH < windowH) {\n        top = y + height + MARGIN;\n      }\n    }\n    if (top !== null) {\n      dialog.classList.add("positioned");\n      if (isLTR) {\n        style.left = `${left}px`;\n      } else {\n        style.right = `${windowW - left - dialogW}px`;\n      }\n      style.top = `${top}px`;\n    } else {\n      dialog.classList.remove("positioned");\n      style.left = "";\n      style.top = "";\n    }\n  }\n  #finish() {\n    if (this.#overlayManager.active === this.#dialog) {\n      this.#overlayManager.close(this.#dialog);\n    }\n  }\n  #close() {\n    this.#currentEditor._reportTelemetry(this.#telemetryData || {\n      action: "alt_text_cancel",\n      alt_text_keyboard: !this.#hasUsedPointer\n    });\n    this.#telemetryData = null;\n    this.#removeOnClickListeners();\n    this.#uiManager?.addEditListeners();\n    this.#eventBus._off("resize", this.#boundSetPosition);\n    this.#currentEditor.altTextFinish();\n    this.#currentEditor = null;\n    this.#uiManager = null;\n  }\n  #updateUIState() {\n    this.#textarea.disabled = this.#optionDecorative.checked;\n  }\n  #save() {\n    const altText = this.#textarea.value.trim();\n    const decorative = this.#optionDecorative.checked;\n    this.#currentEditor.altTextData = {\n      altText,\n      decorative\n    };\n    this.#telemetryData = {\n      action: "alt_text_save",\n      alt_text_description: !!altText,\n      alt_text_edit: !!this.#previousAltText && this.#previousAltText !== altText,\n      alt_text_decorative: decorative,\n      alt_text_keyboard: !this.#hasUsedPointer\n    };\n    this.#finish();\n  }\n  #onClick(evt) {\n    if (evt.detail === 0) {\n      return;\n    }\n    this.#hasUsedPointer = true;\n    this.#removeOnClickListeners();\n  }\n  #removeOnClickListeners() {\n    for (const element of this._elements) {\n      element.removeEventListener("click", this.#boundOnClick);\n    }\n  }\n  destroy() {\n    this.#uiManager = null;\n    this.#finish();\n    this.#svgElement?.remove();\n    this.#svgElement = this.#rectElement = null;\n  }\n}\n\n;// CONCATENATED MODULE:./annotation_editor_params.js\n\nclass AnnotationEditorParams {\n  constructor(options, eventBus) {\n    this.eventBus = eventBus;\n    this.#bindListeners(options);\n  }\n  #bindListeners({\n    editorFreeTextFontSize,\n    editorFreeTextColor,\n    editorInkColor,\n    editorInkThickness,\n    editorInkOpacity,\n    editorStampAddImage,\n    editorFreeHighlightThickness,\n    editorHighlightShowAll\n  }) {\n    const dispatchEvent = (typeStr, value) => {\n      this.eventBus.dispatch("switchannotationeditorparams", {\n        source: this,\n        type: AnnotationEditorParamsType[typeStr],\n        value\n      });\n    };\n    editorFreeTextFontSize.addEventListener("input", function () {\n      dispatchEvent("FREETEXT_SIZE", this.valueAsNumber);\n    });\n    editorFreeTextColor.addEventListener("input", function () {\n      dispatchEvent("FREETEXT_COLOR", this.value);\n    });\n    editorInkColor.addEventListener("input", function () {\n      dispatchEvent("INK_COLOR", this.value);\n    });\n    editorInkThickness.addEventListener("input", function () {\n      dispatchEvent("INK_THICKNESS", this.valueAsNumber);\n    });\n    editorInkOpacity.addEventListener("input", function () {\n      dispatchEvent("INK_OPACITY", this.valueAsNumber);\n    });\n    editorStampAddImage.addEventListener("click", () => {\n      this.eventBus.dispatch("reporttelemetry", {\n        source: this,\n        details: {\n          type: "editing",\n          data: {\n            action: "pdfjs.image.add_image_click"\n          }\n        }\n      });\n      dispatchEvent("CREATE");\n    });\n    editorFreeHighlightThickness.addEventListener("input", function () {\n      dispatchEvent("HIGHLIGHT_THICKNESS", this.valueAsNumber);\n    });\n    editorHighlightShowAll.addEventListener("click", function () {\n      const checked = this.getAttribute("aria-pressed") === "true";\n      this.setAttribute("aria-pressed", !checked);\n      dispatchEvent("HIGHLIGHT_SHOW_ALL", !checked);\n    });\n    this.eventBus._on("annotationeditorparamschanged", evt => {\n      for (const [type, value] of evt.details) {\n        switch (type) {\n          case AnnotationEditorParamsType.FREETEXT_SIZE:\n            editorFreeTextFontSize.value = value;\n            break;\n          case AnnotationEditorParamsType.FREETEXT_COLOR:\n            editorFreeTextColor.value = value;\n            break;\n          case AnnotationEditorParamsType.INK_COLOR:\n            editorInkColor.value = value;\n            break;\n          case AnnotationEditorParamsType.INK_THICKNESS:\n            editorInkThickness.value = value;\n            break;\n          case AnnotationEditorParamsType.INK_OPACITY:\n            editorInkOpacity.value = value;\n            break;\n          case AnnotationEditorParamsType.HIGHLIGHT_THICKNESS:\n            editorFreeHighlightThickness.value = value;\n            break;\n          case AnnotationEditorParamsType.HIGHLIGHT_FREE:\n            editorFreeHighlightThickness.disabled = !value;\n            break;\n          case AnnotationEditorParamsType.HIGHLIGHT_SHOW_ALL:\n            editorHighlightShowAll.setAttribute("aria-pressed", value);\n            break;\n        }\n      }\n    });\n  }\n}\n\n;// CONCATENATED MODULE:./caret_browsing.js\nconst PRECISION = 1e-1;\nclass CaretBrowsingMode {\n  #mainContainer;\n  #toolBarHeight;\n  #viewerContainer;\n  constructor(mainContainer, viewerContainer, toolbarContainer) {\n    this.#mainContainer = mainContainer;\n    this.#viewerContainer = viewerContainer;\n    this.#toolBarHeight = toolbarContainer?.getBoundingClientRect().height ?? 0;\n  }\n  #isOnSameLine(rect1, rect2) {\n    const top1 = rect1.y;\n    const bot1 = rect1.bottom;\n    const mid1 = rect1.y + rect1.height / 2;\n    const top2 = rect2.y;\n    const bot2 = rect2.bottom;\n    const mid2 = rect2.y + rect2.height / 2;\n    return top1 <= mid2 && mid2 <= bot1 || top2 <= mid1 && mid1 <= bot2;\n  }\n  #isUnderOver(rect, x, y, isUp) {\n    const midY = rect.y + rect.height / 2;\n    return (isUp ? y >= midY : y <= midY) && rect.x - PRECISION <= x && x <= rect.right + PRECISION;\n  }\n  #isVisible(rect) {\n    return rect.top >= this.#toolBarHeight && rect.left >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && rect.right <= (window.innerWidth || document.documentElement.clientWidth);\n  }\n  #getCaretPosition(selection, isUp) {\n    const {\n      focusNode,\n      focusOffset\n    } = selection;\n    const range = document.createRange();\n    range.setStart(focusNode, focusOffset);\n    range.setEnd(focusNode, focusOffset);\n    const rect = range.getBoundingClientRect();\n    return [rect.x, isUp ? rect.top : rect.bottom];\n  }\n  static #caretPositionFromPoint(x, y) {\n    if (!document.caretPositionFromPoint) {\n      const {\n        startContainer: offsetNode,\n        startOffset: offset\n      } = document.caretRangeFromPoint(x, y);\n      return {\n        offsetNode,\n        offset\n      };\n    }\n    return document.caretPositionFromPoint(x, y);\n  }\n  #setCaretPositionHelper(selection, caretX, select, element, rect) {\n    rect ||= element.getBoundingClientRect();\n    if (caretX <= rect.x + PRECISION) {\n      if (select) {\n        selection.extend(element.firstChild, 0);\n      } else {\n        selection.setPosition(element.firstChild, 0);\n      }\n      return;\n    }\n    if (rect.right - PRECISION <= caretX) {\n      const {\n        lastChild\n      } = element;\n      if (select) {\n        selection.extend(lastChild, lastChild.length);\n      } else {\n        selection.setPosition(lastChild, lastChild.length);\n      }\n      return;\n    }\n    const midY = rect.y + rect.height / 2;\n    let caretPosition = CaretBrowsingMode.#caretPositionFromPoint(caretX, midY);\n    let parentElement = caretPosition.offsetNode?.parentElement;\n    if (parentElement && parentElement !== element) {\n      const elementsAtPoint = document.elementsFromPoint(caretX, midY);\n      const savedVisibilities = [];\n      for (const el of elementsAtPoint) {\n        if (el === element) {\n          break;\n        }\n        const {\n          style\n        } = el;\n        savedVisibilities.push([el, style.visibility]);\n        style.visibility = "hidden";\n      }\n      caretPosition = CaretBrowsingMode.#caretPositionFromPoint(caretX, midY);\n      parentElement = caretPosition.offsetNode?.parentElement;\n      for (const [el, visibility] of savedVisibilities) {\n        el.style.visibility = visibility;\n      }\n    }\n    if (parentElement !== element) {\n      if (select) {\n        selection.extend(element.firstChild, 0);\n      } else {\n        selection.setPosition(element.firstChild, 0);\n      }\n      return;\n    }\n    if (select) {\n      selection.extend(caretPosition.offsetNode, caretPosition.offset);\n    } else {\n      selection.setPosition(caretPosition.offsetNode, caretPosition.offset);\n    }\n  }\n  #setCaretPosition(select, selection, newLineElement, newLineElementRect, caretX) {\n    if (this.#isVisible(newLineElementRect)) {\n      this.#setCaretPositionHelper(selection, caretX, select, newLineElement, newLineElementRect);\n      return;\n    }\n    this.#mainContainer.addEventListener("scrollend", this.#setCaretPositionHelper.bind(this, selection, caretX, select, newLineElement, null), {\n      once: true\n    });\n    newLineElement.scrollIntoView();\n  }\n  #getNodeOnNextPage(textLayer, isUp) {\n    while (true) {\n      const page = textLayer.closest(".page");\n      const pageNumber = parseInt(page.getAttribute("data-page-number"));\n      const nextPage = isUp ? pageNumber - 1 : pageNumber + 1;\n      textLayer = this.#viewerContainer.querySelector(`.page[data-page-number="${nextPage}"] .textLayer`);\n      if (!textLayer) {\n        return null;\n      }\n      const walker = document.createTreeWalker(textLayer, NodeFilter.SHOW_TEXT);\n      const node = isUp ? walker.lastChild() : walker.firstChild();\n      if (node) {\n        return node;\n      }\n    }\n  }\n  moveCaret(isUp, select) {\n    const selection = document.getSelection();\n    if (selection.rangeCount === 0) {\n      return;\n    }\n    const {\n      focusNode\n    } = selection;\n    const focusElement = focusNode.nodeType !== Node.ELEMENT_NODE ? focusNode.parentElement : focusNode;\n    const root = focusElement.closest(".textLayer");\n    if (!root) {\n      return;\n    }\n    const walker = document.createTreeWalker(root, NodeFilter.SHOW_TEXT);\n    walker.currentNode = focusNode;\n    const focusRect = focusElement.getBoundingClientRect();\n    let newLineElement = null;\n    const nodeIterator = (isUp ? walker.previousSibling : walker.nextSibling).bind(walker);\n    while (nodeIterator()) {\n      const element = walker.currentNode.parentElement;\n      if (!this.#isOnSameLine(focusRect, element.getBoundingClientRect())) {\n        newLineElement = element;\n        break;\n      }\n    }\n    if (!newLineElement) {\n      const node = this.#getNodeOnNextPage(root, isUp);\n      if (!node) {\n        return;\n      }\n      if (select) {\n        const lastNode = (isUp ? walker.firstChild() : walker.lastChild()) || focusNode;\n        selection.extend(lastNode, isUp ? 0 : lastNode.length);\n        const range = document.createRange();\n        range.setStart(node, isUp ? node.length : 0);\n        range.setEnd(node, isUp ? node.length : 0);\n        selection.addRange(range);\n        return;\n      }\n      const [caretX] = this.#getCaretPosition(selection, isUp);\n      const {\n        parentElement\n      } = node;\n      this.#setCaretPosition(select, selection, parentElement, parentElement.getBoundingClientRect(), caretX);\n      return;\n    }\n    const [caretX, caretY] = this.#getCaretPosition(selection, isUp);\n    const newLineElementRect = newLineElement.getBoundingClientRect();\n    if (this.#isUnderOver(newLineElementRect, caretX, caretY, isUp)) {\n      this.#setCaretPosition(select, selection, newLineElement, newLineElementRect, caretX);\n      return;\n    }\n    while (nodeIterator()) {\n      const element = walker.currentNode.parentElement;\n      const elementRect = element.getBoundingClientRect();\n      if (!this.#isOnSameLine(newLineElementRect, elementRect)) {\n        break;\n      }\n      if (this.#isUnderOver(elementRect, caretX, caretY, isUp)) {\n        this.#setCaretPosition(select, selection, element, elementRect, caretX);\n        return;\n      }\n    }\n    this.#setCaretPosition(select, selection, newLineElement, newLineElementRect, caretX);\n  }\n}\n\n;// CONCATENATED MODULE:./download_manager.js\n\nfunction download(blobUrl, filename) {\n  const a = document.createElement("a");\n  if (!a.click) {\n    throw new Error(\'DownloadManager: "a.click()" is not supported.\');\n  }\n  a.href = blobUrl;\n  a.target = "_parent";\n  if ("download" in a) {\n    a.download = filename;\n  }\n  (document.body || document.documentElement).append(a);\n  a.click();\n  a.remove();\n}\nclass DownloadManager {\n  #openBlobUrls = new WeakMap();\n  downloadData(data, filename, contentType) {\n    const blobUrl = URL.createObjectURL(new Blob([data], {\n      type: contentType\n    }));\n    download(blobUrl, filename);\n  }\n  openOrDownloadData(data, filename, dest = null) {\n    const isPdfData = isPdfFile(filename);\n    const contentType = isPdfData ? "application/pdf" : "";\n    if (isPdfData) {\n      let blobUrl = this.#openBlobUrls.get(data);\n      if (!blobUrl) {\n        blobUrl = URL.createObjectURL(new Blob([data], {\n          type: contentType\n        }));\n        this.#openBlobUrls.set(data, blobUrl);\n      }\n      let viewerUrl;\n      viewerUrl = "?file=" + encodeURIComponent(blobUrl + "#" + filename);\n      if (dest) {\n        viewerUrl += `#${escape(dest)}`;\n      }\n      try {\n        window.open(viewerUrl);\n        return true;\n      } catch (ex) {\n        console.error(`openOrDownloadData: ${ex}`);\n        URL.revokeObjectURL(blobUrl);\n        this.#openBlobUrls.delete(data);\n      }\n    }\n    this.downloadData(data, filename, contentType);\n    return false;\n  }\n  download(data, url, filename) {\n    let blobUrl;\n    if (data) {\n      blobUrl = URL.createObjectURL(new Blob([data], {\n        type: "application/pdf"\n      }));\n    } else {\n      if (!createValidAbsoluteUrl(url, "http://example.com")) {\n        console.error(`download - not a valid URL: ${url}`);\n        return;\n      }\n      blobUrl = url + "#pdfjs.action=download";\n    }\n    download(blobUrl, filename);\n  }\n}\n\n;// CONCATENATED MODULE:./overlay_manager.js\nclass OverlayManager {\n  #overlays = new WeakMap();\n  #active = null;\n  get active() {\n    return this.#active;\n  }\n  async register(dialog, canForceClose = false) {\n    if (typeof dialog !== "object") {\n      throw new Error("Not enough parameters.");\n    } else if (this.#overlays.has(dialog)) {\n      throw new Error("The overlay is already registered.");\n    }\n    this.#overlays.set(dialog, {\n      canForceClose\n    });\n    dialog.addEventListener("cancel", evt => {\n      this.#active = null;\n    });\n  }\n  async open(dialog) {\n    if (!this.#overlays.has(dialog)) {\n      throw new Error("The overlay does not exist.");\n    } else if (this.#active) {\n      if (this.#active === dialog) {\n        throw new Error("The overlay is already active.");\n      } else if (this.#overlays.get(dialog).canForceClose) {\n        await this.close();\n      } else {\n        throw new Error("Another overlay is currently active.");\n      }\n    }\n    this.#active = dialog;\n    dialog.showModal();\n  }\n  async close(dialog = this.#active) {\n    if (!this.#overlays.has(dialog)) {\n      throw new Error("The overlay does not exist.");\n    } else if (!this.#active) {\n      throw new Error("The overlay is currently not active.");\n    } else if (this.#active !== dialog) {\n      throw new Error("Another overlay is currently active.");\n    }\n    dialog.close();\n    this.#active = null;\n  }\n}\n\n;// CONCATENATED MODULE:./password_prompt.js\n\nclass PasswordPrompt {\n  #activeCapability = null;\n  #updateCallback = null;\n  #reason = null;\n  constructor(options, overlayManager, isViewerEmbedded = false) {\n    this.dialog = options.dialog;\n    this.label = options.label;\n    this.input = options.input;\n    this.submitButton = options.submitButton;\n    this.cancelButton = options.cancelButton;\n    this.overlayManager = overlayManager;\n    this._isViewerEmbedded = isViewerEmbedded;\n    this.submitButton.addEventListener("click", this.#verify.bind(this));\n    this.cancelButton.addEventListener("click", this.close.bind(this));\n    this.input.addEventListener("keydown", e => {\n      if (e.keyCode === 13) {\n        this.#verify();\n      }\n    });\n    this.overlayManager.register(this.dialog, true);\n    this.dialog.addEventListener("close", this.#cancel.bind(this));\n  }\n  async open() {\n    await this.#activeCapability?.promise;\n    this.#activeCapability = Promise.withResolvers();\n    try {\n      await this.overlayManager.open(this.dialog);\n    } catch (ex) {\n      this.#activeCapability.resolve();\n      throw ex;\n    }\n    const passwordIncorrect = this.#reason === PasswordResponses.INCORRECT_PASSWORD;\n    if (!this._isViewerEmbedded || passwordIncorrect) {\n      this.input.focus();\n    }\n    this.label.setAttribute("data-l10n-id", `pdfjs-password-${passwordIncorrect ? "invalid" : "label"}`);\n  }\n  async close() {\n    if (this.overlayManager.active === this.dialog) {\n      this.overlayManager.close(this.dialog);\n    }\n  }\n  #verify() {\n    const password = this.input.value;\n    if (password?.length > 0) {\n      this.#invokeCallback(password);\n    }\n  }\n  #cancel() {\n    this.#invokeCallback(new Error("PasswordPrompt cancelled."));\n    this.#activeCapability.resolve();\n  }\n  #invokeCallback(password) {\n    if (!this.#updateCallback) {\n      return;\n    }\n    this.close();\n    this.input.value = "";\n    this.#updateCallback(password);\n    this.#updateCallback = null;\n  }\n  async setUpdateCallback(updateCallback, reason) {\n    if (this.#activeCapability) {\n      await this.#activeCapability.promise;\n    }\n    this.#updateCallback = updateCallback;\n    this.#reason = reason;\n  }\n}\n\n;// CONCATENATED MODULE:./base_tree_viewer.js\n\nconst TREEITEM_OFFSET_TOP = -100;\nconst TREEITEM_SELECTED_CLASS = "selected";\nclass BaseTreeViewer {\n  constructor(options) {\n    this.container = options.container;\n    this.eventBus = options.eventBus;\n    this._l10n = options.l10n;\n    this.reset();\n  }\n  reset() {\n    this._pdfDocument = null;\n    this._lastToggleIsShow = true;\n    this._currentTreeItem = null;\n    this.container.textContent = "";\n    this.container.classList.remove("treeWithDeepNesting");\n  }\n  _dispatchEvent(count) {\n    throw new Error("Not implemented: _dispatchEvent");\n  }\n  _bindLink(element, params) {\n    throw new Error("Not implemented: _bindLink");\n  }\n  _normalizeTextContent(str) {\n    return removeNullCharacters(str, true) || "\\u2013";\n  }\n  _addToggleButton(div, hidden = false) {\n    const toggler = document.createElement("div");\n    toggler.className = "treeItemToggler";\n    if (hidden) {\n      toggler.classList.add("treeItemsHidden");\n    }\n    toggler.onclick = evt => {\n      evt.stopPropagation();\n      toggler.classList.toggle("treeItemsHidden");\n      if (evt.shiftKey) {\n        const shouldShowAll = !toggler.classList.contains("treeItemsHidden");\n        this._toggleTreeItem(div, shouldShowAll);\n      }\n    };\n    div.prepend(toggler);\n  }\n  _toggleTreeItem(root, show = false) {\n    this._l10n.pause();\n    this._lastToggleIsShow = show;\n    for (const toggler of root.querySelectorAll(".treeItemToggler")) {\n      toggler.classList.toggle("treeItemsHidden", !show);\n    }\n    this._l10n.resume();\n  }\n  _toggleAllTreeItems() {\n    this._toggleTreeItem(this.container, !this._lastToggleIsShow);\n  }\n  _finishRendering(fragment, count, hasAnyNesting = false) {\n    if (hasAnyNesting) {\n      this.container.classList.add("treeWithDeepNesting");\n      this._lastToggleIsShow = !fragment.querySelector(".treeItemsHidden");\n    }\n    this._l10n.pause();\n    this.container.append(fragment);\n    this._l10n.resume();\n    this._dispatchEvent(count);\n  }\n  render(params) {\n    throw new Error("Not implemented: render");\n  }\n  _updateCurrentTreeItem(treeItem = null) {\n    if (this._currentTreeItem) {\n      this._currentTreeItem.classList.remove(TREEITEM_SELECTED_CLASS);\n      this._currentTreeItem = null;\n    }\n    if (treeItem) {\n      treeItem.classList.add(TREEITEM_SELECTED_CLASS);\n      this._currentTreeItem = treeItem;\n    }\n  }\n  _scrollToCurrentTreeItem(treeItem) {\n    if (!treeItem) {\n      return;\n    }\n    this._l10n.pause();\n    let currentNode = treeItem.parentNode;\n    while (currentNode && currentNode !== this.container) {\n      if (currentNode.classList.contains("treeItem")) {\n        const toggler = currentNode.firstElementChild;\n        toggler?.classList.remove("treeItemsHidden");\n      }\n      currentNode = currentNode.parentNode;\n    }\n    this._l10n.resume();\n    this._updateCurrentTreeItem(treeItem);\n    this.container.scrollTo(treeItem.offsetLeft, treeItem.offsetTop + TREEITEM_OFFSET_TOP);\n  }\n}\n\n;// CONCATENATED MODULE:./pdf_attachment_viewer.js\n\n\nclass PDFAttachmentViewer extends BaseTreeViewer {\n  constructor(options) {\n    super(options);\n    this.downloadManager = options.downloadManager;\n    this.eventBus._on("fileattachmentannotation", this.#appendAttachment.bind(this));\n  }\n  reset(keepRenderedCapability = false) {\n    super.reset();\n    this._attachments = null;\n    if (!keepRenderedCapability) {\n      this._renderedCapability = Promise.withResolvers();\n    }\n    this._pendingDispatchEvent = false;\n  }\n  async _dispatchEvent(attachmentsCount) {\n    this._renderedCapability.resolve();\n    if (attachmentsCount === 0 && !this._pendingDispatchEvent) {\n      this._pendingDispatchEvent = true;\n      await waitOnEventOrTimeout({\n        target: this.eventBus,\n        name: "annotationlayerrendered",\n        delay: 1000\n      });\n      if (!this._pendingDispatchEvent) {\n        return;\n      }\n    }\n    this._pendingDispatchEvent = false;\n    this.eventBus.dispatch("attachmentsloaded", {\n      source: this,\n      attachmentsCount\n    });\n  }\n  _bindLink(element, {\n    content,\n    description,\n    filename\n  }) {\n    if (description) {\n      element.title = description;\n    }\n    element.onclick = () => {\n      this.downloadManager.openOrDownloadData(content, filename);\n      return false;\n    };\n  }\n  render({\n    attachments,\n    keepRenderedCapability = false\n  }) {\n    if (this._attachments) {\n      this.reset(keepRenderedCapability);\n    }\n    this._attachments = attachments || null;\n    if (!attachments) {\n      this._dispatchEvent(0);\n      return;\n    }\n    const fragment = document.createDocumentFragment();\n    let attachmentsCount = 0;\n    for (const name in attachments) {\n      const item = attachments[name];\n      const div = document.createElement("div");\n      div.className = "treeItem";\n      const element = document.createElement("a");\n      this._bindLink(element, item);\n      element.textContent = this._normalizeTextContent(item.filename);\n      div.append(element);\n      fragment.append(div);\n      attachmentsCount++;\n    }\n    this._finishRendering(fragment, attachmentsCount);\n  }\n  #appendAttachment(item) {\n    const renderedPromise = this._renderedCapability.promise;\n    renderedPromise.then(() => {\n      if (renderedPromise !== this._renderedCapability.promise) {\n        return;\n      }\n      const attachments = this._attachments || Object.create(null);\n      for (const name in attachments) {\n        if (item.filename === name) {\n          return;\n        }\n      }\n      attachments[item.filename] = item;\n      this.render({\n        attachments,\n        keepRenderedCapability: true\n      });\n    });\n  }\n}\n\n;// CONCATENATED MODULE:./grab_to_pan.js\nconst CSS_CLASS_GRAB = "grab-to-pan-grab";\nclass GrabToPan {\n  constructor({\n    element\n  }) {\n    this.element = element;\n    this.document = element.ownerDocument;\n    this.activate = this.activate.bind(this);\n    this.deactivate = this.deactivate.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this._onMouseDown = this.#onMouseDown.bind(this);\n    this._onMouseMove = this.#onMouseMove.bind(this);\n    this._endPan = this.#endPan.bind(this);\n    const overlay = this.overlay = document.createElement("div");\n    overlay.className = "grab-to-pan-grabbing";\n  }\n  activate() {\n    if (!this.active) {\n      this.active = true;\n      this.element.addEventListener("mousedown", this._onMouseDown, true);\n      this.element.classList.add(CSS_CLASS_GRAB);\n    }\n  }\n  deactivate() {\n    if (this.active) {\n      this.active = false;\n      this.element.removeEventListener("mousedown", this._onMouseDown, true);\n      this._endPan();\n      this.element.classList.remove(CSS_CLASS_GRAB);\n    }\n  }\n  toggle() {\n    if (this.active) {\n      this.deactivate();\n    } else {\n      this.activate();\n    }\n  }\n  ignoreTarget(node) {\n    return node.matches("a[href], a[href] *, input, textarea, button, button *, select, option");\n  }\n  #onMouseDown(event) {\n    if (event.button !== 0 || this.ignoreTarget(event.target)) {\n      return;\n    }\n    if (event.originalTarget) {\n      try {\n        event.originalTarget.tagName;\n      } catch {\n        return;\n      }\n    }\n    this.scrollLeftStart = this.element.scrollLeft;\n    this.scrollTopStart = this.element.scrollTop;\n    this.clientXStart = event.clientX;\n    this.clientYStart = event.clientY;\n    this.document.addEventListener("mousemove", this._onMouseMove, true);\n    this.document.addEventListener("mouseup", this._endPan, true);\n    this.element.addEventListener("scroll", this._endPan, true);\n    event.preventDefault();\n    event.stopPropagation();\n    const focusedElement = document.activeElement;\n    if (focusedElement && !focusedElement.contains(event.target)) {\n      focusedElement.blur();\n    }\n  }\n  #onMouseMove(event) {\n    this.element.removeEventListener("scroll", this._endPan, true);\n    if (!(event.buttons & 1)) {\n      this._endPan();\n      return;\n    }\n    const xDiff = event.clientX - this.clientXStart;\n    const yDiff = event.clientY - this.clientYStart;\n    this.element.scrollTo({\n      top: this.scrollTopStart - yDiff,\n      left: this.scrollLeftStart - xDiff,\n      behavior: "instant"\n    });\n    if (!this.overlay.parentNode) {\n      document.body.append(this.overlay);\n    }\n  }\n  #endPan() {\n    this.element.removeEventListener("scroll", this._endPan, true);\n    this.document.removeEventListener("mousemove", this._onMouseMove, true);\n    this.document.removeEventListener("mouseup", this._endPan, true);\n    this.overlay.remove();\n  }\n}\n\n;// CONCATENATED MODULE:./pdf_cursor_tools.js\n\n\n\nclass PDFCursorTools {\n  #active = CursorTool.SELECT;\n  #prevActive = null;\n  constructor({\n    container,\n    eventBus,\n    cursorToolOnLoad = CursorTool.SELECT\n  }) {\n    this.container = container;\n    this.eventBus = eventBus;\n    this.#addEventListeners();\n    Promise.resolve().then(() => {\n      this.switchTool(cursorToolOnLoad);\n    });\n  }\n  get activeTool() {\n    return this.#active;\n  }\n  switchTool(tool) {\n    if (this.#prevActive !== null) {\n      return;\n    }\n    if (tool === this.#active) {\n      return;\n    }\n    const disableActiveTool = () => {\n      switch (this.#active) {\n        case CursorTool.SELECT:\n          break;\n        case CursorTool.HAND:\n          this._handTool.deactivate();\n          break;\n        case CursorTool.ZOOM:\n      }\n    };\n    switch (tool) {\n      case CursorTool.SELECT:\n        disableActiveTool();\n        break;\n      case CursorTool.HAND:\n        disableActiveTool();\n        this._handTool.activate();\n        break;\n      case CursorTool.ZOOM:\n      default:\n        console.error(`switchTool: "${tool}" is an unsupported value.`);\n        return;\n    }\n    this.#active = tool;\n    this.eventBus.dispatch("cursortoolchanged", {\n      source: this,\n      tool\n    });\n  }\n  #addEventListeners() {\n    this.eventBus._on("switchcursortool", evt => {\n      if (!evt.reset) {\n        this.switchTool(evt.tool);\n      } else if (this.#prevActive !== null) {\n        annotationEditorMode = AnnotationEditorType.NONE;\n        presentationModeState = PresentationModeState.NORMAL;\n        enableActive();\n      }\n    });\n    let annotationEditorMode = AnnotationEditorType.NONE,\n      presentationModeState = PresentationModeState.NORMAL;\n    const disableActive = () => {\n      const prevActive = this.#active;\n      this.switchTool(CursorTool.SELECT);\n      this.#prevActive ??= prevActive;\n    };\n    const enableActive = () => {\n      const prevActive = this.#prevActive;\n      if (prevActive !== null && annotationEditorMode === AnnotationEditorType.NONE && presentationModeState === PresentationModeState.NORMAL) {\n        this.#prevActive = null;\n        this.switchTool(prevActive);\n      }\n    };\n    this.eventBus._on("annotationeditormodechanged", ({\n      mode\n    }) => {\n      annotationEditorMode = mode;\n      if (mode === AnnotationEditorType.NONE) {\n        enableActive();\n      } else {\n        disableActive();\n      }\n    });\n    this.eventBus._on("presentationmodechanged", ({\n      state\n    }) => {\n      presentationModeState = state;\n      if (state === PresentationModeState.NORMAL) {\n        enableActive();\n      } else if (state === PresentationModeState.FULLSCREEN) {\n        disableActive();\n      }\n    });\n  }\n  get _handTool() {\n    return shadow(this, "_handTool", new GrabToPan({\n      element: this.container\n    }));\n  }\n}\n\n;// CONCATENATED MODULE:./pdf_document_properties.js\n\n\nconst DEFAULT_FIELD_CONTENT = "-";\nconst NON_METRIC_LOCALES = ["en-us", "en-lr", "my"];\nconst US_PAGE_NAMES = {\n  "8.5x11": "letter",\n  "8.5x14": "legal"\n};\nconst METRIC_PAGE_NAMES = {\n  "297x420": "a-three",\n  "210x297": "a-four"\n};\nfunction getPageName(size, isPortrait, pageNames) {\n  const width = isPortrait ? size.width : size.height;\n  const height = isPortrait ? size.height : size.width;\n  return pageNames[`${width}x${height}`];\n}\nclass PDFDocumentProperties {\n  #fieldData = null;\n  constructor({\n    dialog,\n    fields,\n    closeButton\n  }, overlayManager, eventBus, l10n, fileNameLookup) {\n    this.dialog = dialog;\n    this.fields = fields;\n    this.overlayManager = overlayManager;\n    this.l10n = l10n;\n    this._fileNameLookup = fileNameLookup;\n    this.#reset();\n    closeButton.addEventListener("click", this.close.bind(this));\n    this.overlayManager.register(this.dialog);\n    eventBus._on("pagechanging", evt => {\n      this._currentPageNumber = evt.pageNumber;\n    });\n    eventBus._on("rotationchanging", evt => {\n      this._pagesRotation = evt.pagesRotation;\n    });\n    this._isNonMetricLocale = NON_METRIC_LOCALES.includes(l10n.getLanguage());\n  }\n  async open() {\n    await Promise.all([this.overlayManager.open(this.dialog), this._dataAvailableCapability.promise]);\n    const currentPageNumber = this._currentPageNumber;\n    const pagesRotation = this._pagesRotation;\n    if (this.#fieldData && currentPageNumber === this.#fieldData._currentPageNumber && pagesRotation === this.#fieldData._pagesRotation) {\n      this.#updateUI();\n      return;\n    }\n    const {\n      info,\n      contentLength\n    } = await this.pdfDocument.getMetadata();\n    const [fileName, fileSize, creationDate, modificationDate, pageSize, isLinearized] = await Promise.all([this._fileNameLookup(), this.#parseFileSize(contentLength), this.#parseDate(info.CreationDate), this.#parseDate(info.ModDate), this.pdfDocument.getPage(currentPageNumber).then(pdfPage => {\n      return this.#parsePageSize(getPageSizeInches(pdfPage), pagesRotation);\n    }), this.#parseLinearization(info.IsLinearized)]);\n    this.#fieldData = Object.freeze({\n      fileName,\n      fileSize,\n      title: info.Title,\n      author: info.Author,\n      subject: info.Subject,\n      keywords: info.Keywords,\n      creationDate,\n      modificationDate,\n      creator: info.Creator,\n      producer: info.Producer,\n      version: info.PDFFormatVersion,\n      pageCount: this.pdfDocument.numPages,\n      pageSize,\n      linearized: isLinearized,\n      _currentPageNumber: currentPageNumber,\n      _pagesRotation: pagesRotation\n    });\n    this.#updateUI();\n    const {\n      length\n    } = await this.pdfDocument.getDownloadInfo();\n    if (contentLength === length) {\n      return;\n    }\n    const data = Object.assign(Object.create(null), this.#fieldData);\n    data.fileSize = await this.#parseFileSize(length);\n    this.#fieldData = Object.freeze(data);\n    this.#updateUI();\n  }\n  async close() {\n    this.overlayManager.close(this.dialog);\n  }\n  setDocument(pdfDocument) {\n    if (this.pdfDocument) {\n      this.#reset();\n      this.#updateUI(true);\n    }\n    if (!pdfDocument) {\n      return;\n    }\n    this.pdfDocument = pdfDocument;\n    this._dataAvailableCapability.resolve();\n  }\n  #reset() {\n    this.pdfDocument = null;\n    this.#fieldData = null;\n    this._dataAvailableCapability = Promise.withResolvers();\n    this._currentPageNumber = 1;\n    this._pagesRotation = 0;\n  }\n  #updateUI(reset = false) {\n    if (reset || !this.#fieldData) {\n      for (const id in this.fields) {\n        this.fields[id].textContent = DEFAULT_FIELD_CONTENT;\n      }\n      return;\n    }\n    if (this.overlayManager.active !== this.dialog) {\n      return;\n    }\n    for (const id in this.fields) {\n      const content = this.#fieldData[id];\n      this.fields[id].textContent = content || content === 0 ? content : DEFAULT_FIELD_CONTENT;\n    }\n  }\n  #getL10nStr(id, args = null) {\n    return this.l10n.get(`pdfjs-document-properties-${id}`, args);\n  }\n  async #parseFileSize(b = 0) {\n    const kb = b / 1024,\n      mb = kb / 1024;\n    return kb ? this.#getL10nStr(`size-${mb >= 1 ? "mb" : "kb"}`, {\n      mb,\n      kb,\n      b\n    }) : undefined;\n  }\n  async #parsePageSize(pageSizeInches, pagesRotation) {\n    if (!pageSizeInches) {\n      return undefined;\n    }\n    if (pagesRotation % 180 !== 0) {\n      pageSizeInches = {\n        width: pageSizeInches.height,\n        height: pageSizeInches.width\n      };\n    }\n    const isPortrait = isPortraitOrientation(pageSizeInches);\n    let sizeInches = {\n      width: Math.round(pageSizeInches.width * 100) / 100,\n      height: Math.round(pageSizeInches.height * 100) / 100\n    };\n    let sizeMillimeters = {\n      width: Math.round(pageSizeInches.width * 25.4 * 10) / 10,\n      height: Math.round(pageSizeInches.height * 25.4 * 10) / 10\n    };\n    let rawName = getPageName(sizeInches, isPortrait, US_PAGE_NAMES) || getPageName(sizeMillimeters, isPortrait, METRIC_PAGE_NAMES);\n    if (!rawName && !(Number.isInteger(sizeMillimeters.width) && Number.isInteger(sizeMillimeters.height))) {\n      const exactMillimeters = {\n        width: pageSizeInches.width * 25.4,\n        height: pageSizeInches.height * 25.4\n      };\n      const intMillimeters = {\n        width: Math.round(sizeMillimeters.width),\n        height: Math.round(sizeMillimeters.height)\n      };\n      if (Math.abs(exactMillimeters.width - intMillimeters.width) < 0.1 && Math.abs(exactMillimeters.height - intMillimeters.height) < 0.1) {\n        rawName = getPageName(intMillimeters, isPortrait, METRIC_PAGE_NAMES);\n        if (rawName) {\n          sizeInches = {\n            width: Math.round(intMillimeters.width / 25.4 * 100) / 100,\n            height: Math.round(intMillimeters.height / 25.4 * 100) / 100\n          };\n          sizeMillimeters = intMillimeters;\n        }\n      }\n    }\n    const [{\n      width,\n      height\n    }, unit, name, orientation] = await Promise.all([this._isNonMetricLocale ? sizeInches : sizeMillimeters, this.#getL10nStr(`page-size-unit-${this._isNonMetricLocale ? "inches" : "millimeters"}`), rawName && this.#getL10nStr(`page-size-name-${rawName}`), this.#getL10nStr(`page-size-orientation-${isPortrait ? "portrait" : "landscape"}`)]);\n    return this.#getL10nStr(`page-size-dimension-${name ? "name-" : ""}string`, {\n      width,\n      height,\n      unit,\n      name,\n      orientation\n    });\n  }\n  async #parseDate(inputDate) {\n    const dateObj = PDFDateString.toDateObject(inputDate);\n    return dateObj ? this.#getL10nStr("date-time-string", {\n      dateObj\n    }) : undefined;\n  }\n  #parseLinearization(isLinearized) {\n    return this.#getL10nStr(`linearized-${isLinearized ? "yes" : "no"}`);\n  }\n}\n\n;// CONCATENATED MODULE:./pdf_find_utils.js\nconst CharacterType = {\n  SPACE: 0,\n  ALPHA_LETTER: 1,\n  PUNCT: 2,\n  HAN_LETTER: 3,\n  KATAKANA_LETTER: 4,\n  HIRAGANA_LETTER: 5,\n  HALFWIDTH_KATAKANA_LETTER: 6,\n  THAI_LETTER: 7\n};\nfunction isAlphabeticalScript(charCode) {\n  return charCode < 0x2e80;\n}\nfunction isAscii(charCode) {\n  return (charCode & 0xff80) === 0;\n}\nfunction isAsciiAlpha(charCode) {\n  return charCode >= 0x61 && charCode <= 0x7a || charCode >= 0x41 && charCode <= 0x5a;\n}\nfunction isAsciiDigit(charCode) {\n  return charCode >= 0x30 && charCode <= 0x39;\n}\nfunction isAsciiSpace(charCode) {\n  return charCode === 0x20 || charCode === 0x09 || charCode === 0x0d || charCode === 0x0a;\n}\nfunction isHan(charCode) {\n  return charCode >= 0x3400 && charCode <= 0x9fff || charCode >= 0xf900 && charCode <= 0xfaff;\n}\nfunction isKatakana(charCode) {\n  return charCode >= 0x30a0 && charCode <= 0x30ff;\n}\nfunction isHiragana(charCode) {\n  return charCode >= 0x3040 && charCode <= 0x309f;\n}\nfunction isHalfwidthKatakana(charCode) {\n  return charCode >= 0xff60 && charCode <= 0xff9f;\n}\nfunction isThai(charCode) {\n  return (charCode & 0xff80) === 0x0e00;\n}\nfunction getCharacterType(charCode) {\n  if (isAlphabeticalScript(charCode)) {\n    if (isAscii(charCode)) {\n      if (isAsciiSpace(charCode)) {\n        return CharacterType.SPACE;\n      } else if (isAsciiAlpha(charCode) || isAsciiDigit(charCode) || charCode === 0x5f) {\n        return CharacterType.ALPHA_LETTER;\n      }\n      return CharacterType.PUNCT;\n    } else if (isThai(charCode)) {\n      return CharacterType.THAI_LETTER;\n    } else if (charCode === 0xa0) {\n      return CharacterType.SPACE;\n    }\n    return CharacterType.ALPHA_LETTER;\n  }\n  if (isHan(charCode)) {\n    return CharacterType.HAN_LETTER;\n  } else if (isKatakana(charCode)) {\n    return CharacterType.KATAKANA_LETTER;\n  } else if (isHiragana(charCode)) {\n    return CharacterType.HIRAGANA_LETTER;\n  } else if (isHalfwidthKatakana(charCode)) {\n    return CharacterType.HALFWIDTH_KATAKANA_LETTER;\n  }\n  return CharacterType.ALPHA_LETTER;\n}\nlet NormalizeWithNFKC;\nfunction getNormalizeWithNFKC() {\n  NormalizeWithNFKC ||= `\xA0\xA8\xAA\xAF\xB2-\xB5\xB8-\xBA\xBC-\xBE\u0132-\u0133\u013F-\u0140\u0149\u017F\u01C4-\u01CC\u01F1-\u01F3\u02B0-\u02B8\u02D8-\u02DD\u02E0-\u02E4\u0374\u037A\u037E\u0384-\u0385\u0387\u03D0-\u03D6\u03F0-\u03F2\u03F4-\u03F5\u03F9\u0587\u0675-\u0678\u0958-\u095F\u09DC-\u09DD\u09DF\u0A33\u0A36\u0A59-\u0A5B\u0A5E\u0B5C-\u0B5D\u0E33\u0EB3\u0EDC-\u0EDD\u0F0C\u0F43\u0F4D\u0F52\u0F57\u0F5C\u0F69\u10FC\u1D2C-\u1D2E\u1D30-\u1D3A\u1D3C-\u1D4D\u1D4F-\u1D6A\u1D78\u1D9B-\u1DBF\u1E9A-\u1E9B\u1F71\u1F73\u1F75\u1F77\u1F79\u1F7B\u1F7D\u1FBB\u1FBD-\u1FC1\u1FC9\u1FCB\u1FCD-\u1FCF\u1FD3\u1FDB\u1FDD-\u1FDF\u1FE3\u1FEB\u1FED-\u1FEF\u1FF9\u1FFB\u1FFD-\u1FFE\u2000-\u200A\u2011\u2017\u2024-\u2026\u202F\u2033-\u2034\u2036-\u2037\u203C\u203E\u2047-\u2049\u2057\u205F\u2070-\u2071\u2074-\u208E\u2090-\u209C\u20A8\u2100-\u2103\u2105-\u2107\u2109-\u2113\u2115-\u2116\u2119-\u211D\u2120-\u2122\u2124\u2126\u2128\u212A-\u212D\u212F-\u2131\u2133-\u2139\u213B-\u2140\u2145-\u2149\u2150-\u217F\u2189\u222C-\u222D\u222F-\u2230\u2329-\u232A\u2460-\u24EA\u2A0C\u2A74-\u2A76\u2ADC\u2C7C-\u2C7D\u2D6F\u2E9F\u2EF3\u2F00-\u2FD5\u3000\u3036\u3038-\u303A\u309B-\u309C\u309F\u30FF\u3131-\u318E\u3192-\u319F\u3200-\u321E\u3220-\u3247\u3250-\u327E\u3280-\u33FF\uA69C-\uA69D\uA770\uA7F2-\uA7F4\uA7F8-\uA7F9\uAB5C-\uAB5F\uAB69\uF900-\uFA0D\uFA10\uFA12\uFA15-\uFA1E\uFA20\uFA22\uFA25-\uFA26\uFA2A-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB36\uFB38-\uFB3C\uFB3E\uFB40-\uFB41\uFB43-\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFC\uFE10-\uFE19\uFE30-\uFE44\uFE47-\uFE52\uFE54-\uFE66\uFE68-\uFE6B\uFE70-\uFE72\uFE74\uFE76-\uFEFC\uFF01-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC\uFFE0-\uFFE6`;\n  return NormalizeWithNFKC;\n}\n\n;// CONCATENATED MODULE:./pdf_find_controller.js\n\n\nconst FindState = {\n  FOUND: 0,\n  NOT_FOUND: 1,\n  WRAPPED: 2,\n  PENDING: 3\n};\nconst FIND_TIMEOUT = 250;\nconst MATCH_SCROLL_OFFSET_TOP = -50;\nconst MATCH_SCROLL_OFFSET_LEFT = -400;\nconst CHARACTERS_TO_NORMALIZE = {\n  "\\u2010": "-",\n  "\\u2018": "\'",\n  "\\u2019": "\'",\n  "\\u201A": "\'",\n  "\\u201B": "\'",\n  "\\u201C": \'"\',\n  "\\u201D": \'"\',\n  "\\u201E": \'"\',\n  "\\u201F": \'"\',\n  "\\u00BC": "1/4",\n  "\\u00BD": "1/2",\n  "\\u00BE": "3/4"\n};\nconst DIACRITICS_EXCEPTION = new Set([0x3099, 0x309a, 0x094d, 0x09cd, 0x0a4d, 0x0acd, 0x0b4d, 0x0bcd, 0x0c4d, 0x0ccd, 0x0d3b, 0x0d3c, 0x0d4d, 0x0dca, 0x0e3a, 0x0eba, 0x0f84, 0x1039, 0x103a, 0x1714, 0x1734, 0x17d2, 0x1a60, 0x1b44, 0x1baa, 0x1bab, 0x1bf2, 0x1bf3, 0x2d7f, 0xa806, 0xa82c, 0xa8c4, 0xa953, 0xa9c0, 0xaaf6, 0xabed, 0x0c56, 0x0f71, 0x0f72, 0x0f7a, 0x0f7b, 0x0f7c, 0x0f7d, 0x0f80, 0x0f74]);\nlet DIACRITICS_EXCEPTION_STR;\nconst DIACRITICS_REG_EXP = /\\p{M}+/gu;\nconst SPECIAL_CHARS_REG_EXP = /([.*+?^${}()|[\\]\\\\])|(\\p{P})|(\\s+)|(\\p{M})|(\\p{L})/gu;\nconst NOT_DIACRITIC_FROM_END_REG_EXP = /([^\\p{M}])\\p{M}*$/u;\nconst NOT_DIACRITIC_FROM_START_REG_EXP = /^\\p{M}*([^\\p{M}])/u;\nconst SYLLABLES_REG_EXP = /[\\uAC00-\\uD7AF\\uFA6C\\uFACF-\\uFAD1\\uFAD5-\\uFAD7]+/g;\nconst SYLLABLES_LENGTHS = new Map();\nconst FIRST_CHAR_SYLLABLES_REG_EXP = "[\\\\u1100-\\\\u1112\\\\ud7a4-\\\\ud7af\\\\ud84a\\\\ud84c\\\\ud850\\\\ud854\\\\ud857\\\\ud85f]";\nconst NFKC_CHARS_TO_NORMALIZE = new Map();\nlet noSyllablesRegExp = null;\nlet withSyllablesRegExp = null;\nfunction normalize(text) {\n  const syllablePositions = [];\n  let m;\n  while ((m = SYLLABLES_REG_EXP.exec(text)) !== null) {\n    let {\n      index\n    } = m;\n    for (const char of m[0]) {\n      let len = SYLLABLES_LENGTHS.get(char);\n      if (!len) {\n        len = char.normalize("NFD").length;\n        SYLLABLES_LENGTHS.set(char, len);\n      }\n      syllablePositions.push([len, index++]);\n    }\n  }\n  let normalizationRegex;\n  if (syllablePositions.length === 0 && noSyllablesRegExp) {\n    normalizationRegex = noSyllablesRegExp;\n  } else if (syllablePositions.length > 0 && withSyllablesRegExp) {\n    normalizationRegex = withSyllablesRegExp;\n  } else {\n    const replace = Object.keys(CHARACTERS_TO_NORMALIZE).join("");\n    const toNormalizeWithNFKC = getNormalizeWithNFKC();\n    const CJK = "(?:\\\\p{Ideographic}|[\\u3040-\\u30FF])";\n    const HKDiacritics = "(?:\\u3099|\\u309A)";\n    const regexp = `([${replace}])|([${toNormalizeWithNFKC}])|(${HKDiacritics}\\\\n)|(\\\\p{M}+(?:-\\\\n)?)|(\\\\S-\\\\n)|(${CJK}\\\\n)|(\\\\n)`;\n    if (syllablePositions.length === 0) {\n      normalizationRegex = noSyllablesRegExp = new RegExp(regexp + "|(\\\\u0000)", "gum");\n    } else {\n      normalizationRegex = withSyllablesRegExp = new RegExp(regexp + `|(${FIRST_CHAR_SYLLABLES_REG_EXP})`, "gum");\n    }\n  }\n  const rawDiacriticsPositions = [];\n  while ((m = DIACRITICS_REG_EXP.exec(text)) !== null) {\n    rawDiacriticsPositions.push([m[0].length, m.index]);\n  }\n  let normalized = text.normalize("NFD");\n  const positions = [[0, 0]];\n  let rawDiacriticsIndex = 0;\n  let syllableIndex = 0;\n  let shift = 0;\n  let shiftOrigin = 0;\n  let eol = 0;\n  let hasDiacritics = false;\n  normalized = normalized.replace(normalizationRegex, (match, p1, p2, p3, p4, p5, p6, p7, p8, i) => {\n    i -= shiftOrigin;\n    if (p1) {\n      const replacement = CHARACTERS_TO_NORMALIZE[p1];\n      const jj = replacement.length;\n      for (let j = 1; j < jj; j++) {\n        positions.push([i - shift + j, shift - j]);\n      }\n      shift -= jj - 1;\n      return replacement;\n    }\n    if (p2) {\n      let replacement = NFKC_CHARS_TO_NORMALIZE.get(p2);\n      if (!replacement) {\n        replacement = p2.normalize("NFKC");\n        NFKC_CHARS_TO_NORMALIZE.set(p2, replacement);\n      }\n      const jj = replacement.length;\n      for (let j = 1; j < jj; j++) {\n        positions.push([i - shift + j, shift - j]);\n      }\n      shift -= jj - 1;\n      return replacement;\n    }\n    if (p3) {\n      hasDiacritics = true;\n      if (i + eol === rawDiacriticsPositions[rawDiacriticsIndex]?.[1]) {\n        ++rawDiacriticsIndex;\n      } else {\n        positions.push([i - 1 - shift + 1, shift - 1]);\n        shift -= 1;\n        shiftOrigin += 1;\n      }\n      positions.push([i - shift + 1, shift]);\n      shiftOrigin += 1;\n      eol += 1;\n      return p3.charAt(0);\n    }\n    if (p4) {\n      const hasTrailingDashEOL = p4.endsWith("\\n");\n      const len = hasTrailingDashEOL ? p4.length - 2 : p4.length;\n      hasDiacritics = true;\n      let jj = len;\n      if (i + eol === rawDiacriticsPositions[rawDiacriticsIndex]?.[1]) {\n        jj -= rawDiacriticsPositions[rawDiacriticsIndex][0];\n        ++rawDiacriticsIndex;\n      }\n      for (let j = 1; j <= jj; j++) {\n        positions.push([i - 1 - shift + j, shift - j]);\n      }\n      shift -= jj;\n      shiftOrigin += jj;\n      if (hasTrailingDashEOL) {\n        i += len - 1;\n        positions.push([i - shift + 1, 1 + shift]);\n        shift += 1;\n        shiftOrigin += 1;\n        eol += 1;\n        return p4.slice(0, len);\n      }\n      return p4;\n    }\n    if (p5) {\n      const len = p5.length - 2;\n      positions.push([i - shift + len, 1 + shift]);\n      shift += 1;\n      shiftOrigin += 1;\n      eol += 1;\n      return p5.slice(0, -2);\n    }\n    if (p6) {\n      const len = p6.length - 1;\n      positions.push([i - shift + len, shift]);\n      shiftOrigin += 1;\n      eol += 1;\n      return p6.slice(0, -1);\n    }\n    if (p7) {\n      positions.push([i - shift + 1, shift - 1]);\n      shift -= 1;\n      shiftOrigin += 1;\n      eol += 1;\n      return " ";\n    }\n    if (i + eol === syllablePositions[syllableIndex]?.[1]) {\n      const newCharLen = syllablePositions[syllableIndex][0] - 1;\n      ++syllableIndex;\n      for (let j = 1; j <= newCharLen; j++) {\n        positions.push([i - (shift - j), shift - j]);\n      }\n      shift -= newCharLen;\n      shiftOrigin += newCharLen;\n    }\n    return p8;\n  });\n  positions.push([normalized.length, shift]);\n  return [normalized, positions, hasDiacritics];\n}\nfunction getOriginalIndex(diffs, pos, len) {\n  if (!diffs) {\n    return [pos, len];\n  }\n  const start = pos;\n  const end = pos + len - 1;\n  let i = binarySearchFirstItem(diffs, x => x[0] >= start);\n  if (diffs[i][0] > start) {\n    --i;\n  }\n  let j = binarySearchFirstItem(diffs, x => x[0] >= end, i);\n  if (diffs[j][0] > end) {\n    --j;\n  }\n  const oldStart = start + diffs[i][1];\n  const oldEnd = end + diffs[j][1];\n  const oldLen = oldEnd + 1 - oldStart;\n  return [oldStart, oldLen];\n}\nclass PDFFindController {\n  #state = null;\n  #updateMatchesCountOnProgress = true;\n  #visitedPagesCount = 0;\n  constructor({\n    linkService,\n    eventBus,\n    updateMatchesCountOnProgress = true\n  }) {\n    this._linkService = linkService;\n    this._eventBus = eventBus;\n    this.#updateMatchesCountOnProgress = updateMatchesCountOnProgress;\n    this.onIsPageVisible = null;\n    this.#reset();\n    eventBus._on("find", this.#onFind.bind(this));\n    eventBus._on("findbarclose", this.#onFindBarClose.bind(this));\n  }\n  get highlightMatches() {\n    return this._highlightMatches;\n  }\n  get pageMatches() {\n    return this._pageMatches;\n  }\n  get pageMatchesLength() {\n    return this._pageMatchesLength;\n  }\n  get selected() {\n    return this._selected;\n  }\n  get state() {\n    return this.#state;\n  }\n  setDocument(pdfDocument) {\n    if (this._pdfDocument) {\n      this.#reset();\n    }\n    if (!pdfDocument) {\n      return;\n    }\n    this._pdfDocument = pdfDocument;\n    this._firstPageCapability.resolve();\n  }\n  #onFind(state) {\n    if (!state) {\n      return;\n    }\n    const pdfDocument = this._pdfDocument;\n    const {\n      type\n    } = state;\n    if (this.#state === null || this.#shouldDirtyMatch(state)) {\n      this._dirtyMatch = true;\n    }\n    this.#state = state;\n    if (type !== "highlightallchange") {\n      this.#updateUIState(FindState.PENDING);\n    }\n    this._firstPageCapability.promise.then(() => {\n      if (!this._pdfDocument || pdfDocument && this._pdfDocument !== pdfDocument) {\n        return;\n      }\n      this.#extractText();\n      const findbarClosed = !this._highlightMatches;\n      const pendingTimeout = !!this._findTimeout;\n      if (this._findTimeout) {\n        clearTimeout(this._findTimeout);\n        this._findTimeout = null;\n      }\n      if (!type) {\n        this._findTimeout = setTimeout(() => {\n          this.#nextMatch();\n          this._findTimeout = null;\n        }, FIND_TIMEOUT);\n      } else if (this._dirtyMatch) {\n        this.#nextMatch();\n      } else if (type === "again") {\n        this.#nextMatch();\n        if (findbarClosed && this.#state.highlightAll) {\n          this.#updateAllPages();\n        }\n      } else if (type === "highlightallchange") {\n        if (pendingTimeout) {\n          this.#nextMatch();\n        } else {\n          this._highlightMatches = true;\n        }\n        this.#updateAllPages();\n      } else {\n        this.#nextMatch();\n      }\n    });\n  }\n  scrollMatchIntoView({\n    element = null,\n    selectedLeft = 0,\n    pageIndex = -1,\n    matchIndex = -1\n  }) {\n    if (!this._scrollMatches || !element) {\n      return;\n    } else if (matchIndex === -1 || matchIndex !== this._selected.matchIdx) {\n      return;\n    } else if (pageIndex === -1 || pageIndex !== this._selected.pageIdx) {\n      return;\n    }\n    this._scrollMatches = false;\n    const spot = {\n      top: MATCH_SCROLL_OFFSET_TOP,\n      left: selectedLeft + MATCH_SCROLL_OFFSET_LEFT\n    };\n    scrollIntoView(element, spot, true);\n  }\n  #reset() {\n    this._highlightMatches = false;\n    this._scrollMatches = false;\n    this._pdfDocument = null;\n    this._pageMatches = [];\n    this._pageMatchesLength = [];\n    this.#visitedPagesCount = 0;\n    this.#state = null;\n    this._selected = {\n      pageIdx: -1,\n      matchIdx: -1\n    };\n    this._offset = {\n      pageIdx: null,\n      matchIdx: null,\n      wrapped: false\n    };\n    this._extractTextPromises = [];\n    this._pageContents = [];\n    this._pageDiffs = [];\n    this._hasDiacritics = [];\n    this._matchesCountTotal = 0;\n    this._pagesToSearch = null;\n    this._pendingFindMatches = new Set();\n    this._resumePageIdx = null;\n    this._dirtyMatch = false;\n    clearTimeout(this._findTimeout);\n    this._findTimeout = null;\n    this._firstPageCapability = Promise.withResolvers();\n  }\n  get #query() {\n    const {\n      query\n    } = this.#state;\n    if (typeof query === "string") {\n      if (query !== this._rawQuery) {\n        this._rawQuery = query;\n        [this._normalizedQuery] = normalize(query);\n      }\n      return this._normalizedQuery;\n    }\n    return (query || []).filter(q => !!q).map(q => normalize(q)[0]);\n  }\n  #shouldDirtyMatch(state) {\n    const newQuery = state.query,\n      prevQuery = this.#state.query;\n    const newType = typeof newQuery,\n      prevType = typeof prevQuery;\n    if (newType !== prevType) {\n      return true;\n    }\n    if (newType === "string") {\n      if (newQuery !== prevQuery) {\n        return true;\n      }\n    } else if (JSON.stringify(newQuery) !== JSON.stringify(prevQuery)) {\n      return true;\n    }\n    switch (state.type) {\n      case "again":\n        const pageNumber = this._selected.pageIdx + 1;\n        const linkService = this._linkService;\n        return pageNumber >= 1 && pageNumber <= linkService.pagesCount && pageNumber !== linkService.page && !(this.onIsPageVisible?.(pageNumber) ?? true);\n      case "highlightallchange":\n        return false;\n    }\n    return true;\n  }\n  #isEntireWord(content, startIdx, length) {\n    let match = content.slice(0, startIdx).match(NOT_DIACRITIC_FROM_END_REG_EXP);\n    if (match) {\n      const first = content.charCodeAt(startIdx);\n      const limit = match[1].charCodeAt(0);\n      if (getCharacterType(first) === getCharacterType(limit)) {\n        return false;\n      }\n    }\n    match = content.slice(startIdx + length).match(NOT_DIACRITIC_FROM_START_REG_EXP);\n    if (match) {\n      const last = content.charCodeAt(startIdx + length - 1);\n      const limit = match[1].charCodeAt(0);\n      if (getCharacterType(last) === getCharacterType(limit)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  #convertToRegExpString(query, hasDiacritics) {\n    const {\n      matchDiacritics\n    } = this.#state;\n    let isUnicode = false;\n    query = query.replaceAll(SPECIAL_CHARS_REG_EXP, (match, p1, p2, p3, p4, p5) => {\n      if (p1) {\n        return `[ ]*\\\\${p1}[ ]*`;\n      }\n      if (p2) {\n        return `[ ]*${p2}[ ]*`;\n      }\n      if (p3) {\n        return "[ ]+";\n      }\n      if (matchDiacritics) {\n        return p4 || p5;\n      }\n      if (p4) {\n        return DIACRITICS_EXCEPTION.has(p4.charCodeAt(0)) ? p4 : "";\n      }\n      if (hasDiacritics) {\n        isUnicode = true;\n        return `${p5}\\\\p{M}*`;\n      }\n      return p5;\n    });\n    const trailingSpaces = "[ ]*";\n    if (query.endsWith(trailingSpaces)) {\n      query = query.slice(0, query.length - trailingSpaces.length);\n    }\n    if (matchDiacritics) {\n      if (hasDiacritics) {\n        DIACRITICS_EXCEPTION_STR ||= String.fromCharCode(...DIACRITICS_EXCEPTION);\n        isUnicode = true;\n        query = `${query}(?=[${DIACRITICS_EXCEPTION_STR}]|[^\\\\p{M}]|$)`;\n      }\n    }\n    return [isUnicode, query];\n  }\n  #calculateMatch(pageIndex) {\n    const query = this.#query;\n    if (query.length === 0) {\n      return;\n    }\n    const pageContent = this._pageContents[pageIndex];\n    const matcherResult = this.match(query, pageContent, pageIndex);\n    const matches = this._pageMatches[pageIndex] = [];\n    const matchesLength = this._pageMatchesLength[pageIndex] = [];\n    const diffs = this._pageDiffs[pageIndex];\n    matcherResult?.forEach(({\n      index,\n      length\n    }) => {\n      const [matchPos, matchLen] = getOriginalIndex(diffs, index, length);\n      if (matchLen) {\n        matches.push(matchPos);\n        matchesLength.push(matchLen);\n      }\n    });\n    if (this.#state.highlightAll) {\n      this.#updatePage(pageIndex);\n    }\n    if (this._resumePageIdx === pageIndex) {\n      this._resumePageIdx = null;\n      this.#nextPageMatch();\n    }\n    const pageMatchesCount = matches.length;\n    this._matchesCountTotal += pageMatchesCount;\n    if (this.#updateMatchesCountOnProgress) {\n      if (pageMatchesCount > 0) {\n        this.#updateUIResultsCount();\n      }\n    } else if (++this.#visitedPagesCount === this._linkService.pagesCount) {\n      this.#updateUIResultsCount();\n    }\n  }\n  match(query, pageContent, pageIndex) {\n    const hasDiacritics = this._hasDiacritics[pageIndex];\n    let isUnicode = false;\n    if (typeof query === "string") {\n      [isUnicode, query] = this.#convertToRegExpString(query, hasDiacritics);\n    } else {\n      query = query.sort().reverse().map(q => {\n        const [isUnicodePart, queryPart] = this.#convertToRegExpString(q, hasDiacritics);\n        isUnicode ||= isUnicodePart;\n        return `(${queryPart})`;\n      }).join("|");\n    }\n    if (!query) {\n      return undefined;\n    }\n    const {\n      caseSensitive,\n      entireWord\n    } = this.#state;\n    const flags = `g${isUnicode ? "u" : ""}${caseSensitive ? "" : "i"}`;\n    query = new RegExp(query, flags);\n    const matches = [];\n    let match;\n    while ((match = query.exec(pageContent)) !== null) {\n      if (entireWord && !this.#isEntireWord(pageContent, match.index, match[0].length)) {\n        continue;\n      }\n      matches.push({\n        index: match.index,\n        length: match[0].length\n      });\n    }\n    return matches;\n  }\n  #extractText() {\n    if (this._extractTextPromises.length > 0) {\n      return;\n    }\n    let deferred = Promise.resolve();\n    const textOptions = {\n      disableNormalization: true\n    };\n    for (let i = 0, ii = this._linkService.pagesCount; i < ii; i++) {\n      const {\n        promise,\n        resolve\n      } = Promise.withResolvers();\n      this._extractTextPromises[i] = promise;\n      deferred = deferred.then(() => {\n        return this._pdfDocument.getPage(i + 1).then(pdfPage => pdfPage.getTextContent(textOptions)).then(textContent => {\n          const strBuf = [];\n          for (const textItem of textContent.items) {\n            strBuf.push(textItem.str);\n            if (textItem.hasEOL) {\n              strBuf.push("\\n");\n            }\n          }\n          [this._pageContents[i], this._pageDiffs[i], this._hasDiacritics[i]] = normalize(strBuf.join(""));\n          resolve();\n        }, reason => {\n          console.error(`Unable to get text content for page ${i + 1}`, reason);\n          this._pageContents[i] = "";\n          this._pageDiffs[i] = null;\n          this._hasDiacritics[i] = false;\n          resolve();\n        });\n      });\n    }\n  }\n  #updatePage(index) {\n    if (this._scrollMatches && this._selected.pageIdx === index) {\n      this._linkService.page = index + 1;\n    }\n    this._eventBus.dispatch("updatetextlayermatches", {\n      source: this,\n      pageIndex: index\n    });\n  }\n  #updateAllPages() {\n    this._eventBus.dispatch("updatetextlayermatches", {\n      source: this,\n      pageIndex: -1\n    });\n  }\n  #nextMatch() {\n    const previous = this.#state.findPrevious;\n    const currentPageIndex = this._linkService.page - 1;\n    const numPages = this._linkService.pagesCount;\n    this._highlightMatches = true;\n    if (this._dirtyMatch) {\n      this._dirtyMatch = false;\n      this._selected.pageIdx = this._selected.matchIdx = -1;\n      this._offset.pageIdx = currentPageIndex;\n      this._offset.matchIdx = null;\n      this._offset.wrapped = false;\n      this._resumePageIdx = null;\n      this._pageMatches.length = 0;\n      this._pageMatchesLength.length = 0;\n      this.#visitedPagesCount = 0;\n      this._matchesCountTotal = 0;\n      this.#updateAllPages();\n      for (let i = 0; i < numPages; i++) {\n        if (this._pendingFindMatches.has(i)) {\n          continue;\n        }\n        this._pendingFindMatches.add(i);\n        this._extractTextPromises[i].then(() => {\n          this._pendingFindMatches.delete(i);\n          this.#calculateMatch(i);\n        });\n      }\n    }\n    const query = this.#query;\n    if (query.length === 0) {\n      this.#updateUIState(FindState.FOUND);\n      return;\n    }\n    if (this._resumePageIdx) {\n      return;\n    }\n    const offset = this._offset;\n    this._pagesToSearch = numPages;\n    if (offset.matchIdx !== null) {\n      const numPageMatches = this._pageMatches[offset.pageIdx].length;\n      if (!previous && offset.matchIdx + 1 < numPageMatches || previous && offset.matchIdx > 0) {\n        offset.matchIdx = previous ? offset.matchIdx - 1 : offset.matchIdx + 1;\n        this.#updateMatch(true);\n        return;\n      }\n      this.#advanceOffsetPage(previous);\n    }\n    this.#nextPageMatch();\n  }\n  #matchesReady(matches) {\n    const offset = this._offset;\n    const numMatches = matches.length;\n    const previous = this.#state.findPrevious;\n    if (numMatches) {\n      offset.matchIdx = previous ? numMatches - 1 : 0;\n      this.#updateMatch(true);\n      return true;\n    }\n    this.#advanceOffsetPage(previous);\n    if (offset.wrapped) {\n      offset.matchIdx = null;\n      if (this._pagesToSearch < 0) {\n        this.#updateMatch(false);\n        return true;\n      }\n    }\n    return false;\n  }\n  #nextPageMatch() {\n    if (this._resumePageIdx !== null) {\n      console.error("There can only be one pending page.");\n    }\n    let matches = null;\n    do {\n      const pageIdx = this._offset.pageIdx;\n      matches = this._pageMatches[pageIdx];\n      if (!matches) {\n        this._resumePageIdx = pageIdx;\n        break;\n      }\n    } while (!this.#matchesReady(matches));\n  }\n  #advanceOffsetPage(previous) {\n    const offset = this._offset;\n    const numPages = this._linkService.pagesCount;\n    offset.pageIdx = previous ? offset.pageIdx - 1 : offset.pageIdx + 1;\n    offset.matchIdx = null;\n    this._pagesToSearch--;\n    if (offset.pageIdx >= numPages || offset.pageIdx < 0) {\n      offset.pageIdx = previous ? numPages - 1 : 0;\n      offset.wrapped = true;\n    }\n  }\n  #updateMatch(found = false) {\n    let state = FindState.NOT_FOUND;\n    const wrapped = this._offset.wrapped;\n    this._offset.wrapped = false;\n    if (found) {\n      const previousPage = this._selected.pageIdx;\n      this._selected.pageIdx = this._offset.pageIdx;\n      this._selected.matchIdx = this._offset.matchIdx;\n      state = wrapped ? FindState.WRAPPED : FindState.FOUND;\n      if (previousPage !== -1 && previousPage !== this._selected.pageIdx) {\n        this.#updatePage(previousPage);\n      }\n    }\n    this.#updateUIState(state, this.#state.findPrevious);\n    if (this._selected.pageIdx !== -1) {\n      this._scrollMatches = true;\n      this.#updatePage(this._selected.pageIdx);\n    }\n  }\n  #onFindBarClose(evt) {\n    const pdfDocument = this._pdfDocument;\n    this._firstPageCapability.promise.then(() => {\n      if (!this._pdfDocument || pdfDocument && this._pdfDocument !== pdfDocument) {\n        return;\n      }\n      if (this._findTimeout) {\n        clearTimeout(this._findTimeout);\n        this._findTimeout = null;\n      }\n      if (this._resumePageIdx) {\n        this._resumePageIdx = null;\n        this._dirtyMatch = true;\n      }\n      this.#updateUIState(FindState.FOUND);\n      this._highlightMatches = false;\n      this.#updateAllPages();\n    });\n  }\n  #requestMatchesCount() {\n    const {\n      pageIdx,\n      matchIdx\n    } = this._selected;\n    let current = 0,\n      total = this._matchesCountTotal;\n    if (matchIdx !== -1) {\n      for (let i = 0; i < pageIdx; i++) {\n        current += this._pageMatches[i]?.length || 0;\n      }\n      current += matchIdx + 1;\n    }\n    if (current < 1 || current > total) {\n      current = total = 0;\n    }\n    return {\n      current,\n      total\n    };\n  }\n  #updateUIResultsCount() {\n    this._eventBus.dispatch("updatefindmatchescount", {\n      source: this,\n      matchesCount: this.#requestMatchesCount()\n    });\n  }\n  #updateUIState(state, previous = false) {\n    if (!this.#updateMatchesCountOnProgress && (this.#visitedPagesCount !== this._linkService.pagesCount || state === FindState.PENDING)) {\n      return;\n    }\n    this._eventBus.dispatch("updatefindcontrolstate", {\n      source: this,\n      state,\n      previous,\n      entireWord: this.#state?.entireWord ?? null,\n      matchesCount: this.#requestMatchesCount(),\n      rawQuery: this.#state?.query ?? null\n    });\n  }\n}\n\n;// CONCATENATED MODULE:./pdf_find_bar.js\n\n\nconst MATCHES_COUNT_LIMIT = 1000;\nclass PDFFindBar {\n  #resizeObserver = new ResizeObserver(this.#resizeObserverCallback.bind(this));\n  constructor(options, eventBus) {\n    this.opened = false;\n    this.bar = options.bar;\n    this.toggleButton = options.toggleButton;\n    this.findField = options.findField;\n    this.highlightAll = options.highlightAllCheckbox;\n    this.caseSensitive = options.caseSensitiveCheckbox;\n    this.matchDiacritics = options.matchDiacriticsCheckbox;\n    this.entireWord = options.entireWordCheckbox;\n    this.findMsg = options.findMsg;\n    this.findResultsCount = options.findResultsCount;\n    this.findPreviousButton = options.findPreviousButton;\n    this.findNextButton = options.findNextButton;\n    this.eventBus = eventBus;\n    this.toggleButton.addEventListener("click", () => {\n      this.toggle();\n    });\n    this.findField.addEventListener("input", () => {\n      this.dispatchEvent("");\n    });\n    this.bar.addEventListener("keydown", e => {\n      switch (e.keyCode) {\n        case 13:\n          if (e.target === this.findField) {\n            this.dispatchEvent("again", e.shiftKey);\n          }\n          break;\n        case 27:\n          this.close();\n          break;\n      }\n    });\n    this.findPreviousButton.addEventListener("click", () => {\n      this.dispatchEvent("again", true);\n    });\n    this.findNextButton.addEventListener("click", () => {\n      this.dispatchEvent("again", false);\n    });\n    this.highlightAll.addEventListener("click", () => {\n      this.dispatchEvent("highlightallchange");\n    });\n    this.caseSensitive.addEventListener("click", () => {\n      this.dispatchEvent("casesensitivitychange");\n    });\n    this.entireWord.addEventListener("click", () => {\n      this.dispatchEvent("entirewordchange");\n    });\n    this.matchDiacritics.addEventListener("click", () => {\n      this.dispatchEvent("diacriticmatchingchange");\n    });\n  }\n  reset() {\n    this.updateUIState();\n  }\n  dispatchEvent(type, findPrev = false) {\n    this.eventBus.dispatch("find", {\n      source: this,\n      type,\n      query: this.findField.value,\n      caseSensitive: this.caseSensitive.checked,\n      entireWord: this.entireWord.checked,\n      highlightAll: this.highlightAll.checked,\n      findPrevious: findPrev,\n      matchDiacritics: this.matchDiacritics.checked\n    });\n  }\n  updateUIState(state, previous, matchesCount) {\n    const {\n      findField,\n      findMsg\n    } = this;\n    let findMsgId = "",\n      status = "";\n    switch (state) {\n      case FindState.FOUND:\n        break;\n      case FindState.PENDING:\n        status = "pending";\n        break;\n      case FindState.NOT_FOUND:\n        findMsgId = "pdfjs-find-not-found";\n        status = "notFound";\n        break;\n      case FindState.WRAPPED:\n        findMsgId = `pdfjs-find-reached-${previous ? "top" : "bottom"}`;\n        break;\n    }\n    findField.setAttribute("data-status", status);\n    findField.setAttribute("aria-invalid", state === FindState.NOT_FOUND);\n    findMsg.setAttribute("data-status", status);\n    if (findMsgId) {\n      findMsg.setAttribute("data-l10n-id", findMsgId);\n    } else {\n      findMsg.removeAttribute("data-l10n-id");\n      findMsg.textContent = "";\n    }\n    this.updateResultsCount(matchesCount);\n  }\n  updateResultsCount({\n    current = 0,\n    total = 0\n  } = {}) {\n    const {\n      findResultsCount\n    } = this;\n    if (total > 0) {\n      const limit = MATCHES_COUNT_LIMIT;\n      findResultsCount.setAttribute("data-l10n-id", `pdfjs-find-match-count${total > limit ? "-limit" : ""}`);\n      findResultsCount.setAttribute("data-l10n-args", JSON.stringify({\n        limit,\n        current,\n        total\n      }));\n    } else {\n      findResultsCount.removeAttribute("data-l10n-id");\n      findResultsCount.textContent = "";\n    }\n  }\n  open() {\n    if (!this.opened) {\n      this.#resizeObserver.observe(this.bar.parentNode);\n      this.#resizeObserver.observe(this.bar);\n      this.opened = true;\n      toggleExpandedBtn(this.toggleButton, true, this.bar);\n    }\n    this.findField.select();\n    this.findField.focus();\n  }\n  close() {\n    if (!this.opened) {\n      return;\n    }\n    this.#resizeObserver.disconnect();\n    this.opened = false;\n    toggleExpandedBtn(this.toggleButton, false, this.bar);\n    this.eventBus.dispatch("findbarclose", {\n      source: this\n    });\n  }\n  toggle() {\n    if (this.opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n  #resizeObserverCallback(entries) {\n    const {\n      bar\n    } = this;\n    bar.classList.remove("wrapContainers");\n    const findbarHeight = bar.clientHeight;\n    const inputContainerHeight = bar.firstElementChild.clientHeight;\n    if (findbarHeight > inputContainerHeight) {\n      bar.classList.add("wrapContainers");\n    }\n  }\n}\n\n;// CONCATENATED MODULE:./pdf_history.js\n\n\nconst HASH_CHANGE_TIMEOUT = 1000;\nconst POSITION_UPDATED_THRESHOLD = 50;\nconst UPDATE_VIEWAREA_TIMEOUT = 1000;\nfunction getCurrentHash() {\n  return document.location.hash;\n}\nclass PDFHistory {\n  #eventAbortController = null;\n  constructor({\n    linkService,\n    eventBus\n  }) {\n    this.linkService = linkService;\n    this.eventBus = eventBus;\n    this._initialized = false;\n    this._fingerprint = "";\n    this.reset();\n    this.eventBus._on("pagesinit", () => {\n      this._isPagesLoaded = false;\n      this.eventBus._on("pagesloaded", evt => {\n        this._isPagesLoaded = !!evt.pagesCount;\n      }, {\n        once: true\n      });\n    });\n  }\n  initialize({\n    fingerprint,\n    resetHistory = false,\n    updateUrl = false\n  }) {\n    if (!fingerprint || typeof fingerprint !== "string") {\n      console.error(\'PDFHistory.initialize: The "fingerprint" must be a non-empty string.\');\n      return;\n    }\n    if (this._initialized) {\n      this.reset();\n    }\n    const reInitialized = this._fingerprint !== "" && this._fingerprint !== fingerprint;\n    this._fingerprint = fingerprint;\n    this._updateUrl = updateUrl === true;\n    this._initialized = true;\n    this.#bindEvents();\n    const state = window.history.state;\n    this._popStateInProgress = false;\n    this._blockHashChange = 0;\n    this._currentHash = getCurrentHash();\n    this._numPositionUpdates = 0;\n    this._uid = this._maxUid = 0;\n    this._destination = null;\n    this._position = null;\n    if (!this.#isValidState(state, true) || resetHistory) {\n      const {\n        hash,\n        page,\n        rotation\n      } = this.#parseCurrentHash(true);\n      if (!hash || reInitialized || resetHistory) {\n        this.#pushOrReplaceState(null, true);\n        return;\n      }\n      this.#pushOrReplaceState({\n        hash,\n        page,\n        rotation\n      }, true);\n      return;\n    }\n    const destination = state.destination;\n    this.#updateInternalState(destination, state.uid, true);\n    if (destination.rotation !== undefined) {\n      this._initialRotation = destination.rotation;\n    }\n    if (destination.dest) {\n      this._initialBookmark = JSON.stringify(destination.dest);\n      this._destination.page = null;\n    } else if (destination.hash) {\n      this._initialBookmark = destination.hash;\n    } else if (destination.page) {\n      this._initialBookmark = `page=${destination.page}`;\n    }\n  }\n  reset() {\n    if (this._initialized) {\n      this.#pageHide();\n      this._initialized = false;\n      this.#unbindEvents();\n    }\n    if (this._updateViewareaTimeout) {\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n    this._initialBookmark = null;\n    this._initialRotation = null;\n  }\n  push({\n    namedDest = null,\n    explicitDest,\n    pageNumber\n  }) {\n    if (!this._initialized) {\n      return;\n    }\n    if (namedDest && typeof namedDest !== "string") {\n      console.error("PDFHistory.push: " + `"${namedDest}" is not a valid namedDest parameter.`);\n      return;\n    } else if (!Array.isArray(explicitDest)) {\n      console.error("PDFHistory.push: " + `"${explicitDest}" is not a valid explicitDest parameter.`);\n      return;\n    } else if (!this.#isValidPage(pageNumber)) {\n      if (pageNumber !== null || this._destination) {\n        console.error("PDFHistory.push: " + `"${pageNumber}" is not a valid pageNumber parameter.`);\n        return;\n      }\n    }\n    const hash = namedDest || JSON.stringify(explicitDest);\n    if (!hash) {\n      return;\n    }\n    let forceReplace = false;\n    if (this._destination && (isDestHashesEqual(this._destination.hash, hash) || isDestArraysEqual(this._destination.dest, explicitDest))) {\n      if (this._destination.page) {\n        return;\n      }\n      forceReplace = true;\n    }\n    if (this._popStateInProgress && !forceReplace) {\n      return;\n    }\n    this.#pushOrReplaceState({\n      dest: explicitDest,\n      hash,\n      page: pageNumber,\n      rotation: this.linkService.rotation\n    }, forceReplace);\n    if (!this._popStateInProgress) {\n      this._popStateInProgress = true;\n      Promise.resolve().then(() => {\n        this._popStateInProgress = false;\n      });\n    }\n  }\n  pushPage(pageNumber) {\n    if (!this._initialized) {\n      return;\n    }\n    if (!this.#isValidPage(pageNumber)) {\n      console.error(`PDFHistory.pushPage: "${pageNumber}" is not a valid page number.`);\n      return;\n    }\n    if (this._destination?.page === pageNumber) {\n      return;\n    }\n    if (this._popStateInProgress) {\n      return;\n    }\n    this.#pushOrReplaceState({\n      dest: null,\n      hash: `page=${pageNumber}`,\n      page: pageNumber,\n      rotation: this.linkService.rotation\n    });\n    if (!this._popStateInProgress) {\n      this._popStateInProgress = true;\n      Promise.resolve().then(() => {\n        this._popStateInProgress = false;\n      });\n    }\n  }\n  pushCurrentPosition() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n    this.#tryPushCurrentPosition();\n  }\n  back() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n    const state = window.history.state;\n    if (this.#isValidState(state) && state.uid > 0) {\n      window.history.back();\n    }\n  }\n  forward() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n    const state = window.history.state;\n    if (this.#isValidState(state) && state.uid < this._maxUid) {\n      window.history.forward();\n    }\n  }\n  get popStateInProgress() {\n    return this._initialized && (this._popStateInProgress || this._blockHashChange > 0);\n  }\n  get initialBookmark() {\n    return this._initialized ? this._initialBookmark : null;\n  }\n  get initialRotation() {\n    return this._initialized ? this._initialRotation : null;\n  }\n  #pushOrReplaceState(destination, forceReplace = false) {\n    const shouldReplace = forceReplace || !this._destination;\n    const newState = {\n      fingerprint: this._fingerprint,\n      uid: shouldReplace ? this._uid : this._uid + 1,\n      destination\n    };\n    this.#updateInternalState(destination, newState.uid);\n    let newUrl;\n    if (this._updateUrl && destination?.hash) {\n      const baseUrl = document.location.href.split("#", 1)[0];\n      if (!baseUrl.startsWith("file://")) {\n        newUrl = `${baseUrl}#${destination.hash}`;\n      }\n    }\n    if (shouldReplace) {\n      window.history.replaceState(newState, "", newUrl);\n    } else {\n      window.history.pushState(newState, "", newUrl);\n    }\n  }\n  #tryPushCurrentPosition(temporary = false) {\n    if (!this._position) {\n      return;\n    }\n    let position = this._position;\n    if (temporary) {\n      position = Object.assign(Object.create(null), this._position);\n      position.temporary = true;\n    }\n    if (!this._destination) {\n      this.#pushOrReplaceState(position);\n      return;\n    }\n    if (this._destination.temporary) {\n      this.#pushOrReplaceState(position, true);\n      return;\n    }\n    if (this._destination.hash === position.hash) {\n      return;\n    }\n    if (!this._destination.page && (POSITION_UPDATED_THRESHOLD <= 0 || this._numPositionUpdates <= POSITION_UPDATED_THRESHOLD)) {\n      return;\n    }\n    let forceReplace = false;\n    if (this._destination.page >= position.first && this._destination.page <= position.page) {\n      if (this._destination.dest !== undefined || !this._destination.first) {\n        return;\n      }\n      forceReplace = true;\n    }\n    this.#pushOrReplaceState(position, forceReplace);\n  }\n  #isValidPage(val) {\n    return Number.isInteger(val) && val > 0 && val <= this.linkService.pagesCount;\n  }\n  #isValidState(state, checkReload = false) {\n    if (!state) {\n      return false;\n    }\n    if (state.fingerprint !== this._fingerprint) {\n      if (checkReload) {\n        if (typeof state.fingerprint !== "string" || state.fingerprint.length !== this._fingerprint.length) {\n          return false;\n        }\n        const [perfEntry] = performance.getEntriesByType("navigation");\n        if (perfEntry?.type !== "reload") {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    }\n    if (!Number.isInteger(state.uid) || state.uid < 0) {\n      return false;\n    }\n    if (state.destination === null || typeof state.destination !== "object") {\n      return false;\n    }\n    return true;\n  }\n  #updateInternalState(destination, uid, removeTemporary = false) {\n    if (this._updateViewareaTimeout) {\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n    if (removeTemporary && destination?.temporary) {\n      delete destination.temporary;\n    }\n    this._destination = destination;\n    this._uid = uid;\n    this._maxUid = Math.max(this._maxUid, uid);\n    this._numPositionUpdates = 0;\n  }\n  #parseCurrentHash(checkNameddest = false) {\n    const hash = unescape(getCurrentHash()).substring(1);\n    const params = parseQueryString(hash);\n    const nameddest = params.get("nameddest") || "";\n    let page = params.get("page") | 0;\n    if (!this.#isValidPage(page) || checkNameddest && nameddest.length > 0) {\n      page = null;\n    }\n    return {\n      hash,\n      page,\n      rotation: this.linkService.rotation\n    };\n  }\n  #updateViewarea({\n    location\n  }) {\n    if (this._updateViewareaTimeout) {\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n    this._position = {\n      hash: location.pdfOpenParams.substring(1),\n      page: this.linkService.page,\n      first: location.pageNumber,\n      rotation: location.rotation\n    };\n    if (this._popStateInProgress) {\n      return;\n    }\n    if (POSITION_UPDATED_THRESHOLD > 0 && this._isPagesLoaded && this._destination && !this._destination.page) {\n      this._numPositionUpdates++;\n    }\n    if (UPDATE_VIEWAREA_TIMEOUT > 0) {\n      this._updateViewareaTimeout = setTimeout(() => {\n        if (!this._popStateInProgress) {\n          this.#tryPushCurrentPosition(true);\n        }\n        this._updateViewareaTimeout = null;\n      }, UPDATE_VIEWAREA_TIMEOUT);\n    }\n  }\n  #popState({\n    state\n  }) {\n    const newHash = getCurrentHash(),\n      hashChanged = this._currentHash !== newHash;\n    this._currentHash = newHash;\n    if (!state) {\n      this._uid++;\n      const {\n        hash,\n        page,\n        rotation\n      } = this.#parseCurrentHash();\n      this.#pushOrReplaceState({\n        hash,\n        page,\n        rotation\n      }, true);\n      return;\n    }\n    if (!this.#isValidState(state)) {\n      return;\n    }\n    this._popStateInProgress = true;\n    if (hashChanged) {\n      this._blockHashChange++;\n      waitOnEventOrTimeout({\n        target: window,\n        name: "hashchange",\n        delay: HASH_CHANGE_TIMEOUT\n      }).then(() => {\n        this._blockHashChange--;\n      });\n    }\n    const destination = state.destination;\n    this.#updateInternalState(destination, state.uid, true);\n    if (isValidRotation(destination.rotation)) {\n      this.linkService.rotation = destination.rotation;\n    }\n    if (destination.dest) {\n      this.linkService.goToDestination(destination.dest);\n    } else if (destination.hash) {\n      this.linkService.setHash(destination.hash);\n    } else if (destination.page) {\n      this.linkService.page = destination.page;\n    }\n    Promise.resolve().then(() => {\n      this._popStateInProgress = false;\n    });\n  }\n  #pageHide() {\n    if (!this._destination || this._destination.temporary) {\n      this.#tryPushCurrentPosition();\n    }\n  }\n  #bindEvents() {\n    if (this.#eventAbortController) {\n      return;\n    }\n    this.#eventAbortController = new AbortController();\n    const {\n      signal\n    } = this.#eventAbortController;\n    this.eventBus._on("updateviewarea", this.#updateViewarea.bind(this), {\n      signal\n    });\n    window.addEventListener("popstate", this.#popState.bind(this), {\n      signal\n    });\n    window.addEventListener("pagehide", this.#pageHide.bind(this), {\n      signal\n    });\n  }\n  #unbindEvents() {\n    this.#eventAbortController?.abort();\n    this.#eventAbortController = null;\n  }\n}\nfunction isDestHashesEqual(destHash, pushHash) {\n  if (typeof destHash !== "string" || typeof pushHash !== "string") {\n    return false;\n  }\n  if (destHash === pushHash) {\n    return true;\n  }\n  const nameddest = parseQueryString(destHash).get("nameddest");\n  if (nameddest === pushHash) {\n    return true;\n  }\n  return false;\n}\nfunction isDestArraysEqual(firstDest, secondDest) {\n  function isEntryEqual(first, second) {\n    if (typeof first !== typeof second) {\n      return false;\n    }\n    if (Array.isArray(first) || Array.isArray(second)) {\n      return false;\n    }\n    if (first !== null && typeof first === "object" && second !== null) {\n      if (Object.keys(first).length !== Object.keys(second).length) {\n        return false;\n      }\n      for (const key in first) {\n        if (!isEntryEqual(first[key], second[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return first === second || Number.isNaN(first) && Number.isNaN(second);\n  }\n  if (!(Array.isArray(firstDest) && Array.isArray(secondDest))) {\n    return false;\n  }\n  if (firstDest.length !== secondDest.length) {\n    return false;\n  }\n  for (let i = 0, ii = firstDest.length; i < ii; i++) {\n    if (!isEntryEqual(firstDest[i], secondDest[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n;// CONCATENATED MODULE:./pdf_layer_viewer.js\n\nclass PDFLayerViewer extends BaseTreeViewer {\n  constructor(options) {\n    super(options);\n    this.eventBus._on("optionalcontentconfigchanged", evt => {\n      this.#updateLayers(evt.promise);\n    });\n    this.eventBus._on("resetlayers", () => {\n      this.#updateLayers();\n    });\n    this.eventBus._on("togglelayerstree", this._toggleAllTreeItems.bind(this));\n  }\n  reset() {\n    super.reset();\n    this._optionalContentConfig = null;\n    this._optionalContentHash = null;\n  }\n  _dispatchEvent(layersCount) {\n    this.eventBus.dispatch("layersloaded", {\n      source: this,\n      layersCount\n    });\n  }\n  _bindLink(element, {\n    groupId,\n    input\n  }) {\n    const setVisibility = () => {\n      this._optionalContentConfig.setVisibility(groupId, input.checked);\n      this._optionalContentHash = this._optionalContentConfig.getHash();\n      this.eventBus.dispatch("optionalcontentconfig", {\n        source: this,\n        promise: Promise.resolve(this._optionalContentConfig)\n      });\n    };\n    element.onclick = evt => {\n      if (evt.target === input) {\n        setVisibility();\n        return true;\n      } else if (evt.target !== element) {\n        return true;\n      }\n      input.checked = !input.checked;\n      setVisibility();\n      return false;\n    };\n  }\n  _setNestedName(element, {\n    name = null\n  }) {\n    if (typeof name === "string") {\n      element.textContent = this._normalizeTextContent(name);\n      return;\n    }\n    element.setAttribute("data-l10n-id", "pdfjs-additional-layers");\n    element.style.fontStyle = "italic";\n    this._l10n.translateOnce(element);\n  }\n  _addToggleButton(div, {\n    name = null\n  }) {\n    super._addToggleButton(div, name === null);\n  }\n  _toggleAllTreeItems() {\n    if (!this._optionalContentConfig) {\n      return;\n    }\n    super._toggleAllTreeItems();\n  }\n  render({\n    optionalContentConfig,\n    pdfDocument\n  }) {\n    if (this._optionalContentConfig) {\n      this.reset();\n    }\n    this._optionalContentConfig = optionalContentConfig || null;\n    this._pdfDocument = pdfDocument || null;\n    const groups = optionalContentConfig?.getOrder();\n    if (!groups) {\n      this._dispatchEvent(0);\n      return;\n    }\n    this._optionalContentHash = optionalContentConfig.getHash();\n    const fragment = document.createDocumentFragment(),\n      queue = [{\n        parent: fragment,\n        groups\n      }];\n    let layersCount = 0,\n      hasAnyNesting = false;\n    while (queue.length > 0) {\n      const levelData = queue.shift();\n      for (const groupId of levelData.groups) {\n        const div = document.createElement("div");\n        div.className = "treeItem";\n        const element = document.createElement("a");\n        div.append(element);\n        if (typeof groupId === "object") {\n          hasAnyNesting = true;\n          this._addToggleButton(div, groupId);\n          this._setNestedName(element, groupId);\n          const itemsDiv = document.createElement("div");\n          itemsDiv.className = "treeItems";\n          div.append(itemsDiv);\n          queue.push({\n            parent: itemsDiv,\n            groups: groupId.order\n          });\n        } else {\n          const group = optionalContentConfig.getGroup(groupId);\n          const input = document.createElement("input");\n          this._bindLink(element, {\n            groupId,\n            input\n          });\n          input.type = "checkbox";\n          input.checked = group.visible;\n          const label = document.createElement("label");\n          label.textContent = this._normalizeTextContent(group.name);\n          label.append(input);\n          element.append(label);\n          layersCount++;\n        }\n        levelData.parent.append(div);\n      }\n    }\n    this._finishRendering(fragment, layersCount, hasAnyNesting);\n  }\n  async #updateLayers(promise = null) {\n    if (!this._optionalContentConfig) {\n      return;\n    }\n    const pdfDocument = this._pdfDocument;\n    const optionalContentConfig = await (promise || pdfDocument.getOptionalContentConfig({\n      intent: "display"\n    }));\n    if (pdfDocument !== this._pdfDocument) {\n      return;\n    }\n    if (promise) {\n      if (optionalContentConfig.getHash() === this._optionalContentHash) {\n        return;\n      }\n    } else {\n      this.eventBus.dispatch("optionalcontentconfig", {\n        source: this,\n        promise: Promise.resolve(optionalContentConfig)\n      });\n    }\n    this.render({\n      optionalContentConfig,\n      pdfDocument: this._pdfDocument\n    });\n  }\n}\n\n;// CONCATENATED MODULE:./pdf_outline_viewer.js\n\n\nclass PDFOutlineViewer extends BaseTreeViewer {\n  constructor(options) {\n    super(options);\n    this.linkService = options.linkService;\n    this.downloadManager = options.downloadManager;\n    this.eventBus._on("toggleoutlinetree", this._toggleAllTreeItems.bind(this));\n    this.eventBus._on("currentoutlineitem", this._currentOutlineItem.bind(this));\n    this.eventBus._on("pagechanging", evt => {\n      this._currentPageNumber = evt.pageNumber;\n    });\n    this.eventBus._on("pagesloaded", evt => {\n      this._isPagesLoaded = !!evt.pagesCount;\n      this._currentOutlineItemCapability?.resolve(this._isPagesLoaded);\n    });\n    this.eventBus._on("sidebarviewchanged", evt => {\n      this._sidebarView = evt.view;\n    });\n  }\n  reset() {\n    super.reset();\n    this._outline = null;\n    this._pageNumberToDestHashCapability = null;\n    this._currentPageNumber = 1;\n    this._isPagesLoaded = null;\n    this._currentOutlineItemCapability?.resolve(false);\n    this._currentOutlineItemCapability = null;\n  }\n  _dispatchEvent(outlineCount) {\n    this._currentOutlineItemCapability = Promise.withResolvers();\n    if (outlineCount === 0 || this._pdfDocument?.loadingParams.disableAutoFetch) {\n      this._currentOutlineItemCapability.resolve(false);\n    } else if (this._isPagesLoaded !== null) {\n      this._currentOutlineItemCapability.resolve(this._isPagesLoaded);\n    }\n    this.eventBus.dispatch("outlineloaded", {\n      source: this,\n      outlineCount,\n      currentOutlineItemPromise: this._currentOutlineItemCapability.promise\n    });\n  }\n  _bindLink(element, {\n    url,\n    newWindow,\n    action,\n    attachment,\n    dest,\n    setOCGState\n  }) {\n    const {\n      linkService\n    } = this;\n    if (url) {\n      linkService.addLinkAttributes(element, url, newWindow);\n      return;\n    }\n    if (action) {\n      element.href = linkService.getAnchorUrl("");\n      element.onclick = () => {\n        linkService.executeNamedAction(action);\n        return false;\n      };\n      return;\n    }\n    if (attachment) {\n      element.href = linkService.getAnchorUrl("");\n      element.onclick = () => {\n        this.downloadManager.openOrDownloadData(attachment.content, attachment.filename);\n        return false;\n      };\n      return;\n    }\n    if (setOCGState) {\n      element.href = linkService.getAnchorUrl("");\n      element.onclick = () => {\n        linkService.executeSetOCGState(setOCGState);\n        return false;\n      };\n      return;\n    }\n    element.href = linkService.getDestinationHash(dest);\n    element.onclick = evt => {\n      this._updateCurrentTreeItem(evt.target.parentNode);\n      if (dest) {\n        linkService.goToDestination(dest);\n      }\n      return false;\n    };\n  }\n  _setStyles(element, {\n    bold,\n    italic\n  }) {\n    if (bold) {\n      element.style.fontWeight = "bold";\n    }\n    if (italic) {\n      element.style.fontStyle = "italic";\n    }\n  }\n  _addToggleButton(div, {\n    count,\n    items\n  }) {\n    let hidden = false;\n    if (count < 0) {\n      let totalCount = items.length;\n      if (totalCount > 0) {\n        const queue = [...items];\n        while (queue.length > 0) {\n          const {\n            count: nestedCount,\n            items: nestedItems\n          } = queue.shift();\n          if (nestedCount > 0 && nestedItems.length > 0) {\n            totalCount += nestedItems.length;\n            queue.push(...nestedItems);\n          }\n        }\n      }\n      if (Math.abs(count) === totalCount) {\n        hidden = true;\n      }\n    }\n    super._addToggleButton(div, hidden);\n  }\n  _toggleAllTreeItems() {\n    if (!this._outline) {\n      return;\n    }\n    super._toggleAllTreeItems();\n  }\n  render({\n    outline,\n    pdfDocument\n  }) {\n    if (this._outline) {\n      this.reset();\n    }\n    this._outline = outline || null;\n    this._pdfDocument = pdfDocument || null;\n    if (!outline) {\n      this._dispatchEvent(0);\n      return;\n    }\n    const fragment = document.createDocumentFragment();\n    const queue = [{\n      parent: fragment,\n      items: outline\n    }];\n    let outlineCount = 0,\n      hasAnyNesting = false;\n    while (queue.length > 0) {\n      const levelData = queue.shift();\n      for (const item of levelData.items) {\n        const div = document.createElement("div");\n        div.className = "treeItem";\n        const element = document.createElement("a");\n        this._bindLink(element, item);\n        this._setStyles(element, item);\n        element.textContent = this._normalizeTextContent(item.title);\n        div.append(element);\n        if (item.items.length > 0) {\n          hasAnyNesting = true;\n          this._addToggleButton(div, item);\n          const itemsDiv = document.createElement("div");\n          itemsDiv.className = "treeItems";\n          div.append(itemsDiv);\n          queue.push({\n            parent: itemsDiv,\n            items: item.items\n          });\n        }\n        levelData.parent.append(div);\n        outlineCount++;\n      }\n    }\n    this._finishRendering(fragment, outlineCount, hasAnyNesting);\n  }\n  async _currentOutlineItem() {\n    if (!this._isPagesLoaded) {\n      throw new Error("_currentOutlineItem: All pages have not been loaded.");\n    }\n    if (!this._outline || !this._pdfDocument) {\n      return;\n    }\n    const pageNumberToDestHash = await this._getPageNumberToDestHash(this._pdfDocument);\n    if (!pageNumberToDestHash) {\n      return;\n    }\n    this._updateCurrentTreeItem(null);\n    if (this._sidebarView !== SidebarView.OUTLINE) {\n      return;\n    }\n    for (let i = this._currentPageNumber; i > 0; i--) {\n      const destHash = pageNumberToDestHash.get(i);\n      if (!destHash) {\n        continue;\n      }\n      const linkElement = this.container.querySelector(`a[href="${destHash}"]`);\n      if (!linkElement) {\n        continue;\n      }\n      this._scrollToCurrentTreeItem(linkElement.parentNode);\n      break;\n    }\n  }\n  async _getPageNumberToDestHash(pdfDocument) {\n    if (this._pageNumberToDestHashCapability) {\n      return this._pageNumberToDestHashCapability.promise;\n    }\n    this._pageNumberToDestHashCapability = Promise.withResolvers();\n    const pageNumberToDestHash = new Map(),\n      pageNumberNesting = new Map();\n    const queue = [{\n      nesting: 0,\n      items: this._outline\n    }];\n    while (queue.length > 0) {\n      const levelData = queue.shift(),\n        currentNesting = levelData.nesting;\n      for (const {\n        dest,\n        items\n      } of levelData.items) {\n        let explicitDest, pageNumber;\n        if (typeof dest === "string") {\n          explicitDest = await pdfDocument.getDestination(dest);\n          if (pdfDocument !== this._pdfDocument) {\n            return null;\n          }\n        } else {\n          explicitDest = dest;\n        }\n        if (Array.isArray(explicitDest)) {\n          const [destRef] = explicitDest;\n          if (destRef && typeof destRef === "object") {\n            pageNumber = pdfDocument.cachedPageNumber(destRef);\n          } else if (Number.isInteger(destRef)) {\n            pageNumber = destRef + 1;\n          }\n          if (Number.isInteger(pageNumber) && (!pageNumberToDestHash.has(pageNumber) || currentNesting > pageNumberNesting.get(pageNumber))) {\n            const destHash = this.linkService.getDestinationHash(dest);\n            pageNumberToDestHash.set(pageNumber, destHash);\n            pageNumberNesting.set(pageNumber, currentNesting);\n          }\n        }\n        if (items.length > 0) {\n          queue.push({\n            nesting: currentNesting + 1,\n            items\n          });\n        }\n      }\n    }\n    this._pageNumberToDestHashCapability.resolve(pageNumberToDestHash.size > 0 ? pageNumberToDestHash : null);\n    return this._pageNumberToDestHashCapability.promise;\n  }\n}\n\n;// CONCATENATED MODULE:./pdf_presentation_mode.js\n\n\nconst DELAY_BEFORE_HIDING_CONTROLS = 3000;\nconst ACTIVE_SELECTOR = "pdfPresentationMode";\nconst CONTROLS_SELECTOR = "pdfPresentationModeControls";\nconst MOUSE_SCROLL_COOLDOWN_TIME = 50;\nconst PAGE_SWITCH_THRESHOLD = 0.1;\nconst SWIPE_MIN_DISTANCE_THRESHOLD = 50;\nconst SWIPE_ANGLE_THRESHOLD = Math.PI / 6;\nclass PDFPresentationMode {\n  #state = PresentationModeState.UNKNOWN;\n  #args = null;\n  #fullscreenChangeAbortController = null;\n  #windowAbortController = null;\n  constructor({\n    container,\n    pdfViewer,\n    eventBus\n  }) {\n    this.container = container;\n    this.pdfViewer = pdfViewer;\n    this.eventBus = eventBus;\n    this.contextMenuOpen = false;\n    this.mouseScrollTimeStamp = 0;\n    this.mouseScrollDelta = 0;\n    this.touchSwipeState = null;\n  }\n  async request() {\n    const {\n      container,\n      pdfViewer\n    } = this;\n    if (this.active || !pdfViewer.pagesCount || !container.requestFullscreen) {\n      return false;\n    }\n    this.#addFullscreenChangeListeners();\n    this.#notifyStateChange(PresentationModeState.CHANGING);\n    const promise = container.requestFullscreen();\n    this.#args = {\n      pageNumber: pdfViewer.currentPageNumber,\n      scaleValue: pdfViewer.currentScaleValue,\n      scrollMode: pdfViewer.scrollMode,\n      spreadMode: null,\n      annotationEditorMode: null\n    };\n    if (pdfViewer.spreadMode !== SpreadMode.NONE && !(pdfViewer.pageViewsReady && pdfViewer.hasEqualPageSizes)) {\n      console.warn("Ignoring Spread modes when entering PresentationMode, " + "since the document may contain varying page sizes.");\n      this.#args.spreadMode = pdfViewer.spreadMode;\n    }\n    if (pdfViewer.annotationEditorMode !== AnnotationEditorType.DISABLE) {\n      this.#args.annotationEditorMode = pdfViewer.annotationEditorMode;\n    }\n    try {\n      await promise;\n      pdfViewer.focus();\n      return true;\n    } catch {\n      this.#removeFullscreenChangeListeners();\n      this.#notifyStateChange(PresentationModeState.NORMAL);\n    }\n    return false;\n  }\n  get active() {\n    return this.#state === PresentationModeState.CHANGING || this.#state === PresentationModeState.FULLSCREEN;\n  }\n  #mouseWheel(evt) {\n    if (!this.active) {\n      return;\n    }\n    evt.preventDefault();\n    const delta = normalizeWheelEventDelta(evt);\n    const currentTime = Date.now();\n    const storedTime = this.mouseScrollTimeStamp;\n    if (currentTime > storedTime && currentTime - storedTime < MOUSE_SCROLL_COOLDOWN_TIME) {\n      return;\n    }\n    if (this.mouseScrollDelta > 0 && delta < 0 || this.mouseScrollDelta < 0 && delta > 0) {\n      this.#resetMouseScrollState();\n    }\n    this.mouseScrollDelta += delta;\n    if (Math.abs(this.mouseScrollDelta) >= PAGE_SWITCH_THRESHOLD) {\n      const totalDelta = this.mouseScrollDelta;\n      this.#resetMouseScrollState();\n      const success = totalDelta > 0 ? this.pdfViewer.previousPage() : this.pdfViewer.nextPage();\n      if (success) {\n        this.mouseScrollTimeStamp = currentTime;\n      }\n    }\n  }\n  #notifyStateChange(state) {\n    this.#state = state;\n    this.eventBus.dispatch("presentationmodechanged", {\n      source: this,\n      state\n    });\n  }\n  #enter() {\n    this.#notifyStateChange(PresentationModeState.FULLSCREEN);\n    this.container.classList.add(ACTIVE_SELECTOR);\n    setTimeout(() => {\n      this.pdfViewer.scrollMode = ScrollMode.PAGE;\n      if (this.#args.spreadMode !== null) {\n        this.pdfViewer.spreadMode = SpreadMode.NONE;\n      }\n      this.pdfViewer.currentPageNumber = this.#args.pageNumber;\n      this.pdfViewer.currentScaleValue = "page-fit";\n      if (this.#args.annotationEditorMode !== null) {\n        this.pdfViewer.annotationEditorMode = {\n          mode: AnnotationEditorType.NONE\n        };\n      }\n    }, 0);\n    this.#addWindowListeners();\n    this.#showControls();\n    this.contextMenuOpen = false;\n    document.getSelection().empty();\n  }\n  #exit() {\n    const pageNumber = this.pdfViewer.currentPageNumber;\n    this.container.classList.remove(ACTIVE_SELECTOR);\n    setTimeout(() => {\n      this.#removeFullscreenChangeListeners();\n      this.#notifyStateChange(PresentationModeState.NORMAL);\n      this.pdfViewer.scrollMode = this.#args.scrollMode;\n      if (this.#args.spreadMode !== null) {\n        this.pdfViewer.spreadMode = this.#args.spreadMode;\n      }\n      this.pdfViewer.currentScaleValue = this.#args.scaleValue;\n      this.pdfViewer.currentPageNumber = pageNumber;\n      if (this.#args.annotationEditorMode !== null) {\n        this.pdfViewer.annotationEditorMode = {\n          mode: this.#args.annotationEditorMode\n        };\n      }\n      this.#args = null;\n    }, 0);\n    this.#removeWindowListeners();\n    this.#hideControls();\n    this.#resetMouseScrollState();\n    this.contextMenuOpen = false;\n  }\n  #mouseDown(evt) {\n    if (this.contextMenuOpen) {\n      this.contextMenuOpen = false;\n      evt.preventDefault();\n      return;\n    }\n    if (evt.button !== 0) {\n      return;\n    }\n    if (evt.target.href && evt.target.parentNode?.hasAttribute("data-internal-link")) {\n      return;\n    }\n    evt.preventDefault();\n    if (evt.shiftKey) {\n      this.pdfViewer.previousPage();\n    } else {\n      this.pdfViewer.nextPage();\n    }\n  }\n  #contextMenu() {\n    this.contextMenuOpen = true;\n  }\n  #showControls() {\n    if (this.controlsTimeout) {\n      clearTimeout(this.controlsTimeout);\n    } else {\n      this.container.classList.add(CONTROLS_SELECTOR);\n    }\n    this.controlsTimeout = setTimeout(() => {\n      this.container.classList.remove(CONTROLS_SELECTOR);\n      delete this.controlsTimeout;\n    }, DELAY_BEFORE_HIDING_CONTROLS);\n  }\n  #hideControls() {\n    if (!this.controlsTimeout) {\n      return;\n    }\n    clearTimeout(this.controlsTimeout);\n    this.container.classList.remove(CONTROLS_SELECTOR);\n    delete this.controlsTimeout;\n  }\n  #resetMouseScrollState() {\n    this.mouseScrollTimeStamp = 0;\n    this.mouseScrollDelta = 0;\n  }\n  #touchSwipe(evt) {\n    if (!this.active) {\n      return;\n    }\n    if (evt.touches.length > 1) {\n      this.touchSwipeState = null;\n      return;\n    }\n    switch (evt.type) {\n      case "touchstart":\n        this.touchSwipeState = {\n          startX: evt.touches[0].pageX,\n          startY: evt.touches[0].pageY,\n          endX: evt.touches[0].pageX,\n          endY: evt.touches[0].pageY\n        };\n        break;\n      case "touchmove":\n        if (this.touchSwipeState === null) {\n          return;\n        }\n        this.touchSwipeState.endX = evt.touches[0].pageX;\n        this.touchSwipeState.endY = evt.touches[0].pageY;\n        evt.preventDefault();\n        break;\n      case "touchend":\n        if (this.touchSwipeState === null) {\n          return;\n        }\n        let delta = 0;\n        const dx = this.touchSwipeState.endX - this.touchSwipeState.startX;\n        const dy = this.touchSwipeState.endY - this.touchSwipeState.startY;\n        const absAngle = Math.abs(Math.atan2(dy, dx));\n        if (Math.abs(dx) > SWIPE_MIN_DISTANCE_THRESHOLD && (absAngle <= SWIPE_ANGLE_THRESHOLD || absAngle >= Math.PI - SWIPE_ANGLE_THRESHOLD)) {\n          delta = dx;\n        } else if (Math.abs(dy) > SWIPE_MIN_DISTANCE_THRESHOLD && Math.abs(absAngle - Math.PI / 2) <= SWIPE_ANGLE_THRESHOLD) {\n          delta = dy;\n        }\n        if (delta > 0) {\n          this.pdfViewer.previousPage();\n        } else if (delta < 0) {\n          this.pdfViewer.nextPage();\n        }\n        break;\n    }\n  }\n  #addWindowListeners() {\n    if (this.#windowAbortController) {\n      return;\n    }\n    this.#windowAbortController = new AbortController();\n    const {\n      signal\n    } = this.#windowAbortController;\n    const touchSwipeBind = this.#touchSwipe.bind(this);\n    window.addEventListener("mousemove", this.#showControls.bind(this), {\n      signal\n    });\n    window.addEventListener("mousedown", this.#mouseDown.bind(this), {\n      signal\n    });\n    window.addEventListener("wheel", this.#mouseWheel.bind(this), {\n      passive: false,\n      signal\n    });\n    window.addEventListener("keydown", this.#resetMouseScrollState.bind(this), {\n      signal\n    });\n    window.addEventListener("contextmenu", this.#contextMenu.bind(this), {\n      signal\n    });\n    window.addEventListener("touchstart", touchSwipeBind, {\n      signal\n    });\n    window.addEventListener("touchmove", touchSwipeBind, {\n      signal\n    });\n    window.addEventListener("touchend", touchSwipeBind, {\n      signal\n    });\n  }\n  #removeWindowListeners() {\n    this.#windowAbortController?.abort();\n    this.#windowAbortController = null;\n  }\n  #addFullscreenChangeListeners() {\n    if (this.#fullscreenChangeAbortController) {\n      return;\n    }\n    this.#fullscreenChangeAbortController = new AbortController();\n    window.addEventListener("fullscreenchange", () => {\n      if (document.fullscreenElement) {\n        this.#enter();\n      } else {\n        this.#exit();\n      }\n    }, {\n      signal: this.#fullscreenChangeAbortController.signal\n    });\n  }\n  #removeFullscreenChangeListeners() {\n    this.#fullscreenChangeAbortController?.abort();\n    this.#fullscreenChangeAbortController = null;\n  }\n}\n\n;// CONCATENATED MODULE:./xfa_layer_builder.js\n\nclass XfaLayerBuilder {\n  constructor({\n    pdfPage,\n    annotationStorage = null,\n    linkService,\n    xfaHtml = null\n  }) {\n    this.pdfPage = pdfPage;\n    this.annotationStorage = annotationStorage;\n    this.linkService = linkService;\n    this.xfaHtml = xfaHtml;\n    this.div = null;\n    this._cancelled = false;\n  }\n  async render(viewport, intent = "display") {\n    if (intent === "print") {\n      const parameters = {\n        viewport: viewport.clone({\n          dontFlip: true\n        }),\n        div: this.div,\n        xfaHtml: this.xfaHtml,\n        annotationStorage: this.annotationStorage,\n        linkService: this.linkService,\n        intent\n      };\n      this.div = document.createElement("div");\n      parameters.div = this.div;\n      return XfaLayer.render(parameters);\n    }\n    const xfaHtml = await this.pdfPage.getXfa();\n    if (this._cancelled || !xfaHtml) {\n      return {\n        textDivs: []\n      };\n    }\n    const parameters = {\n      viewport: viewport.clone({\n        dontFlip: true\n      }),\n      div: this.div,\n      xfaHtml,\n      annotationStorage: this.annotationStorage,\n      linkService: this.linkService,\n      intent\n    };\n    if (this.div) {\n      return XfaLayer.update(parameters);\n    }\n    this.div = document.createElement("div");\n    parameters.div = this.div;\n    return XfaLayer.render(parameters);\n  }\n  cancel() {\n    this._cancelled = true;\n  }\n  hide() {\n    if (!this.div) {\n      return;\n    }\n    this.div.hidden = true;\n  }\n}\n\n;// CONCATENATED MODULE:./print_utils.js\n\n\n\nfunction getXfaHtmlForPrinting(printContainer, pdfDocument) {\n  const xfaHtml = pdfDocument.allXfaHtml;\n  const linkService = new SimpleLinkService();\n  const scale = Math.round(PixelsPerInch.PDF_TO_CSS_UNITS * 100) / 100;\n  for (const xfaPage of xfaHtml.children) {\n    const page = document.createElement("div");\n    page.className = "xfaPrintedPage";\n    printContainer.append(page);\n    const builder = new XfaLayerBuilder({\n      pdfPage: null,\n      annotationStorage: pdfDocument.annotationStorage,\n      linkService,\n      xfaHtml: xfaPage\n    });\n    const viewport = getXfaPageViewport(xfaPage, {\n      scale\n    });\n    builder.render(viewport, "print");\n    page.append(builder.div);\n  }\n}\n\n;// CONCATENATED MODULE:./pdf_print_service.js\n\n\nlet activeService = null;\nlet dialog = null;\nlet overlayManager = null;\nlet viewerApp = {\n  initialized: false\n};\nfunction renderPage(activeServiceOnEntry, pdfDocument, pageNumber, size, printResolution, optionalContentConfigPromise, printAnnotationStoragePromise) {\n  const scratchCanvas = activeService.scratchCanvas;\n  const PRINT_UNITS = printResolution / PixelsPerInch.PDF;\n  scratchCanvas.width = Math.floor(size.width * PRINT_UNITS);\n  scratchCanvas.height = Math.floor(size.height * PRINT_UNITS);\n  const ctx = scratchCanvas.getContext("2d");\n  ctx.save();\n  ctx.fillStyle = "rgb(255, 255, 255)";\n  ctx.fillRect(0, 0, scratchCanvas.width, scratchCanvas.height);\n  ctx.restore();\n  return Promise.all([pdfDocument.getPage(pageNumber), printAnnotationStoragePromise]).then(function ([pdfPage, printAnnotationStorage]) {\n    const renderContext = {\n      canvasContext: ctx,\n      transform: [PRINT_UNITS, 0, 0, PRINT_UNITS, 0, 0],\n      viewport: pdfPage.getViewport({\n        scale: 1,\n        rotation: size.rotation\n      }),\n      intent: "print",\n      annotationMode: AnnotationMode.ENABLE_STORAGE,\n      optionalContentConfigPromise,\n      printAnnotationStorage\n    };\n    const renderTask = pdfPage.render(renderContext);\n    return renderTask.promise.catch(reason => {\n      if (!(reason instanceof RenderingCancelledException)) {\n        console.error(reason);\n      }\n      throw reason;\n    });\n  });\n}\nclass PDFPrintService {\n  constructor({\n    pdfDocument,\n    pagesOverview,\n    printContainer,\n    printResolution,\n    printAnnotationStoragePromise = null\n  }) {\n    this.pdfDocument = pdfDocument;\n    this.pagesOverview = pagesOverview;\n    this.printContainer = printContainer;\n    this._printResolution = printResolution || 150;\n    this._optionalContentConfigPromise = pdfDocument.getOptionalContentConfig({\n      intent: "print"\n    });\n    this._printAnnotationStoragePromise = printAnnotationStoragePromise || Promise.resolve();\n    this.currentPage = -1;\n    this.scratchCanvas = document.createElement("canvas");\n  }\n  layout() {\n    this.throwIfInactive();\n    const body = document.querySelector("body");\n    body.setAttribute("data-pdfjsprinting", true);\n    const {\n      width,\n      height\n    } = this.pagesOverview[0];\n    const hasEqualPageSizes = this.pagesOverview.every(size => size.width === width && size.height === height);\n    if (!hasEqualPageSizes) {\n      console.warn("Not all pages have the same size. The printed result may be incorrect!");\n    }\n    this.pageStyleSheet = document.createElement("style");\n    this.pageStyleSheet.textContent = `@page { size: ${width}pt ${height}pt;}`;\n    body.append(this.pageStyleSheet);\n  }\n  destroy() {\n    if (activeService !== this) {\n      return;\n    }\n    this.printContainer.textContent = "";\n    const body = document.querySelector("body");\n    body.removeAttribute("data-pdfjsprinting");\n    if (this.pageStyleSheet) {\n      this.pageStyleSheet.remove();\n      this.pageStyleSheet = null;\n    }\n    this.scratchCanvas.width = this.scratchCanvas.height = 0;\n    this.scratchCanvas = null;\n    activeService = null;\n    ensureOverlay().then(function () {\n      if (overlayManager.active === dialog) {\n        overlayManager.close(dialog);\n      }\n    });\n  }\n  renderPages() {\n    if (this.pdfDocument.isPureXfa) {\n      getXfaHtmlForPrinting(this.printContainer, this.pdfDocument);\n      return Promise.resolve();\n    }\n    const pageCount = this.pagesOverview.length;\n    const renderNextPage = (resolve, reject) => {\n      this.throwIfInactive();\n      if (++this.currentPage >= pageCount) {\n        renderProgress(pageCount, pageCount);\n        resolve();\n        return;\n      }\n      const index = this.currentPage;\n      renderProgress(index, pageCount);\n      renderPage(this, this.pdfDocument, index + 1, this.pagesOverview[index], this._printResolution, this._optionalContentConfigPromise, this._printAnnotationStoragePromise).then(this.useRenderedPage.bind(this)).then(function () {\n        renderNextPage(resolve, reject);\n      }, reject);\n    };\n    return new Promise(renderNextPage);\n  }\n  useRenderedPage() {\n    this.throwIfInactive();\n    const img = document.createElement("img");\n    this.scratchCanvas.toBlob(blob => {\n      img.src = URL.createObjectURL(blob);\n    });\n    const wrapper = document.createElement("div");\n    wrapper.className = "printedPage";\n    wrapper.append(img);\n    this.printContainer.append(wrapper);\n    const {\n      promise,\n      resolve,\n      reject\n    } = Promise.withResolvers();\n    img.onload = resolve;\n    img.onerror = reject;\n    promise.catch(() => {}).then(() => {\n      URL.revokeObjectURL(img.src);\n    });\n    return promise;\n  }\n  performPrint() {\n    this.throwIfInactive();\n    return new Promise(resolve => {\n      setTimeout(() => {\n        if (!this.active) {\n          resolve();\n          return;\n        }\n        print.call(window);\n        setTimeout(resolve, 20);\n      }, 0);\n    });\n  }\n  get active() {\n    return this === activeService;\n  }\n  throwIfInactive() {\n    if (!this.active) {\n      throw new Error("This print request was cancelled or completed.");\n    }\n  }\n}\nconst print = window.print;\nwindow.print = function () {\n  if (activeService) {\n    console.warn("Ignored window.print() because of a pending print job.");\n    return;\n  }\n  ensureOverlay().then(function () {\n    if (activeService) {\n      overlayManager.open(dialog);\n    }\n  });\n  try {\n    dispatchEvent("beforeprint");\n  } finally {\n    if (!activeService) {\n      console.error("Expected print service to be initialized.");\n      ensureOverlay().then(function () {\n        if (overlayManager.active === dialog) {\n          overlayManager.close(dialog);\n        }\n      });\n      return;\n    }\n    const activeServiceOnEntry = activeService;\n    activeService.renderPages().then(function () {\n      return activeServiceOnEntry.performPrint();\n    }).catch(function () {}).then(function () {\n      if (activeServiceOnEntry.active) {\n        abort();\n      }\n    });\n  }\n};\nfunction dispatchEvent(eventType) {\n  const event = new CustomEvent(eventType, {\n    bubbles: false,\n    cancelable: false,\n    detail: "custom"\n  });\n  window.dispatchEvent(event);\n}\nfunction abort() {\n  if (activeService) {\n    activeService.destroy();\n    dispatchEvent("afterprint");\n  }\n}\nfunction renderProgress(index, total) {\n  dialog ||= document.getElementById("printServiceDialog");\n  const progress = Math.round(100 * index / total);\n  const progressBar = dialog.querySelector("progress");\n  const progressPerc = dialog.querySelector(".relative-progress");\n  progressBar.value = progress;\n  progressPerc.setAttribute("data-l10n-args", JSON.stringify({\n    progress\n  }));\n}\nwindow.addEventListener("keydown", function (event) {\n  if (event.keyCode === 80 && (event.ctrlKey || event.metaKey) && !event.altKey && (!event.shiftKey || window.chrome || window.opera)) {\n    window.print();\n    event.preventDefault();\n    event.stopImmediatePropagation();\n  }\n}, true);\nif ("onbeforeprint" in window) {\n  const stopPropagationIfNeeded = function (event) {\n    if (event.detail !== "custom") {\n      event.stopImmediatePropagation();\n    }\n  };\n  window.addEventListener("beforeprint", stopPropagationIfNeeded);\n  window.addEventListener("afterprint", stopPropagationIfNeeded);\n}\nlet overlayPromise;\nfunction ensureOverlay() {\n  if (!overlayPromise) {\n    overlayManager = viewerApp.overlayManager;\n    if (!overlayManager) {\n      throw new Error("The overlay manager has not yet been initialized.");\n    }\n    dialog ||= document.getElementById("printServiceDialog");\n    overlayPromise = overlayManager.register(dialog, true);\n    document.getElementById("printCancel").onclick = abort;\n    dialog.addEventListener("close", abort);\n  }\n  return overlayPromise;\n}\nclass PDFPrintServiceFactory {\n  static initGlobals(app) {\n    viewerApp = app;\n  }\n  static get supportsPrinting() {\n    return shadow(this, "supportsPrinting", true);\n  }\n  static createPrintService(params) {\n    if (activeService) {\n      throw new Error("The print service is created and active.");\n    }\n    return activeService = new PDFPrintService(params);\n  }\n}\n\n;// CONCATENATED MODULE:./pdf_rendering_queue.js\n\n\nconst CLEANUP_TIMEOUT = 30000;\nclass PDFRenderingQueue {\n  constructor() {\n    this.pdfViewer = null;\n    this.pdfThumbnailViewer = null;\n    this.onIdle = null;\n    this.highestPriorityPage = null;\n    this.idleTimeout = null;\n    this.printing = false;\n    this.isThumbnailViewEnabled = false;\n    Object.defineProperty(this, "hasViewer", {\n      value: () => !!this.pdfViewer\n    });\n  }\n  setViewer(pdfViewer) {\n    this.pdfViewer = pdfViewer;\n  }\n  setThumbnailViewer(pdfThumbnailViewer) {\n    this.pdfThumbnailViewer = pdfThumbnailViewer;\n  }\n  isHighestPriority(view) {\n    return this.highestPriorityPage === view.renderingId;\n  }\n  renderHighestPriority(currentlyVisiblePages) {\n    if (this.idleTimeout) {\n      clearTimeout(this.idleTimeout);\n      this.idleTimeout = null;\n    }\n    if (this.pdfViewer.forceRendering(currentlyVisiblePages)) {\n      return;\n    }\n    if (this.isThumbnailViewEnabled && this.pdfThumbnailViewer?.forceRendering()) {\n      return;\n    }\n    if (this.printing) {\n      return;\n    }\n    if (this.onIdle) {\n      this.idleTimeout = setTimeout(this.onIdle.bind(this), CLEANUP_TIMEOUT);\n    }\n  }\n  getHighestPriority(visible, views, scrolledDown, preRenderExtra = false) {\n    const visibleViews = visible.views,\n      numVisible = visibleViews.length;\n    if (numVisible === 0) {\n      return null;\n    }\n    for (let i = 0; i < numVisible; i++) {\n      const view = visibleViews[i].view;\n      if (!this.isViewFinished(view)) {\n        return view;\n      }\n    }\n    const firstId = visible.first.id,\n      lastId = visible.last.id;\n    if (lastId - firstId + 1 > numVisible) {\n      const visibleIds = visible.ids;\n      for (let i = 1, ii = lastId - firstId; i < ii; i++) {\n        const holeId = scrolledDown ? firstId + i : lastId - i;\n        if (visibleIds.has(holeId)) {\n          continue;\n        }\n        const holeView = views[holeId - 1];\n        if (!this.isViewFinished(holeView)) {\n          return holeView;\n        }\n      }\n    }\n    let preRenderIndex = scrolledDown ? lastId : firstId - 2;\n    let preRenderView = views[preRenderIndex];\n    if (preRenderView && !this.isViewFinished(preRenderView)) {\n      return preRenderView;\n    }\n    if (preRenderExtra) {\n      preRenderIndex += scrolledDown ? 1 : -1;\n      preRenderView = views[preRenderIndex];\n      if (preRenderView && !this.isViewFinished(preRenderView)) {\n        return preRenderView;\n      }\n    }\n    return null;\n  }\n  isViewFinished(view) {\n    return view.renderingState === RenderingStates.FINISHED;\n  }\n  renderView(view) {\n    switch (view.renderingState) {\n      case RenderingStates.FINISHED:\n        return false;\n      case RenderingStates.PAUSED:\n        this.highestPriorityPage = view.renderingId;\n        view.resume();\n        break;\n      case RenderingStates.RUNNING:\n        this.highestPriorityPage = view.renderingId;\n        break;\n      case RenderingStates.INITIAL:\n        this.highestPriorityPage = view.renderingId;\n        view.draw().finally(() => {\n          this.renderHighestPriority();\n        }).catch(reason => {\n          if (reason instanceof RenderingCancelledException) {\n            return;\n          }\n          console.error(`renderView: "${reason}"`);\n        });\n        break;\n    }\n    return true;\n  }\n}\n\n;// CONCATENATED MODULE:./pdf_scripting_manager.js\n\n\nclass PDFScriptingManager {\n  #closeCapability = null;\n  #destroyCapability = null;\n  #docProperties = null;\n  #eventAbortController = null;\n  #eventBus = null;\n  #externalServices = null;\n  #pdfDocument = null;\n  #pdfViewer = null;\n  #ready = false;\n  #scripting = null;\n  #willPrintCapability = null;\n  constructor({\n    eventBus,\n    externalServices = null,\n    docProperties = null\n  }) {\n    this.#eventBus = eventBus;\n    this.#externalServices = externalServices;\n    this.#docProperties = docProperties;\n  }\n  setViewer(pdfViewer) {\n    this.#pdfViewer = pdfViewer;\n  }\n  async setDocument(pdfDocument) {\n    if (this.#pdfDocument) {\n      await this.#destroyScripting();\n    }\n    this.#pdfDocument = pdfDocument;\n    if (!pdfDocument) {\n      return;\n    }\n    const [objects, calculationOrder, docActions] = await Promise.all([pdfDocument.getFieldObjects(), pdfDocument.getCalculationOrderIds(), pdfDocument.getJSActions()]);\n    if (!objects && !docActions) {\n      await this.#destroyScripting();\n      return;\n    }\n    if (pdfDocument !== this.#pdfDocument) {\n      return;\n    }\n    try {\n      this.#scripting = this.#initScripting();\n    } catch (error) {\n      console.error(`setDocument: "${error.message}".`);\n      await this.#destroyScripting();\n      return;\n    }\n    const eventBus = this.#eventBus;\n    this.#eventAbortController = new AbortController();\n    const {\n      signal\n    } = this.#eventAbortController;\n    eventBus._on("updatefromsandbox", event => {\n      if (event?.source === window) {\n        this.#updateFromSandbox(event.detail);\n      }\n    }, {\n      signal\n    });\n    eventBus._on("dispatcheventinsandbox", event => {\n      this.#scripting?.dispatchEventInSandbox(event.detail);\n    }, {\n      signal\n    });\n    eventBus._on("pagechanging", ({\n      pageNumber,\n      previous\n    }) => {\n      if (pageNumber === previous) {\n        return;\n      }\n      this.#dispatchPageClose(previous);\n      this.#dispatchPageOpen(pageNumber);\n    }, {\n      signal\n    });\n    eventBus._on("pagerendered", ({\n      pageNumber\n    }) => {\n      if (!this._pageOpenPending.has(pageNumber)) {\n        return;\n      }\n      if (pageNumber !== this.#pdfViewer.currentPageNumber) {\n        return;\n      }\n      this.#dispatchPageOpen(pageNumber);\n    }, {\n      signal\n    });\n    eventBus._on("pagesdestroy", async () => {\n      await this.#dispatchPageClose(this.#pdfViewer.currentPageNumber);\n      await this.#scripting?.dispatchEventInSandbox({\n        id: "doc",\n        name: "WillClose"\n      });\n      this.#closeCapability?.resolve();\n    }, {\n      signal\n    });\n    try {\n      const docProperties = await this.#docProperties(pdfDocument);\n      if (pdfDocument !== this.#pdfDocument) {\n        return;\n      }\n      await this.#scripting.createSandbox({\n        objects,\n        calculationOrder,\n        appInfo: {\n          platform: navigator.platform,\n          language: navigator.language\n        },\n        docInfo: {\n          ...docProperties,\n          actions: docActions\n        }\n      });\n      eventBus.dispatch("sandboxcreated", {\n        source: this\n      });\n    } catch (error) {\n      console.error(`setDocument: "${error.message}".`);\n      await this.#destroyScripting();\n      return;\n    }\n    await this.#scripting?.dispatchEventInSandbox({\n      id: "doc",\n      name: "Open"\n    });\n    await this.#dispatchPageOpen(this.#pdfViewer.currentPageNumber, true);\n    Promise.resolve().then(() => {\n      if (pdfDocument === this.#pdfDocument) {\n        this.#ready = true;\n      }\n    });\n  }\n  async dispatchWillSave() {\n    return this.#scripting?.dispatchEventInSandbox({\n      id: "doc",\n      name: "WillSave"\n    });\n  }\n  async dispatchDidSave() {\n    return this.#scripting?.dispatchEventInSandbox({\n      id: "doc",\n      name: "DidSave"\n    });\n  }\n  async dispatchWillPrint() {\n    if (!this.#scripting) {\n      return;\n    }\n    await this.#willPrintCapability?.promise;\n    this.#willPrintCapability = Promise.withResolvers();\n    try {\n      await this.#scripting.dispatchEventInSandbox({\n        id: "doc",\n        name: "WillPrint"\n      });\n    } catch (ex) {\n      this.#willPrintCapability.resolve();\n      this.#willPrintCapability = null;\n      throw ex;\n    }\n    await this.#willPrintCapability.promise;\n  }\n  async dispatchDidPrint() {\n    return this.#scripting?.dispatchEventInSandbox({\n      id: "doc",\n      name: "DidPrint"\n    });\n  }\n  get destroyPromise() {\n    return this.#destroyCapability?.promise || null;\n  }\n  get ready() {\n    return this.#ready;\n  }\n  get _pageOpenPending() {\n    return shadow(this, "_pageOpenPending", new Set());\n  }\n  get _visitedPages() {\n    return shadow(this, "_visitedPages", new Map());\n  }\n  async #updateFromSandbox(detail) {\n    const pdfViewer = this.#pdfViewer;\n    const isInPresentationMode = pdfViewer.isInPresentationMode || pdfViewer.isChangingPresentationMode;\n    const {\n      id,\n      siblings,\n      command,\n      value\n    } = detail;\n    if (!id) {\n      switch (command) {\n        case "clear":\n          console.clear();\n          break;\n        case "error":\n          console.error(value);\n          break;\n        case "layout":\n          if (!isInPresentationMode) {\n            const modes = apiPageLayoutToViewerModes(value);\n            pdfViewer.spreadMode = modes.spreadMode;\n          }\n          break;\n        case "page-num":\n          pdfViewer.currentPageNumber = value + 1;\n          break;\n        case "print":\n          await pdfViewer.pagesPromise;\n          this.#eventBus.dispatch("print", {\n            source: this\n          });\n          break;\n        case "println":\n          console.log(value);\n          break;\n        case "zoom":\n          if (!isInPresentationMode) {\n            pdfViewer.currentScaleValue = value;\n          }\n          break;\n        case "SaveAs":\n          this.#eventBus.dispatch("download", {\n            source: this\n          });\n          break;\n        case "FirstPage":\n          pdfViewer.currentPageNumber = 1;\n          break;\n        case "LastPage":\n          pdfViewer.currentPageNumber = pdfViewer.pagesCount;\n          break;\n        case "NextPage":\n          pdfViewer.nextPage();\n          break;\n        case "PrevPage":\n          pdfViewer.previousPage();\n          break;\n        case "ZoomViewIn":\n          if (!isInPresentationMode) {\n            pdfViewer.increaseScale();\n          }\n          break;\n        case "ZoomViewOut":\n          if (!isInPresentationMode) {\n            pdfViewer.decreaseScale();\n          }\n          break;\n        case "WillPrintFinished":\n          this.#willPrintCapability?.resolve();\n          this.#willPrintCapability = null;\n          break;\n      }\n      return;\n    }\n    if (isInPresentationMode && detail.focus) {\n      return;\n    }\n    delete detail.id;\n    delete detail.siblings;\n    const ids = siblings ? [id, ...siblings] : [id];\n    for (const elementId of ids) {\n      const element = document.querySelector(`[data-element-id="${elementId}"]`);\n      if (element) {\n        element.dispatchEvent(new CustomEvent("updatefromsandbox", {\n          detail\n        }));\n      } else {\n        this.#pdfDocument?.annotationStorage.setValue(elementId, detail);\n      }\n    }\n  }\n  async #dispatchPageOpen(pageNumber, initialize = false) {\n    const pdfDocument = this.#pdfDocument,\n      visitedPages = this._visitedPages;\n    if (initialize) {\n      this.#closeCapability = Promise.withResolvers();\n    }\n    if (!this.#closeCapability) {\n      return;\n    }\n    const pageView = this.#pdfViewer.getPageView(pageNumber - 1);\n    if (pageView?.renderingState !== RenderingStates.FINISHED) {\n      this._pageOpenPending.add(pageNumber);\n      return;\n    }\n    this._pageOpenPending.delete(pageNumber);\n    const actionsPromise = (async () => {\n      const actions = await (!visitedPages.has(pageNumber) ? pageView.pdfPage?.getJSActions() : null);\n      if (pdfDocument !== this.#pdfDocument) {\n        return;\n      }\n      await this.#scripting?.dispatchEventInSandbox({\n        id: "page",\n        name: "PageOpen",\n        pageNumber,\n        actions\n      });\n    })();\n    visitedPages.set(pageNumber, actionsPromise);\n  }\n  async #dispatchPageClose(pageNumber) {\n    const pdfDocument = this.#pdfDocument,\n      visitedPages = this._visitedPages;\n    if (!this.#closeCapability) {\n      return;\n    }\n    if (this._pageOpenPending.has(pageNumber)) {\n      return;\n    }\n    const actionsPromise = visitedPages.get(pageNumber);\n    if (!actionsPromise) {\n      return;\n    }\n    visitedPages.set(pageNumber, null);\n    await actionsPromise;\n    if (pdfDocument !== this.#pdfDocument) {\n      return;\n    }\n    await this.#scripting?.dispatchEventInSandbox({\n      id: "page",\n      name: "PageClose",\n      pageNumber\n    });\n  }\n  #initScripting() {\n    this.#destroyCapability = Promise.withResolvers();\n    if (this.#scripting) {\n      throw new Error("#initScripting: Scripting already exists.");\n    }\n    return this.#externalServices.createScripting();\n  }\n  async #destroyScripting() {\n    if (!this.#scripting) {\n      this.#pdfDocument = null;\n      this.#destroyCapability?.resolve();\n      return;\n    }\n    if (this.#closeCapability) {\n      await Promise.race([this.#closeCapability.promise, new Promise(resolve => {\n        setTimeout(resolve, 1000);\n      })]).catch(() => {});\n      this.#closeCapability = null;\n    }\n    this.#pdfDocument = null;\n    try {\n      await this.#scripting.destroySandbox();\n    } catch {}\n    this.#willPrintCapability?.reject(new Error("Scripting destroyed."));\n    this.#willPrintCapability = null;\n    this.#eventAbortController?.abort();\n    this.#eventAbortController = null;\n    this._pageOpenPending.clear();\n    this._visitedPages.clear();\n    this.#scripting = null;\n    this.#ready = false;\n    this.#destroyCapability?.resolve();\n  }\n}\n\n;// CONCATENATED MODULE:./pdf_sidebar.js\n\nconst SIDEBAR_WIDTH_VAR = "--sidebar-width";\nconst SIDEBAR_MIN_WIDTH = 200;\nconst SIDEBAR_RESIZING_CLASS = "sidebarResizing";\nconst UI_NOTIFICATION_CLASS = "pdfSidebarNotification";\nclass PDFSidebar {\n  #isRTL = false;\n  #mouseAC = null;\n  #outerContainerWidth = null;\n  #width = null;\n  constructor({\n    elements,\n    eventBus,\n    l10n\n  }) {\n    this.isOpen = false;\n    this.active = SidebarView.THUMBS;\n    this.isInitialViewSet = false;\n    this.isInitialEventDispatched = false;\n    this.onToggled = null;\n    this.onUpdateThumbnails = null;\n    this.outerContainer = elements.outerContainer;\n    this.sidebarContainer = elements.sidebarContainer;\n    this.toggleButton = elements.toggleButton;\n    this.resizer = elements.resizer;\n    this.thumbnailButton = elements.thumbnailButton;\n    this.outlineButton = elements.outlineButton;\n    this.attachmentsButton = elements.attachmentsButton;\n    this.layersButton = elements.layersButton;\n    this.thumbnailView = elements.thumbnailView;\n    this.outlineView = elements.outlineView;\n    this.attachmentsView = elements.attachmentsView;\n    this.layersView = elements.layersView;\n    this._currentOutlineItemButton = elements.currentOutlineItemButton;\n    this.eventBus = eventBus;\n    this.#isRTL = l10n.getDirection() === "rtl";\n    this.#addEventListeners();\n  }\n  reset() {\n    this.isInitialViewSet = false;\n    this.isInitialEventDispatched = false;\n    this.#hideUINotification(true);\n    this.switchView(SidebarView.THUMBS);\n    this.outlineButton.disabled = false;\n    this.attachmentsButton.disabled = false;\n    this.layersButton.disabled = false;\n    this._currentOutlineItemButton.disabled = true;\n  }\n  get visibleView() {\n    return this.isOpen ? this.active : SidebarView.NONE;\n  }\n  setInitialView(view = SidebarView.NONE) {\n    if (this.isInitialViewSet) {\n      return;\n    }\n    this.isInitialViewSet = true;\n    if (view === SidebarView.NONE || view === SidebarView.UNKNOWN) {\n      this.#dispatchEvent();\n      return;\n    }\n    this.switchView(view, true);\n    if (!this.isInitialEventDispatched) {\n      this.#dispatchEvent();\n    }\n  }\n  switchView(view, forceOpen = false) {\n    const isViewChanged = view !== this.active;\n    let forceRendering = false;\n    switch (view) {\n      case SidebarView.NONE:\n        if (this.isOpen) {\n          this.close();\n        }\n        return;\n      case SidebarView.THUMBS:\n        if (this.isOpen && isViewChanged) {\n          forceRendering = true;\n        }\n        break;\n      case SidebarView.OUTLINE:\n        if (this.outlineButton.disabled) {\n          return;\n        }\n        break;\n      case SidebarView.ATTACHMENTS:\n        if (this.attachmentsButton.disabled) {\n          return;\n        }\n        break;\n      case SidebarView.LAYERS:\n        if (this.layersButton.disabled) {\n          return;\n        }\n        break;\n      default:\n        console.error(`PDFSidebar.switchView: "${view}" is not a valid view.`);\n        return;\n    }\n    this.active = view;\n    toggleCheckedBtn(this.thumbnailButton, view === SidebarView.THUMBS, this.thumbnailView);\n    toggleCheckedBtn(this.outlineButton, view === SidebarView.OUTLINE, this.outlineView);\n    toggleCheckedBtn(this.attachmentsButton, view === SidebarView.ATTACHMENTS, this.attachmentsView);\n    toggleCheckedBtn(this.layersButton, view === SidebarView.LAYERS, this.layersView);\n    if (forceOpen && !this.isOpen) {\n      this.open();\n      return;\n    }\n    if (forceRendering) {\n      this.onUpdateThumbnails();\n      this.onToggled();\n    }\n    if (isViewChanged) {\n      this.#dispatchEvent();\n    }\n  }\n  open() {\n    if (this.isOpen) {\n      return;\n    }\n    this.isOpen = true;\n    toggleExpandedBtn(this.toggleButton, true);\n    this.outerContainer.classList.add("sidebarMoving", "sidebarOpen");\n    if (this.active === SidebarView.THUMBS) {\n      this.onUpdateThumbnails();\n    }\n    this.onToggled();\n    this.#dispatchEvent();\n    this.#hideUINotification();\n  }\n  close(evt = null) {\n    if (!this.isOpen) {\n      return;\n    }\n    this.isOpen = false;\n    toggleExpandedBtn(this.toggleButton, false);\n    this.outerContainer.classList.add("sidebarMoving");\n    this.outerContainer.classList.remove("sidebarOpen");\n    this.onToggled();\n    this.#dispatchEvent();\n    if (evt?.detail > 0) {\n      this.toggleButton.blur();\n    }\n  }\n  toggle(evt = null) {\n    if (this.isOpen) {\n      this.close(evt);\n    } else {\n      this.open();\n    }\n  }\n  #dispatchEvent() {\n    if (this.isInitialViewSet) {\n      this.isInitialEventDispatched ||= true;\n    }\n    this.eventBus.dispatch("sidebarviewchanged", {\n      source: this,\n      view: this.visibleView\n    });\n  }\n  #showUINotification() {\n    this.toggleButton.setAttribute("data-l10n-id", "pdfjs-toggle-sidebar-notification-button");\n    if (!this.isOpen) {\n      this.toggleButton.classList.add(UI_NOTIFICATION_CLASS);\n    }\n  }\n  #hideUINotification(reset = false) {\n    if (this.isOpen || reset) {\n      this.toggleButton.classList.remove(UI_NOTIFICATION_CLASS);\n    }\n    if (reset) {\n      this.toggleButton.setAttribute("data-l10n-id", "pdfjs-toggle-sidebar-button");\n    }\n  }\n  #addEventListeners() {\n    const {\n      eventBus,\n      outerContainer\n    } = this;\n    this.sidebarContainer.addEventListener("transitionend", evt => {\n      if (evt.target === this.sidebarContainer) {\n        outerContainer.classList.remove("sidebarMoving");\n        eventBus.dispatch("resize", {\n          source: this\n        });\n      }\n    });\n    this.toggleButton.addEventListener("click", evt => {\n      this.toggle(evt);\n    });\n    this.thumbnailButton.addEventListener("click", () => {\n      this.switchView(SidebarView.THUMBS);\n    });\n    this.outlineButton.addEventListener("click", () => {\n      this.switchView(SidebarView.OUTLINE);\n    });\n    this.outlineButton.addEventListener("dblclick", () => {\n      eventBus.dispatch("toggleoutlinetree", {\n        source: this\n      });\n    });\n    this.attachmentsButton.addEventListener("click", () => {\n      this.switchView(SidebarView.ATTACHMENTS);\n    });\n    this.layersButton.addEventListener("click", () => {\n      this.switchView(SidebarView.LAYERS);\n    });\n    this.layersButton.addEventListener("dblclick", () => {\n      eventBus.dispatch("resetlayers", {\n        source: this\n      });\n    });\n    this._currentOutlineItemButton.addEventListener("click", () => {\n      eventBus.dispatch("currentoutlineitem", {\n        source: this\n      });\n    });\n    const onTreeLoaded = (count, button, view) => {\n      button.disabled = !count;\n      if (count) {\n        this.#showUINotification();\n      } else if (this.active === view) {\n        this.switchView(SidebarView.THUMBS);\n      }\n    };\n    eventBus._on("outlineloaded", evt => {\n      onTreeLoaded(evt.outlineCount, this.outlineButton, SidebarView.OUTLINE);\n      evt.currentOutlineItemPromise.then(enabled => {\n        if (!this.isInitialViewSet) {\n          return;\n        }\n        this._currentOutlineItemButton.disabled = !enabled;\n      });\n    });\n    eventBus._on("attachmentsloaded", evt => {\n      onTreeLoaded(evt.attachmentsCount, this.attachmentsButton, SidebarView.ATTACHMENTS);\n    });\n    eventBus._on("layersloaded", evt => {\n      onTreeLoaded(evt.layersCount, this.layersButton, SidebarView.LAYERS);\n    });\n    eventBus._on("presentationmodechanged", evt => {\n      if (evt.state === PresentationModeState.NORMAL && this.visibleView === SidebarView.THUMBS) {\n        this.onUpdateThumbnails();\n      }\n    });\n    this.resizer.addEventListener("mousedown", evt => {\n      if (evt.button !== 0) {\n        return;\n      }\n      outerContainer.classList.add(SIDEBAR_RESIZING_CLASS);\n      this.#mouseAC = new AbortController();\n      const opts = {\n        signal: this.#mouseAC.signal\n      };\n      window.addEventListener("mousemove", this.#mouseMove.bind(this), opts);\n      window.addEventListener("mouseup", this.#mouseUp.bind(this), opts);\n      window.addEventListener("blur", this.#mouseUp.bind(this), opts);\n    });\n    eventBus._on("resize", evt => {\n      if (evt.source !== window) {\n        return;\n      }\n      this.#outerContainerWidth = null;\n      if (!this.#width) {\n        return;\n      }\n      if (!this.isOpen) {\n        this.#updateWidth(this.#width);\n        return;\n      }\n      outerContainer.classList.add(SIDEBAR_RESIZING_CLASS);\n      const updated = this.#updateWidth(this.#width);\n      Promise.resolve().then(() => {\n        outerContainer.classList.remove(SIDEBAR_RESIZING_CLASS);\n        if (updated) {\n          eventBus.dispatch("resize", {\n            source: this\n          });\n        }\n      });\n    });\n  }\n  get outerContainerWidth() {\n    return this.#outerContainerWidth ||= this.outerContainer.clientWidth;\n  }\n  #updateWidth(width = 0) {\n    const maxWidth = Math.floor(this.outerContainerWidth / 2);\n    if (width > maxWidth) {\n      width = maxWidth;\n    }\n    if (width < SIDEBAR_MIN_WIDTH) {\n      width = SIDEBAR_MIN_WIDTH;\n    }\n    if (width === this.#width) {\n      return false;\n    }\n    this.#width = width;\n    docStyle.setProperty(SIDEBAR_WIDTH_VAR, `${width}px`);\n    return true;\n  }\n  #mouseMove(evt) {\n    let width = evt.clientX;\n    if (this.#isRTL) {\n      width = this.outerContainerWidth - width;\n    }\n    this.#updateWidth(width);\n  }\n  #mouseUp(evt) {\n    this.outerContainer.classList.remove(SIDEBAR_RESIZING_CLASS);\n    this.eventBus.dispatch("resize", {\n      source: this\n    });\n    this.#mouseAC?.abort();\n    this.#mouseAC = null;\n  }\n}\n\n;// CONCATENATED MODULE:./pdf_thumbnail_view.js\n\n\nconst DRAW_UPSCALE_FACTOR = 2;\nconst MAX_NUM_SCALING_STEPS = 3;\nconst THUMBNAIL_WIDTH = 98;\nclass TempImageFactory {\n  static #tempCanvas = null;\n  static getCanvas(width, height) {\n    const tempCanvas = this.#tempCanvas ||= document.createElement("canvas");\n    tempCanvas.width = width;\n    tempCanvas.height = height;\n    const ctx = tempCanvas.getContext("2d", {\n      alpha: false\n    });\n    ctx.save();\n    ctx.fillStyle = "rgb(255, 255, 255)";\n    ctx.fillRect(0, 0, width, height);\n    ctx.restore();\n    return [tempCanvas, tempCanvas.getContext("2d")];\n  }\n  static destroyCanvas() {\n    const tempCanvas = this.#tempCanvas;\n    if (tempCanvas) {\n      tempCanvas.width = 0;\n      tempCanvas.height = 0;\n    }\n    this.#tempCanvas = null;\n  }\n}\nclass PDFThumbnailView {\n  constructor({\n    container,\n    eventBus,\n    id,\n    defaultViewport,\n    optionalContentConfigPromise,\n    linkService,\n    renderingQueue,\n    pageColors,\n    enableHWA\n  }) {\n    this.id = id;\n    this.renderingId = "thumbnail" + id;\n    this.pageLabel = null;\n    this.pdfPage = null;\n    this.rotation = 0;\n    this.viewport = defaultViewport;\n    this.pdfPageRotate = defaultViewport.rotation;\n    this._optionalContentConfigPromise = optionalContentConfigPromise || null;\n    this.pageColors = pageColors || null;\n    this.enableHWA = enableHWA || false;\n    this.eventBus = eventBus;\n    this.linkService = linkService;\n    this.renderingQueue = renderingQueue;\n    this.renderTask = null;\n    this.renderingState = RenderingStates.INITIAL;\n    this.resume = null;\n    const anchor = document.createElement("a");\n    anchor.href = linkService.getAnchorUrl("#page=" + id);\n    anchor.setAttribute("data-l10n-id", "pdfjs-thumb-page-title");\n    anchor.setAttribute("data-l10n-args", this.#pageL10nArgs);\n    anchor.onclick = function () {\n      linkService.goToPage(id);\n      return false;\n    };\n    this.anchor = anchor;\n    const div = document.createElement("div");\n    div.className = "thumbnail";\n    div.setAttribute("data-page-number", this.id);\n    this.div = div;\n    this.#updateDims();\n    const img = document.createElement("div");\n    img.className = "thumbnailImage";\n    this._placeholderImg = img;\n    const span = document.createElement("span");\n    span.className = "thumbnailNumber";\n    span.innerHTML = this.id;\n    div.append(img);\n    div.append(span);\n    anchor.append(div);\n    container.append(anchor);\n  }\n  #updateDims() {\n    const {\n      width,\n      height\n    } = this.viewport;\n    const ratio = width / height;\n    this.canvasWidth = THUMBNAIL_WIDTH;\n    this.canvasHeight = this.canvasWidth / ratio | 0;\n    this.scale = this.canvasWidth / width;\n    const {\n      style\n    } = this.div;\n    style.setProperty("--thumbnail-width", `${this.canvasWidth}px`);\n    style.setProperty("--thumbnail-height", `${this.canvasHeight}px`);\n  }\n  setPdfPage(pdfPage) {\n    this.pdfPage = pdfPage;\n    this.pdfPageRotate = pdfPage.rotate;\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = pdfPage.getViewport({\n      scale: 1,\n      rotation: totalRotation\n    });\n    this.reset();\n  }\n  reset() {\n    this.cancelRendering();\n    this.renderingState = RenderingStates.INITIAL;\n    this.div.removeAttribute("data-loaded");\n    this.image?.replaceWith(this._placeholderImg);\n    this.#updateDims();\n    if (this.image) {\n      this.image.removeAttribute("src");\n      delete this.image;\n    }\n  }\n  update({\n    rotation = null\n  }) {\n    if (typeof rotation === "number") {\n      this.rotation = rotation;\n    }\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = this.viewport.clone({\n      scale: 1,\n      rotation: totalRotation\n    });\n    this.reset();\n  }\n  cancelRendering() {\n    if (this.renderTask) {\n      this.renderTask.cancel();\n      this.renderTask = null;\n    }\n    this.resume = null;\n  }\n  #getPageDrawContext(upscaleFactor = 1, enableHWA = this.enableHWA) {\n    const canvas = document.createElement("canvas");\n    const ctx = canvas.getContext("2d", {\n      alpha: false,\n      willReadFrequently: !enableHWA\n    });\n    const outputScale = new OutputScale();\n    canvas.width = upscaleFactor * this.canvasWidth * outputScale.sx | 0;\n    canvas.height = upscaleFactor * this.canvasHeight * outputScale.sy | 0;\n    const transform = outputScale.scaled ? [outputScale.sx, 0, 0, outputScale.sy, 0, 0] : null;\n    return {\n      ctx,\n      canvas,\n      transform\n    };\n  }\n  #convertCanvasToImage(canvas) {\n    if (this.renderingState !== RenderingStates.FINISHED) {\n      throw new Error("#convertCanvasToImage: Rendering has not finished.");\n    }\n    const reducedCanvas = this.#reduceImage(canvas);\n    const image = document.createElement("img");\n    image.className = "thumbnailImage";\n    image.setAttribute("data-l10n-id", "pdfjs-thumb-page-canvas");\n    image.setAttribute("data-l10n-args", this.#pageL10nArgs);\n    image.src = reducedCanvas.toDataURL();\n    this.image = image;\n    this.div.setAttribute("data-loaded", true);\n    this._placeholderImg.replaceWith(image);\n    reducedCanvas.width = 0;\n    reducedCanvas.height = 0;\n  }\n  async #finishRenderTask(renderTask, canvas, error = null) {\n    if (renderTask === this.renderTask) {\n      this.renderTask = null;\n    }\n    if (error instanceof RenderingCancelledException) {\n      return;\n    }\n    this.renderingState = RenderingStates.FINISHED;\n    this.#convertCanvasToImage(canvas);\n    if (error) {\n      throw error;\n    }\n  }\n  async draw() {\n    if (this.renderingState !== RenderingStates.INITIAL) {\n      console.error("Must be in new state before drawing");\n      return undefined;\n    }\n    const {\n      pdfPage\n    } = this;\n    if (!pdfPage) {\n      this.renderingState = RenderingStates.FINISHED;\n      throw new Error("pdfPage is not loaded");\n    }\n    this.renderingState = RenderingStates.RUNNING;\n    const {\n      ctx,\n      canvas,\n      transform\n    } = this.#getPageDrawContext(DRAW_UPSCALE_FACTOR);\n    const drawViewport = this.viewport.clone({\n      scale: DRAW_UPSCALE_FACTOR * this.scale\n    });\n    const renderContinueCallback = cont => {\n      if (!this.renderingQueue.isHighestPriority(this)) {\n        this.renderingState = RenderingStates.PAUSED;\n        this.resume = () => {\n          this.renderingState = RenderingStates.RUNNING;\n          cont();\n        };\n        return;\n      }\n      cont();\n    };\n    const renderContext = {\n      canvasContext: ctx,\n      transform,\n      viewport: drawViewport,\n      optionalContentConfigPromise: this._optionalContentConfigPromise,\n      pageColors: this.pageColors\n    };\n    const renderTask = this.renderTask = pdfPage.render(renderContext);\n    renderTask.onContinue = renderContinueCallback;\n    const resultPromise = renderTask.promise.then(() => this.#finishRenderTask(renderTask, canvas), error => this.#finishRenderTask(renderTask, canvas, error));\n    resultPromise.finally(() => {\n      canvas.width = 0;\n      canvas.height = 0;\n      this.eventBus.dispatch("thumbnailrendered", {\n        source: this,\n        pageNumber: this.id,\n        pdfPage: this.pdfPage\n      });\n    });\n    return resultPromise;\n  }\n  setImage(pageView) {\n    if (this.renderingState !== RenderingStates.INITIAL) {\n      return;\n    }\n    const {\n      thumbnailCanvas: canvas,\n      pdfPage,\n      scale\n    } = pageView;\n    if (!canvas) {\n      return;\n    }\n    if (!this.pdfPage) {\n      this.setPdfPage(pdfPage);\n    }\n    if (scale < this.scale) {\n      return;\n    }\n    this.renderingState = RenderingStates.FINISHED;\n    this.#convertCanvasToImage(canvas);\n  }\n  #reduceImage(img) {\n    const {\n      ctx,\n      canvas\n    } = this.#getPageDrawContext(1, true);\n    if (img.width <= 2 * canvas.width) {\n      ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height);\n      return canvas;\n    }\n    let reducedWidth = canvas.width << MAX_NUM_SCALING_STEPS;\n    let reducedHeight = canvas.height << MAX_NUM_SCALING_STEPS;\n    const [reducedImage, reducedImageCtx] = TempImageFactory.getCanvas(reducedWidth, reducedHeight);\n    while (reducedWidth > img.width || reducedHeight > img.height) {\n      reducedWidth >>= 1;\n      reducedHeight >>= 1;\n    }\n    reducedImageCtx.drawImage(img, 0, 0, img.width, img.height, 0, 0, reducedWidth, reducedHeight);\n    while (reducedWidth > 2 * canvas.width) {\n      reducedImageCtx.drawImage(reducedImage, 0, 0, reducedWidth, reducedHeight, 0, 0, reducedWidth >> 1, reducedHeight >> 1);\n      reducedWidth >>= 1;\n      reducedHeight >>= 1;\n    }\n    ctx.drawImage(reducedImage, 0, 0, reducedWidth, reducedHeight, 0, 0, canvas.width, canvas.height);\n    return canvas;\n  }\n  get #pageL10nArgs() {\n    return JSON.stringify({\n      page: this.pageLabel ?? this.id\n    });\n  }\n  setPageLabel(label) {\n    this.pageLabel = typeof label === "string" ? label : null;\n    this.anchor.setAttribute("data-l10n-args", this.#pageL10nArgs);\n    if (this.renderingState !== RenderingStates.FINISHED) {\n      return;\n    }\n    this.image?.setAttribute("data-l10n-args", this.#pageL10nArgs);\n  }\n}\n\n;// CONCATENATED MODULE:./pdf_thumbnail_viewer.js\n\n\nconst THUMBNAIL_SCROLL_MARGIN = -19;\nconst THUMBNAIL_SELECTED_CLASS = "selected";\nclass PDFThumbnailViewer {\n  constructor({\n    container,\n    eventBus,\n    linkService,\n    renderingQueue,\n    pageColors,\n    abortSignal,\n    enableHWA\n  }) {\n    this.container = container;\n    this.eventBus = eventBus;\n    this.linkService = linkService;\n    this.renderingQueue = renderingQueue;\n    this.pageColors = pageColors || null;\n    this.enableHWA = enableHWA || false;\n    this.scroll = watchScroll(this.container, this.#scrollUpdated.bind(this), abortSignal);\n    this.#resetView();\n  }\n  #scrollUpdated() {\n    this.renderingQueue.renderHighestPriority();\n  }\n  getThumbnail(index) {\n    return this._thumbnails[index];\n  }\n  #getVisibleThumbs() {\n    return getVisibleElements({\n      scrollEl: this.container,\n      views: this._thumbnails\n    });\n  }\n  scrollThumbnailIntoView(pageNumber) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const thumbnailView = this._thumbnails[pageNumber - 1];\n    if (!thumbnailView) {\n      console.error(\'scrollThumbnailIntoView: Invalid "pageNumber" parameter.\');\n      return;\n    }\n    if (pageNumber !== this._currentPageNumber) {\n      const prevThumbnailView = this._thumbnails[this._currentPageNumber - 1];\n      prevThumbnailView.div.classList.remove(THUMBNAIL_SELECTED_CLASS);\n      thumbnailView.div.classList.add(THUMBNAIL_SELECTED_CLASS);\n    }\n    const {\n      first,\n      last,\n      views\n    } = this.#getVisibleThumbs();\n    if (views.length > 0) {\n      let shouldScroll = false;\n      if (pageNumber <= first.id || pageNumber >= last.id) {\n        shouldScroll = true;\n      } else {\n        for (const {\n          id,\n          percent\n        } of views) {\n          if (id !== pageNumber) {\n            continue;\n          }\n          shouldScroll = percent < 100;\n          break;\n        }\n      }\n      if (shouldScroll) {\n        scrollIntoView(thumbnailView.div, {\n          top: THUMBNAIL_SCROLL_MARGIN\n        });\n      }\n    }\n    this._currentPageNumber = pageNumber;\n  }\n  get pagesRotation() {\n    return this._pagesRotation;\n  }\n  set pagesRotation(rotation) {\n    if (!isValidRotation(rotation)) {\n      throw new Error("Invalid thumbnails rotation angle.");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (this._pagesRotation === rotation) {\n      return;\n    }\n    this._pagesRotation = rotation;\n    const updateArgs = {\n      rotation\n    };\n    for (const thumbnail of this._thumbnails) {\n      thumbnail.update(updateArgs);\n    }\n  }\n  cleanup() {\n    for (const thumbnail of this._thumbnails) {\n      if (thumbnail.renderingState !== RenderingStates.FINISHED) {\n        thumbnail.reset();\n      }\n    }\n    TempImageFactory.destroyCanvas();\n  }\n  #resetView() {\n    this._thumbnails = [];\n    this._currentPageNumber = 1;\n    this._pageLabels = null;\n    this._pagesRotation = 0;\n    this.container.textContent = "";\n  }\n  setDocument(pdfDocument) {\n    if (this.pdfDocument) {\n      this.#cancelRendering();\n      this.#resetView();\n    }\n    this.pdfDocument = pdfDocument;\n    if (!pdfDocument) {\n      return;\n    }\n    const firstPagePromise = pdfDocument.getPage(1);\n    const optionalContentConfigPromise = pdfDocument.getOptionalContentConfig({\n      intent: "display"\n    });\n    firstPagePromise.then(firstPdfPage => {\n      const pagesCount = pdfDocument.numPages;\n      const viewport = firstPdfPage.getViewport({\n        scale: 1\n      });\n      for (let pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n        const thumbnail = new PDFThumbnailView({\n          container: this.container,\n          eventBus: this.eventBus,\n          id: pageNum,\n          defaultViewport: viewport.clone(),\n          optionalContentConfigPromise,\n          linkService: this.linkService,\n          renderingQueue: this.renderingQueue,\n          pageColors: this.pageColors,\n          enableHWA: this.enableHWA\n        });\n        this._thumbnails.push(thumbnail);\n      }\n      this._thumbnails[0]?.setPdfPage(firstPdfPage);\n      const thumbnailView = this._thumbnails[this._currentPageNumber - 1];\n      thumbnailView.div.classList.add(THUMBNAIL_SELECTED_CLASS);\n    }).catch(reason => {\n      console.error("Unable to initialize thumbnail viewer", reason);\n    });\n  }\n  #cancelRendering() {\n    for (const thumbnail of this._thumbnails) {\n      thumbnail.cancelRendering();\n    }\n  }\n  setPageLabels(labels) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (!labels) {\n      this._pageLabels = null;\n    } else if (!(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)) {\n      this._pageLabels = null;\n      console.error("PDFThumbnailViewer_setPageLabels: Invalid page labels.");\n    } else {\n      this._pageLabels = labels;\n    }\n    for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\n      this._thumbnails[i].setPageLabel(this._pageLabels?.[i] ?? null);\n    }\n  }\n  async #ensurePdfPageLoaded(thumbView) {\n    if (thumbView.pdfPage) {\n      return thumbView.pdfPage;\n    }\n    try {\n      const pdfPage = await this.pdfDocument.getPage(thumbView.id);\n      if (!thumbView.pdfPage) {\n        thumbView.setPdfPage(pdfPage);\n      }\n      return pdfPage;\n    } catch (reason) {\n      console.error("Unable to get page for thumb view", reason);\n      return null;\n    }\n  }\n  #getScrollAhead(visible) {\n    if (visible.first?.id === 1) {\n      return true;\n    } else if (visible.last?.id === this._thumbnails.length) {\n      return false;\n    }\n    return this.scroll.down;\n  }\n  forceRendering() {\n    const visibleThumbs = this.#getVisibleThumbs();\n    const scrollAhead = this.#getScrollAhead(visibleThumbs);\n    const thumbView = this.renderingQueue.getHighestPriority(visibleThumbs, this._thumbnails, scrollAhead);\n    if (thumbView) {\n      this.#ensurePdfPageLoaded(thumbView).then(() => {\n        this.renderingQueue.renderView(thumbView);\n      });\n      return true;\n    }\n    return false;\n  }\n}\n\n;// CONCATENATED MODULE:./annotation_editor_layer_builder.js\n\n\nclass AnnotationEditorLayerBuilder {\n  #annotationLayer = null;\n  #drawLayer = null;\n  #onAppend = null;\n  #textLayer = null;\n  #uiManager;\n  constructor(options) {\n    this.pdfPage = options.pdfPage;\n    this.accessibilityManager = options.accessibilityManager;\n    this.l10n = options.l10n;\n    this.l10n ||= new genericl10n_GenericL10n();\n    this.annotationEditorLayer = null;\n    this.div = null;\n    this._cancelled = false;\n    this.#uiManager = options.uiManager;\n    this.#annotationLayer = options.annotationLayer || null;\n    this.#textLayer = options.textLayer || null;\n    this.#drawLayer = options.drawLayer || null;\n    this.#onAppend = options.onAppend || null;\n  }\n  async render(viewport, intent = "display") {\n    if (intent !== "display") {\n      return;\n    }\n    if (this._cancelled) {\n      return;\n    }\n    const clonedViewport = viewport.clone({\n      dontFlip: true\n    });\n    if (this.div) {\n      this.annotationEditorLayer.update({\n        viewport: clonedViewport\n      });\n      this.show();\n      return;\n    }\n    const div = this.div = document.createElement("div");\n    div.className = "annotationEditorLayer";\n    div.hidden = true;\n    div.dir = this.#uiManager.direction;\n    this.#onAppend?.(div);\n    this.annotationEditorLayer = new AnnotationEditorLayer({\n      uiManager: this.#uiManager,\n      div,\n      accessibilityManager: this.accessibilityManager,\n      pageIndex: this.pdfPage.pageNumber - 1,\n      l10n: this.l10n,\n      viewport: clonedViewport,\n      annotationLayer: this.#annotationLayer,\n      textLayer: this.#textLayer,\n      drawLayer: this.#drawLayer\n    });\n    const parameters = {\n      viewport: clonedViewport,\n      div,\n      annotations: null,\n      intent\n    };\n    this.annotationEditorLayer.render(parameters);\n    this.show();\n  }\n  cancel() {\n    this._cancelled = true;\n    if (!this.div) {\n      return;\n    }\n    this.annotationEditorLayer.destroy();\n  }\n  hide() {\n    if (!this.div) {\n      return;\n    }\n    this.div.hidden = true;\n  }\n  show() {\n    if (!this.div || this.annotationEditorLayer.isInvisible) {\n      return;\n    }\n    this.div.hidden = false;\n  }\n}\n\n;// CONCATENATED MODULE:./annotation_layer_builder.js\n\n\nclass AnnotationLayerBuilder {\n  #onAppend = null;\n  #eventAbortController = null;\n  constructor({\n    pdfPage,\n    linkService,\n    downloadManager,\n    annotationStorage = null,\n    imageResourcesPath = "",\n    renderForms = true,\n    enableScripting = false,\n    hasJSActionsPromise = null,\n    fieldObjectsPromise = null,\n    annotationCanvasMap = null,\n    accessibilityManager = null,\n    annotationEditorUIManager = null,\n    onAppend = null\n  }) {\n    this.pdfPage = pdfPage;\n    this.linkService = linkService;\n    this.downloadManager = downloadManager;\n    this.imageResourcesPath = imageResourcesPath;\n    this.renderForms = renderForms;\n    this.annotationStorage = annotationStorage;\n    this.enableScripting = enableScripting;\n    this._hasJSActionsPromise = hasJSActionsPromise || Promise.resolve(false);\n    this._fieldObjectsPromise = fieldObjectsPromise || Promise.resolve(null);\n    this._annotationCanvasMap = annotationCanvasMap;\n    this._accessibilityManager = accessibilityManager;\n    this._annotationEditorUIManager = annotationEditorUIManager;\n    this.#onAppend = onAppend;\n    this.annotationLayer = null;\n    this.div = null;\n    this._cancelled = false;\n    this._eventBus = linkService.eventBus;\n  }\n  async render(viewport, intent = "display") {\n    if (this.div) {\n      if (this._cancelled || !this.annotationLayer) {\n        return;\n      }\n      this.annotationLayer.update({\n        viewport: viewport.clone({\n          dontFlip: true\n        })\n      });\n      return;\n    }\n    const [annotations, hasJSActions, fieldObjects] = await Promise.all([this.pdfPage.getAnnotations({\n      intent\n    }), this._hasJSActionsPromise, this._fieldObjectsPromise]);\n    if (this._cancelled) {\n      return;\n    }\n    const div = this.div = document.createElement("div");\n    div.className = "annotationLayer";\n    this.#onAppend?.(div);\n    if (annotations.length === 0) {\n      this.hide();\n      return;\n    }\n    this.annotationLayer = new AnnotationLayer({\n      div,\n      accessibilityManager: this._accessibilityManager,\n      annotationCanvasMap: this._annotationCanvasMap,\n      annotationEditorUIManager: this._annotationEditorUIManager,\n      page: this.pdfPage,\n      viewport: viewport.clone({\n        dontFlip: true\n      })\n    });\n    await this.annotationLayer.render({\n      annotations,\n      imageResourcesPath: this.imageResourcesPath,\n      renderForms: this.renderForms,\n      linkService: this.linkService,\n      downloadManager: this.downloadManager,\n      annotationStorage: this.annotationStorage,\n      enableScripting: this.enableScripting,\n      hasJSActions,\n      fieldObjects\n    });\n    if (this.linkService.isInPresentationMode) {\n      this.#updatePresentationModeState(PresentationModeState.FULLSCREEN);\n    }\n    if (!this.#eventAbortController) {\n      this.#eventAbortController = new AbortController();\n      this._eventBus?._on("presentationmodechanged", evt => {\n        this.#updatePresentationModeState(evt.state);\n      }, {\n        signal: this.#eventAbortController.signal\n      });\n    }\n  }\n  cancel() {\n    this._cancelled = true;\n    this.#eventAbortController?.abort();\n    this.#eventAbortController = null;\n  }\n  hide() {\n    if (!this.div) {\n      return;\n    }\n    this.div.hidden = true;\n  }\n  hasEditableAnnotations() {\n    return !!this.annotationLayer?.hasEditableAnnotations();\n  }\n  #updatePresentationModeState(state) {\n    if (!this.div) {\n      return;\n    }\n    let disableFormElements = false;\n    switch (state) {\n      case PresentationModeState.FULLSCREEN:\n        disableFormElements = true;\n        break;\n      case PresentationModeState.NORMAL:\n        break;\n      default:\n        return;\n    }\n    for (const section of this.div.childNodes) {\n      if (section.hasAttribute("data-internal-link")) {\n        continue;\n      }\n      section.inert = disableFormElements;\n    }\n  }\n}\n\n;// CONCATENATED MODULE:./draw_layer_builder.js\n\nclass DrawLayerBuilder {\n  #drawLayer = null;\n  constructor(options) {\n    this.pageIndex = options.pageIndex;\n  }\n  async render(intent = "display") {\n    if (intent !== "display" || this.#drawLayer || this._cancelled) {\n      return;\n    }\n    this.#drawLayer = new DrawLayer({\n      pageIndex: this.pageIndex\n    });\n  }\n  cancel() {\n    this._cancelled = true;\n    if (!this.#drawLayer) {\n      return;\n    }\n    this.#drawLayer.destroy();\n    this.#drawLayer = null;\n  }\n  setParent(parent) {\n    this.#drawLayer?.setParent(parent);\n  }\n  getDrawLayer() {\n    return this.#drawLayer;\n  }\n}\n\n;// CONCATENATED MODULE:./struct_tree_layer_builder.js\n\nconst PDF_ROLE_TO_HTML_ROLE = {\n  Document: null,\n  DocumentFragment: null,\n  Part: "group",\n  Sect: "group",\n  Div: "group",\n  Aside: "note",\n  NonStruct: "none",\n  P: null,\n  H: "heading",\n  Title: null,\n  FENote: "note",\n  Sub: "group",\n  Lbl: null,\n  Span: null,\n  Em: null,\n  Strong: null,\n  Link: "link",\n  Annot: "note",\n  Form: "form",\n  Ruby: null,\n  RB: null,\n  RT: null,\n  RP: null,\n  Warichu: null,\n  WT: null,\n  WP: null,\n  L: "list",\n  LI: "listitem",\n  LBody: null,\n  Table: "table",\n  TR: "row",\n  TH: "columnheader",\n  TD: "cell",\n  THead: "columnheader",\n  TBody: null,\n  TFoot: null,\n  Caption: null,\n  Figure: "figure",\n  Formula: null,\n  Artifact: null\n};\nconst HEADING_PATTERN = /^H(\\d+)$/;\nclass StructTreeLayerBuilder {\n  #treeDom = undefined;\n  get renderingDone() {\n    return this.#treeDom !== undefined;\n  }\n  render(structTree) {\n    if (this.#treeDom !== undefined) {\n      return this.#treeDom;\n    }\n    const treeDom = this.#walk(structTree);\n    treeDom?.classList.add("structTree");\n    return this.#treeDom = treeDom;\n  }\n  hide() {\n    if (this.#treeDom && !this.#treeDom.hidden) {\n      this.#treeDom.hidden = true;\n    }\n  }\n  show() {\n    if (this.#treeDom?.hidden) {\n      this.#treeDom.hidden = false;\n    }\n  }\n  #setAttributes(structElement, htmlElement) {\n    const {\n      alt,\n      id,\n      lang\n    } = structElement;\n    if (alt !== undefined) {\n      htmlElement.setAttribute("aria-label", removeNullCharacters(alt));\n    }\n    if (id !== undefined) {\n      htmlElement.setAttribute("aria-owns", id);\n    }\n    if (lang !== undefined) {\n      htmlElement.setAttribute("lang", removeNullCharacters(lang, true));\n    }\n  }\n  #walk(node) {\n    if (!node) {\n      return null;\n    }\n    const element = document.createElement("span");\n    if ("role" in node) {\n      const {\n        role\n      } = node;\n      const match = role.match(HEADING_PATTERN);\n      if (match) {\n        element.setAttribute("role", "heading");\n        element.setAttribute("aria-level", match[1]);\n      } else if (PDF_ROLE_TO_HTML_ROLE[role]) {\n        element.setAttribute("role", PDF_ROLE_TO_HTML_ROLE[role]);\n      }\n    }\n    this.#setAttributes(node, element);\n    if (node.children) {\n      if (node.children.length === 1 && "id" in node.children[0]) {\n        this.#setAttributes(node.children[0], element);\n      } else {\n        for (const kid of node.children) {\n          element.append(this.#walk(kid));\n        }\n      }\n    }\n    return element;\n  }\n}\n\n;// CONCATENATED MODULE:./text_accessibility.js\n\nclass TextAccessibilityManager {\n  #enabled = false;\n  #textChildren = null;\n  #textNodes = new Map();\n  #waitingElements = new Map();\n  setTextMapping(textDivs) {\n    this.#textChildren = textDivs;\n  }\n  static #compareElementPositions(e1, e2) {\n    const rect1 = e1.getBoundingClientRect();\n    const rect2 = e2.getBoundingClientRect();\n    if (rect1.width === 0 && rect1.height === 0) {\n      return +1;\n    }\n    if (rect2.width === 0 && rect2.height === 0) {\n      return -1;\n    }\n    const top1 = rect1.y;\n    const bot1 = rect1.y + rect1.height;\n    const mid1 = rect1.y + rect1.height / 2;\n    const top2 = rect2.y;\n    const bot2 = rect2.y + rect2.height;\n    const mid2 = rect2.y + rect2.height / 2;\n    if (mid1 <= top2 && mid2 >= bot1) {\n      return -1;\n    }\n    if (mid2 <= top1 && mid1 >= bot2) {\n      return +1;\n    }\n    const centerX1 = rect1.x + rect1.width / 2;\n    const centerX2 = rect2.x + rect2.width / 2;\n    return centerX1 - centerX2;\n  }\n  enable() {\n    if (this.#enabled) {\n      throw new Error("TextAccessibilityManager is already enabled.");\n    }\n    if (!this.#textChildren) {\n      throw new Error("Text divs and strings have not been set.");\n    }\n    this.#enabled = true;\n    this.#textChildren = this.#textChildren.slice();\n    this.#textChildren.sort(TextAccessibilityManager.#compareElementPositions);\n    if (this.#textNodes.size > 0) {\n      const textChildren = this.#textChildren;\n      for (const [id, nodeIndex] of this.#textNodes) {\n        const element = document.getElementById(id);\n        if (!element) {\n          this.#textNodes.delete(id);\n          continue;\n        }\n        this.#addIdToAriaOwns(id, textChildren[nodeIndex]);\n      }\n    }\n    for (const [element, isRemovable] of this.#waitingElements) {\n      this.addPointerInTextLayer(element, isRemovable);\n    }\n    this.#waitingElements.clear();\n  }\n  disable() {\n    if (!this.#enabled) {\n      return;\n    }\n    this.#waitingElements.clear();\n    this.#textChildren = null;\n    this.#enabled = false;\n  }\n  removePointerInTextLayer(element) {\n    if (!this.#enabled) {\n      this.#waitingElements.delete(element);\n      return;\n    }\n    const children = this.#textChildren;\n    if (!children || children.length === 0) {\n      return;\n    }\n    const {\n      id\n    } = element;\n    const nodeIndex = this.#textNodes.get(id);\n    if (nodeIndex === undefined) {\n      return;\n    }\n    const node = children[nodeIndex];\n    this.#textNodes.delete(id);\n    let owns = node.getAttribute("aria-owns");\n    if (owns?.includes(id)) {\n      owns = owns.split(" ").filter(x => x !== id).join(" ");\n      if (owns) {\n        node.setAttribute("aria-owns", owns);\n      } else {\n        node.removeAttribute("aria-owns");\n        node.setAttribute("role", "presentation");\n      }\n    }\n  }\n  #addIdToAriaOwns(id, node) {\n    const owns = node.getAttribute("aria-owns");\n    if (!owns?.includes(id)) {\n      node.setAttribute("aria-owns", owns ? `${owns} ${id}` : id);\n    }\n    node.removeAttribute("role");\n  }\n  addPointerInTextLayer(element, isRemovable) {\n    const {\n      id\n    } = element;\n    if (!id) {\n      return null;\n    }\n    if (!this.#enabled) {\n      this.#waitingElements.set(element, isRemovable);\n      return null;\n    }\n    if (isRemovable) {\n      this.removePointerInTextLayer(element);\n    }\n    const children = this.#textChildren;\n    if (!children || children.length === 0) {\n      return null;\n    }\n    const index = binarySearchFirstItem(children, node => TextAccessibilityManager.#compareElementPositions(element, node) < 0);\n    const nodeIndex = Math.max(0, index - 1);\n    const child = children[nodeIndex];\n    this.#addIdToAriaOwns(id, child);\n    this.#textNodes.set(id, nodeIndex);\n    const parent = child.parentNode;\n    return parent?.classList.contains("markedContent") ? parent.id : null;\n  }\n  moveElementInDOM(container, element, contentElement, isRemovable) {\n    const id = this.addPointerInTextLayer(contentElement, isRemovable);\n    if (!container.hasChildNodes()) {\n      container.append(element);\n      return id;\n    }\n    const children = Array.from(container.childNodes).filter(node => node !== element);\n    if (children.length === 0) {\n      return id;\n    }\n    const elementToCompare = contentElement || element;\n    const index = binarySearchFirstItem(children, node => TextAccessibilityManager.#compareElementPositions(elementToCompare, node) < 0);\n    if (index === 0) {\n      children[0].before(element);\n    } else {\n      children[index - 1].after(element);\n    }\n    return id;\n  }\n}\n\n;// CONCATENATED MODULE:./text_highlighter.js\nclass TextHighlighter {\n  #eventAbortController = null;\n  constructor({\n    findController,\n    eventBus,\n    pageIndex\n  }) {\n    this.findController = findController;\n    this.matches = [];\n    this.eventBus = eventBus;\n    this.pageIdx = pageIndex;\n    this.textDivs = null;\n    this.textContentItemsStr = null;\n    this.enabled = false;\n  }\n  setTextMapping(divs, texts) {\n    this.textDivs = divs;\n    this.textContentItemsStr = texts;\n  }\n  enable() {\n    if (!this.textDivs || !this.textContentItemsStr) {\n      throw new Error("Text divs and strings have not been set.");\n    }\n    if (this.enabled) {\n      throw new Error("TextHighlighter is already enabled.");\n    }\n    this.enabled = true;\n    if (!this.#eventAbortController) {\n      this.#eventAbortController = new AbortController();\n      this.eventBus._on("updatetextlayermatches", evt => {\n        if (evt.pageIndex === this.pageIdx || evt.pageIndex === -1) {\n          this._updateMatches();\n        }\n      }, {\n        signal: this.#eventAbortController.signal\n      });\n    }\n    this._updateMatches();\n  }\n  disable() {\n    if (!this.enabled) {\n      return;\n    }\n    this.enabled = false;\n    this.#eventAbortController?.abort();\n    this.#eventAbortController = null;\n    this._updateMatches(true);\n  }\n  _convertMatches(matches, matchesLength) {\n    if (!matches) {\n      return [];\n    }\n    const {\n      textContentItemsStr\n    } = this;\n    let i = 0,\n      iIndex = 0;\n    const end = textContentItemsStr.length - 1;\n    const result = [];\n    for (let m = 0, mm = matches.length; m < mm; m++) {\n      let matchIdx = matches[m];\n      while (i !== end && matchIdx >= iIndex + textContentItemsStr[i].length) {\n        iIndex += textContentItemsStr[i].length;\n        i++;\n      }\n      if (i === textContentItemsStr.length) {\n        console.error("Could not find a matching mapping");\n      }\n      const match = {\n        begin: {\n          divIdx: i,\n          offset: matchIdx - iIndex\n        }\n      };\n      matchIdx += matchesLength[m];\n      while (i !== end && matchIdx > iIndex + textContentItemsStr[i].length) {\n        iIndex += textContentItemsStr[i].length;\n        i++;\n      }\n      match.end = {\n        divIdx: i,\n        offset: matchIdx - iIndex\n      };\n      result.push(match);\n    }\n    return result;\n  }\n  _renderMatches(matches) {\n    if (matches.length === 0) {\n      return;\n    }\n    const {\n      findController,\n      pageIdx\n    } = this;\n    const {\n      textContentItemsStr,\n      textDivs\n    } = this;\n    const isSelectedPage = pageIdx === findController.selected.pageIdx;\n    const selectedMatchIdx = findController.selected.matchIdx;\n    const highlightAll = findController.state.highlightAll;\n    let prevEnd = null;\n    const infinity = {\n      divIdx: -1,\n      offset: undefined\n    };\n    function beginText(begin, className) {\n      const divIdx = begin.divIdx;\n      textDivs[divIdx].textContent = "";\n      return appendTextToDiv(divIdx, 0, begin.offset, className);\n    }\n    function appendTextToDiv(divIdx, fromOffset, toOffset, className) {\n      let div = textDivs[divIdx];\n      if (div.nodeType === Node.TEXT_NODE) {\n        const span = document.createElement("span");\n        div.before(span);\n        span.append(div);\n        textDivs[divIdx] = span;\n        div = span;\n      }\n      const content = textContentItemsStr[divIdx].substring(fromOffset, toOffset);\n      const node = document.createTextNode(content);\n      if (className) {\n        const span = document.createElement("span");\n        span.className = `${className} appended`;\n        span.append(node);\n        div.append(span);\n        return className.includes("selected") ? span.offsetLeft : 0;\n      }\n      div.append(node);\n      return 0;\n    }\n    let i0 = selectedMatchIdx,\n      i1 = i0 + 1;\n    if (highlightAll) {\n      i0 = 0;\n      i1 = matches.length;\n    } else if (!isSelectedPage) {\n      return;\n    }\n    let lastDivIdx = -1;\n    let lastOffset = -1;\n    for (let i = i0; i < i1; i++) {\n      const match = matches[i];\n      const begin = match.begin;\n      if (begin.divIdx === lastDivIdx && begin.offset === lastOffset) {\n        continue;\n      }\n      lastDivIdx = begin.divIdx;\n      lastOffset = begin.offset;\n      const end = match.end;\n      const isSelected = isSelectedPage && i === selectedMatchIdx;\n      const highlightSuffix = isSelected ? " selected" : "";\n      let selectedLeft = 0;\n      if (!prevEnd || begin.divIdx !== prevEnd.divIdx) {\n        if (prevEnd !== null) {\n          appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n        }\n        beginText(begin);\n      } else {\n        appendTextToDiv(prevEnd.divIdx, prevEnd.offset, begin.offset);\n      }\n      if (begin.divIdx === end.divIdx) {\n        selectedLeft = appendTextToDiv(begin.divIdx, begin.offset, end.offset, "highlight" + highlightSuffix);\n      } else {\n        selectedLeft = appendTextToDiv(begin.divIdx, begin.offset, infinity.offset, "highlight begin" + highlightSuffix);\n        for (let n0 = begin.divIdx + 1, n1 = end.divIdx; n0 < n1; n0++) {\n          textDivs[n0].className = "highlight middle" + highlightSuffix;\n        }\n        beginText(end, "highlight end" + highlightSuffix);\n      }\n      prevEnd = end;\n      if (isSelected) {\n        findController.scrollMatchIntoView({\n          element: textDivs[begin.divIdx],\n          selectedLeft,\n          pageIndex: pageIdx,\n          matchIndex: selectedMatchIdx\n        });\n      }\n    }\n    if (prevEnd) {\n      appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n    }\n  }\n  _updateMatches(reset = false) {\n    if (!this.enabled && !reset) {\n      return;\n    }\n    const {\n      findController,\n      matches,\n      pageIdx\n    } = this;\n    const {\n      textContentItemsStr,\n      textDivs\n    } = this;\n    let clearedUntilDivIdx = -1;\n    for (const match of matches) {\n      const begin = Math.max(clearedUntilDivIdx, match.begin.divIdx);\n      for (let n = begin, end = match.end.divIdx; n <= end; n++) {\n        const div = textDivs[n];\n        div.textContent = textContentItemsStr[n];\n        div.className = "";\n      }\n      clearedUntilDivIdx = match.end.divIdx + 1;\n    }\n    if (!findController?.highlightMatches || reset) {\n      return;\n    }\n    const pageMatches = findController.pageMatches[pageIdx] || null;\n    const pageMatchesLength = findController.pageMatchesLength[pageIdx] || null;\n    this.matches = this._convertMatches(pageMatches, pageMatchesLength);\n    this._renderMatches(this.matches);\n  }\n}\n\n;// CONCATENATED MODULE:./text_layer_builder.js\n\n\nclass TextLayerBuilder {\n  #enablePermissions = false;\n  #onAppend = null;\n  #renderingDone = false;\n  #textLayer = null;\n  static #textLayers = new Map();\n  static #selectionChangeAbortController = null;\n  constructor({\n    pdfPage,\n    highlighter = null,\n    accessibilityManager = null,\n    enablePermissions = false,\n    onAppend = null\n  }) {\n    this.pdfPage = pdfPage;\n    this.highlighter = highlighter;\n    this.accessibilityManager = accessibilityManager;\n    this.#enablePermissions = enablePermissions === true;\n    this.#onAppend = onAppend;\n    this.div = document.createElement("div");\n    this.div.tabIndex = 0;\n    this.div.className = "textLayer";\n  }\n  async render(viewport, textContentParams = null) {\n    if (this.#renderingDone && this.#textLayer) {\n      this.#textLayer.update({\n        viewport,\n        onBefore: this.hide.bind(this)\n      });\n      this.show();\n      return;\n    }\n    this.cancel();\n    this.#textLayer = new TextLayer({\n      textContentSource: this.pdfPage.streamTextContent(textContentParams || {\n        includeMarkedContent: true,\n        disableNormalization: true\n      }),\n      container: this.div,\n      viewport\n    });\n    const {\n      textDivs,\n      textContentItemsStr\n    } = this.#textLayer;\n    this.highlighter?.setTextMapping(textDivs, textContentItemsStr);\n    this.accessibilityManager?.setTextMapping(textDivs);\n    await this.#textLayer.render();\n    this.#renderingDone = true;\n    const endOfContent = document.createElement("div");\n    endOfContent.className = "endOfContent";\n    this.div.append(endOfContent);\n    this.#bindMouse(endOfContent);\n    this.#onAppend?.(this.div);\n    this.highlighter?.enable();\n    this.accessibilityManager?.enable();\n  }\n  hide() {\n    if (!this.div.hidden && this.#renderingDone) {\n      this.highlighter?.disable();\n      this.div.hidden = true;\n    }\n  }\n  show() {\n    if (this.div.hidden && this.#renderingDone) {\n      this.div.hidden = false;\n      this.highlighter?.enable();\n    }\n  }\n  cancel() {\n    this.#textLayer?.cancel();\n    this.#textLayer = null;\n    this.highlighter?.disable();\n    this.accessibilityManager?.disable();\n    TextLayerBuilder.#removeGlobalSelectionListener(this.div);\n  }\n  #bindMouse(end) {\n    const {\n      div\n    } = this;\n    div.addEventListener("mousedown", () => {\n      div.classList.add("selecting");\n    });\n    div.addEventListener("copy", event => {\n      if (!this.#enablePermissions) {\n        const selection = document.getSelection();\n        event.clipboardData.setData("text/plain", removeNullCharacters(normalizeUnicode(selection.toString())));\n      }\n      event.preventDefault();\n      event.stopPropagation();\n    });\n    TextLayerBuilder.#textLayers.set(div, end);\n    TextLayerBuilder.#enableGlobalSelectionListener();\n  }\n  static #removeGlobalSelectionListener(textLayerDiv) {\n    this.#textLayers.delete(textLayerDiv);\n    if (this.#textLayers.size === 0) {\n      this.#selectionChangeAbortController?.abort();\n      this.#selectionChangeAbortController = null;\n    }\n  }\n  static #enableGlobalSelectionListener() {\n    if (this.#selectionChangeAbortController) {\n      return;\n    }\n    this.#selectionChangeAbortController = new AbortController();\n    const {\n      signal\n    } = this.#selectionChangeAbortController;\n    const reset = (end, textLayer) => {\n      textLayer.append(end);\n      end.style.width = "";\n      end.style.height = "";\n      textLayer.classList.remove("selecting");\n    };\n    let isPointerDown = false;\n    document.addEventListener("pointerdown", () => {\n      isPointerDown = true;\n    }, {\n      signal\n    });\n    document.addEventListener("pointerup", () => {\n      isPointerDown = false;\n      this.#textLayers.forEach(reset);\n    }, {\n      signal\n    });\n    window.addEventListener("blur", () => {\n      isPointerDown = false;\n      this.#textLayers.forEach(reset);\n    }, {\n      signal\n    });\n    document.addEventListener("keyup", () => {\n      if (!isPointerDown) {\n        this.#textLayers.forEach(reset);\n      }\n    }, {\n      signal\n    });\n    var isFirefox, prevRange;\n    document.addEventListener("selectionchange", () => {\n      const selection = document.getSelection();\n      if (selection.rangeCount === 0) {\n        this.#textLayers.forEach(reset);\n        return;\n      }\n      const activeTextLayers = new Set();\n      for (let i = 0; i < selection.rangeCount; i++) {\n        const range = selection.getRangeAt(i);\n        for (const textLayerDiv of this.#textLayers.keys()) {\n          if (!activeTextLayers.has(textLayerDiv) && range.intersectsNode(textLayerDiv)) {\n            activeTextLayers.add(textLayerDiv);\n          }\n        }\n      }\n      for (const [textLayerDiv, endDiv] of this.#textLayers) {\n        if (activeTextLayers.has(textLayerDiv)) {\n          textLayerDiv.classList.add("selecting");\n        } else {\n          reset(endDiv, textLayerDiv);\n        }\n      }\n      isFirefox ??= getComputedStyle(this.#textLayers.values().next().value).getPropertyValue("-moz-user-select") === "none";\n      if (isFirefox) {\n        return;\n      }\n      const range = selection.getRangeAt(0);\n      const modifyStart = prevRange && (range.compareBoundaryPoints(Range.END_TO_END, prevRange) === 0 || range.compareBoundaryPoints(Range.START_TO_END, prevRange) === 0);\n      let anchor = modifyStart ? range.startContainer : range.endContainer;\n      if (anchor.nodeType === Node.TEXT_NODE) {\n        anchor = anchor.parentNode;\n      }\n      const parentTextLayer = anchor.parentElement.closest(".textLayer");\n      const endDiv = this.#textLayers.get(parentTextLayer);\n      if (endDiv) {\n        endDiv.style.width = parentTextLayer.style.width;\n        endDiv.style.height = parentTextLayer.style.height;\n        anchor.parentElement.insertBefore(endDiv, modifyStart ? anchor : anchor.nextSibling);\n      }\n      prevRange = range.cloneRange();\n    }, {\n      signal\n    });\n  }\n}\n\n;// CONCATENATED MODULE:./pdf_page_view.js\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst DEFAULT_LAYER_PROPERTIES = null;\nconst LAYERS_ORDER = new Map([["canvasWrapper", 0], ["textLayer", 1], ["annotationLayer", 2], ["annotationEditorLayer", 3], ["xfaLayer", 3]]);\nclass PDFPageView {\n  #annotationMode = AnnotationMode.ENABLE_FORMS;\n  #enableHWA = false;\n  #hasRestrictedScaling = false;\n  #isEditing = false;\n  #layerProperties = null;\n  #loadingId = null;\n  #previousRotation = null;\n  #renderError = null;\n  #renderingState = RenderingStates.INITIAL;\n  #textLayerMode = TextLayerMode.ENABLE;\n  #useThumbnailCanvas = {\n    directDrawing: true,\n    initialOptionalContent: true,\n    regularAnnotations: true\n  };\n  #viewportMap = new WeakMap();\n  #layers = [null, null, null, null];\n  constructor(options) {\n    const container = options.container;\n    const defaultViewport = options.defaultViewport;\n    this.id = options.id;\n    this.renderingId = "page" + this.id;\n    this.#layerProperties = options.layerProperties || DEFAULT_LAYER_PROPERTIES;\n    this.pdfPage = null;\n    this.pageLabel = null;\n    this.rotation = 0;\n    this.scale = options.scale || DEFAULT_SCALE;\n    this.viewport = defaultViewport;\n    this.pdfPageRotate = defaultViewport.rotation;\n    this._optionalContentConfigPromise = options.optionalContentConfigPromise || null;\n    this.#textLayerMode = options.textLayerMode ?? TextLayerMode.ENABLE;\n    this.#annotationMode = options.annotationMode ?? AnnotationMode.ENABLE_FORMS;\n    this.imageResourcesPath = options.imageResourcesPath || "";\n    this.maxCanvasPixels = options.maxCanvasPixels ?? AppOptions.get("maxCanvasPixels");\n    this.pageColors = options.pageColors || null;\n    this.#enableHWA = options.enableHWA || false;\n    this.eventBus = options.eventBus;\n    this.renderingQueue = options.renderingQueue;\n    this.l10n = options.l10n;\n    this.l10n ||= new genericl10n_GenericL10n();\n    this.renderTask = null;\n    this.resume = null;\n    this._isStandalone = !this.renderingQueue?.hasViewer();\n    this._container = container;\n    this._annotationCanvasMap = null;\n    this.annotationLayer = null;\n    this.annotationEditorLayer = null;\n    this.textLayer = null;\n    this.zoomLayer = null;\n    this.xfaLayer = null;\n    this.structTreeLayer = null;\n    this.drawLayer = null;\n    const div = document.createElement("div");\n    div.className = "page";\n    div.setAttribute("data-page-number", this.id);\n    div.setAttribute("role", "region");\n    div.setAttribute("data-l10n-id", "pdfjs-page-landmark");\n    div.setAttribute("data-l10n-args", JSON.stringify({\n      page: this.id\n    }));\n    this.div = div;\n    this.#setDimensions();\n    container?.append(div);\n    if (this._isStandalone) {\n      container?.style.setProperty("--scale-factor", this.scale * PixelsPerInch.PDF_TO_CSS_UNITS);\n      const {\n        optionalContentConfigPromise\n      } = options;\n      if (optionalContentConfigPromise) {\n        optionalContentConfigPromise.then(optionalContentConfig => {\n          if (optionalContentConfigPromise !== this._optionalContentConfigPromise) {\n            return;\n          }\n          this.#useThumbnailCanvas.initialOptionalContent = optionalContentConfig.hasInitialVisibility;\n        });\n      }\n      if (!options.l10n) {\n        this.l10n.translate(this.div);\n      }\n    }\n  }\n  #addLayer(div, name) {\n    const pos = LAYERS_ORDER.get(name);\n    const oldDiv = this.#layers[pos];\n    this.#layers[pos] = div;\n    if (oldDiv) {\n      oldDiv.replaceWith(div);\n      return;\n    }\n    for (let i = pos - 1; i >= 0; i--) {\n      const layer = this.#layers[i];\n      if (layer) {\n        layer.after(div);\n        return;\n      }\n    }\n    this.div.prepend(div);\n  }\n  get renderingState() {\n    return this.#renderingState;\n  }\n  set renderingState(state) {\n    if (state === this.#renderingState) {\n      return;\n    }\n    this.#renderingState = state;\n    if (this.#loadingId) {\n      clearTimeout(this.#loadingId);\n      this.#loadingId = null;\n    }\n    switch (state) {\n      case RenderingStates.PAUSED:\n        this.div.classList.remove("loading");\n        break;\n      case RenderingStates.RUNNING:\n        this.div.classList.add("loadingIcon");\n        this.#loadingId = setTimeout(() => {\n          this.div.classList.add("loading");\n          this.#loadingId = null;\n        }, 0);\n        break;\n      case RenderingStates.INITIAL:\n      case RenderingStates.FINISHED:\n        this.div.classList.remove("loadingIcon", "loading");\n        break;\n    }\n  }\n  #setDimensions() {\n    const {\n      viewport\n    } = this;\n    if (this.pdfPage) {\n      if (this.#previousRotation === viewport.rotation) {\n        return;\n      }\n      this.#previousRotation = viewport.rotation;\n    }\n    setLayerDimensions(this.div, viewport, true, false);\n  }\n  setPdfPage(pdfPage) {\n    if (this._isStandalone && (this.pageColors?.foreground === "CanvasText" || this.pageColors?.background === "Canvas")) {\n      this._container?.style.setProperty("--hcm-highlight-filter", pdfPage.filterFactory.addHighlightHCMFilter("highlight", "CanvasText", "Canvas", "HighlightText", "Highlight"));\n      this._container?.style.setProperty("--hcm-highlight-selected-filter", pdfPage.filterFactory.addHighlightHCMFilter("highlight_selected", "CanvasText", "Canvas", "HighlightText", "Highlight"));\n    }\n    this.pdfPage = pdfPage;\n    this.pdfPageRotate = pdfPage.rotate;\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = pdfPage.getViewport({\n      scale: this.scale * PixelsPerInch.PDF_TO_CSS_UNITS,\n      rotation: totalRotation\n    });\n    this.#setDimensions();\n    this.reset();\n  }\n  destroy() {\n    this.reset();\n    this.pdfPage?.cleanup();\n  }\n  hasEditableAnnotations() {\n    return !!this.annotationLayer?.hasEditableAnnotations();\n  }\n  get _textHighlighter() {\n    return shadow(this, "_textHighlighter", new TextHighlighter({\n      pageIndex: this.id - 1,\n      eventBus: this.eventBus,\n      findController: this.#layerProperties.findController\n    }));\n  }\n  #dispatchLayerRendered(name, error) {\n    this.eventBus.dispatch(name, {\n      source: this,\n      pageNumber: this.id,\n      error\n    });\n  }\n  async #renderAnnotationLayer() {\n    let error = null;\n    try {\n      await this.annotationLayer.render(this.viewport, "display");\n    } catch (ex) {\n      console.error(`#renderAnnotationLayer: "${ex}".`);\n      error = ex;\n    } finally {\n      this.#dispatchLayerRendered("annotationlayerrendered", error);\n    }\n  }\n  async #renderAnnotationEditorLayer() {\n    let error = null;\n    try {\n      await this.annotationEditorLayer.render(this.viewport, "display");\n    } catch (ex) {\n      console.error(`#renderAnnotationEditorLayer: "${ex}".`);\n      error = ex;\n    } finally {\n      this.#dispatchLayerRendered("annotationeditorlayerrendered", error);\n    }\n  }\n  async #renderDrawLayer() {\n    try {\n      await this.drawLayer.render("display");\n    } catch (ex) {\n      console.error(`#renderDrawLayer: "${ex}".`);\n    }\n  }\n  async #renderXfaLayer() {\n    let error = null;\n    try {\n      const result = await this.xfaLayer.render(this.viewport, "display");\n      if (result?.textDivs && this._textHighlighter) {\n        this.#buildXfaTextContentItems(result.textDivs);\n      }\n    } catch (ex) {\n      console.error(`#renderXfaLayer: "${ex}".`);\n      error = ex;\n    } finally {\n      if (this.xfaLayer?.div) {\n        this.l10n.pause();\n        this.#addLayer(this.xfaLayer.div, "xfaLayer");\n        this.l10n.resume();\n      }\n      this.#dispatchLayerRendered("xfalayerrendered", error);\n    }\n  }\n  async #renderTextLayer() {\n    if (!this.textLayer) {\n      return;\n    }\n    let error = null;\n    try {\n      await this.textLayer.render(this.viewport);\n    } catch (ex) {\n      if (ex instanceof AbortException) {\n        return;\n      }\n      console.error(`#renderTextLayer: "${ex}".`);\n      error = ex;\n    }\n    this.#dispatchLayerRendered("textlayerrendered", error);\n    this.#renderStructTreeLayer();\n  }\n  async #renderStructTreeLayer() {\n    if (!this.textLayer) {\n      return;\n    }\n    this.structTreeLayer ||= new StructTreeLayerBuilder();\n    const tree = await (!this.structTreeLayer.renderingDone ? this.pdfPage.getStructTree() : null);\n    const treeDom = this.structTreeLayer?.render(tree);\n    if (treeDom) {\n      this.l10n.pause();\n      this.canvas?.append(treeDom);\n      this.l10n.resume();\n    }\n    this.structTreeLayer?.show();\n  }\n  async #buildXfaTextContentItems(textDivs) {\n    const text = await this.pdfPage.getTextContent();\n    const items = [];\n    for (const item of text.items) {\n      items.push(item.str);\n    }\n    this._textHighlighter.setTextMapping(textDivs, items);\n    this._textHighlighter.enable();\n  }\n  _resetZoomLayer(removeFromDOM = false) {\n    if (!this.zoomLayer) {\n      return;\n    }\n    const zoomLayerCanvas = this.zoomLayer.firstChild;\n    this.#viewportMap.delete(zoomLayerCanvas);\n    zoomLayerCanvas.width = 0;\n    zoomLayerCanvas.height = 0;\n    if (removeFromDOM) {\n      this.zoomLayer.remove();\n    }\n    this.zoomLayer = null;\n  }\n  reset({\n    keepZoomLayer = false,\n    keepAnnotationLayer = false,\n    keepAnnotationEditorLayer = false,\n    keepXfaLayer = false,\n    keepTextLayer = false\n  } = {}) {\n    this.cancelRendering({\n      keepAnnotationLayer,\n      keepAnnotationEditorLayer,\n      keepXfaLayer,\n      keepTextLayer\n    });\n    this.renderingState = RenderingStates.INITIAL;\n    const div = this.div;\n    const childNodes = div.childNodes,\n      zoomLayerNode = keepZoomLayer && this.zoomLayer || null,\n      annotationLayerNode = keepAnnotationLayer && this.annotationLayer?.div || null,\n      annotationEditorLayerNode = keepAnnotationEditorLayer && this.annotationEditorLayer?.div || null,\n      xfaLayerNode = keepXfaLayer && this.xfaLayer?.div || null,\n      textLayerNode = keepTextLayer && this.textLayer?.div || null;\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      const node = childNodes[i];\n      switch (node) {\n        case zoomLayerNode:\n        case annotationLayerNode:\n        case annotationEditorLayerNode:\n        case xfaLayerNode:\n        case textLayerNode:\n          continue;\n      }\n      node.remove();\n      const layerIndex = this.#layers.indexOf(node);\n      if (layerIndex >= 0) {\n        this.#layers[layerIndex] = null;\n      }\n    }\n    div.removeAttribute("data-loaded");\n    if (annotationLayerNode) {\n      this.annotationLayer.hide();\n    }\n    if (annotationEditorLayerNode) {\n      this.annotationEditorLayer.hide();\n    }\n    if (xfaLayerNode) {\n      this.xfaLayer.hide();\n    }\n    if (textLayerNode) {\n      this.textLayer.hide();\n    }\n    this.structTreeLayer?.hide();\n    if (!zoomLayerNode) {\n      if (this.canvas) {\n        this.#viewportMap.delete(this.canvas);\n        this.canvas.width = 0;\n        this.canvas.height = 0;\n        delete this.canvas;\n      }\n      this._resetZoomLayer();\n    }\n  }\n  toggleEditingMode(isEditing) {\n    if (!this.hasEditableAnnotations()) {\n      return;\n    }\n    this.#isEditing = isEditing;\n    this.reset({\n      keepZoomLayer: true,\n      keepAnnotationLayer: true,\n      keepAnnotationEditorLayer: true,\n      keepXfaLayer: true,\n      keepTextLayer: true\n    });\n  }\n  update({\n    scale = 0,\n    rotation = null,\n    optionalContentConfigPromise = null,\n    drawingDelay = -1\n  }) {\n    this.scale = scale || this.scale;\n    if (typeof rotation === "number") {\n      this.rotation = rotation;\n    }\n    if (optionalContentConfigPromise instanceof Promise) {\n      this._optionalContentConfigPromise = optionalContentConfigPromise;\n      optionalContentConfigPromise.then(optionalContentConfig => {\n        if (optionalContentConfigPromise !== this._optionalContentConfigPromise) {\n          return;\n        }\n        this.#useThumbnailCanvas.initialOptionalContent = optionalContentConfig.hasInitialVisibility;\n      });\n    }\n    this.#useThumbnailCanvas.directDrawing = true;\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = this.viewport.clone({\n      scale: this.scale * PixelsPerInch.PDF_TO_CSS_UNITS,\n      rotation: totalRotation\n    });\n    this.#setDimensions();\n    if (this._isStandalone) {\n      this._container?.style.setProperty("--scale-factor", this.viewport.scale);\n    }\n    if (this.canvas) {\n      let onlyCssZoom = false;\n      if (this.#hasRestrictedScaling) {\n        if (this.maxCanvasPixels === 0) {\n          onlyCssZoom = true;\n        } else if (this.maxCanvasPixels > 0) {\n          const {\n            width,\n            height\n          } = this.viewport;\n          const {\n            sx,\n            sy\n          } = this.outputScale;\n          onlyCssZoom = (Math.floor(width) * sx | 0) * (Math.floor(height) * sy | 0) > this.maxCanvasPixels;\n        }\n      }\n      const postponeDrawing = drawingDelay >= 0 && drawingDelay < 1000;\n      if (postponeDrawing || onlyCssZoom) {\n        if (postponeDrawing && !onlyCssZoom && this.renderingState !== RenderingStates.FINISHED) {\n          this.cancelRendering({\n            keepZoomLayer: true,\n            keepAnnotationLayer: true,\n            keepAnnotationEditorLayer: true,\n            keepXfaLayer: true,\n            keepTextLayer: true,\n            cancelExtraDelay: drawingDelay\n          });\n          this.renderingState = RenderingStates.FINISHED;\n          this.#useThumbnailCanvas.directDrawing = false;\n        }\n        this.cssTransform({\n          target: this.canvas,\n          redrawAnnotationLayer: true,\n          redrawAnnotationEditorLayer: true,\n          redrawXfaLayer: true,\n          redrawTextLayer: !postponeDrawing,\n          hideTextLayer: postponeDrawing\n        });\n        if (postponeDrawing) {\n          return;\n        }\n        this.eventBus.dispatch("pagerendered", {\n          source: this,\n          pageNumber: this.id,\n          cssTransform: true,\n          timestamp: performance.now(),\n          error: this.#renderError\n        });\n        return;\n      }\n      if (!this.zoomLayer && !this.canvas.hidden) {\n        this.zoomLayer = this.canvas.parentNode;\n        this.zoomLayer.style.position = "absolute";\n      }\n    }\n    if (this.zoomLayer) {\n      this.cssTransform({\n        target: this.zoomLayer.firstChild\n      });\n    }\n    this.reset({\n      keepZoomLayer: true,\n      keepAnnotationLayer: true,\n      keepAnnotationEditorLayer: true,\n      keepXfaLayer: true,\n      keepTextLayer: true\n    });\n  }\n  cancelRendering({\n    keepAnnotationLayer = false,\n    keepAnnotationEditorLayer = false,\n    keepXfaLayer = false,\n    keepTextLayer = false,\n    cancelExtraDelay = 0\n  } = {}) {\n    if (this.renderTask) {\n      this.renderTask.cancel(cancelExtraDelay);\n      this.renderTask = null;\n    }\n    this.resume = null;\n    if (this.textLayer && (!keepTextLayer || !this.textLayer.div)) {\n      this.textLayer.cancel();\n      this.textLayer = null;\n    }\n    if (this.structTreeLayer && !this.textLayer) {\n      this.structTreeLayer = null;\n    }\n    if (this.annotationLayer && (!keepAnnotationLayer || !this.annotationLayer.div)) {\n      this.annotationLayer.cancel();\n      this.annotationLayer = null;\n      this._annotationCanvasMap = null;\n    }\n    if (this.annotationEditorLayer && (!keepAnnotationEditorLayer || !this.annotationEditorLayer.div)) {\n      if (this.drawLayer) {\n        this.drawLayer.cancel();\n        this.drawLayer = null;\n      }\n      this.annotationEditorLayer.cancel();\n      this.annotationEditorLayer = null;\n    }\n    if (this.xfaLayer && (!keepXfaLayer || !this.xfaLayer.div)) {\n      this.xfaLayer.cancel();\n      this.xfaLayer = null;\n      this._textHighlighter?.disable();\n    }\n  }\n  cssTransform({\n    target,\n    redrawAnnotationLayer = false,\n    redrawAnnotationEditorLayer = false,\n    redrawXfaLayer = false,\n    redrawTextLayer = false,\n    hideTextLayer = false\n  }) {\n    if (!target.hasAttribute("zooming")) {\n      target.setAttribute("zooming", true);\n      const {\n        style\n      } = target;\n      style.width = style.height = "";\n    }\n    const originalViewport = this.#viewportMap.get(target);\n    if (this.viewport !== originalViewport) {\n      const relativeRotation = this.viewport.rotation - originalViewport.rotation;\n      const absRotation = Math.abs(relativeRotation);\n      let scaleX = 1,\n        scaleY = 1;\n      if (absRotation === 90 || absRotation === 270) {\n        const {\n          width,\n          height\n        } = this.viewport;\n        scaleX = height / width;\n        scaleY = width / height;\n      }\n      target.style.transform = `rotate(${relativeRotation}deg) scale(${scaleX}, ${scaleY})`;\n    }\n    if (redrawAnnotationLayer && this.annotationLayer) {\n      this.#renderAnnotationLayer();\n    }\n    if (redrawAnnotationEditorLayer && this.annotationEditorLayer) {\n      if (this.drawLayer) {\n        this.#renderDrawLayer();\n      }\n      this.#renderAnnotationEditorLayer();\n    }\n    if (redrawXfaLayer && this.xfaLayer) {\n      this.#renderXfaLayer();\n    }\n    if (this.textLayer) {\n      if (hideTextLayer) {\n        this.textLayer.hide();\n        this.structTreeLayer?.hide();\n      } else if (redrawTextLayer) {\n        this.#renderTextLayer();\n      }\n    }\n  }\n  get width() {\n    return this.viewport.width;\n  }\n  get height() {\n    return this.viewport.height;\n  }\n  getPagePoint(x, y) {\n    return this.viewport.convertToPdfPoint(x, y);\n  }\n  async #finishRenderTask(renderTask, error = null) {\n    if (renderTask === this.renderTask) {\n      this.renderTask = null;\n    }\n    if (error instanceof RenderingCancelledException) {\n      this.#renderError = null;\n      return;\n    }\n    this.#renderError = error;\n    this.renderingState = RenderingStates.FINISHED;\n    this._resetZoomLayer(true);\n    this.#useThumbnailCanvas.regularAnnotations = !renderTask.separateAnnots;\n    this.eventBus.dispatch("pagerendered", {\n      source: this,\n      pageNumber: this.id,\n      cssTransform: false,\n      timestamp: performance.now(),\n      error: this.#renderError\n    });\n    if (error) {\n      throw error;\n    }\n  }\n  async draw() {\n    if (this.renderingState !== RenderingStates.INITIAL) {\n      console.error("Must be in new state before drawing");\n      this.reset();\n    }\n    const {\n      div,\n      l10n,\n      pageColors,\n      pdfPage,\n      viewport\n    } = this;\n    if (!pdfPage) {\n      this.renderingState = RenderingStates.FINISHED;\n      throw new Error("pdfPage is not loaded");\n    }\n    this.renderingState = RenderingStates.RUNNING;\n    const canvasWrapper = document.createElement("div");\n    canvasWrapper.classList.add("canvasWrapper");\n    this.#addLayer(canvasWrapper, "canvasWrapper");\n    if (!this.textLayer && this.#textLayerMode !== TextLayerMode.DISABLE && !pdfPage.isPureXfa) {\n      this._accessibilityManager ||= new TextAccessibilityManager();\n      this.textLayer = new TextLayerBuilder({\n        pdfPage,\n        highlighter: this._textHighlighter,\n        accessibilityManager: this._accessibilityManager,\n        enablePermissions: this.#textLayerMode === TextLayerMode.ENABLE_PERMISSIONS,\n        onAppend: textLayerDiv => {\n          this.l10n.pause();\n          this.#addLayer(textLayerDiv, "textLayer");\n          this.l10n.resume();\n        }\n      });\n    }\n    if (!this.annotationLayer && this.#annotationMode !== AnnotationMode.DISABLE) {\n      const {\n        annotationStorage,\n        annotationEditorUIManager,\n        downloadManager,\n        enableScripting,\n        fieldObjectsPromise,\n        hasJSActionsPromise,\n        linkService\n      } = this.#layerProperties;\n      this._annotationCanvasMap ||= new Map();\n      this.annotationLayer = new AnnotationLayerBuilder({\n        pdfPage,\n        annotationStorage,\n        imageResourcesPath: this.imageResourcesPath,\n        renderForms: this.#annotationMode === AnnotationMode.ENABLE_FORMS,\n        linkService,\n        downloadManager,\n        enableScripting,\n        hasJSActionsPromise,\n        fieldObjectsPromise,\n        annotationCanvasMap: this._annotationCanvasMap,\n        accessibilityManager: this._accessibilityManager,\n        annotationEditorUIManager,\n        onAppend: annotationLayerDiv => {\n          this.#addLayer(annotationLayerDiv, "annotationLayer");\n        }\n      });\n    }\n    const renderContinueCallback = cont => {\n      showCanvas?.(false);\n      if (this.renderingQueue && !this.renderingQueue.isHighestPriority(this)) {\n        this.renderingState = RenderingStates.PAUSED;\n        this.resume = () => {\n          this.renderingState = RenderingStates.RUNNING;\n          cont();\n        };\n        return;\n      }\n      cont();\n    };\n    const {\n      width,\n      height\n    } = viewport;\n    const canvas = document.createElement("canvas");\n    canvas.setAttribute("role", "presentation");\n    canvas.hidden = true;\n    const hasHCM = !!(pageColors?.background && pageColors?.foreground);\n    let showCanvas = isLastShow => {\n      if (!hasHCM || isLastShow) {\n        canvas.hidden = false;\n        showCanvas = null;\n      }\n    };\n    canvasWrapper.append(canvas);\n    this.canvas = canvas;\n    const ctx = canvas.getContext("2d", {\n      alpha: false,\n      willReadFrequently: !this.#enableHWA\n    });\n    const outputScale = this.outputScale = new OutputScale();\n    if (this.maxCanvasPixels === 0) {\n      const invScale = 1 / this.scale;\n      outputScale.sx *= invScale;\n      outputScale.sy *= invScale;\n      this.#hasRestrictedScaling = true;\n    } else if (this.maxCanvasPixels > 0) {\n      const pixelsInViewport = width * height;\n      const maxScale = Math.sqrt(this.maxCanvasPixels / pixelsInViewport);\n      if (outputScale.sx > maxScale || outputScale.sy > maxScale) {\n        outputScale.sx = maxScale;\n        outputScale.sy = maxScale;\n        this.#hasRestrictedScaling = true;\n      } else {\n        this.#hasRestrictedScaling = false;\n      }\n    }\n    const sfx = approximateFraction(outputScale.sx);\n    const sfy = approximateFraction(outputScale.sy);\n    canvas.width = floorToDivide(width * outputScale.sx, sfx[0]);\n    canvas.height = floorToDivide(height * outputScale.sy, sfy[0]);\n    const {\n      style\n    } = canvas;\n    style.width = floorToDivide(width, sfx[1]) + "px";\n    style.height = floorToDivide(height, sfy[1]) + "px";\n    this.#viewportMap.set(canvas, viewport);\n    const transform = outputScale.scaled ? [outputScale.sx, 0, 0, outputScale.sy, 0, 0] : null;\n    const renderContext = {\n      canvasContext: ctx,\n      transform,\n      viewport,\n      annotationMode: this.#annotationMode,\n      optionalContentConfigPromise: this._optionalContentConfigPromise,\n      annotationCanvasMap: this._annotationCanvasMap,\n      pageColors,\n      isEditing: this.#isEditing\n    };\n    const renderTask = this.renderTask = pdfPage.render(renderContext);\n    renderTask.onContinue = renderContinueCallback;\n    const resultPromise = renderTask.promise.then(async () => {\n      showCanvas?.(true);\n      await this.#finishRenderTask(renderTask);\n      this.#renderTextLayer();\n      if (this.annotationLayer) {\n        await this.#renderAnnotationLayer();\n      }\n      const {\n        annotationEditorUIManager\n      } = this.#layerProperties;\n      if (!annotationEditorUIManager) {\n        return;\n      }\n      this.drawLayer ||= new DrawLayerBuilder({\n        pageIndex: this.id\n      });\n      await this.#renderDrawLayer();\n      this.drawLayer.setParent(canvasWrapper);\n      if (!this.annotationEditorLayer) {\n        this.annotationEditorLayer = new AnnotationEditorLayerBuilder({\n          uiManager: annotationEditorUIManager,\n          pdfPage,\n          l10n,\n          accessibilityManager: this._accessibilityManager,\n          annotationLayer: this.annotationLayer?.annotationLayer,\n          textLayer: this.textLayer,\n          drawLayer: this.drawLayer.getDrawLayer(),\n          onAppend: annotationEditorLayerDiv => {\n            this.#addLayer(annotationEditorLayerDiv, "annotationEditorLayer");\n          }\n        });\n      }\n      this.#renderAnnotationEditorLayer();\n    }, error => {\n      if (!(error instanceof RenderingCancelledException)) {\n        showCanvas?.(true);\n      }\n      return this.#finishRenderTask(renderTask, error);\n    });\n    if (pdfPage.isPureXfa) {\n      if (!this.xfaLayer) {\n        const {\n          annotationStorage,\n          linkService\n        } = this.#layerProperties;\n        this.xfaLayer = new XfaLayerBuilder({\n          pdfPage,\n          annotationStorage,\n          linkService\n        });\n      }\n      this.#renderXfaLayer();\n    }\n    div.setAttribute("data-loaded", true);\n    this.eventBus.dispatch("pagerender", {\n      source: this,\n      pageNumber: this.id\n    });\n    return resultPromise;\n  }\n  setPageLabel(label) {\n    this.pageLabel = typeof label === "string" ? label : null;\n    this.div.setAttribute("data-l10n-args", JSON.stringify({\n      page: this.pageLabel ?? this.id\n    }));\n    if (this.pageLabel !== null) {\n      this.div.setAttribute("data-page-label", this.pageLabel);\n    } else {\n      this.div.removeAttribute("data-page-label");\n    }\n  }\n  get thumbnailCanvas() {\n    const {\n      directDrawing,\n      initialOptionalContent,\n      regularAnnotations\n    } = this.#useThumbnailCanvas;\n    return directDrawing && initialOptionalContent && regularAnnotations ? this.canvas : null;\n  }\n}\n\n;// CONCATENATED MODULE:./pdf_viewer.js\n\n\n\n\n\n\nconst DEFAULT_CACHE_SIZE = 10;\nconst PagesCountLimit = {\n  FORCE_SCROLL_MODE_PAGE: 10000,\n  FORCE_LAZY_PAGE_INIT: 5000,\n  PAUSE_EAGER_PAGE_INIT: 250\n};\nfunction isValidAnnotationEditorMode(mode) {\n  return Object.values(AnnotationEditorType).includes(mode) && mode !== AnnotationEditorType.DISABLE;\n}\nclass PDFPageViewBuffer {\n  #buf = new Set();\n  #size = 0;\n  constructor(size) {\n    this.#size = size;\n  }\n  push(view) {\n    const buf = this.#buf;\n    if (buf.has(view)) {\n      buf.delete(view);\n    }\n    buf.add(view);\n    if (buf.size > this.#size) {\n      this.#destroyFirstView();\n    }\n  }\n  resize(newSize, idsToKeep = null) {\n    this.#size = newSize;\n    const buf = this.#buf;\n    if (idsToKeep) {\n      const ii = buf.size;\n      let i = 1;\n      for (const view of buf) {\n        if (idsToKeep.has(view.id)) {\n          buf.delete(view);\n          buf.add(view);\n        }\n        if (++i > ii) {\n          break;\n        }\n      }\n    }\n    while (buf.size > this.#size) {\n      this.#destroyFirstView();\n    }\n  }\n  has(view) {\n    return this.#buf.has(view);\n  }\n  [Symbol.iterator]() {\n    return this.#buf.keys();\n  }\n  #destroyFirstView() {\n    const firstView = this.#buf.keys().next().value;\n    firstView?.destroy();\n    this.#buf.delete(firstView);\n  }\n}\nclass PDFViewer {\n  #buffer = null;\n  #altTextManager = null;\n  #annotationEditorHighlightColors = null;\n  #annotationEditorMode = AnnotationEditorType.NONE;\n  #annotationEditorUIManager = null;\n  #annotationMode = AnnotationMode.ENABLE_FORMS;\n  #containerTopLeft = null;\n  #enableHWA = false;\n  #enableHighlightFloatingButton = false;\n  #enablePermissions = false;\n  #enableUpdatedAddImage = false;\n  #enableNewAltTextWhenAddingImage = false;\n  #eventAbortController = null;\n  #mlManager = null;\n  #onPageRenderedCallback = null;\n  #switchAnnotationEditorModeTimeoutId = null;\n  #getAllTextInProgress = false;\n  #hiddenCopyElement = null;\n  #interruptCopyCondition = false;\n  #previousContainerHeight = 0;\n  #resizeObserver = new ResizeObserver(this.#resizeObserverCallback.bind(this));\n  #scrollModePageState = null;\n  #scaleTimeoutId = null;\n  #textLayerMode = TextLayerMode.ENABLE;\n  constructor(options) {\n    const viewerVersion = "4.6.64";\n    if (version !== viewerVersion) {\n      throw new Error(`The API version "${version}" does not match the Viewer version "${viewerVersion}".`);\n    }\n    this.container = options.container;\n    this.viewer = options.viewer || options.container.firstElementChild;\n    if (this.container?.tagName !== "DIV" || this.viewer?.tagName !== "DIV") {\n      throw new Error("Invalid `container` and/or `viewer` option.");\n    }\n    if (this.container.offsetParent && getComputedStyle(this.container).position !== "absolute") {\n      throw new Error("The `container` must be absolutely positioned.");\n    }\n    this.#resizeObserver.observe(this.container);\n    this.eventBus = options.eventBus;\n    this.linkService = options.linkService || new SimpleLinkService();\n    this.downloadManager = options.downloadManager || null;\n    this.findController = options.findController || null;\n    this.#altTextManager = options.altTextManager || null;\n    if (this.findController) {\n      this.findController.onIsPageVisible = pageNumber => this._getVisiblePages().ids.has(pageNumber);\n    }\n    this._scriptingManager = options.scriptingManager || null;\n    this.#textLayerMode = options.textLayerMode ?? TextLayerMode.ENABLE;\n    this.#annotationMode = options.annotationMode ?? AnnotationMode.ENABLE_FORMS;\n    this.#annotationEditorMode = options.annotationEditorMode ?? AnnotationEditorType.NONE;\n    this.#annotationEditorHighlightColors = options.annotationEditorHighlightColors || null;\n    this.#enableHighlightFloatingButton = options.enableHighlightFloatingButton === true;\n    this.#enableUpdatedAddImage = options.enableUpdatedAddImage === true;\n    this.#enableNewAltTextWhenAddingImage = options.enableNewAltTextWhenAddingImage === true;\n    this.imageResourcesPath = options.imageResourcesPath || "";\n    this.enablePrintAutoRotate = options.enablePrintAutoRotate || false;\n    this.removePageBorders = options.removePageBorders || false;\n    this.maxCanvasPixels = options.maxCanvasPixels;\n    this.l10n = options.l10n;\n    this.l10n ||= new genericl10n_GenericL10n();\n    this.#enablePermissions = options.enablePermissions || false;\n    this.pageColors = options.pageColors || null;\n    this.#mlManager = options.mlManager || null;\n    this.#enableHWA = options.enableHWA || false;\n    this.defaultRenderingQueue = !options.renderingQueue;\n    if (this.defaultRenderingQueue) {\n      this.renderingQueue = new PDFRenderingQueue();\n      this.renderingQueue.setViewer(this);\n    } else {\n      this.renderingQueue = options.renderingQueue;\n    }\n    const {\n      abortSignal\n    } = options;\n    abortSignal?.addEventListener("abort", () => {\n      this.#resizeObserver.disconnect();\n      this.#resizeObserver = null;\n    }, {\n      once: true\n    });\n    this.scroll = watchScroll(this.container, this._scrollUpdate.bind(this), abortSignal);\n    this.presentationModeState = PresentationModeState.UNKNOWN;\n    this._resetView();\n    if (this.removePageBorders) {\n      this.viewer.classList.add("removePageBorders");\n    }\n    this.#updateContainerHeightCss();\n    this.eventBus._on("thumbnailrendered", ({\n      pageNumber,\n      pdfPage\n    }) => {\n      const pageView = this._pages[pageNumber - 1];\n      if (!this.#buffer.has(pageView)) {\n        pdfPage?.cleanup();\n      }\n    });\n    if (!options.l10n) {\n      this.l10n.translate(this.container);\n    }\n  }\n  get pagesCount() {\n    return this._pages.length;\n  }\n  getPageView(index) {\n    return this._pages[index];\n  }\n  getCachedPageViews() {\n    return new Set(this.#buffer);\n  }\n  get pageViewsReady() {\n    return this._pages.every(pageView => pageView?.pdfPage);\n  }\n  get renderForms() {\n    return this.#annotationMode === AnnotationMode.ENABLE_FORMS;\n  }\n  get enableScripting() {\n    return !!this._scriptingManager;\n  }\n  get currentPageNumber() {\n    return this._currentPageNumber;\n  }\n  set currentPageNumber(val) {\n    if (!Number.isInteger(val)) {\n      throw new Error("Invalid page number.");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (!this._setCurrentPageNumber(val, true)) {\n      console.error(`currentPageNumber: "${val}" is not a valid page.`);\n    }\n  }\n  _setCurrentPageNumber(val, resetCurrentPageView = false) {\n    if (this._currentPageNumber === val) {\n      if (resetCurrentPageView) {\n        this.#resetCurrentPageView();\n      }\n      return true;\n    }\n    if (!(0 < val && val <= this.pagesCount)) {\n      return false;\n    }\n    const previous = this._currentPageNumber;\n    this._currentPageNumber = val;\n    this.eventBus.dispatch("pagechanging", {\n      source: this,\n      pageNumber: val,\n      pageLabel: this._pageLabels?.[val - 1] ?? null,\n      previous\n    });\n    if (resetCurrentPageView) {\n      this.#resetCurrentPageView();\n    }\n    return true;\n  }\n  get currentPageLabel() {\n    return this._pageLabels?.[this._currentPageNumber - 1] ?? null;\n  }\n  set currentPageLabel(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    let page = val | 0;\n    if (this._pageLabels) {\n      const i = this._pageLabels.indexOf(val);\n      if (i >= 0) {\n        page = i + 1;\n      }\n    }\n    if (!this._setCurrentPageNumber(page, true)) {\n      console.error(`currentPageLabel: "${val}" is not a valid page.`);\n    }\n  }\n  get currentScale() {\n    return this._currentScale !== UNKNOWN_SCALE ? this._currentScale : DEFAULT_SCALE;\n  }\n  set currentScale(val) {\n    if (isNaN(val)) {\n      throw new Error("Invalid numeric scale.");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    this.#setScale(val, {\n      noScroll: false\n    });\n  }\n  get currentScaleValue() {\n    return this._currentScaleValue;\n  }\n  set currentScaleValue(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    this.#setScale(val, {\n      noScroll: false\n    });\n  }\n  get pagesRotation() {\n    return this._pagesRotation;\n  }\n  set pagesRotation(rotation) {\n    if (!isValidRotation(rotation)) {\n      throw new Error("Invalid pages rotation angle.");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    if (this._pagesRotation === rotation) {\n      return;\n    }\n    this._pagesRotation = rotation;\n    const pageNumber = this._currentPageNumber;\n    this.refresh(true, {\n      rotation\n    });\n    if (this._currentScaleValue) {\n      this.#setScale(this._currentScaleValue, {\n        noScroll: true\n      });\n    }\n    this.eventBus.dispatch("rotationchanging", {\n      source: this,\n      pagesRotation: rotation,\n      pageNumber\n    });\n    if (this.defaultRenderingQueue) {\n      this.update();\n    }\n  }\n  get firstPagePromise() {\n    return this.pdfDocument ? this._firstPageCapability.promise : null;\n  }\n  get onePageRendered() {\n    return this.pdfDocument ? this._onePageRenderedCapability.promise : null;\n  }\n  get pagesPromise() {\n    return this.pdfDocument ? this._pagesCapability.promise : null;\n  }\n  get _layerProperties() {\n    const self = this;\n    return shadow(this, "_layerProperties", {\n      get annotationEditorUIManager() {\n        return self.#annotationEditorUIManager;\n      },\n      get annotationStorage() {\n        return self.pdfDocument?.annotationStorage;\n      },\n      get downloadManager() {\n        return self.downloadManager;\n      },\n      get enableScripting() {\n        return !!self._scriptingManager;\n      },\n      get fieldObjectsPromise() {\n        return self.pdfDocument?.getFieldObjects();\n      },\n      get findController() {\n        return self.findController;\n      },\n      get hasJSActionsPromise() {\n        return self.pdfDocument?.hasJSActions();\n      },\n      get linkService() {\n        return self.linkService;\n      }\n    });\n  }\n  #initializePermissions(permissions) {\n    const params = {\n      annotationEditorMode: this.#annotationEditorMode,\n      annotationMode: this.#annotationMode,\n      textLayerMode: this.#textLayerMode\n    };\n    if (!permissions) {\n      return params;\n    }\n    if (!permissions.includes(PermissionFlag.COPY) && this.#textLayerMode === TextLayerMode.ENABLE) {\n      params.textLayerMode = TextLayerMode.ENABLE_PERMISSIONS;\n    }\n    if (!permissions.includes(PermissionFlag.MODIFY_CONTENTS)) {\n      params.annotationEditorMode = AnnotationEditorType.DISABLE;\n    }\n    if (!permissions.includes(PermissionFlag.MODIFY_ANNOTATIONS) && !permissions.includes(PermissionFlag.FILL_INTERACTIVE_FORMS) && this.#annotationMode === AnnotationMode.ENABLE_FORMS) {\n      params.annotationMode = AnnotationMode.ENABLE;\n    }\n    return params;\n  }\n  async #onePageRenderedOrForceFetch(signal) {\n    if (document.visibilityState === "hidden" || !this.container.offsetParent || this._getVisiblePages().views.length === 0) {\n      return;\n    }\n    const hiddenCapability = Promise.withResolvers();\n    function onVisibilityChange() {\n      if (document.visibilityState === "hidden") {\n        hiddenCapability.resolve();\n      }\n    }\n    document.addEventListener("visibilitychange", onVisibilityChange, {\n      signal\n    });\n    await Promise.race([this._onePageRenderedCapability.promise, hiddenCapability.promise]);\n    document.removeEventListener("visibilitychange", onVisibilityChange);\n  }\n  async getAllText() {\n    const texts = [];\n    const buffer = [];\n    for (let pageNum = 1, pagesCount = this.pdfDocument.numPages; pageNum <= pagesCount; ++pageNum) {\n      if (this.#interruptCopyCondition) {\n        return null;\n      }\n      buffer.length = 0;\n      const page = await this.pdfDocument.getPage(pageNum);\n      const {\n        items\n      } = await page.getTextContent();\n      for (const item of items) {\n        if (item.str) {\n          buffer.push(item.str);\n        }\n        if (item.hasEOL) {\n          buffer.push("\\n");\n        }\n      }\n      texts.push(removeNullCharacters(buffer.join("")));\n    }\n    return texts.join("\\n");\n  }\n  #copyCallback(textLayerMode, event) {\n    const selection = document.getSelection();\n    const {\n      focusNode,\n      anchorNode\n    } = selection;\n    if (anchorNode && focusNode && selection.containsNode(this.#hiddenCopyElement)) {\n      if (this.#getAllTextInProgress || textLayerMode === TextLayerMode.ENABLE_PERMISSIONS) {\n        event.preventDefault();\n        event.stopPropagation();\n        return;\n      }\n      this.#getAllTextInProgress = true;\n      const {\n        classList\n      } = this.viewer;\n      classList.add("copyAll");\n      const ac = new AbortController();\n      window.addEventListener("keydown", ev => this.#interruptCopyCondition = ev.key === "Escape", {\n        signal: ac.signal\n      });\n      this.getAllText().then(async text => {\n        if (text !== null) {\n          await navigator.clipboard.writeText(text);\n        }\n      }).catch(reason => {\n        console.warn(`Something goes wrong when extracting the text: ${reason.message}`);\n      }).finally(() => {\n        this.#getAllTextInProgress = false;\n        this.#interruptCopyCondition = false;\n        ac.abort();\n        classList.remove("copyAll");\n      });\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n  setDocument(pdfDocument) {\n    if (this.pdfDocument) {\n      this.eventBus.dispatch("pagesdestroy", {\n        source: this\n      });\n      this._cancelRendering();\n      this._resetView();\n      this.findController?.setDocument(null);\n      this._scriptingManager?.setDocument(null);\n      this.#annotationEditorUIManager?.destroy();\n      this.#annotationEditorUIManager = null;\n    }\n    this.pdfDocument = pdfDocument;\n    if (!pdfDocument) {\n      return;\n    }\n    const pagesCount = pdfDocument.numPages;\n    const firstPagePromise = pdfDocument.getPage(1);\n    const optionalContentConfigPromise = pdfDocument.getOptionalContentConfig({\n      intent: "display"\n    });\n    const permissionsPromise = this.#enablePermissions ? pdfDocument.getPermissions() : Promise.resolve();\n    const {\n      eventBus,\n      pageColors,\n      viewer\n    } = this;\n    this.#eventAbortController = new AbortController();\n    const {\n      signal\n    } = this.#eventAbortController;\n    if (pagesCount > PagesCountLimit.FORCE_SCROLL_MODE_PAGE) {\n      console.warn("Forcing PAGE-scrolling for performance reasons, given the length of the document.");\n      const mode = this._scrollMode = ScrollMode.PAGE;\n      eventBus.dispatch("scrollmodechanged", {\n        source: this,\n        mode\n      });\n    }\n    this._pagesCapability.promise.then(() => {\n      eventBus.dispatch("pagesloaded", {\n        source: this,\n        pagesCount\n      });\n    }, () => {});\n    const onBeforeDraw = evt => {\n      const pageView = this._pages[evt.pageNumber - 1];\n      if (!pageView) {\n        return;\n      }\n      this.#buffer.push(pageView);\n    };\n    eventBus._on("pagerender", onBeforeDraw, {\n      signal\n    });\n    const onAfterDraw = evt => {\n      if (evt.cssTransform) {\n        return;\n      }\n      this._onePageRenderedCapability.resolve({\n        timestamp: evt.timestamp\n      });\n      eventBus._off("pagerendered", onAfterDraw);\n    };\n    eventBus._on("pagerendered", onAfterDraw, {\n      signal\n    });\n    Promise.all([firstPagePromise, permissionsPromise]).then(([firstPdfPage, permissions]) => {\n      if (pdfDocument !== this.pdfDocument) {\n        return;\n      }\n      this._firstPageCapability.resolve(firstPdfPage);\n      this._optionalContentConfigPromise = optionalContentConfigPromise;\n      const {\n        annotationEditorMode,\n        annotationMode,\n        textLayerMode\n      } = this.#initializePermissions(permissions);\n      if (textLayerMode !== TextLayerMode.DISABLE) {\n        const element = this.#hiddenCopyElement = document.createElement("div");\n        element.id = "hiddenCopyElement";\n        viewer.before(element);\n      }\n      if (typeof AbortSignal.any === "function" && annotationEditorMode !== AnnotationEditorType.DISABLE) {\n        const mode = annotationEditorMode;\n        if (pdfDocument.isPureXfa) {\n          console.warn("Warning: XFA-editing is not implemented.");\n        } else if (isValidAnnotationEditorMode(mode)) {\n          this.#annotationEditorUIManager = new AnnotationEditorUIManager(this.container, viewer, this.#altTextManager, eventBus, pdfDocument, pageColors, this.#annotationEditorHighlightColors, this.#enableHighlightFloatingButton, this.#enableUpdatedAddImage, this.#enableNewAltTextWhenAddingImage, this.#mlManager);\n          eventBus.dispatch("annotationeditoruimanager", {\n            source: this,\n            uiManager: this.#annotationEditorUIManager\n          });\n          if (mode !== AnnotationEditorType.NONE) {\n            if (mode === AnnotationEditorType.STAMP) {\n              this.#mlManager?.loadModel("altText");\n            }\n            this.#annotationEditorUIManager.updateMode(mode);\n          }\n        } else {\n          console.error(`Invalid AnnotationEditor mode: ${mode}`);\n        }\n      }\n      const viewerElement = this._scrollMode === ScrollMode.PAGE ? null : viewer;\n      const scale = this.currentScale;\n      const viewport = firstPdfPage.getViewport({\n        scale: scale * PixelsPerInch.PDF_TO_CSS_UNITS\n      });\n      viewer.style.setProperty("--scale-factor", viewport.scale);\n      if (pageColors?.foreground === "CanvasText" || pageColors?.background === "Canvas") {\n        viewer.style.setProperty("--hcm-highlight-filter", pdfDocument.filterFactory.addHighlightHCMFilter("highlight", "CanvasText", "Canvas", "HighlightText", "Highlight"));\n        viewer.style.setProperty("--hcm-highlight-selected-filter", pdfDocument.filterFactory.addHighlightHCMFilter("highlight_selected", "CanvasText", "Canvas", "HighlightText", "ButtonText"));\n      }\n      for (let pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n        const pageView = new PDFPageView({\n          container: viewerElement,\n          eventBus,\n          id: pageNum,\n          scale,\n          defaultViewport: viewport.clone(),\n          optionalContentConfigPromise,\n          renderingQueue: this.renderingQueue,\n          textLayerMode,\n          annotationMode,\n          imageResourcesPath: this.imageResourcesPath,\n          maxCanvasPixels: this.maxCanvasPixels,\n          pageColors,\n          l10n: this.l10n,\n          layerProperties: this._layerProperties,\n          enableHWA: this.#enableHWA\n        });\n        this._pages.push(pageView);\n      }\n      this._pages[0]?.setPdfPage(firstPdfPage);\n      if (this._scrollMode === ScrollMode.PAGE) {\n        this.#ensurePageViewVisible();\n      } else if (this._spreadMode !== SpreadMode.NONE) {\n        this._updateSpreadMode();\n      }\n      this.#onePageRenderedOrForceFetch(signal).then(async () => {\n        if (pdfDocument !== this.pdfDocument) {\n          return;\n        }\n        this.findController?.setDocument(pdfDocument);\n        this._scriptingManager?.setDocument(pdfDocument);\n        if (this.#hiddenCopyElement) {\n          document.addEventListener("copy", this.#copyCallback.bind(this, textLayerMode), {\n            signal\n          });\n        }\n        if (this.#annotationEditorUIManager) {\n          eventBus.dispatch("annotationeditormodechanged", {\n            source: this,\n            mode: this.#annotationEditorMode\n          });\n        }\n        if (pdfDocument.loadingParams.disableAutoFetch || pagesCount > PagesCountLimit.FORCE_LAZY_PAGE_INIT) {\n          this._pagesCapability.resolve();\n          return;\n        }\n        let getPagesLeft = pagesCount - 1;\n        if (getPagesLeft <= 0) {\n          this._pagesCapability.resolve();\n          return;\n        }\n        for (let pageNum = 2; pageNum <= pagesCount; ++pageNum) {\n          const promise = pdfDocument.getPage(pageNum).then(pdfPage => {\n            const pageView = this._pages[pageNum - 1];\n            if (!pageView.pdfPage) {\n              pageView.setPdfPage(pdfPage);\n            }\n            if (--getPagesLeft === 0) {\n              this._pagesCapability.resolve();\n            }\n          }, reason => {\n            console.error(`Unable to get page ${pageNum} to initialize viewer`, reason);\n            if (--getPagesLeft === 0) {\n              this._pagesCapability.resolve();\n            }\n          });\n          if (pageNum % PagesCountLimit.PAUSE_EAGER_PAGE_INIT === 0) {\n            await promise;\n          }\n        }\n      });\n      eventBus.dispatch("pagesinit", {\n        source: this\n      });\n      pdfDocument.getMetadata().then(({\n        info\n      }) => {\n        if (pdfDocument !== this.pdfDocument) {\n          return;\n        }\n        if (info.Language) {\n          viewer.lang = info.Language;\n        }\n      });\n      if (this.defaultRenderingQueue) {\n        this.update();\n      }\n    }).catch(reason => {\n      console.error("Unable to initialize viewer", reason);\n      this._pagesCapability.reject(reason);\n    });\n  }\n  setPageLabels(labels) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (!labels) {\n      this._pageLabels = null;\n    } else if (!(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)) {\n      this._pageLabels = null;\n      console.error(`setPageLabels: Invalid page labels.`);\n    } else {\n      this._pageLabels = labels;\n    }\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      this._pages[i].setPageLabel(this._pageLabels?.[i] ?? null);\n    }\n  }\n  _resetView() {\n    this._pages = [];\n    this._currentPageNumber = 1;\n    this._currentScale = UNKNOWN_SCALE;\n    this._currentScaleValue = null;\n    this._pageLabels = null;\n    this.#buffer = new PDFPageViewBuffer(DEFAULT_CACHE_SIZE);\n    this._location = null;\n    this._pagesRotation = 0;\n    this._optionalContentConfigPromise = null;\n    this._firstPageCapability = Promise.withResolvers();\n    this._onePageRenderedCapability = Promise.withResolvers();\n    this._pagesCapability = Promise.withResolvers();\n    this._scrollMode = ScrollMode.VERTICAL;\n    this._previousScrollMode = ScrollMode.UNKNOWN;\n    this._spreadMode = SpreadMode.NONE;\n    this.#scrollModePageState = {\n      previousPageNumber: 1,\n      scrollDown: true,\n      pages: []\n    };\n    this.#eventAbortController?.abort();\n    this.#eventAbortController = null;\n    this.viewer.textContent = "";\n    this._updateScrollMode();\n    this.viewer.removeAttribute("lang");\n    this.#hiddenCopyElement?.remove();\n    this.#hiddenCopyElement = null;\n    this.#cleanupSwitchAnnotationEditorMode();\n  }\n  #ensurePageViewVisible() {\n    if (this._scrollMode !== ScrollMode.PAGE) {\n      throw new Error("#ensurePageViewVisible: Invalid scrollMode value.");\n    }\n    const pageNumber = this._currentPageNumber,\n      state = this.#scrollModePageState,\n      viewer = this.viewer;\n    viewer.textContent = "";\n    state.pages.length = 0;\n    if (this._spreadMode === SpreadMode.NONE && !this.isInPresentationMode) {\n      const pageView = this._pages[pageNumber - 1];\n      viewer.append(pageView.div);\n      state.pages.push(pageView);\n    } else {\n      const pageIndexSet = new Set(),\n        parity = this._spreadMode - 1;\n      if (parity === -1) {\n        pageIndexSet.add(pageNumber - 1);\n      } else if (pageNumber % 2 !== parity) {\n        pageIndexSet.add(pageNumber - 1);\n        pageIndexSet.add(pageNumber);\n      } else {\n        pageIndexSet.add(pageNumber - 2);\n        pageIndexSet.add(pageNumber - 1);\n      }\n      const spread = document.createElement("div");\n      spread.className = "spread";\n      if (this.isInPresentationMode) {\n        const dummyPage = document.createElement("div");\n        dummyPage.className = "dummyPage";\n        spread.append(dummyPage);\n      }\n      for (const i of pageIndexSet) {\n        const pageView = this._pages[i];\n        if (!pageView) {\n          continue;\n        }\n        spread.append(pageView.div);\n        state.pages.push(pageView);\n      }\n      viewer.append(spread);\n    }\n    state.scrollDown = pageNumber >= state.previousPageNumber;\n    state.previousPageNumber = pageNumber;\n  }\n  _scrollUpdate() {\n    if (this.pagesCount === 0) {\n      return;\n    }\n    this.update();\n  }\n  #scrollIntoView(pageView, pageSpot = null) {\n    const {\n      div,\n      id\n    } = pageView;\n    if (this._currentPageNumber !== id) {\n      this._setCurrentPageNumber(id);\n    }\n    if (this._scrollMode === ScrollMode.PAGE) {\n      this.#ensurePageViewVisible();\n      this.update();\n    }\n    if (!pageSpot && !this.isInPresentationMode) {\n      const left = div.offsetLeft + div.clientLeft,\n        right = left + div.clientWidth;\n      const {\n        scrollLeft,\n        clientWidth\n      } = this.container;\n      if (this._scrollMode === ScrollMode.HORIZONTAL || left < scrollLeft || right > scrollLeft + clientWidth) {\n        pageSpot = {\n          left: 0,\n          top: 0\n        };\n      }\n    }\n    scrollIntoView(div, pageSpot);\n    if (!this._currentScaleValue && this._location) {\n      this._location = null;\n    }\n  }\n  #isSameScale(newScale) {\n    return newScale === this._currentScale || Math.abs(newScale - this._currentScale) < 1e-15;\n  }\n  #setScaleUpdatePages(newScale, newValue, {\n    noScroll = false,\n    preset = false,\n    drawingDelay = -1,\n    origin = null\n  }) {\n    this._currentScaleValue = newValue.toString();\n    if (this.#isSameScale(newScale)) {\n      if (preset) {\n        this.eventBus.dispatch("scalechanging", {\n          source: this,\n          scale: newScale,\n          presetValue: newValue\n        });\n      }\n      return;\n    }\n    this.viewer.style.setProperty("--scale-factor", newScale * PixelsPerInch.PDF_TO_CSS_UNITS);\n    const postponeDrawing = drawingDelay >= 0 && drawingDelay < 1000;\n    this.refresh(true, {\n      scale: newScale,\n      drawingDelay: postponeDrawing ? drawingDelay : -1\n    });\n    if (postponeDrawing) {\n      this.#scaleTimeoutId = setTimeout(() => {\n        this.#scaleTimeoutId = null;\n        this.refresh();\n      }, drawingDelay);\n    }\n    const previousScale = this._currentScale;\n    this._currentScale = newScale;\n    if (!noScroll) {\n      let page = this._currentPageNumber,\n        dest;\n      if (this._location && !(this.isInPresentationMode || this.isChangingPresentationMode)) {\n        page = this._location.pageNumber;\n        dest = [null, {\n          name: "XYZ"\n        }, this._location.left, this._location.top, null];\n      }\n      this.scrollPageIntoView({\n        pageNumber: page,\n        destArray: dest,\n        allowNegativeOffset: true\n      });\n      if (Array.isArray(origin)) {\n        const scaleDiff = newScale / previousScale - 1;\n        const [top, left] = this.containerTopLeft;\n        this.container.scrollLeft += (origin[0] - left) * scaleDiff;\n        this.container.scrollTop += (origin[1] - top) * scaleDiff;\n      }\n    }\n    this.eventBus.dispatch("scalechanging", {\n      source: this,\n      scale: newScale,\n      presetValue: preset ? newValue : undefined\n    });\n    if (this.defaultRenderingQueue) {\n      this.update();\n    }\n  }\n  get #pageWidthScaleFactor() {\n    if (this._spreadMode !== SpreadMode.NONE && this._scrollMode !== ScrollMode.HORIZONTAL) {\n      return 2;\n    }\n    return 1;\n  }\n  #setScale(value, options) {\n    let scale = parseFloat(value);\n    if (scale > 0) {\n      options.preset = false;\n      this.#setScaleUpdatePages(scale, value, options);\n    } else {\n      const currentPage = this._pages[this._currentPageNumber - 1];\n      if (!currentPage) {\n        return;\n      }\n      let hPadding = SCROLLBAR_PADDING,\n        vPadding = VERTICAL_PADDING;\n      if (this.isInPresentationMode) {\n        hPadding = vPadding = 4;\n        if (this._spreadMode !== SpreadMode.NONE) {\n          hPadding *= 2;\n        }\n      } else if (this.removePageBorders) {\n        hPadding = vPadding = 0;\n      } else if (this._scrollMode === ScrollMode.HORIZONTAL) {\n        [hPadding, vPadding] = [vPadding, hPadding];\n      }\n      const pageWidthScale = (this.container.clientWidth - hPadding) / currentPage.width * currentPage.scale / this.#pageWidthScaleFactor;\n      const pageHeightScale = (this.container.clientHeight - vPadding) / currentPage.height * currentPage.scale;\n      switch (value) {\n        case "page-actual":\n          scale = 1;\n          break;\n        case "page-width":\n          scale = pageWidthScale;\n          break;\n        case "page-height":\n          scale = pageHeightScale;\n          break;\n        case "page-fit":\n          scale = Math.min(pageWidthScale, pageHeightScale);\n          break;\n        case "auto":\n          const horizontalScale = isPortraitOrientation(currentPage) ? pageWidthScale : Math.min(pageHeightScale, pageWidthScale);\n          scale = Math.min(MAX_AUTO_SCALE, horizontalScale);\n          break;\n        default:\n          console.error(`#setScale: "${value}" is an unknown zoom value.`);\n          return;\n      }\n      options.preset = true;\n      this.#setScaleUpdatePages(scale, value, options);\n    }\n  }\n  #resetCurrentPageView() {\n    const pageView = this._pages[this._currentPageNumber - 1];\n    if (this.isInPresentationMode) {\n      this.#setScale(this._currentScaleValue, {\n        noScroll: true\n      });\n    }\n    this.#scrollIntoView(pageView);\n  }\n  pageLabelToPageNumber(label) {\n    if (!this._pageLabels) {\n      return null;\n    }\n    const i = this._pageLabels.indexOf(label);\n    if (i < 0) {\n      return null;\n    }\n    return i + 1;\n  }\n  scrollPageIntoView({\n    pageNumber,\n    destArray = null,\n    allowNegativeOffset = false,\n    ignoreDestinationZoom = false\n  }) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const pageView = Number.isInteger(pageNumber) && this._pages[pageNumber - 1];\n    if (!pageView) {\n      console.error(`scrollPageIntoView: "${pageNumber}" is not a valid pageNumber parameter.`);\n      return;\n    }\n    if (this.isInPresentationMode || !destArray) {\n      this._setCurrentPageNumber(pageNumber, true);\n      return;\n    }\n    let x = 0,\n      y = 0;\n    let width = 0,\n      height = 0,\n      widthScale,\n      heightScale;\n    const changeOrientation = pageView.rotation % 180 !== 0;\n    const pageWidth = (changeOrientation ? pageView.height : pageView.width) / pageView.scale / PixelsPerInch.PDF_TO_CSS_UNITS;\n    const pageHeight = (changeOrientation ? pageView.width : pageView.height) / pageView.scale / PixelsPerInch.PDF_TO_CSS_UNITS;\n    let scale = 0;\n    switch (destArray[1].name) {\n      case "XYZ":\n        x = destArray[2];\n        y = destArray[3];\n        scale = destArray[4];\n        x = x !== null ? x : 0;\n        y = y !== null ? y : pageHeight;\n        break;\n      case "Fit":\n      case "FitB":\n        scale = "page-fit";\n        break;\n      case "FitH":\n      case "FitBH":\n        y = destArray[2];\n        scale = "page-width";\n        if (y === null && this._location) {\n          x = this._location.left;\n          y = this._location.top;\n        } else if (typeof y !== "number" || y < 0) {\n          y = pageHeight;\n        }\n        break;\n      case "FitV":\n      case "FitBV":\n        x = destArray[2];\n        width = pageWidth;\n        height = pageHeight;\n        scale = "page-height";\n        break;\n      case "FitR":\n        x = destArray[2];\n        y = destArray[3];\n        width = destArray[4] - x;\n        height = destArray[5] - y;\n        let hPadding = SCROLLBAR_PADDING,\n          vPadding = VERTICAL_PADDING;\n        if (this.removePageBorders) {\n          hPadding = vPadding = 0;\n        }\n        widthScale = (this.container.clientWidth - hPadding) / width / PixelsPerInch.PDF_TO_CSS_UNITS;\n        heightScale = (this.container.clientHeight - vPadding) / height / PixelsPerInch.PDF_TO_CSS_UNITS;\n        scale = Math.min(Math.abs(widthScale), Math.abs(heightScale));\n        break;\n      default:\n        console.error(`scrollPageIntoView: "${destArray[1].name}" is not a valid destination type.`);\n        return;\n    }\n    if (!ignoreDestinationZoom) {\n      if (scale && scale !== this._currentScale) {\n        this.currentScaleValue = scale;\n      } else if (this._currentScale === UNKNOWN_SCALE) {\n        this.currentScaleValue = DEFAULT_SCALE_VALUE;\n      }\n    }\n    if (scale === "page-fit" && !destArray[4]) {\n      this.#scrollIntoView(pageView);\n      return;\n    }\n    const boundingRect = [pageView.viewport.convertToViewportPoint(x, y), pageView.viewport.convertToViewportPoint(x + width, y + height)];\n    let left = Math.min(boundingRect[0][0], boundingRect[1][0]);\n    let top = Math.min(boundingRect[0][1], boundingRect[1][1]);\n    if (!allowNegativeOffset) {\n      left = Math.max(left, 0);\n      top = Math.max(top, 0);\n    }\n    this.#scrollIntoView(pageView, {\n      left,\n      top\n    });\n  }\n  _updateLocation(firstPage) {\n    const currentScale = this._currentScale;\n    const currentScaleValue = this._currentScaleValue;\n    const normalizedScaleValue = parseFloat(currentScaleValue) === currentScale ? Math.round(currentScale * 10000) / 100 : currentScaleValue;\n    const pageNumber = firstPage.id;\n    const currentPageView = this._pages[pageNumber - 1];\n    const container = this.container;\n    const topLeft = currentPageView.getPagePoint(container.scrollLeft - firstPage.x, container.scrollTop - firstPage.y);\n    const intLeft = Math.round(topLeft[0]);\n    const intTop = Math.round(topLeft[1]);\n    let pdfOpenParams = `#page=${pageNumber}`;\n    if (!this.isInPresentationMode) {\n      pdfOpenParams += `&zoom=${normalizedScaleValue},${intLeft},${intTop}`;\n    }\n    this._location = {\n      pageNumber,\n      scale: normalizedScaleValue,\n      top: intTop,\n      left: intLeft,\n      rotation: this._pagesRotation,\n      pdfOpenParams\n    };\n  }\n  update() {\n    const visible = this._getVisiblePages();\n    const visiblePages = visible.views,\n      numVisiblePages = visiblePages.length;\n    if (numVisiblePages === 0) {\n      return;\n    }\n    const newCacheSize = Math.max(DEFAULT_CACHE_SIZE, 2 * numVisiblePages + 1);\n    this.#buffer.resize(newCacheSize, visible.ids);\n    this.renderingQueue.renderHighestPriority(visible);\n    const isSimpleLayout = this._spreadMode === SpreadMode.NONE && (this._scrollMode === ScrollMode.PAGE || this._scrollMode === ScrollMode.VERTICAL);\n    const currentId = this._currentPageNumber;\n    let stillFullyVisible = false;\n    for (const page of visiblePages) {\n      if (page.percent < 100) {\n        break;\n      }\n      if (page.id === currentId && isSimpleLayout) {\n        stillFullyVisible = true;\n        break;\n      }\n    }\n    this._setCurrentPageNumber(stillFullyVisible ? currentId : visiblePages[0].id);\n    this._updateLocation(visible.first);\n    this.eventBus.dispatch("updateviewarea", {\n      source: this,\n      location: this._location\n    });\n  }\n  #switchToEditAnnotationMode() {\n    const visible = this._getVisiblePages();\n    const pagesToRefresh = [];\n    const {\n      ids,\n      views\n    } = visible;\n    for (const page of views) {\n      const {\n        view\n      } = page;\n      if (!view.hasEditableAnnotations()) {\n        ids.delete(view.id);\n        continue;\n      }\n      pagesToRefresh.push(page);\n    }\n    if (pagesToRefresh.length === 0) {\n      return null;\n    }\n    this.renderingQueue.renderHighestPriority({\n      first: pagesToRefresh[0],\n      last: pagesToRefresh.at(-1),\n      views: pagesToRefresh,\n      ids\n    });\n    return ids;\n  }\n  containsElement(element) {\n    return this.container.contains(element);\n  }\n  focus() {\n    this.container.focus();\n  }\n  get _isContainerRtl() {\n    return getComputedStyle(this.container).direction === "rtl";\n  }\n  get isInPresentationMode() {\n    return this.presentationModeState === PresentationModeState.FULLSCREEN;\n  }\n  get isChangingPresentationMode() {\n    return this.presentationModeState === PresentationModeState.CHANGING;\n  }\n  get isHorizontalScrollbarEnabled() {\n    return this.isInPresentationMode ? false : this.container.scrollWidth > this.container.clientWidth;\n  }\n  get isVerticalScrollbarEnabled() {\n    return this.isInPresentationMode ? false : this.container.scrollHeight > this.container.clientHeight;\n  }\n  _getVisiblePages() {\n    const views = this._scrollMode === ScrollMode.PAGE ? this.#scrollModePageState.pages : this._pages,\n      horizontal = this._scrollMode === ScrollMode.HORIZONTAL,\n      rtl = horizontal && this._isContainerRtl;\n    return getVisibleElements({\n      scrollEl: this.container,\n      views,\n      sortByVisibility: true,\n      horizontal,\n      rtl\n    });\n  }\n  cleanup() {\n    for (const pageView of this._pages) {\n      if (pageView.renderingState !== RenderingStates.FINISHED) {\n        pageView.reset();\n      }\n    }\n  }\n  _cancelRendering() {\n    for (const pageView of this._pages) {\n      pageView.cancelRendering();\n    }\n  }\n  async #ensurePdfPageLoaded(pageView) {\n    if (pageView.pdfPage) {\n      return pageView.pdfPage;\n    }\n    try {\n      const pdfPage = await this.pdfDocument.getPage(pageView.id);\n      if (!pageView.pdfPage) {\n        pageView.setPdfPage(pdfPage);\n      }\n      return pdfPage;\n    } catch (reason) {\n      console.error("Unable to get page for page view", reason);\n      return null;\n    }\n  }\n  #getScrollAhead(visible) {\n    if (visible.first?.id === 1) {\n      return true;\n    } else if (visible.last?.id === this.pagesCount) {\n      return false;\n    }\n    switch (this._scrollMode) {\n      case ScrollMode.PAGE:\n        return this.#scrollModePageState.scrollDown;\n      case ScrollMode.HORIZONTAL:\n        return this.scroll.right;\n    }\n    return this.scroll.down;\n  }\n  forceRendering(currentlyVisiblePages) {\n    const visiblePages = currentlyVisiblePages || this._getVisiblePages();\n    const scrollAhead = this.#getScrollAhead(visiblePages);\n    const preRenderExtra = this._spreadMode !== SpreadMode.NONE && this._scrollMode !== ScrollMode.HORIZONTAL;\n    const pageView = this.renderingQueue.getHighestPriority(visiblePages, this._pages, scrollAhead, preRenderExtra);\n    if (pageView) {\n      this.#ensurePdfPageLoaded(pageView).then(() => {\n        this.renderingQueue.renderView(pageView);\n      });\n      return true;\n    }\n    return false;\n  }\n  get hasEqualPageSizes() {\n    const firstPageView = this._pages[0];\n    for (let i = 1, ii = this._pages.length; i < ii; ++i) {\n      const pageView = this._pages[i];\n      if (pageView.width !== firstPageView.width || pageView.height !== firstPageView.height) {\n        return false;\n      }\n    }\n    return true;\n  }\n  getPagesOverview() {\n    let initialOrientation;\n    return this._pages.map(pageView => {\n      const viewport = pageView.pdfPage.getViewport({\n        scale: 1\n      });\n      const orientation = isPortraitOrientation(viewport);\n      if (initialOrientation === undefined) {\n        initialOrientation = orientation;\n      } else if (this.enablePrintAutoRotate && orientation !== initialOrientation) {\n        return {\n          width: viewport.height,\n          height: viewport.width,\n          rotation: (viewport.rotation - 90) % 360\n        };\n      }\n      return {\n        width: viewport.width,\n        height: viewport.height,\n        rotation: viewport.rotation\n      };\n    });\n  }\n  get optionalContentConfigPromise() {\n    if (!this.pdfDocument) {\n      return Promise.resolve(null);\n    }\n    if (!this._optionalContentConfigPromise) {\n      console.error("optionalContentConfigPromise: Not initialized yet.");\n      return this.pdfDocument.getOptionalContentConfig({\n        intent: "display"\n      });\n    }\n    return this._optionalContentConfigPromise;\n  }\n  set optionalContentConfigPromise(promise) {\n    if (!(promise instanceof Promise)) {\n      throw new Error(`Invalid optionalContentConfigPromise: ${promise}`);\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (!this._optionalContentConfigPromise) {\n      return;\n    }\n    this._optionalContentConfigPromise = promise;\n    this.refresh(false, {\n      optionalContentConfigPromise: promise\n    });\n    this.eventBus.dispatch("optionalcontentconfigchanged", {\n      source: this,\n      promise\n    });\n  }\n  get scrollMode() {\n    return this._scrollMode;\n  }\n  set scrollMode(mode) {\n    if (this._scrollMode === mode) {\n      return;\n    }\n    if (!isValidScrollMode(mode)) {\n      throw new Error(`Invalid scroll mode: ${mode}`);\n    }\n    if (this.pagesCount > PagesCountLimit.FORCE_SCROLL_MODE_PAGE) {\n      return;\n    }\n    this._previousScrollMode = this._scrollMode;\n    this._scrollMode = mode;\n    this.eventBus.dispatch("scrollmodechanged", {\n      source: this,\n      mode\n    });\n    this._updateScrollMode(this._currentPageNumber);\n  }\n  _updateScrollMode(pageNumber = null) {\n    const scrollMode = this._scrollMode,\n      viewer = this.viewer;\n    viewer.classList.toggle("scrollHorizontal", scrollMode === ScrollMode.HORIZONTAL);\n    viewer.classList.toggle("scrollWrapped", scrollMode === ScrollMode.WRAPPED);\n    if (!this.pdfDocument || !pageNumber) {\n      return;\n    }\n    if (scrollMode === ScrollMode.PAGE) {\n      this.#ensurePageViewVisible();\n    } else if (this._previousScrollMode === ScrollMode.PAGE) {\n      this._updateSpreadMode();\n    }\n    if (this._currentScaleValue && isNaN(this._currentScaleValue)) {\n      this.#setScale(this._currentScaleValue, {\n        noScroll: true\n      });\n    }\n    this._setCurrentPageNumber(pageNumber, true);\n    this.update();\n  }\n  get spreadMode() {\n    return this._spreadMode;\n  }\n  set spreadMode(mode) {\n    if (this._spreadMode === mode) {\n      return;\n    }\n    if (!isValidSpreadMode(mode)) {\n      throw new Error(`Invalid spread mode: ${mode}`);\n    }\n    this._spreadMode = mode;\n    this.eventBus.dispatch("spreadmodechanged", {\n      source: this,\n      mode\n    });\n    this._updateSpreadMode(this._currentPageNumber);\n  }\n  _updateSpreadMode(pageNumber = null) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const viewer = this.viewer,\n      pages = this._pages;\n    if (this._scrollMode === ScrollMode.PAGE) {\n      this.#ensurePageViewVisible();\n    } else {\n      viewer.textContent = "";\n      if (this._spreadMode === SpreadMode.NONE) {\n        for (const pageView of this._pages) {\n          viewer.append(pageView.div);\n        }\n      } else {\n        const parity = this._spreadMode - 1;\n        let spread = null;\n        for (let i = 0, ii = pages.length; i < ii; ++i) {\n          if (spread === null) {\n            spread = document.createElement("div");\n            spread.className = "spread";\n            viewer.append(spread);\n          } else if (i % 2 === parity) {\n            spread = spread.cloneNode(false);\n            viewer.append(spread);\n          }\n          spread.append(pages[i].div);\n        }\n      }\n    }\n    if (!pageNumber) {\n      return;\n    }\n    if (this._currentScaleValue && isNaN(this._currentScaleValue)) {\n      this.#setScale(this._currentScaleValue, {\n        noScroll: true\n      });\n    }\n    this._setCurrentPageNumber(pageNumber, true);\n    this.update();\n  }\n  _getPageAdvance(currentPageNumber, previous = false) {\n    switch (this._scrollMode) {\n      case ScrollMode.WRAPPED:\n        {\n          const {\n              views\n            } = this._getVisiblePages(),\n            pageLayout = new Map();\n          for (const {\n            id,\n            y,\n            percent,\n            widthPercent\n          } of views) {\n            if (percent === 0 || widthPercent < 100) {\n              continue;\n            }\n            let yArray = pageLayout.get(y);\n            if (!yArray) {\n              pageLayout.set(y, yArray ||= []);\n            }\n            yArray.push(id);\n          }\n          for (const yArray of pageLayout.values()) {\n            const currentIndex = yArray.indexOf(currentPageNumber);\n            if (currentIndex === -1) {\n              continue;\n            }\n            const numPages = yArray.length;\n            if (numPages === 1) {\n              break;\n            }\n            if (previous) {\n              for (let i = currentIndex - 1, ii = 0; i >= ii; i--) {\n                const currentId = yArray[i],\n                  expectedId = yArray[i + 1] - 1;\n                if (currentId < expectedId) {\n                  return currentPageNumber - expectedId;\n                }\n              }\n            } else {\n              for (let i = currentIndex + 1, ii = numPages; i < ii; i++) {\n                const currentId = yArray[i],\n                  expectedId = yArray[i - 1] + 1;\n                if (currentId > expectedId) {\n                  return expectedId - currentPageNumber;\n                }\n              }\n            }\n            if (previous) {\n              const firstId = yArray[0];\n              if (firstId < currentPageNumber) {\n                return currentPageNumber - firstId + 1;\n              }\n            } else {\n              const lastId = yArray[numPages - 1];\n              if (lastId > currentPageNumber) {\n                return lastId - currentPageNumber + 1;\n              }\n            }\n            break;\n          }\n          break;\n        }\n      case ScrollMode.HORIZONTAL:\n        {\n          break;\n        }\n      case ScrollMode.PAGE:\n      case ScrollMode.VERTICAL:\n        {\n          if (this._spreadMode === SpreadMode.NONE) {\n            break;\n          }\n          const parity = this._spreadMode - 1;\n          if (previous && currentPageNumber % 2 !== parity) {\n            break;\n          } else if (!previous && currentPageNumber % 2 === parity) {\n            break;\n          }\n          const {\n              views\n            } = this._getVisiblePages(),\n            expectedId = previous ? currentPageNumber - 1 : currentPageNumber + 1;\n          for (const {\n            id,\n            percent,\n            widthPercent\n          } of views) {\n            if (id !== expectedId) {\n              continue;\n            }\n            if (percent > 0 && widthPercent === 100) {\n              return 2;\n            }\n            break;\n          }\n          break;\n        }\n    }\n    return 1;\n  }\n  nextPage() {\n    const currentPageNumber = this._currentPageNumber,\n      pagesCount = this.pagesCount;\n    if (currentPageNumber >= pagesCount) {\n      return false;\n    }\n    const advance = this._getPageAdvance(currentPageNumber, false) || 1;\n    this.currentPageNumber = Math.min(currentPageNumber + advance, pagesCount);\n    return true;\n  }\n  previousPage() {\n    const currentPageNumber = this._currentPageNumber;\n    if (currentPageNumber <= 1) {\n      return false;\n    }\n    const advance = this._getPageAdvance(currentPageNumber, true) || 1;\n    this.currentPageNumber = Math.max(currentPageNumber - advance, 1);\n    return true;\n  }\n  updateScale({\n    drawingDelay,\n    scaleFactor = null,\n    steps = null,\n    origin\n  }) {\n    if (steps === null && scaleFactor === null) {\n      throw new Error("Invalid updateScale options: either `steps` or `scaleFactor` must be provided.");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    let newScale = this._currentScale;\n    if (scaleFactor > 0 && scaleFactor !== 1) {\n      newScale = Math.round(newScale * scaleFactor * 100) / 100;\n    } else if (steps) {\n      const delta = steps > 0 ? DEFAULT_SCALE_DELTA : 1 / DEFAULT_SCALE_DELTA;\n      const round = steps > 0 ? Math.ceil : Math.floor;\n      steps = Math.abs(steps);\n      do {\n        newScale = round((newScale * delta).toFixed(2) * 10) / 10;\n      } while (--steps > 0);\n    }\n    newScale = Math.max(MIN_SCALE, Math.min(MAX_SCALE, newScale));\n    this.#setScale(newScale, {\n      noScroll: false,\n      drawingDelay,\n      origin\n    });\n  }\n  increaseScale(options = {}) {\n    this.updateScale({\n      ...options,\n      steps: options.steps ?? 1\n    });\n  }\n  decreaseScale(options = {}) {\n    this.updateScale({\n      ...options,\n      steps: -(options.steps ?? 1)\n    });\n  }\n  #updateContainerHeightCss(height = this.container.clientHeight) {\n    if (height !== this.#previousContainerHeight) {\n      this.#previousContainerHeight = height;\n      docStyle.setProperty("--viewer-container-height", `${height}px`);\n    }\n  }\n  #resizeObserverCallback(entries) {\n    for (const entry of entries) {\n      if (entry.target === this.container) {\n        this.#updateContainerHeightCss(Math.floor(entry.borderBoxSize[0].blockSize));\n        this.#containerTopLeft = null;\n        break;\n      }\n    }\n  }\n  get containerTopLeft() {\n    return this.#containerTopLeft ||= [this.container.offsetTop, this.container.offsetLeft];\n  }\n  #cleanupSwitchAnnotationEditorMode() {\n    if (this.#onPageRenderedCallback) {\n      this.eventBus._off("pagerendered", this.#onPageRenderedCallback);\n      this.#onPageRenderedCallback = null;\n    }\n    if (this.#switchAnnotationEditorModeTimeoutId !== null) {\n      clearTimeout(this.#switchAnnotationEditorModeTimeoutId);\n      this.#switchAnnotationEditorModeTimeoutId = null;\n    }\n  }\n  get annotationEditorMode() {\n    return this.#annotationEditorUIManager ? this.#annotationEditorMode : AnnotationEditorType.DISABLE;\n  }\n  set annotationEditorMode({\n    mode,\n    editId = null,\n    isFromKeyboard = false\n  }) {\n    if (!this.#annotationEditorUIManager) {\n      throw new Error(`The AnnotationEditor is not enabled.`);\n    }\n    if (this.#annotationEditorMode === mode) {\n      return;\n    }\n    if (!isValidAnnotationEditorMode(mode)) {\n      throw new Error(`Invalid AnnotationEditor mode: ${mode}`);\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (mode === AnnotationEditorType.STAMP) {\n      this.#mlManager?.loadModel("altText");\n    }\n    const {\n      eventBus\n    } = this;\n    const updater = () => {\n      this.#cleanupSwitchAnnotationEditorMode();\n      this.#annotationEditorMode = mode;\n      this.#annotationEditorUIManager.updateMode(mode, editId, isFromKeyboard);\n      eventBus.dispatch("annotationeditormodechanged", {\n        source: this,\n        mode\n      });\n    };\n    if (mode === AnnotationEditorType.NONE || this.#annotationEditorMode === AnnotationEditorType.NONE) {\n      const isEditing = mode !== AnnotationEditorType.NONE;\n      if (!isEditing) {\n        this.pdfDocument.annotationStorage.resetModifiedIds();\n      }\n      for (const pageView of this._pages) {\n        pageView.toggleEditingMode(isEditing);\n      }\n      const idsToRefresh = this.#switchToEditAnnotationMode();\n      if (isEditing && idsToRefresh) {\n        this.#cleanupSwitchAnnotationEditorMode();\n        this.#onPageRenderedCallback = ({\n          pageNumber\n        }) => {\n          idsToRefresh.delete(pageNumber);\n          if (idsToRefresh.size === 0) {\n            this.#switchAnnotationEditorModeTimeoutId = setTimeout(updater, 0);\n          }\n        };\n        const {\n          signal\n        } = this.#eventAbortController;\n        eventBus._on("pagerendered", this.#onPageRenderedCallback, {\n          signal\n        });\n        return;\n      }\n    }\n    updater();\n  }\n  refresh(noUpdate = false, updateArgs = Object.create(null)) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    for (const pageView of this._pages) {\n      pageView.update(updateArgs);\n    }\n    if (this.#scaleTimeoutId !== null) {\n      clearTimeout(this.#scaleTimeoutId);\n      this.#scaleTimeoutId = null;\n    }\n    if (!noUpdate) {\n      this.update();\n    }\n  }\n}\n\n;// CONCATENATED MODULE:./secondary_toolbar.js\n\n\nclass SecondaryToolbar {\n  #opts;\n  constructor(options, eventBus) {\n    this.#opts = options;\n    const buttons = [{\n      element: options.presentationModeButton,\n      eventName: "presentationmode",\n      close: true\n    }, {\n      element: options.printButton,\n      eventName: "print",\n      close: true\n    }, {\n      element: options.downloadButton,\n      eventName: "download",\n      close: true\n    }, {\n      element: options.viewBookmarkButton,\n      eventName: null,\n      close: true\n    }, {\n      element: options.firstPageButton,\n      eventName: "firstpage",\n      close: true\n    }, {\n      element: options.lastPageButton,\n      eventName: "lastpage",\n      close: true\n    }, {\n      element: options.pageRotateCwButton,\n      eventName: "rotatecw",\n      close: false\n    }, {\n      element: options.pageRotateCcwButton,\n      eventName: "rotateccw",\n      close: false\n    }, {\n      element: options.cursorSelectToolButton,\n      eventName: "switchcursortool",\n      eventDetails: {\n        tool: CursorTool.SELECT\n      },\n      close: true\n    }, {\n      element: options.cursorHandToolButton,\n      eventName: "switchcursortool",\n      eventDetails: {\n        tool: CursorTool.HAND\n      },\n      close: true\n    }, {\n      element: options.scrollPageButton,\n      eventName: "switchscrollmode",\n      eventDetails: {\n        mode: ScrollMode.PAGE\n      },\n      close: true\n    }, {\n      element: options.scrollVerticalButton,\n      eventName: "switchscrollmode",\n      eventDetails: {\n        mode: ScrollMode.VERTICAL\n      },\n      close: true\n    }, {\n      element: options.scrollHorizontalButton,\n      eventName: "switchscrollmode",\n      eventDetails: {\n        mode: ScrollMode.HORIZONTAL\n      },\n      close: true\n    }, {\n      element: options.scrollWrappedButton,\n      eventName: "switchscrollmode",\n      eventDetails: {\n        mode: ScrollMode.WRAPPED\n      },\n      close: true\n    }, {\n      element: options.spreadNoneButton,\n      eventName: "switchspreadmode",\n      eventDetails: {\n        mode: SpreadMode.NONE\n      },\n      close: true\n    }, {\n      element: options.spreadOddButton,\n      eventName: "switchspreadmode",\n      eventDetails: {\n        mode: SpreadMode.ODD\n      },\n      close: true\n    }, {\n      element: options.spreadEvenButton,\n      eventName: "switchspreadmode",\n      eventDetails: {\n        mode: SpreadMode.EVEN\n      },\n      close: true\n    }, {\n      element: options.imageAltTextSettingsButton,\n      eventName: "imagealttextsettings",\n      close: true\n    }, {\n      element: options.documentPropertiesButton,\n      eventName: "documentproperties",\n      close: true\n    }];\n    buttons.push({\n      element: options.openFileButton,\n      eventName: "openfile",\n      close: true\n    });\n    this.eventBus = eventBus;\n    this.opened = false;\n    this.#bindListeners(buttons);\n    this.reset();\n  }\n  get isOpen() {\n    return this.opened;\n  }\n  setPageNumber(pageNumber) {\n    this.pageNumber = pageNumber;\n    this.#updateUIState();\n  }\n  setPagesCount(pagesCount) {\n    this.pagesCount = pagesCount;\n    this.#updateUIState();\n  }\n  reset() {\n    this.pageNumber = 0;\n    this.pagesCount = 0;\n    this.#updateUIState();\n    this.eventBus.dispatch("switchcursortool", {\n      source: this,\n      reset: true\n    });\n    this.#scrollModeChanged({\n      mode: ScrollMode.VERTICAL\n    });\n    this.#spreadModeChanged({\n      mode: SpreadMode.NONE\n    });\n  }\n  #updateUIState() {\n    const {\n      firstPageButton,\n      lastPageButton,\n      pageRotateCwButton,\n      pageRotateCcwButton\n    } = this.#opts;\n    firstPageButton.disabled = this.pageNumber <= 1;\n    lastPageButton.disabled = this.pageNumber >= this.pagesCount;\n    pageRotateCwButton.disabled = this.pagesCount === 0;\n    pageRotateCcwButton.disabled = this.pagesCount === 0;\n  }\n  #bindListeners(buttons) {\n    const {\n      eventBus\n    } = this;\n    const {\n      toggleButton\n    } = this.#opts;\n    toggleButton.addEventListener("click", this.toggle.bind(this));\n    for (const {\n      element,\n      eventName,\n      close,\n      eventDetails\n    } of buttons) {\n      element.addEventListener("click", evt => {\n        if (eventName !== null) {\n          eventBus.dispatch(eventName, {\n            source: this,\n            ...eventDetails\n          });\n        }\n        if (close) {\n          this.close();\n        }\n        eventBus.dispatch("reporttelemetry", {\n          source: this,\n          details: {\n            type: "buttons",\n            data: {\n              id: element.id\n            }\n          }\n        });\n      });\n    }\n    eventBus._on("cursortoolchanged", this.#cursorToolChanged.bind(this));\n    eventBus._on("scrollmodechanged", this.#scrollModeChanged.bind(this));\n    eventBus._on("spreadmodechanged", this.#spreadModeChanged.bind(this));\n  }\n  #cursorToolChanged({\n    tool\n  }) {\n    const {\n      cursorSelectToolButton,\n      cursorHandToolButton\n    } = this.#opts;\n    toggleCheckedBtn(cursorSelectToolButton, tool === CursorTool.SELECT);\n    toggleCheckedBtn(cursorHandToolButton, tool === CursorTool.HAND);\n  }\n  #scrollModeChanged({\n    mode\n  }) {\n    const {\n      scrollPageButton,\n      scrollVerticalButton,\n      scrollHorizontalButton,\n      scrollWrappedButton,\n      spreadNoneButton,\n      spreadOddButton,\n      spreadEvenButton\n    } = this.#opts;\n    toggleCheckedBtn(scrollPageButton, mode === ScrollMode.PAGE);\n    toggleCheckedBtn(scrollVerticalButton, mode === ScrollMode.VERTICAL);\n    toggleCheckedBtn(scrollHorizontalButton, mode === ScrollMode.HORIZONTAL);\n    toggleCheckedBtn(scrollWrappedButton, mode === ScrollMode.WRAPPED);\n    const forceScrollModePage = this.pagesCount > PagesCountLimit.FORCE_SCROLL_MODE_PAGE;\n    scrollPageButton.disabled = forceScrollModePage;\n    scrollVerticalButton.disabled = forceScrollModePage;\n    scrollHorizontalButton.disabled = forceScrollModePage;\n    scrollWrappedButton.disabled = forceScrollModePage;\n    const isHorizontal = mode === ScrollMode.HORIZONTAL;\n    spreadNoneButton.disabled = isHorizontal;\n    spreadOddButton.disabled = isHorizontal;\n    spreadEvenButton.disabled = isHorizontal;\n  }\n  #spreadModeChanged({\n    mode\n  }) {\n    const {\n      spreadNoneButton,\n      spreadOddButton,\n      spreadEvenButton\n    } = this.#opts;\n    toggleCheckedBtn(spreadNoneButton, mode === SpreadMode.NONE);\n    toggleCheckedBtn(spreadOddButton, mode === SpreadMode.ODD);\n    toggleCheckedBtn(spreadEvenButton, mode === SpreadMode.EVEN);\n  }\n  open() {\n    if (this.opened) {\n      return;\n    }\n    this.opened = true;\n    const {\n      toggleButton,\n      toolbar\n    } = this.#opts;\n    toggleExpandedBtn(toggleButton, true, toolbar);\n  }\n  close() {\n    if (!this.opened) {\n      return;\n    }\n    this.opened = false;\n    const {\n      toggleButton,\n      toolbar\n    } = this.#opts;\n    toggleExpandedBtn(toggleButton, false, toolbar);\n  }\n  toggle() {\n    if (this.opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n}\n\n;// CONCATENATED MODULE:./toolbar.js\n\n\nclass Toolbar {\n  #opts;\n  constructor(options, eventBus, toolbarDensity = 0) {\n    this.#opts = options;\n    this.eventBus = eventBus;\n    const buttons = [{\n      element: options.previous,\n      eventName: "previouspage"\n    }, {\n      element: options.next,\n      eventName: "nextpage"\n    }, {\n      element: options.zoomIn,\n      eventName: "zoomin"\n    }, {\n      element: options.zoomOut,\n      eventName: "zoomout"\n    }, {\n      element: options.print,\n      eventName: "print"\n    }, {\n      element: options.download,\n      eventName: "download"\n    }, {\n      element: options.upload,\n      eventName: "upload"\n    }, {\n      element: options.editorFreeTextButton,\n      eventName: "switchannotationeditormode",\n      eventDetails: {\n        get mode() {\n          const {\n            classList\n          } = options.editorFreeTextButton;\n          return classList.contains("toggled") ? AnnotationEditorType.NONE : AnnotationEditorType.FREETEXT;\n        }\n      }\n    }, {\n      element: options.editorHighlightButton,\n      eventName: "switchannotationeditormode",\n      eventDetails: {\n        get mode() {\n          const {\n            classList\n          } = options.editorHighlightButton;\n          return classList.contains("toggled") ? AnnotationEditorType.NONE : AnnotationEditorType.HIGHLIGHT;\n        }\n      }\n    }, {\n      element: options.editorInkButton,\n      eventName: "switchannotationeditormode",\n      eventDetails: {\n        get mode() {\n          const {\n            classList\n          } = options.editorInkButton;\n          return classList.contains("toggled") ? AnnotationEditorType.NONE : AnnotationEditorType.INK;\n        }\n      }\n    }, {\n      element: options.editorStampButton,\n      eventName: "switchannotationeditormode",\n      eventDetails: {\n        get mode() {\n          const {\n            classList\n          } = options.editorStampButton;\n          return classList.contains("toggled") ? AnnotationEditorType.NONE : AnnotationEditorType.STAMP;\n        }\n      },\n      telemetry: {\n        type: "editing",\n        data: {\n          action: "pdfjs.image.icon_click"\n        }\n      }\n    }];\n    this.#bindListeners(buttons);\n    this.#updateToolbarDensity({\n      value: toolbarDensity\n    });\n    this.reset();\n  }\n  #updateToolbarDensity() {}\n  #setAnnotationEditorUIManager(uiManager, parentContainer) {\n    const colorPicker = new ColorPicker({\n      uiManager\n    });\n    uiManager.setMainHighlightColorPicker(colorPicker);\n    parentContainer.append(colorPicker.renderMainDropdown());\n  }\n  setPageNumber(pageNumber, pageLabel) {\n    this.pageNumber = pageNumber;\n    this.pageLabel = pageLabel;\n    this.#updateUIState(false);\n  }\n  setPagesCount(pagesCount, hasPageLabels) {\n    this.pagesCount = pagesCount;\n    this.hasPageLabels = hasPageLabels;\n    this.#updateUIState(true);\n  }\n  setPageScale(pageScaleValue, pageScale) {\n    this.pageScaleValue = (pageScaleValue || pageScale).toString();\n    this.pageScale = pageScale;\n    this.#updateUIState(false);\n  }\n  reset() {\n    this.pageNumber = 0;\n    this.pageLabel = null;\n    this.hasPageLabels = false;\n    this.pagesCount = 0;\n    this.pageScaleValue = DEFAULT_SCALE_VALUE;\n    this.pageScale = DEFAULT_SCALE;\n    this.#updateUIState(true);\n    this.updateLoadingIndicatorState();\n    this.#editorModeChanged({\n      mode: AnnotationEditorType.DISABLE\n    });\n  }\n  #bindListeners(buttons) {\n    const {\n      eventBus\n    } = this;\n    const {\n      editorHighlightColorPicker,\n      editorHighlightButton,\n      pageNumber,\n      scaleSelect\n    } = this.#opts;\n    const self = this;\n    for (const {\n      element,\n      eventName,\n      eventDetails,\n      telemetry\n    } of buttons) {\n      element.addEventListener("click", evt => {\n        if (eventName !== null) {\n          eventBus.dispatch(eventName, {\n            source: this,\n            ...eventDetails,\n            isFromKeyboard: evt.detail === 0\n          });\n        }\n        if (telemetry) {\n          eventBus.dispatch("reporttelemetry", {\n            source: this,\n            details: telemetry\n          });\n        }\n      });\n    }\n    pageNumber.addEventListener("click", function () {\n      this.select();\n    });\n    pageNumber.addEventListener("change", function () {\n      eventBus.dispatch("pagenumberchanged", {\n        source: self,\n        value: this.value\n      });\n    });\n    scaleSelect.addEventListener("change", function () {\n      if (this.value === "custom") {\n        return;\n      }\n      eventBus.dispatch("scalechanged", {\n        source: self,\n        value: this.value\n      });\n    });\n    scaleSelect.addEventListener("click", function ({\n      target\n    }) {\n      if (this.value === self.pageScaleValue && target.tagName.toUpperCase() === "OPTION") {\n        this.blur();\n      }\n    });\n    scaleSelect.oncontextmenu = noContextMenu;\n    eventBus._on("annotationeditormodechanged", this.#editorModeChanged.bind(this));\n    eventBus._on("showannotationeditorui", ({\n      mode\n    }) => {\n      switch (mode) {\n        case AnnotationEditorType.HIGHLIGHT:\n          editorHighlightButton.click();\n          break;\n      }\n    });\n    eventBus._on("toolbardensity", this.#updateToolbarDensity.bind(this));\n    if (editorHighlightColorPicker) {\n      eventBus._on("annotationeditoruimanager", ({\n        uiManager\n      }) => {\n        this.#setAnnotationEditorUIManager(uiManager, editorHighlightColorPicker);\n      }, {\n        once: true\n      });\n    }\n  }\n  #editorModeChanged({\n    mode\n  }) {\n    const {\n      editorFreeTextButton,\n      editorFreeTextParamsToolbar,\n      editorHighlightButton,\n      editorHighlightParamsToolbar,\n      editorInkButton,\n      editorInkParamsToolbar,\n      editorStampButton,\n      editorStampParamsToolbar\n    } = this.#opts;\n    toggleCheckedBtn(editorFreeTextButton, mode === AnnotationEditorType.FREETEXT, editorFreeTextParamsToolbar);\n    toggleCheckedBtn(editorHighlightButton, mode === AnnotationEditorType.HIGHLIGHT, editorHighlightParamsToolbar);\n    toggleCheckedBtn(editorInkButton, mode === AnnotationEditorType.INK, editorInkParamsToolbar);\n    toggleCheckedBtn(editorStampButton, mode === AnnotationEditorType.STAMP, editorStampParamsToolbar);\n    const isDisable = mode === AnnotationEditorType.DISABLE;\n    editorFreeTextButton.disabled = isDisable;\n    editorHighlightButton.disabled = isDisable;\n    editorInkButton.disabled = isDisable;\n    editorStampButton.disabled = isDisable;\n  }\n  #updateUIState(resetNumPages = false) {\n    const {\n      pageNumber,\n      pagesCount,\n      pageScaleValue,\n      pageScale\n    } = this;\n    const opts = this.#opts;\n    if (resetNumPages) {\n      if (this.hasPageLabels) {\n        opts.pageNumber.type = "text";\n        opts.numPages.setAttribute("data-l10n-id", "pdfjs-page-of-pages");\n      } else {\n        opts.pageNumber.type = "number";\n        opts.numPages.setAttribute("data-l10n-id", "pdfjs-of-pages");\n        opts.numPages.setAttribute("data-l10n-args", JSON.stringify({\n          pagesCount\n        }));\n      }\n      opts.pageNumber.max = pagesCount;\n    }\n    if (this.hasPageLabels) {\n      opts.pageNumber.value = this.pageLabel;\n      opts.numPages.setAttribute("data-l10n-args", JSON.stringify({\n        pageNumber,\n        pagesCount\n      }));\n    } else {\n      opts.pageNumber.value = pageNumber;\n    }\n    opts.previous.disabled = pageNumber <= 1;\n    opts.next.disabled = pageNumber >= pagesCount;\n    opts.zoomOut.disabled = pageScale <= MIN_SCALE;\n    opts.zoomIn.disabled = pageScale >= MAX_SCALE;\n    let predefinedValueFound = false;\n    for (const option of opts.scaleSelect.options) {\n      if (option.value !== pageScaleValue) {\n        option.selected = false;\n        continue;\n      }\n      option.selected = true;\n      predefinedValueFound = true;\n    }\n    if (!predefinedValueFound) {\n      opts.customScaleOption.selected = true;\n      opts.customScaleOption.setAttribute("data-l10n-args", JSON.stringify({\n        scale: Math.round(pageScale * 10000) / 100\n      }));\n    }\n  }\n  updateLoadingIndicatorState(loading = false) {\n    const {\n      pageNumber\n    } = this.#opts;\n    pageNumber.classList.toggle("loading", loading);\n  }\n}\n\n;// CONCATENATED MODULE:./view_history.js\nconst DEFAULT_VIEW_HISTORY_CACHE_SIZE = 20;\nclass ViewHistory {\n  constructor(fingerprint, cacheSize = DEFAULT_VIEW_HISTORY_CACHE_SIZE) {\n    this.fingerprint = fingerprint;\n    this.cacheSize = cacheSize;\n    this._initializedPromise = this._readFromStorage().then(databaseStr => {\n      const database = JSON.parse(databaseStr || "{}");\n      let index = -1;\n      if (!Array.isArray(database.files)) {\n        database.files = [];\n      } else {\n        while (database.files.length >= this.cacheSize) {\n          database.files.shift();\n        }\n        for (let i = 0, ii = database.files.length; i < ii; i++) {\n          const branch = database.files[i];\n          if (branch.fingerprint === this.fingerprint) {\n            index = i;\n            break;\n          }\n        }\n      }\n      if (index === -1) {\n        index = database.files.push({\n          fingerprint: this.fingerprint\n        }) - 1;\n      }\n      this.file = database.files[index];\n      this.database = database;\n    });\n  }\n  async _writeToStorage() {\n    const databaseStr = JSON.stringify(this.database);\n    localStorage.setItem("pdfjs.history", databaseStr);\n  }\n  async _readFromStorage() {\n    return localStorage.getItem("pdfjs.history");\n  }\n  async set(name, val) {\n    await this._initializedPromise;\n    this.file[name] = val;\n    return this._writeToStorage();\n  }\n  async setMultiple(properties) {\n    await this._initializedPromise;\n    for (const name in properties) {\n      this.file[name] = properties[name];\n    }\n    return this._writeToStorage();\n  }\n  async get(name, defaultValue) {\n    await this._initializedPromise;\n    const val = this.file[name];\n    return val !== undefined ? val : defaultValue;\n  }\n  async getMultiple(properties) {\n    await this._initializedPromise;\n    const values = Object.create(null);\n    for (const name in properties) {\n      const val = this.file[name];\n      values[name] = val !== undefined ? val : properties[name];\n    }\n    return values;\n  }\n}\n\n;// CONCATENATED MODULE:./app.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst FORCE_PAGES_LOADED_TIMEOUT = 10000;\nconst ViewOnLoad = {\n  UNKNOWN: -1,\n  PREVIOUS: 0,\n  INITIAL: 1\n};\nconst PDFViewerApplication = {\n  initialBookmark: document.location.hash.substring(1),\n  _initializedCapability: {\n    ...Promise.withResolvers(),\n    settled: false\n  },\n  appConfig: null,\n  pdfDocument: null,\n  pdfLoadingTask: null,\n  printService: null,\n  pdfViewer: null,\n  pdfThumbnailViewer: null,\n  pdfRenderingQueue: null,\n  pdfPresentationMode: null,\n  pdfDocumentProperties: null,\n  pdfLinkService: null,\n  pdfHistory: null,\n  pdfSidebar: null,\n  pdfOutlineViewer: null,\n  pdfAttachmentViewer: null,\n  pdfLayerViewer: null,\n  pdfCursorTools: null,\n  pdfScriptingManager: null,\n  store: null,\n  downloadManager: null,\n  overlayManager: null,\n  preferences: new Preferences(),\n  toolbar: null,\n  secondaryToolbar: null,\n  eventBus: null,\n  l10n: null,\n  annotationEditorParams: null,\n  imageAltTextSettings: null,\n  isInitialViewSet: false,\n  isViewerEmbedded: window.parent !== window,\n  url: "",\n  baseUrl: "",\n  mlManager: null,\n  _downloadUrl: "",\n  _eventBusAbortController: null,\n  _windowAbortController: null,\n  _globalAbortController: new AbortController(),\n  documentInfo: null,\n  metadata: null,\n  _contentDispositionFilename: null,\n  _contentLength: null,\n  _saveInProgress: false,\n  _wheelUnusedTicks: 0,\n  _wheelUnusedFactor: 1,\n  _touchUnusedTicks: 0,\n  _touchUnusedFactor: 1,\n  _PDFBug: null,\n  _hasAnnotationEditors: false,\n  _title: document.title,\n  _printAnnotationStoragePromise: null,\n  _touchInfo: null,\n  _isCtrlKeyDown: false,\n  _caretBrowsing: null,\n  _isScrolling: false,\n  async initialize(appConfig) {\n    this.appConfig = appConfig;\n    try {\n      await this.preferences.initializedPromise;\n    } catch (ex) {\n      console.error(`initialize: "${ex.message}".`);\n    }\n    if (AppOptions.get("pdfBugEnabled")) {\n      await this._parseHashParams();\n    }\n    let mode;\n    switch (AppOptions.get("viewerCssTheme")) {\n      case 1:\n        mode = "is-light";\n        break;\n      case 2:\n        mode = "is-dark";\n        break;\n    }\n    if (mode) {\n      document.documentElement.classList.add(mode);\n    }\n    this.l10n = await this.externalServices.createL10n();\n    document.getElementsByTagName("html")[0].dir = this.l10n.getDirection();\n    this.l10n.translate(appConfig.appContainer || document.documentElement);\n    if (this.isViewerEmbedded && AppOptions.get("externalLinkTarget") === LinkTarget.NONE) {\n      AppOptions.set("externalLinkTarget", LinkTarget.TOP);\n    }\n    AppOptions.set("sidebarViewOnLoad", SidebarView.THUMBS);\n    await this._initializeViewerComponents();\n    this.bindEvents();\n    this.bindWindowEvents();\n    this._initializedCapability.settled = true;\n    this._initializedCapability.resolve();\n  },\n  async _parseHashParams() {\n    const hash = document.location.hash.substring(1);\n    if (!hash) {\n      return;\n    }\n    const {\n        mainContainer,\n        viewerContainer\n      } = this.appConfig,\n      params = parseQueryString(hash);\n    const loadPDFBug = async () => {\n      if (this._PDFBug) {\n        return;\n      }\n      const {\n        PDFBug\n      } = await import( /*webpackIgnore: true*/AppOptions.get("debuggerSrc"));\n      this._PDFBug = PDFBug;\n    };\n    if (params.get("disableworker") === "true") {\n      try {\n        GlobalWorkerOptions.workerSrc ||= AppOptions.get("workerSrc");\n        await import( /*webpackIgnore: true*/PDFWorker.workerSrc);\n      } catch (ex) {\n        console.error(`_parseHashParams: "${ex.message}".`);\n      }\n    }\n    if (params.has("textlayer")) {\n      switch (params.get("textlayer")) {\n        case "off":\n          AppOptions.set("textLayerMode", TextLayerMode.DISABLE);\n          break;\n        case "visible":\n        case "shadow":\n        case "hover":\n          viewerContainer.classList.add(`textLayer-${params.get("textlayer")}`);\n          try {\n            await loadPDFBug();\n            this._PDFBug.loadCSS();\n          } catch (ex) {\n            console.error(`_parseHashParams: "${ex.message}".`);\n          }\n          break;\n      }\n    }\n    if (params.has("pdfbug")) {\n      AppOptions.setAll({\n        pdfBug: true,\n        fontExtraProperties: true\n      });\n      const enabled = params.get("pdfbug").split(",");\n      try {\n        await loadPDFBug();\n        this._PDFBug.init(mainContainer, enabled);\n      } catch (ex) {\n        console.error(`_parseHashParams: "${ex.message}".`);\n      }\n    }\n    if (params.has("locale")) {\n      AppOptions.set("localeProperties", {\n        lang: params.get("locale")\n      });\n    }\n    const opts = {\n      disableAutoFetch: x => x === "true",\n      disableFontFace: x => x === "true",\n      disableHistory: x => x === "true",\n      disableRange: x => x === "true",\n      disableStream: x => x === "true",\n      verbosity: x => x | 0\n    };\n    for (const name in opts) {\n      const check = opts[name],\n        key = name.toLowerCase();\n      if (params.has(key)) {\n        AppOptions.set(name, check(params.get(key)));\n      }\n    }\n  },\n  async _initializeViewerComponents() {\n    const {\n      appConfig,\n      externalServices,\n      l10n\n    } = this;\n    let eventBus;\n    eventBus = new EventBus();\n    this.mlManager?.setEventBus(eventBus, this._globalAbortController.signal);\n    this.eventBus = eventBus;\n    this.overlayManager = new OverlayManager();\n    const pdfRenderingQueue = new PDFRenderingQueue();\n    pdfRenderingQueue.onIdle = this._cleanup.bind(this);\n    this.pdfRenderingQueue = pdfRenderingQueue;\n    const pdfLinkService = new PDFLinkService({\n      eventBus,\n      externalLinkTarget: AppOptions.get("externalLinkTarget"),\n      externalLinkRel: AppOptions.get("externalLinkRel"),\n      ignoreDestinationZoom: AppOptions.get("ignoreDestinationZoom")\n    });\n    this.pdfLinkService = pdfLinkService;\n    const downloadManager = this.downloadManager = new DownloadManager();\n    const findController = new PDFFindController({\n      linkService: pdfLinkService,\n      eventBus,\n      updateMatchesCountOnProgress: true\n    });\n    this.findController = findController;\n    const pdfScriptingManager = new PDFScriptingManager({\n      eventBus,\n      externalServices,\n      docProperties: this._scriptingDocProperties.bind(this)\n    });\n    this.pdfScriptingManager = pdfScriptingManager;\n    const container = appConfig.mainContainer,\n      viewer = appConfig.viewerContainer;\n    const annotationEditorMode = AppOptions.get("annotationEditorMode");\n    const pageColors = AppOptions.get("forcePageColors") || window.matchMedia("(forced-colors: active)").matches ? {\n      background: AppOptions.get("pageColorsBackground"),\n      foreground: AppOptions.get("pageColorsForeground")\n    } : null;\n    let altTextManager;\n    if (AppOptions.get("enableUpdatedAddImage")) {\n      altTextManager = appConfig.newAltTextDialog ? new NewAltTextManager(appConfig.newAltTextDialog, this.overlayManager, eventBus) : null;\n    } else {\n      altTextManager = appConfig.altTextDialog ? new AltTextManager(appConfig.altTextDialog, container, this.overlayManager, eventBus) : null;\n    }\n    const enableHWA = AppOptions.get("enableHWA");\n    const pdfViewer = new PDFViewer({\n      container,\n      viewer,\n      eventBus,\n      renderingQueue: pdfRenderingQueue,\n      linkService: pdfLinkService,\n      downloadManager,\n      altTextManager,\n      findController,\n      scriptingManager: AppOptions.get("enableScripting") && pdfScriptingManager,\n      l10n,\n      textLayerMode: AppOptions.get("textLayerMode"),\n      annotationMode: AppOptions.get("annotationMode"),\n      annotationEditorMode,\n      annotationEditorHighlightColors: AppOptions.get("highlightEditorColors"),\n      enableHighlightFloatingButton: AppOptions.get("enableHighlightFloatingButton"),\n      enableUpdatedAddImage: AppOptions.get("enableUpdatedAddImage"),\n      enableNewAltTextWhenAddingImage: AppOptions.get("enableNewAltTextWhenAddingImage"),\n      imageResourcesPath: AppOptions.get("imageResourcesPath"),\n      enablePrintAutoRotate: AppOptions.get("enablePrintAutoRotate"),\n      maxCanvasPixels: AppOptions.get("maxCanvasPixels"),\n      enablePermissions: AppOptions.get("enablePermissions"),\n      pageColors,\n      mlManager: this.mlManager,\n      abortSignal: this._globalAbortController.signal,\n      enableHWA\n    });\n    this.pdfViewer = pdfViewer;\n    pdfRenderingQueue.setViewer(pdfViewer);\n    pdfLinkService.setViewer(pdfViewer);\n    pdfScriptingManager.setViewer(pdfViewer);\n    if (appConfig.sidebar?.thumbnailView) {\n      this.pdfThumbnailViewer = new PDFThumbnailViewer({\n        container: appConfig.sidebar.thumbnailView,\n        eventBus,\n        renderingQueue: pdfRenderingQueue,\n        linkService: pdfLinkService,\n        pageColors,\n        abortSignal: this._globalAbortController.signal,\n        enableHWA\n      });\n      pdfRenderingQueue.setThumbnailViewer(this.pdfThumbnailViewer);\n    }\n    if (!this.isViewerEmbedded && !AppOptions.get("disableHistory")) {\n      this.pdfHistory = new PDFHistory({\n        linkService: pdfLinkService,\n        eventBus\n      });\n      pdfLinkService.setHistory(this.pdfHistory);\n    }\n    if (!this.supportsIntegratedFind && appConfig.findBar) {\n      this.findBar = new PDFFindBar(appConfig.findBar, eventBus);\n    }\n    if (appConfig.annotationEditorParams) {\n      if (typeof AbortSignal.any === "function" && annotationEditorMode !== AnnotationEditorType.DISABLE) {\n        this.annotationEditorParams = new AnnotationEditorParams(appConfig.annotationEditorParams, eventBus);\n      } else {\n        for (const id of ["editorModeButtons", "editorModeSeparator"]) {\n          document.getElementById(id)?.classList.add("hidden");\n        }\n      }\n    }\n    if (this.mlManager && appConfig.secondaryToolbar?.imageAltTextSettingsButton) {\n      this.imageAltTextSettings = new ImageAltTextSettings(appConfig.altTextSettingsDialog, this.overlayManager, eventBus, this.mlManager);\n    }\n    if (appConfig.documentProperties) {\n      this.pdfDocumentProperties = new PDFDocumentProperties(appConfig.documentProperties, this.overlayManager, eventBus, l10n, () => this._docFilename);\n    }\n    if (appConfig.secondaryToolbar?.cursorHandToolButton) {\n      this.pdfCursorTools = new PDFCursorTools({\n        container,\n        eventBus,\n        cursorToolOnLoad: AppOptions.get("cursorToolOnLoad")\n      });\n    }\n    if (appConfig.toolbar) {\n      this.toolbar = new Toolbar(appConfig.toolbar, eventBus, AppOptions.get("toolbarDensity"));\n    }\n    if (appConfig.secondaryToolbar) {\n      if (AppOptions.get("enableAltText")) {\n        appConfig.secondaryToolbar.imageAltTextSettingsButton?.classList.remove("hidden");\n        appConfig.secondaryToolbar.imageAltTextSettingsSeparator?.classList.remove("hidden");\n      }\n      this.secondaryToolbar = new SecondaryToolbar(appConfig.secondaryToolbar, eventBus);\n    }\n    if (this.supportsFullscreen && appConfig.secondaryToolbar?.presentationModeButton) {\n      this.pdfPresentationMode = new PDFPresentationMode({\n        container,\n        pdfViewer,\n        eventBus\n      });\n    }\n    if (appConfig.passwordOverlay) {\n      this.passwordPrompt = new PasswordPrompt(appConfig.passwordOverlay, this.overlayManager, this.isViewerEmbedded);\n    }\n    if (appConfig.sidebar?.outlineView) {\n      this.pdfOutlineViewer = new PDFOutlineViewer({\n        container: appConfig.sidebar.outlineView,\n        eventBus,\n        l10n,\n        linkService: pdfLinkService,\n        downloadManager\n      });\n    }\n    if (appConfig.sidebar?.attachmentsView) {\n      this.pdfAttachmentViewer = new PDFAttachmentViewer({\n        container: appConfig.sidebar.attachmentsView,\n        eventBus,\n        l10n,\n        downloadManager\n      });\n    }\n    if (appConfig.sidebar?.layersView) {\n      this.pdfLayerViewer = new PDFLayerViewer({\n        container: appConfig.sidebar.layersView,\n        eventBus,\n        l10n\n      });\n    }\n    if (appConfig.sidebar) {\n      this.pdfSidebar = new PDFSidebar({\n        elements: appConfig.sidebar,\n        eventBus,\n        l10n\n      });\n      this.pdfSidebar.onToggled = this.forceRendering.bind(this);\n      this.pdfSidebar.onUpdateThumbnails = () => {\n        for (const pageView of pdfViewer.getCachedPageViews()) {\n          if (pageView.renderingState === RenderingStates.FINISHED) {\n            this.pdfThumbnailViewer.getThumbnail(pageView.id - 1)?.setImage(pageView);\n          }\n        }\n        this.pdfThumbnailViewer.scrollThumbnailIntoView(pdfViewer.currentPageNumber);\n      };\n    }\n  },\n  async run(config) {\n    await this.initialize(config);\n    const {\n      appConfig,\n      eventBus\n    } = this;\n    let file;\n    const queryString = document.location.search.substring(1);\n    const params = parseQueryString(queryString);\n    file = params.get("file") ?? AppOptions.get("defaultUrl");\n    validateFileURL(file);\n    const fileInput = this._openFileInput = document.createElement("input");\n    fileInput.id = "fileInput";\n    fileInput.hidden = true;\n    fileInput.type = "file";\n    fileInput.value = null;\n    document.body.append(fileInput);\n    fileInput.addEventListener("change", function (evt) {\n      const {\n        files\n      } = evt.target;\n      if (!files || files.length === 0) {\n        return;\n      }\n      eventBus.dispatch("fileinputchange", {\n        source: this,\n        fileInput: evt.target\n      });\n    });\n    appConfig.mainContainer.addEventListener("dragover", function (evt) {\n      for (const item of evt.dataTransfer.items) {\n        if (item.type === "application/pdf") {\n          evt.dataTransfer.dropEffect = evt.dataTransfer.effectAllowed === "copy" ? "copy" : "move";\n          evt.preventDefault();\n          evt.stopPropagation();\n          return;\n        }\n      }\n    });\n    appConfig.mainContainer.addEventListener("drop", function (evt) {\n      if (evt.dataTransfer.files?.[0].type !== "application/pdf") {\n        return;\n      }\n      evt.preventDefault();\n      evt.stopPropagation();\n      eventBus.dispatch("fileinputchange", {\n        source: this,\n        fileInput: evt.dataTransfer\n      });\n    });\n    if (!AppOptions.get("supportsDocumentFonts")) {\n      AppOptions.set("disableFontFace", true);\n      this.l10n.get("pdfjs-web-fonts-disabled").then(msg => {\n        console.warn(msg);\n      });\n    }\n    if (!this.supportsPrinting) {\n      appConfig.toolbar?.print?.classList.add("hidden");\n      appConfig.secondaryToolbar?.printButton.classList.add("hidden");\n    }\n    if (!this.supportsFullscreen) {\n      appConfig.secondaryToolbar?.presentationModeButton.classList.add("hidden");\n    }\n    if (this.supportsIntegratedFind) {\n      appConfig.findBar?.toggleButton?.classList.add("hidden");\n    }\n    if (file) {\n      this.open({\n        url: file\n      });\n    } else {\n      this._hideViewBookmark();\n    }\n  },\n  get externalServices() {\n    return shadow(this, "externalServices", new ExternalServices());\n  },\n  get initialized() {\n    return this._initializedCapability.settled;\n  },\n  get initializedPromise() {\n    return this._initializedCapability.promise;\n  },\n  updateZoom(steps, scaleFactor, origin) {\n    if (this.pdfViewer.isInPresentationMode) {\n      return;\n    }\n    this.pdfViewer.updateScale({\n      drawingDelay: AppOptions.get("defaultZoomDelay"),\n      steps,\n      scaleFactor,\n      origin\n    });\n  },\n  zoomIn() {\n    this.updateZoom(1);\n  },\n  zoomOut() {\n    this.updateZoom(-1);\n  },\n  zoomReset() {\n    if (this.pdfViewer.isInPresentationMode) {\n      return;\n    }\n    this.pdfViewer.currentScaleValue = DEFAULT_SCALE_VALUE;\n  },\n  get pagesCount() {\n    return this.pdfDocument ? this.pdfDocument.numPages : 0;\n  },\n  get page() {\n    return this.pdfViewer.currentPageNumber;\n  },\n  set page(val) {\n    this.pdfViewer.currentPageNumber = val;\n  },\n  get supportsPrinting() {\n    return PDFPrintServiceFactory.supportsPrinting;\n  },\n  get supportsFullscreen() {\n    return shadow(this, "supportsFullscreen", document.fullscreenEnabled);\n  },\n  get supportsPinchToZoom() {\n    return shadow(this, "supportsPinchToZoom", AppOptions.get("supportsPinchToZoom"));\n  },\n  get supportsIntegratedFind() {\n    return shadow(this, "supportsIntegratedFind", AppOptions.get("supportsIntegratedFind"));\n  },\n  get loadingBar() {\n    const barElement = document.getElementById("loadingBar");\n    const bar = barElement ? new ProgressBar(barElement) : null;\n    return shadow(this, "loadingBar", bar);\n  },\n  get supportsMouseWheelZoomCtrlKey() {\n    return shadow(this, "supportsMouseWheelZoomCtrlKey", AppOptions.get("supportsMouseWheelZoomCtrlKey"));\n  },\n  get supportsMouseWheelZoomMetaKey() {\n    return shadow(this, "supportsMouseWheelZoomMetaKey", AppOptions.get("supportsMouseWheelZoomMetaKey"));\n  },\n  get supportsCaretBrowsingMode() {\n    return AppOptions.get("supportsCaretBrowsingMode");\n  },\n  moveCaret(isUp, select) {\n    this._caretBrowsing ||= new CaretBrowsingMode(this.appConfig.mainContainer, this.appConfig.viewerContainer, this.appConfig.toolbar?.container);\n    this._caretBrowsing.moveCaret(isUp, select);\n  },\n  setTitleUsingUrl(url = "", downloadUrl = null) {\n    this.url = url;\n    this.baseUrl = url.split("#", 1)[0];\n    if (downloadUrl) {\n      this._downloadUrl = downloadUrl === url ? this.baseUrl : downloadUrl.split("#", 1)[0];\n    }\n    if (isDataScheme(url)) {\n      this._hideViewBookmark();\n    }\n    let title = pdfjs_getPdfFilenameFromUrl(url, "");\n    if (!title) {\n      try {\n        title = decodeURIComponent(getFilenameFromUrl(url));\n      } catch {}\n    }\n    this.setTitle(title || url);\n  },\n  setTitle(title = this._title) {\n    this._title = title;\n    if (this.isViewerEmbedded) {\n      return;\n    }\n    const editorIndicator = this._hasAnnotationEditors && !this.pdfRenderingQueue.printing;\n    document.title = `${editorIndicator ? "* " : ""}${title}`;\n  },\n  get _docFilename() {\n    return this._contentDispositionFilename || pdfjs_getPdfFilenameFromUrl(this.url);\n  },\n  _hideViewBookmark() {\n    const {\n      secondaryToolbar\n    } = this.appConfig;\n    secondaryToolbar?.viewBookmarkButton.classList.add("hidden");\n    if (secondaryToolbar?.presentationModeButton.classList.contains("hidden")) {\n      document.getElementById("viewBookmarkSeparator")?.classList.add("hidden");\n    }\n  },\n  async close() {\n    this._unblockDocumentLoadEvent();\n    this._hideViewBookmark();\n    if (!this.pdfLoadingTask) {\n      return;\n    }\n    if (this.pdfDocument?.annotationStorage.size > 0 && this._annotationStorageModified) {\n      try {\n        await this.save();\n      } catch {}\n    }\n    const promises = [];\n    promises.push(this.pdfLoadingTask.destroy());\n    this.pdfLoadingTask = null;\n    if (this.pdfDocument) {\n      this.pdfDocument = null;\n      this.pdfThumbnailViewer?.setDocument(null);\n      this.pdfViewer.setDocument(null);\n      this.pdfLinkService.setDocument(null);\n      this.pdfDocumentProperties?.setDocument(null);\n    }\n    this.pdfLinkService.externalLinkEnabled = true;\n    this.store = null;\n    this.isInitialViewSet = false;\n    this.url = "";\n    this.baseUrl = "";\n    this._downloadUrl = "";\n    this.documentInfo = null;\n    this.metadata = null;\n    this._contentDispositionFilename = null;\n    this._contentLength = null;\n    this._saveInProgress = false;\n    this._hasAnnotationEditors = false;\n    promises.push(this.pdfScriptingManager.destroyPromise, this.passwordPrompt.close());\n    this.setTitle();\n    this.pdfSidebar?.reset();\n    this.pdfOutlineViewer?.reset();\n    this.pdfAttachmentViewer?.reset();\n    this.pdfLayerViewer?.reset();\n    this.pdfHistory?.reset();\n    this.findBar?.reset();\n    this.toolbar?.reset();\n    this.secondaryToolbar?.reset();\n    this._PDFBug?.cleanup();\n    await Promise.all(promises);\n  },\n  async open(args) {\n    if (this.pdfLoadingTask) {\n      await this.close();\n    }\n    const workerParams = AppOptions.getAll(OptionKind.WORKER);\n    Object.assign(GlobalWorkerOptions, workerParams);\n    if (args.url) {\n      this.setTitleUsingUrl(args.originalUrl || args.url, args.url);\n    }\n    const apiParams = AppOptions.getAll(OptionKind.API);\n    const loadingTask = getDocument({\n      ...apiParams,\n      ...args\n    });\n    this.pdfLoadingTask = loadingTask;\n    loadingTask.onPassword = (updateCallback, reason) => {\n      if (this.isViewerEmbedded) {\n        this._unblockDocumentLoadEvent();\n      }\n      this.pdfLinkService.externalLinkEnabled = false;\n      this.passwordPrompt.setUpdateCallback(updateCallback, reason);\n      this.passwordPrompt.open();\n    };\n    loadingTask.onProgress = ({\n      loaded,\n      total\n    }) => {\n      this.progress(loaded / total);\n    };\n    return loadingTask.promise.then(pdfDocument => {\n      this.load(pdfDocument);\n    }, reason => {\n      if (loadingTask !== this.pdfLoadingTask) {\n        return undefined;\n      }\n      let key = "pdfjs-loading-error";\n      if (reason instanceof InvalidPDFException) {\n        key = "pdfjs-invalid-file-error";\n      } else if (reason instanceof MissingPDFException) {\n        key = "pdfjs-missing-file-error";\n      } else if (reason instanceof UnexpectedResponseException) {\n        key = "pdfjs-unexpected-response-error";\n      }\n      return this._documentError(key, {\n        message: reason.message\n      }).then(() => {\n        throw reason;\n      });\n    });\n  },\n  async download() {\n    let data;\n    try {\n      data = await this.pdfDocument.getData();\n    } catch {}\n    this.downloadManager.download(data, this._downloadUrl, this._docFilename);\n  },\n  async save() {\n    if (this._saveInProgress) {\n      return;\n    }\n    this._saveInProgress = true;\n    await this.pdfScriptingManager.dispatchWillSave();\n    try {\n      const data = await this.pdfDocument.saveDocument();\n      this.downloadManager.download(data, this._downloadUrl, this._docFilename);\n    } catch (reason) {\n      console.error(`Error when saving the document: ${reason.message}`);\n      await this.download();\n    } finally {\n      await this.pdfScriptingManager.dispatchDidSave();\n      this._saveInProgress = false;\n    }\n    if (this._hasAnnotationEditors) {\n      this.externalServices.reportTelemetry({\n        type: "editing",\n        data: {\n          type: "save",\n          stats: this.pdfDocument?.annotationStorage.editorStats\n        }\n      });\n    }\n  },\n  async downloadOrSave() {\n    const {\n      classList\n    } = this.appConfig.appContainer;\n    classList.add("wait");\n    await (this.pdfDocument?.annotationStorage.size > 0 ? this.save() : this.download());\n    classList.remove("wait");\n  },\n  async _documentError(key, moreInfo = null) {\n    this._unblockDocumentLoadEvent();\n    const message = await this._otherError(key || "pdfjs-loading-error", moreInfo);\n    this.eventBus.dispatch("documenterror", {\n      source: this,\n      message,\n      reason: moreInfo?.message ?? null\n    });\n  },\n  async _otherError(key, moreInfo = null) {\n    const message = await this.l10n.get(key);\n    const moreInfoText = [`PDF.js v${version || "?"} (build: ${build || "?"})`];\n    if (moreInfo) {\n      moreInfoText.push(`Message: ${moreInfo.message}`);\n      if (moreInfo.stack) {\n        moreInfoText.push(`Stack: ${moreInfo.stack}`);\n      } else {\n        if (moreInfo.filename) {\n          moreInfoText.push(`File: ${moreInfo.filename}`);\n        }\n        if (moreInfo.lineNumber) {\n          moreInfoText.push(`Line: ${moreInfo.lineNumber}`);\n        }\n      }\n    }\n    console.error(`${message}\\n\\n${moreInfoText.join("\\n")}`);\n    return message;\n  },\n  progress(level) {\n    const percent = Math.round(level * 100);\n    if (!this.loadingBar || percent <= this.loadingBar.percent) {\n      return;\n    }\n    this.loadingBar.percent = percent;\n    if (this.pdfDocument?.loadingParams.disableAutoFetch ?? AppOptions.get("disableAutoFetch")) {\n      this.loadingBar.setDisableAutoFetch();\n    }\n  },\n  load(pdfDocument) {\n    this.pdfDocument = pdfDocument;\n    pdfDocument.getDownloadInfo().then(({\n      length\n    }) => {\n      this._contentLength = length;\n      this.loadingBar?.hide();\n      firstPagePromise.then(() => {\n        this.eventBus.dispatch("documentloaded", {\n          source: this\n        });\n      });\n    });\n    const pageLayoutPromise = pdfDocument.getPageLayout().catch(() => {});\n    const pageModePromise = pdfDocument.getPageMode().catch(() => {});\n    const openActionPromise = pdfDocument.getOpenAction().catch(() => {});\n    this.toolbar?.setPagesCount(pdfDocument.numPages, false);\n    this.secondaryToolbar?.setPagesCount(pdfDocument.numPages);\n    this.pdfLinkService.setDocument(pdfDocument);\n    this.pdfDocumentProperties?.setDocument(pdfDocument);\n    const pdfViewer = this.pdfViewer;\n    pdfViewer.setDocument(pdfDocument);\n    const {\n      firstPagePromise,\n      onePageRendered,\n      pagesPromise\n    } = pdfViewer;\n    this.pdfThumbnailViewer?.setDocument(pdfDocument);\n    const storedPromise = (this.store = new ViewHistory(pdfDocument.fingerprints[0])).getMultiple({\n      page: null,\n      zoom: DEFAULT_SCALE_VALUE,\n      scrollLeft: "0",\n      scrollTop: "0",\n      rotation: null,\n      sidebarView: SidebarView.UNKNOWN,\n      scrollMode: ScrollMode.UNKNOWN,\n      spreadMode: SpreadMode.UNKNOWN\n    }).catch(() => {});\n    firstPagePromise.then(pdfPage => {\n      this.loadingBar?.setWidth(this.appConfig.viewerContainer);\n      this._initializeAnnotationStorageCallbacks(pdfDocument);\n      Promise.all([animationStarted, storedPromise, pageLayoutPromise, pageModePromise, openActionPromise]).then(async ([timeStamp, stored, pageLayout, pageMode, openAction]) => {\n        const viewOnLoad = AppOptions.get("viewOnLoad");\n        this._initializePdfHistory({\n          fingerprint: pdfDocument.fingerprints[0],\n          viewOnLoad,\n          initialDest: openAction?.dest\n        });\n        const initialBookmark = this.initialBookmark;\n        const zoom = AppOptions.get("defaultZoomValue");\n        let hash = zoom ? `zoom=${zoom}` : null;\n        let rotation = null;\n        let sidebarView = AppOptions.get("sidebarViewOnLoad");\n        let scrollMode = AppOptions.get("scrollModeOnLoad");\n        let spreadMode = AppOptions.get("spreadModeOnLoad");\n        if (stored?.page && viewOnLoad !== ViewOnLoad.INITIAL) {\n          hash = `page=${stored.page}&zoom=${zoom || stored.zoom},` + `${stored.scrollLeft},${stored.scrollTop}`;\n          rotation = parseInt(stored.rotation, 10);\n          if (sidebarView === SidebarView.UNKNOWN) {\n            sidebarView = stored.sidebarView | 0;\n          }\n          if (scrollMode === ScrollMode.UNKNOWN) {\n            scrollMode = stored.scrollMode | 0;\n          }\n          if (spreadMode === SpreadMode.UNKNOWN) {\n            spreadMode = stored.spreadMode | 0;\n          }\n        }\n        if (pageMode && sidebarView === SidebarView.UNKNOWN) {\n          sidebarView = apiPageModeToSidebarView(pageMode);\n        }\n        if (pageLayout && scrollMode === ScrollMode.UNKNOWN && spreadMode === SpreadMode.UNKNOWN) {\n          const modes = apiPageLayoutToViewerModes(pageLayout);\n          spreadMode = modes.spreadMode;\n        }\n        this.setInitialView(hash, {\n          rotation,\n          sidebarView,\n          scrollMode,\n          spreadMode\n        });\n        this.eventBus.dispatch("documentinit", {\n          source: this\n        });\n        if (!this.isViewerEmbedded) {\n          pdfViewer.focus();\n        }\n        await Promise.race([pagesPromise, new Promise(resolve => {\n          setTimeout(resolve, FORCE_PAGES_LOADED_TIMEOUT);\n        })]);\n        if (!initialBookmark && !hash) {\n          return;\n        }\n        if (pdfViewer.hasEqualPageSizes) {\n          return;\n        }\n        this.initialBookmark = initialBookmark;\n        pdfViewer.currentScaleValue = pdfViewer.currentScaleValue;\n        this.setInitialView(hash);\n      }).catch(() => {\n        this.setInitialView();\n      }).then(function () {\n        pdfViewer.update();\n      });\n    });\n    pagesPromise.then(() => {\n      this._unblockDocumentLoadEvent();\n      this._initializeAutoPrint(pdfDocument, openActionPromise);\n    }, reason => {\n      this._documentError("pdfjs-loading-error", {\n        message: reason.message\n      });\n    });\n    onePageRendered.then(data => {\n      this.externalServices.reportTelemetry({\n        type: "pageInfo",\n        timestamp: data.timestamp\n      });\n      if (this.pdfOutlineViewer) {\n        pdfDocument.getOutline().then(outline => {\n          if (pdfDocument !== this.pdfDocument) {\n            return;\n          }\n          this.pdfOutlineViewer.render({\n            outline,\n            pdfDocument\n          });\n        });\n      }\n      if (this.pdfAttachmentViewer) {\n        pdfDocument.getAttachments().then(attachments => {\n          if (pdfDocument !== this.pdfDocument) {\n            return;\n          }\n          this.pdfAttachmentViewer.render({\n            attachments\n          });\n        });\n      }\n      if (this.pdfLayerViewer) {\n        pdfViewer.optionalContentConfigPromise.then(optionalContentConfig => {\n          if (pdfDocument !== this.pdfDocument) {\n            return;\n          }\n          this.pdfLayerViewer.render({\n            optionalContentConfig,\n            pdfDocument\n          });\n        });\n      }\n    });\n    this._initializePageLabels(pdfDocument);\n    this._initializeMetadata(pdfDocument);\n  },\n  async _scriptingDocProperties(pdfDocument) {\n    if (!this.documentInfo) {\n      await new Promise(resolve => {\n        this.eventBus._on("metadataloaded", resolve, {\n          once: true\n        });\n      });\n      if (pdfDocument !== this.pdfDocument) {\n        return null;\n      }\n    }\n    if (!this._contentLength) {\n      await new Promise(resolve => {\n        this.eventBus._on("documentloaded", resolve, {\n          once: true\n        });\n      });\n      if (pdfDocument !== this.pdfDocument) {\n        return null;\n      }\n    }\n    return {\n      ...this.documentInfo,\n      baseURL: this.baseUrl,\n      filesize: this._contentLength,\n      filename: this._docFilename,\n      metadata: this.metadata?.getRaw(),\n      authors: this.metadata?.get("dc:creator"),\n      numPages: this.pagesCount,\n      URL: this.url\n    };\n  },\n  async _initializeAutoPrint(pdfDocument, openActionPromise) {\n    const [openAction, jsActions] = await Promise.all([openActionPromise, this.pdfViewer.enableScripting ? null : pdfDocument.getJSActions()]);\n    if (pdfDocument !== this.pdfDocument) {\n      return;\n    }\n    let triggerAutoPrint = openAction?.action === "Print";\n    if (jsActions) {\n      console.warn("Warning: JavaScript support is not enabled");\n      for (const name in jsActions) {\n        if (triggerAutoPrint) {\n          break;\n        }\n        switch (name) {\n          case "WillClose":\n          case "WillSave":\n          case "DidSave":\n          case "WillPrint":\n          case "DidPrint":\n            continue;\n        }\n        triggerAutoPrint = jsActions[name].some(js => AutoPrintRegExp.test(js));\n      }\n    }\n    if (triggerAutoPrint) {\n      this.triggerPrinting();\n    }\n  },\n  async _initializeMetadata(pdfDocument) {\n    const {\n      info,\n      metadata,\n      contentDispositionFilename,\n      contentLength\n    } = await pdfDocument.getMetadata();\n    if (pdfDocument !== this.pdfDocument) {\n      return;\n    }\n    this.documentInfo = info;\n    this.metadata = metadata;\n    this._contentDispositionFilename ??= contentDispositionFilename;\n    this._contentLength ??= contentLength;\n    console.log(`PDF ${pdfDocument.fingerprints[0]} [${info.PDFFormatVersion} ` + `${(info.Producer || "-").trim()} / ${(info.Creator || "-").trim()}] ` + `(PDF.js: ${version || "?"} [${build || "?"}])`);\n    let pdfTitle = info.Title;\n    const metadataTitle = metadata?.get("dc:title");\n    if (metadataTitle) {\n      if (metadataTitle !== "Untitled" && !/[\\uFFF0-\\uFFFF]/g.test(metadataTitle)) {\n        pdfTitle = metadataTitle;\n      }\n    }\n    if (pdfTitle) {\n      this.setTitle(`${pdfTitle} - ${this._contentDispositionFilename || this._title}`);\n    } else if (this._contentDispositionFilename) {\n      this.setTitle(this._contentDispositionFilename);\n    }\n    if (info.IsXFAPresent && !info.IsAcroFormPresent && !pdfDocument.isPureXfa) {\n      if (pdfDocument.loadingParams.enableXfa) {\n        console.warn("Warning: XFA Foreground documents are not supported");\n      } else {\n        console.warn("Warning: XFA support is not enabled");\n      }\n    } else if ((info.IsAcroFormPresent || info.IsXFAPresent) && !this.pdfViewer.renderForms) {\n      console.warn("Warning: Interactive form support is not enabled");\n    }\n    if (info.IsSignaturesPresent) {\n      console.warn("Warning: Digital signatures validation is not supported");\n    }\n    this.eventBus.dispatch("metadataloaded", {\n      source: this\n    });\n  },\n  async _initializePageLabels(pdfDocument) {\n    const labels = await pdfDocument.getPageLabels();\n    if (pdfDocument !== this.pdfDocument) {\n      return;\n    }\n    if (!labels || AppOptions.get("disablePageLabels")) {\n      return;\n    }\n    const numLabels = labels.length;\n    let standardLabels = 0,\n      emptyLabels = 0;\n    for (let i = 0; i < numLabels; i++) {\n      const label = labels[i];\n      if (label === (i + 1).toString()) {\n        standardLabels++;\n      } else if (label === "") {\n        emptyLabels++;\n      } else {\n        break;\n      }\n    }\n    if (standardLabels >= numLabels || emptyLabels >= numLabels) {\n      return;\n    }\n    const {\n      pdfViewer,\n      pdfThumbnailViewer,\n      toolbar\n    } = this;\n    pdfViewer.setPageLabels(labels);\n    pdfThumbnailViewer?.setPageLabels(labels);\n    toolbar?.setPagesCount(numLabels, true);\n    toolbar?.setPageNumber(pdfViewer.currentPageNumber, pdfViewer.currentPageLabel);\n  },\n  _initializePdfHistory({\n    fingerprint,\n    viewOnLoad,\n    initialDest = null\n  }) {\n    if (!this.pdfHistory) {\n      return;\n    }\n    this.pdfHistory.initialize({\n      fingerprint,\n      resetHistory: viewOnLoad === ViewOnLoad.INITIAL,\n      updateUrl: AppOptions.get("historyUpdateUrl")\n    });\n    if (this.pdfHistory.initialBookmark) {\n      this.initialBookmark = this.pdfHistory.initialBookmark;\n      this.initialRotation = this.pdfHistory.initialRotation;\n    }\n    if (initialDest && !this.initialBookmark && viewOnLoad === ViewOnLoad.UNKNOWN) {\n      this.initialBookmark = JSON.stringify(initialDest);\n      this.pdfHistory.push({\n        explicitDest: initialDest,\n        pageNumber: null\n      });\n    }\n  },\n  _initializeAnnotationStorageCallbacks(pdfDocument) {\n    if (pdfDocument !== this.pdfDocument) {\n      return;\n    }\n    const {\n      annotationStorage\n    } = pdfDocument;\n    annotationStorage.onSetModified = () => {\n      window.addEventListener("beforeunload", beforeUnload);\n      this._annotationStorageModified = true;\n    };\n    annotationStorage.onResetModified = () => {\n      window.removeEventListener("beforeunload", beforeUnload);\n      delete this._annotationStorageModified;\n    };\n    annotationStorage.onAnnotationEditor = typeStr => {\n      this._hasAnnotationEditors = !!typeStr;\n      this.setTitle();\n    };\n  },\n  setInitialView(storedHash, {\n    rotation,\n    sidebarView,\n    scrollMode,\n    spreadMode\n  } = {}) {\n    const setRotation = angle => {\n      if (isValidRotation(angle)) {\n        this.pdfViewer.pagesRotation = angle;\n      }\n    };\n    const setViewerModes = (scroll, spread) => {\n      if (isValidScrollMode(scroll)) {\n        this.pdfViewer.scrollMode = scroll;\n      }\n      if (isValidSpreadMode(spread)) {\n        this.pdfViewer.spreadMode = spread;\n      }\n    };\n    this.isInitialViewSet = true;\n    this.pdfSidebar?.setInitialView(sidebarView);\n    setViewerModes(scrollMode, spreadMode);\n    if (this.initialBookmark) {\n      setRotation(this.initialRotation);\n      delete this.initialRotation;\n      this.pdfLinkService.setHash(this.initialBookmark);\n      this.initialBookmark = null;\n    } else if (storedHash) {\n      setRotation(rotation);\n      this.pdfLinkService.setHash(storedHash);\n    }\n    this.toolbar?.setPageNumber(this.pdfViewer.currentPageNumber, this.pdfViewer.currentPageLabel);\n    this.secondaryToolbar?.setPageNumber(this.pdfViewer.currentPageNumber);\n    if (!this.pdfViewer.currentScaleValue) {\n      this.pdfViewer.currentScaleValue = DEFAULT_SCALE_VALUE;\n    }\n  },\n  _cleanup() {\n    if (!this.pdfDocument) {\n      return;\n    }\n    this.pdfViewer.cleanup();\n    this.pdfThumbnailViewer?.cleanup();\n    this.pdfDocument.cleanup(AppOptions.get("fontExtraProperties"));\n  },\n  forceRendering() {\n    this.pdfRenderingQueue.printing = !!this.printService;\n    this.pdfRenderingQueue.isThumbnailViewEnabled = this.pdfSidebar?.visibleView === SidebarView.THUMBS;\n    this.pdfRenderingQueue.renderHighestPriority();\n  },\n  beforePrint() {\n    this._printAnnotationStoragePromise = this.pdfScriptingManager.dispatchWillPrint().catch(() => {}).then(() => this.pdfDocument?.annotationStorage.print);\n    if (this.printService) {\n      return;\n    }\n    if (!this.supportsPrinting) {\n      this._otherError("pdfjs-printing-not-supported");\n      return;\n    }\n    if (!this.pdfViewer.pageViewsReady) {\n      this.l10n.get("pdfjs-printing-not-ready").then(msg => {\n        window.alert(msg);\n      });\n      return;\n    }\n    this.printService = PDFPrintServiceFactory.createPrintService({\n      pdfDocument: this.pdfDocument,\n      pagesOverview: this.pdfViewer.getPagesOverview(),\n      printContainer: this.appConfig.printContainer,\n      printResolution: AppOptions.get("printResolution"),\n      printAnnotationStoragePromise: this._printAnnotationStoragePromise\n    });\n    this.forceRendering();\n    this.setTitle();\n    this.printService.layout();\n    if (this._hasAnnotationEditors) {\n      this.externalServices.reportTelemetry({\n        type: "editing",\n        data: {\n          type: "print",\n          stats: this.pdfDocument?.annotationStorage.editorStats\n        }\n      });\n    }\n  },\n  afterPrint() {\n    if (this._printAnnotationStoragePromise) {\n      this._printAnnotationStoragePromise.then(() => {\n        this.pdfScriptingManager.dispatchDidPrint();\n      });\n      this._printAnnotationStoragePromise = null;\n    }\n    if (this.printService) {\n      this.printService.destroy();\n      this.printService = null;\n      this.pdfDocument?.annotationStorage.resetModified();\n    }\n    this.forceRendering();\n    this.setTitle();\n  },\n  rotatePages(delta) {\n    this.pdfViewer.pagesRotation += delta;\n  },\n  requestPresentationMode() {\n    this.pdfPresentationMode?.request();\n  },\n  triggerPrinting() {\n    if (this.supportsPrinting) {\n      window.print();\n    }\n  },\n  bindEvents() {\n    if (this._eventBusAbortController) {\n      return;\n    }\n    this._eventBusAbortController = new AbortController();\n    const {\n      eventBus,\n      externalServices,\n      pdfDocumentProperties,\n      pdfViewer,\n      preferences,\n      _eventBusAbortController: {\n        signal\n      }\n    } = this;\n    eventBus._on("resize", onResize.bind(this), {\n      signal\n    });\n    eventBus._on("hashchange", onHashchange.bind(this), {\n      signal\n    });\n    eventBus._on("beforeprint", this.beforePrint.bind(this), {\n      signal\n    });\n    eventBus._on("afterprint", this.afterPrint.bind(this), {\n      signal\n    });\n    eventBus._on("pagerender", onPageRender.bind(this), {\n      signal\n    });\n    eventBus._on("pagerendered", onPageRendered.bind(this), {\n      signal\n    });\n    eventBus._on("updateviewarea", onUpdateViewarea.bind(this), {\n      signal\n    });\n    eventBus._on("pagechanging", onPageChanging.bind(this), {\n      signal\n    });\n    eventBus._on("scalechanging", onScaleChanging.bind(this), {\n      signal\n    });\n    eventBus._on("rotationchanging", onRotationChanging.bind(this), {\n      signal\n    });\n    eventBus._on("sidebarviewchanged", onSidebarViewChanged.bind(this), {\n      signal\n    });\n    eventBus._on("pagemode", onPageMode.bind(this), {\n      signal\n    });\n    eventBus._on("namedaction", onNamedAction.bind(this), {\n      signal\n    });\n    eventBus._on("presentationmodechanged", evt => pdfViewer.presentationModeState = evt.state, {\n      signal\n    });\n    eventBus._on("presentationmode", this.requestPresentationMode.bind(this), {\n      signal\n    });\n    eventBus._on("switchannotationeditormode", evt => pdfViewer.annotationEditorMode = evt, {\n      signal\n    });\n    eventBus._on("print", this.triggerPrinting.bind(this), {\n      signal\n    });\n    eventBus._on("download", this.downloadOrSave.bind(this), {\n      signal\n    });\n    eventBus._on("upload", onOpenFile.bind(this), {\n      signal\n    });\n    eventBus._on("firstpage", () => this.page = 1, {\n      signal\n    });\n    eventBus._on("lastpage", () => this.page = this.pagesCount, {\n      signal\n    });\n    eventBus._on("nextpage", () => pdfViewer.nextPage(), {\n      signal\n    });\n    eventBus._on("previouspage", () => pdfViewer.previousPage(), {\n      signal\n    });\n    eventBus._on("zoomin", this.zoomIn.bind(this), {\n      signal\n    });\n    eventBus._on("zoomout", this.zoomOut.bind(this), {\n      signal\n    });\n    eventBus._on("zoomreset", this.zoomReset.bind(this), {\n      signal\n    });\n    eventBus._on("pagenumberchanged", onPageNumberChanged.bind(this), {\n      signal\n    });\n    eventBus._on("scalechanged", evt => pdfViewer.currentScaleValue = evt.value, {\n      signal\n    });\n    eventBus._on("rotatecw", this.rotatePages.bind(this, 90), {\n      signal\n    });\n    eventBus._on("rotateccw", this.rotatePages.bind(this, -90), {\n      signal\n    });\n    eventBus._on("optionalcontentconfig", evt => pdfViewer.optionalContentConfigPromise = evt.promise, {\n      signal\n    });\n    eventBus._on("switchscrollmode", evt => pdfViewer.scrollMode = evt.mode, {\n      signal\n    });\n    eventBus._on("scrollmodechanged", onViewerModesChanged.bind(this, "scrollMode"), {\n      signal\n    });\n    eventBus._on("switchspreadmode", evt => pdfViewer.spreadMode = evt.mode, {\n      signal\n    });\n    eventBus._on("spreadmodechanged", onViewerModesChanged.bind(this, "spreadMode"), {\n      signal\n    });\n    eventBus._on("imagealttextsettings", onImageAltTextSettings.bind(this), {\n      signal\n    });\n    eventBus._on("documentproperties", () => pdfDocumentProperties?.open(), {\n      signal\n    });\n    eventBus._on("findfromurlhash", onFindFromUrlHash.bind(this), {\n      signal\n    });\n    eventBus._on("updatefindmatchescount", onUpdateFindMatchesCount.bind(this), {\n      signal\n    });\n    eventBus._on("updatefindcontrolstate", onUpdateFindControlState.bind(this), {\n      signal\n    });\n    eventBus._on("fileinputchange", onFileInputChange.bind(this), {\n      signal\n    });\n    eventBus._on("openfile", onOpenFile.bind(this), {\n      signal\n    });\n  },\n  bindWindowEvents() {\n    if (this._windowAbortController) {\n      return;\n    }\n    this._windowAbortController = new AbortController();\n    const {\n      eventBus,\n      appConfig: {\n        mainContainer\n      },\n      pdfViewer,\n      _windowAbortController: {\n        signal\n      }\n    } = this;\n    function addWindowResolutionChange(evt = null) {\n      if (evt) {\n        pdfViewer.refresh();\n      }\n      const mediaQueryList = window.matchMedia(`(resolution: ${window.devicePixelRatio || 1}dppx)`);\n      mediaQueryList.addEventListener("change", addWindowResolutionChange, {\n        once: true,\n        signal\n      });\n    }\n    addWindowResolutionChange();\n    window.addEventListener("wheel", onWheel.bind(this), {\n      passive: false,\n      signal\n    });\n    window.addEventListener("touchstart", onTouchStart.bind(this), {\n      passive: false,\n      signal\n    });\n    window.addEventListener("touchmove", onTouchMove.bind(this), {\n      passive: false,\n      signal\n    });\n    window.addEventListener("touchend", onTouchEnd.bind(this), {\n      passive: false,\n      signal\n    });\n    window.addEventListener("click", onClick.bind(this), {\n      signal\n    });\n    window.addEventListener("keydown", onKeyDown.bind(this), {\n      signal\n    });\n    window.addEventListener("keyup", onKeyUp.bind(this), {\n      signal\n    });\n    window.addEventListener("resize", () => eventBus.dispatch("resize", {\n      source: window\n    }), {\n      signal\n    });\n    window.addEventListener("hashchange", () => {\n      eventBus.dispatch("hashchange", {\n        source: window,\n        hash: document.location.hash.substring(1)\n      });\n    }, {\n      signal\n    });\n    window.addEventListener("beforeprint", () => eventBus.dispatch("beforeprint", {\n      source: window\n    }), {\n      signal\n    });\n    window.addEventListener("afterprint", () => eventBus.dispatch("afterprint", {\n      source: window\n    }), {\n      signal\n    });\n    window.addEventListener("updatefromsandbox", evt => {\n      eventBus.dispatch("updatefromsandbox", {\n        source: window,\n        detail: evt.detail\n      });\n    }, {\n      signal\n    });\n    if (!("onscrollend" in document.documentElement)) {\n      return;\n    }\n    ({\n      scrollTop: this._lastScrollTop,\n      scrollLeft: this._lastScrollLeft\n    } = mainContainer);\n    const scrollend = () => {\n      ({\n        scrollTop: this._lastScrollTop,\n        scrollLeft: this._lastScrollLeft\n      } = mainContainer);\n      this._isScrolling = false;\n      mainContainer.addEventListener("scroll", scroll, {\n        passive: true,\n        signal\n      });\n      mainContainer.removeEventListener("scrollend", scrollend);\n      mainContainer.removeEventListener("blur", scrollend);\n    };\n    const scroll = () => {\n      if (this._isCtrlKeyDown) {\n        return;\n      }\n      if (this._lastScrollTop === mainContainer.scrollTop && this._lastScrollLeft === mainContainer.scrollLeft) {\n        return;\n      }\n      mainContainer.removeEventListener("scroll", scroll, {\n        passive: true\n      });\n      this._isScrolling = true;\n      mainContainer.addEventListener("scrollend", scrollend, {\n        signal\n      });\n      mainContainer.addEventListener("blur", scrollend, {\n        signal\n      });\n    };\n    mainContainer.addEventListener("scroll", scroll, {\n      passive: true,\n      signal\n    });\n  },\n  unbindEvents() {\n    this._eventBusAbortController?.abort();\n    this._eventBusAbortController = null;\n  },\n  unbindWindowEvents() {\n    this._windowAbortController?.abort();\n    this._windowAbortController = null;\n  },\n  async testingClose() {\n    this.unbindEvents();\n    this.unbindWindowEvents();\n    this._globalAbortController?.abort();\n    this._globalAbortController = null;\n    this.findBar?.close();\n    await Promise.all([this.l10n?.destroy(), this.close()]);\n  },\n  _accumulateTicks(ticks, prop) {\n    if (this[prop] > 0 && ticks < 0 || this[prop] < 0 && ticks > 0) {\n      this[prop] = 0;\n    }\n    this[prop] += ticks;\n    const wholeTicks = Math.trunc(this[prop]);\n    this[prop] -= wholeTicks;\n    return wholeTicks;\n  },\n  _accumulateFactor(previousScale, factor, prop) {\n    if (factor === 1) {\n      return 1;\n    }\n    if (this[prop] > 1 && factor < 1 || this[prop] < 1 && factor > 1) {\n      this[prop] = 1;\n    }\n    const newFactor = Math.floor(previousScale * factor * this[prop] * 100) / (100 * previousScale);\n    this[prop] = factor / newFactor;\n    return newFactor;\n  },\n  _unblockDocumentLoadEvent() {\n    document.blockUnblockOnload?.(false);\n    this._unblockDocumentLoadEvent = () => {};\n  },\n  get scriptingReady() {\n    return this.pdfScriptingManager.ready;\n  }\n};\ninitCom(PDFViewerApplication);\n{\n  PDFPrintServiceFactory.initGlobals(PDFViewerApplication);\n}\n{\n  const HOSTED_VIEWER_ORIGINS = ["null", "http://mozilla.github.io", "https://mozilla.github.io"];\n  var validateFileURL = function (file) {\n    if (!file) {\n      return;\n    }\n    try {\n      const viewerOrigin = new URL(window.location.href).origin || "null";\n      if (HOSTED_VIEWER_ORIGINS.includes(viewerOrigin)) {\n        return;\n      }\n      const fileOrigin = new URL(file, window.location.href).origin;\n      if (fileOrigin !== viewerOrigin) {\n        throw new Error("file origin does not match viewer\'s");\n      }\n    } catch (ex) {\n      PDFViewerApplication._documentError("pdfjs-loading-error", {\n        message: ex.message\n      });\n      throw ex;\n    }\n  };\n  var onFileInputChange = function (evt) {\n    if (this.pdfViewer?.isInPresentationMode) {\n      return;\n    }\n    const file = evt.fileInput.files[0];\n    this.open({\n      url: URL.createObjectURL(file),\n      originalUrl: file.name\n    });\n  };\n  var onOpenFile = function (evt) {\n    this._openFileInput?.click();\n  };\n}\nfunction onPageRender({\n  pageNumber\n}) {\n  if (pageNumber === this.page) {\n    this.toolbar?.updateLoadingIndicatorState(true);\n  }\n}\nfunction onPageRendered({\n  pageNumber,\n  error\n}) {\n  if (pageNumber === this.page) {\n    this.toolbar?.updateLoadingIndicatorState(false);\n  }\n  if (this.pdfSidebar?.visibleView === SidebarView.THUMBS) {\n    const pageView = this.pdfViewer.getPageView(pageNumber - 1);\n    const thumbnailView = this.pdfThumbnailViewer?.getThumbnail(pageNumber - 1);\n    if (pageView) {\n      thumbnailView?.setImage(pageView);\n    }\n  }\n  if (error) {\n    this._otherError("pdfjs-rendering-error", error);\n  }\n}\nfunction onPageMode({\n  mode\n}) {\n  let view;\n  switch (mode) {\n    case "thumbs":\n      view = SidebarView.THUMBS;\n      break;\n    case "bookmarks":\n    case "outline":\n      view = SidebarView.OUTLINE;\n      break;\n    case "attachments":\n      view = SidebarView.ATTACHMENTS;\n      break;\n    case "layers":\n      view = SidebarView.LAYERS;\n      break;\n    case "none":\n      view = SidebarView.NONE;\n      break;\n    default:\n      console.error(\'Invalid "pagemode" hash parameter: \' + mode);\n      return;\n  }\n  this.pdfSidebar?.switchView(view, true);\n}\nfunction onNamedAction(evt) {\n  switch (evt.action) {\n    case "GoToPage":\n      this.appConfig.toolbar?.pageNumber.select();\n      break;\n    case "Find":\n      if (!this.supportsIntegratedFind) {\n        this.findBar?.toggle();\n      }\n      break;\n    case "Print":\n      this.triggerPrinting();\n      break;\n    case "SaveAs":\n      this.downloadOrSave();\n      break;\n  }\n}\nfunction onSidebarViewChanged({\n  view\n}) {\n  this.pdfRenderingQueue.isThumbnailViewEnabled = view === SidebarView.THUMBS;\n  if (this.isInitialViewSet) {\n    this.store?.set("sidebarView", view).catch(() => {});\n  }\n}\nfunction onUpdateViewarea({\n  location\n}) {\n  if (this.isInitialViewSet) {\n    this.store?.setMultiple({\n      page: location.pageNumber,\n      zoom: location.scale,\n      scrollLeft: location.left,\n      scrollTop: location.top,\n      rotation: location.rotation\n    }).catch(() => {});\n  }\n  if (this.appConfig.secondaryToolbar) {\n    this.appConfig.secondaryToolbar.viewBookmarkButton.href = this.pdfLinkService.getAnchorUrl(location.pdfOpenParams);\n  }\n}\nfunction onViewerModesChanged(name, evt) {\n  if (this.isInitialViewSet && !this.pdfViewer.isInPresentationMode) {\n    this.store?.set(name, evt.mode).catch(() => {});\n  }\n}\nfunction onResize() {\n  const {\n    pdfDocument,\n    pdfViewer,\n    pdfRenderingQueue\n  } = this;\n  if (pdfRenderingQueue.printing && window.matchMedia("print").matches) {\n    return;\n  }\n  if (!pdfDocument) {\n    return;\n  }\n  const currentScaleValue = pdfViewer.currentScaleValue;\n  if (currentScaleValue === "auto" || currentScaleValue === "page-fit" || currentScaleValue === "page-width") {\n    pdfViewer.currentScaleValue = currentScaleValue;\n  }\n  pdfViewer.update();\n}\nfunction onHashchange(evt) {\n  const hash = evt.hash;\n  if (!hash) {\n    return;\n  }\n  if (!this.isInitialViewSet) {\n    this.initialBookmark = hash;\n  } else if (!this.pdfHistory?.popStateInProgress) {\n    this.pdfLinkService.setHash(hash);\n  }\n}\nfunction onPageNumberChanged(evt) {\n  const {\n    pdfViewer\n  } = this;\n  if (evt.value !== "") {\n    this.pdfLinkService.goToPage(evt.value);\n  }\n  if (evt.value !== pdfViewer.currentPageNumber.toString() && evt.value !== pdfViewer.currentPageLabel) {\n    this.toolbar?.setPageNumber(pdfViewer.currentPageNumber, pdfViewer.currentPageLabel);\n  }\n}\nfunction onImageAltTextSettings() {\n  this.imageAltTextSettings?.open({\n    enableGuessAltText: AppOptions.get("enableGuessAltText"),\n    enableNewAltTextWhenAddingImage: AppOptions.get("enableNewAltTextWhenAddingImage")\n  });\n}\nfunction onFindFromUrlHash(evt) {\n  this.eventBus.dispatch("find", {\n    source: evt.source,\n    type: "",\n    query: evt.query,\n    caseSensitive: false,\n    entireWord: false,\n    highlightAll: true,\n    findPrevious: false,\n    matchDiacritics: true\n  });\n}\nfunction onUpdateFindMatchesCount({\n  matchesCount\n}) {\n  if (this.supportsIntegratedFind) {\n    this.externalServices.updateFindMatchesCount(matchesCount);\n  } else {\n    this.findBar?.updateResultsCount(matchesCount);\n  }\n}\nfunction onUpdateFindControlState({\n  state,\n  previous,\n  entireWord,\n  matchesCount,\n  rawQuery\n}) {\n  if (this.supportsIntegratedFind) {\n    this.externalServices.updateFindControlState({\n      result: state,\n      findPrevious: previous,\n      entireWord,\n      matchesCount,\n      rawQuery\n    });\n  } else {\n    this.findBar?.updateUIState(state, previous, matchesCount);\n  }\n}\nfunction onScaleChanging(evt) {\n  this.toolbar?.setPageScale(evt.presetValue, evt.scale);\n  this.pdfViewer.update();\n}\nfunction onRotationChanging(evt) {\n  if (this.pdfThumbnailViewer) {\n    this.pdfThumbnailViewer.pagesRotation = evt.pagesRotation;\n  }\n  this.forceRendering();\n  this.pdfViewer.currentPageNumber = evt.pageNumber;\n}\nfunction onPageChanging({\n  pageNumber,\n  pageLabel\n}) {\n  this.toolbar?.setPageNumber(pageNumber, pageLabel);\n  this.secondaryToolbar?.setPageNumber(pageNumber);\n  if (this.pdfSidebar?.visibleView === SidebarView.THUMBS) {\n    this.pdfThumbnailViewer?.scrollThumbnailIntoView(pageNumber);\n  }\n  const currentPage = this.pdfViewer.getPageView(pageNumber - 1);\n  this.toolbar?.updateLoadingIndicatorState(currentPage?.renderingState === RenderingStates.RUNNING);\n}\nfunction onWheel(evt) {\n  const {\n    pdfViewer,\n    supportsMouseWheelZoomCtrlKey,\n    supportsMouseWheelZoomMetaKey,\n    supportsPinchToZoom\n  } = this;\n  if (pdfViewer.isInPresentationMode) {\n    return;\n  }\n  const deltaMode = evt.deltaMode;\n  let scaleFactor = Math.exp(-evt.deltaY / 100);\n  const isBuiltInMac = false;\n  const isPinchToZoom = evt.ctrlKey && !this._isCtrlKeyDown && deltaMode === WheelEvent.DOM_DELTA_PIXEL && evt.deltaX === 0 && (Math.abs(scaleFactor - 1) < 0.05 || isBuiltInMac) && evt.deltaZ === 0;\n  const origin = [evt.clientX, evt.clientY];\n  if (isPinchToZoom || evt.ctrlKey && supportsMouseWheelZoomCtrlKey || evt.metaKey && supportsMouseWheelZoomMetaKey) {\n    evt.preventDefault();\n    if (this._isScrolling || document.visibilityState === "hidden" || this.overlayManager.active) {\n      return;\n    }\n    if (isPinchToZoom && supportsPinchToZoom) {\n      scaleFactor = this._accumulateFactor(pdfViewer.currentScale, scaleFactor, "_wheelUnusedFactor");\n      this.updateZoom(null, scaleFactor, origin);\n    } else {\n      const delta = normalizeWheelEventDirection(evt);\n      let ticks = 0;\n      if (deltaMode === WheelEvent.DOM_DELTA_LINE || deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n        ticks = Math.abs(delta) >= 1 ? Math.sign(delta) : this._accumulateTicks(delta, "_wheelUnusedTicks");\n      } else {\n        const PIXELS_PER_LINE_SCALE = 30;\n        ticks = this._accumulateTicks(delta / PIXELS_PER_LINE_SCALE, "_wheelUnusedTicks");\n      }\n      this.updateZoom(ticks, null, origin);\n    }\n  }\n}\nfunction onTouchStart(evt) {\n  if (this.pdfViewer.isInPresentationMode || evt.touches.length < 2) {\n    return;\n  }\n  evt.preventDefault();\n  if (evt.touches.length !== 2 || this.overlayManager.active) {\n    this._touchInfo = null;\n    return;\n  }\n  let [touch0, touch1] = evt.touches;\n  if (touch0.identifier > touch1.identifier) {\n    [touch0, touch1] = [touch1, touch0];\n  }\n  this._touchInfo = {\n    touch0X: touch0.pageX,\n    touch0Y: touch0.pageY,\n    touch1X: touch1.pageX,\n    touch1Y: touch1.pageY\n  };\n}\nfunction onTouchMove(evt) {\n  if (!this._touchInfo || evt.touches.length !== 2) {\n    return;\n  }\n  const {\n    pdfViewer,\n    _touchInfo,\n    supportsPinchToZoom\n  } = this;\n  let [touch0, touch1] = evt.touches;\n  if (touch0.identifier > touch1.identifier) {\n    [touch0, touch1] = [touch1, touch0];\n  }\n  const {\n    pageX: page0X,\n    pageY: page0Y\n  } = touch0;\n  const {\n    pageX: page1X,\n    pageY: page1Y\n  } = touch1;\n  const {\n    touch0X: pTouch0X,\n    touch0Y: pTouch0Y,\n    touch1X: pTouch1X,\n    touch1Y: pTouch1Y\n  } = _touchInfo;\n  if (Math.abs(pTouch0X - page0X) <= 1 && Math.abs(pTouch0Y - page0Y) <= 1 && Math.abs(pTouch1X - page1X) <= 1 && Math.abs(pTouch1Y - page1Y) <= 1) {\n    return;\n  }\n  _touchInfo.touch0X = page0X;\n  _touchInfo.touch0Y = page0Y;\n  _touchInfo.touch1X = page1X;\n  _touchInfo.touch1Y = page1Y;\n  if (pTouch0X === page0X && pTouch0Y === page0Y) {\n    const v1X = pTouch1X - page0X;\n    const v1Y = pTouch1Y - page0Y;\n    const v2X = page1X - page0X;\n    const v2Y = page1Y - page0Y;\n    const det = v1X * v2Y - v1Y * v2X;\n    if (Math.abs(det) > 0.02 * Math.hypot(v1X, v1Y) * Math.hypot(v2X, v2Y)) {\n      return;\n    }\n  } else if (pTouch1X === page1X && pTouch1Y === page1Y) {\n    const v1X = pTouch0X - page1X;\n    const v1Y = pTouch0Y - page1Y;\n    const v2X = page0X - page1X;\n    const v2Y = page0Y - page1Y;\n    const det = v1X * v2Y - v1Y * v2X;\n    if (Math.abs(det) > 0.02 * Math.hypot(v1X, v1Y) * Math.hypot(v2X, v2Y)) {\n      return;\n    }\n  } else {\n    const diff0X = page0X - pTouch0X;\n    const diff1X = page1X - pTouch1X;\n    const diff0Y = page0Y - pTouch0Y;\n    const diff1Y = page1Y - pTouch1Y;\n    const dotProduct = diff0X * diff1X + diff0Y * diff1Y;\n    if (dotProduct >= 0) {\n      return;\n    }\n  }\n  evt.preventDefault();\n  const origin = [(page0X + page1X) / 2, (page0Y + page1Y) / 2];\n  const distance = Math.hypot(page0X - page1X, page0Y - page1Y) || 1;\n  const pDistance = Math.hypot(pTouch0X - pTouch1X, pTouch0Y - pTouch1Y) || 1;\n  if (supportsPinchToZoom) {\n    const newScaleFactor = this._accumulateFactor(pdfViewer.currentScale, distance / pDistance, "_touchUnusedFactor");\n    this.updateZoom(null, newScaleFactor, origin);\n  } else {\n    const PIXELS_PER_LINE_SCALE = 30;\n    const ticks = this._accumulateTicks((distance - pDistance) / PIXELS_PER_LINE_SCALE, "_touchUnusedTicks");\n    this.updateZoom(ticks, null, origin);\n  }\n}\nfunction onTouchEnd(evt) {\n  if (!this._touchInfo) {\n    return;\n  }\n  evt.preventDefault();\n  this._touchInfo = null;\n  this._touchUnusedTicks = 0;\n  this._touchUnusedFactor = 1;\n}\nfunction onClick(evt) {\n  if (!this.secondaryToolbar?.isOpen) {\n    return;\n  }\n  const appConfig = this.appConfig;\n  if (this.pdfViewer.containsElement(evt.target) || appConfig.toolbar?.container.contains(evt.target) && evt.target !== appConfig.secondaryToolbar?.toggleButton) {\n    this.secondaryToolbar.close();\n  }\n}\nfunction onKeyUp(evt) {\n  if (evt.key === "Control") {\n    this._isCtrlKeyDown = false;\n  }\n}\nfunction onKeyDown(evt) {\n  this._isCtrlKeyDown = evt.key === "Control";\n  if (this.overlayManager.active) {\n    return;\n  }\n  const {\n    eventBus,\n    pdfViewer\n  } = this;\n  const isViewerInPresentationMode = pdfViewer.isInPresentationMode;\n  let handled = false,\n    ensureViewerFocused = false;\n  const cmd = (evt.ctrlKey ? 1 : 0) | (evt.altKey ? 2 : 0) | (evt.shiftKey ? 4 : 0) | (evt.metaKey ? 8 : 0);\n  if (cmd === 1 || cmd === 8 || cmd === 5 || cmd === 12) {\n    switch (evt.keyCode) {\n      case 70:\n        if (!this.supportsIntegratedFind && !evt.shiftKey) {\n          this.findBar?.open();\n          handled = true;\n        }\n        break;\n      case 71:\n        if (!this.supportsIntegratedFind) {\n          const {\n            state\n          } = this.findController;\n          if (state) {\n            const newState = {\n              source: window,\n              type: "again",\n              findPrevious: cmd === 5 || cmd === 12\n            };\n            eventBus.dispatch("find", {\n              ...state,\n              ...newState\n            });\n          }\n          handled = true;\n        }\n        break;\n      case 61:\n      case 107:\n      case 187:\n      case 171:\n        this.zoomIn();\n        handled = true;\n        break;\n      case 173:\n      case 109:\n      case 189:\n        this.zoomOut();\n        handled = true;\n        break;\n      case 48:\n      case 96:\n        if (!isViewerInPresentationMode) {\n          setTimeout(() => {\n            this.zoomReset();\n          });\n          handled = false;\n        }\n        break;\n      case 38:\n        if (isViewerInPresentationMode || this.page > 1) {\n          this.page = 1;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n        break;\n      case 40:\n        if (isViewerInPresentationMode || this.page < this.pagesCount) {\n          this.page = this.pagesCount;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n        break;\n    }\n  }\n  if (cmd === 1 || cmd === 8) {\n    switch (evt.keyCode) {\n      case 83:\n        eventBus.dispatch("download", {\n          source: window\n        });\n        handled = true;\n        break;\n      case 79:\n        {\n          eventBus.dispatch("openfile", {\n            source: window\n          });\n          handled = true;\n        }\n        break;\n    }\n  }\n  if (cmd === 3 || cmd === 10) {\n    switch (evt.keyCode) {\n      case 80:\n        this.requestPresentationMode();\n        handled = true;\n        this.externalServices.reportTelemetry({\n          type: "buttons",\n          data: {\n            id: "presentationModeKeyboard"\n          }\n        });\n        break;\n      case 71:\n        if (this.appConfig.toolbar) {\n          this.appConfig.toolbar.pageNumber.select();\n          handled = true;\n        }\n        break;\n    }\n  }\n  if (handled) {\n    if (ensureViewerFocused && !isViewerInPresentationMode) {\n      pdfViewer.focus();\n    }\n    evt.preventDefault();\n    return;\n  }\n  const curElement = getActiveOrFocusedElement();\n  const curElementTagName = curElement?.tagName.toUpperCase();\n  if (curElementTagName === "INPUT" || curElementTagName === "TEXTAREA" || curElementTagName === "SELECT" || curElementTagName === "BUTTON" && (evt.keyCode === 13 || evt.keyCode === 32) || curElement?.isContentEditable) {\n    if (evt.keyCode !== 27) {\n      return;\n    }\n  }\n  if (cmd === 0) {\n    let turnPage = 0,\n      turnOnlyIfPageFit = false;\n    switch (evt.keyCode) {\n      case 38:\n        if (this.supportsCaretBrowsingMode) {\n          this.moveCaret(true, false);\n          handled = true;\n          break;\n        }\n      case 33:\n        if (pdfViewer.isVerticalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n        turnPage = -1;\n        break;\n      case 8:\n        if (!isViewerInPresentationMode) {\n          turnOnlyIfPageFit = true;\n        }\n        turnPage = -1;\n        break;\n      case 37:\n        if (this.supportsCaretBrowsingMode) {\n          return;\n        }\n        if (pdfViewer.isHorizontalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n      case 75:\n      case 80:\n        turnPage = -1;\n        break;\n      case 27:\n        if (this.secondaryToolbar?.isOpen) {\n          this.secondaryToolbar.close();\n          handled = true;\n        }\n        if (!this.supportsIntegratedFind && this.findBar?.opened) {\n          this.findBar.close();\n          handled = true;\n        }\n        break;\n      case 40:\n        if (this.supportsCaretBrowsingMode) {\n          this.moveCaret(false, false);\n          handled = true;\n          break;\n        }\n      case 34:\n        if (pdfViewer.isVerticalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n        turnPage = 1;\n        break;\n      case 13:\n      case 32:\n        if (!isViewerInPresentationMode) {\n          turnOnlyIfPageFit = true;\n        }\n        turnPage = 1;\n        break;\n      case 39:\n        if (this.supportsCaretBrowsingMode) {\n          return;\n        }\n        if (pdfViewer.isHorizontalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n      case 74:\n      case 78:\n        turnPage = 1;\n        break;\n      case 36:\n        if (isViewerInPresentationMode || this.page > 1) {\n          this.page = 1;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n        break;\n      case 35:\n        if (isViewerInPresentationMode || this.page < this.pagesCount) {\n          this.page = this.pagesCount;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n        break;\n      case 83:\n        this.pdfCursorTools?.switchTool(CursorTool.SELECT);\n        break;\n      case 72:\n        this.pdfCursorTools?.switchTool(CursorTool.HAND);\n        break;\n      case 82:\n        this.rotatePages(90);\n        break;\n      case 115:\n        this.pdfSidebar?.toggle();\n        break;\n    }\n    if (turnPage !== 0 && (!turnOnlyIfPageFit || pdfViewer.currentScaleValue === "page-fit")) {\n      if (turnPage > 0) {\n        pdfViewer.nextPage();\n      } else {\n        pdfViewer.previousPage();\n      }\n      handled = true;\n    }\n  }\n  if (cmd === 4) {\n    switch (evt.keyCode) {\n      case 13:\n      case 32:\n        if (!isViewerInPresentationMode && pdfViewer.currentScaleValue !== "page-fit") {\n          break;\n        }\n        pdfViewer.previousPage();\n        handled = true;\n        break;\n      case 38:\n        this.moveCaret(true, true);\n        handled = true;\n        break;\n      case 40:\n        this.moveCaret(false, true);\n        handled = true;\n        break;\n      case 82:\n        this.rotatePages(-90);\n        break;\n    }\n  }\n  if (!handled && !isViewerInPresentationMode) {\n    if (evt.keyCode >= 33 && evt.keyCode <= 40 || evt.keyCode === 32 && curElementTagName !== "BUTTON") {\n      ensureViewerFocused = true;\n    }\n  }\n  if (ensureViewerFocused && !pdfViewer.containsElement(curElement)) {\n    pdfViewer.focus();\n  }\n  if (handled) {\n    evt.preventDefault();\n  }\n}\nfunction beforeUnload(evt) {\n  evt.preventDefault();\n  evt.returnValue = "";\n  return false;\n}\n\n;// CONCATENATED MODULE:./viewer.js\n\n\n\n\nconst pdfjsVersion = "4.6.64";\nconst pdfjsBuild = "87acda686";\nconst AppConstants = {\n  LinkTarget: LinkTarget,\n  RenderingStates: RenderingStates,\n  ScrollMode: ScrollMode,\n  SpreadMode: SpreadMode\n};\nwindow.PDFViewerApplication = PDFViewerApplication;\nwindow.PDFViewerApplicationConstants = AppConstants;\nwindow.PDFViewerApplicationOptions = AppOptions;\nfunction getViewerConfiguration() {\n  return {\n    appContainer: document.body,\n    mainContainer: document.getElementById("viewerContainer"),\n    viewerContainer: document.getElementById("viewer"),\n    toolbar: {\n      container: document.getElementById("toolbarViewer"),\n      numPages: document.getElementById("numPages"),\n      pageNumber: document.getElementById("pageNumber"),\n      scaleSelect: document.getElementById("scaleSelect"),\n      customScaleOption: document.getElementById("customScaleOption"),\n      previous: document.getElementById("previous"),\n      next: document.getElementById("next"),\n      zoomIn: document.getElementById("zoomIn"),\n      zoomOut: document.getElementById("zoomOut"),\n      print: document.getElementById("print"),\n      editorFreeTextButton: document.getElementById("editorFreeText"),\n      editorFreeTextParamsToolbar: document.getElementById("editorFreeTextParamsToolbar"),\n      editorHighlightButton: document.getElementById("editorHighlight"),\n      editorHighlightParamsToolbar: document.getElementById("editorHighlightParamsToolbar"),\n      editorHighlightColorPicker: document.getElementById("editorHighlightColorPicker"),\n      editorInkButton: document.getElementById("editorInk"),\n      editorInkParamsToolbar: document.getElementById("editorInkParamsToolbar"),\n      editorStampButton: document.getElementById("editorStamp"),\n      editorStampParamsToolbar: document.getElementById("editorStampParamsToolbar"),\n      download: document.getElementById("download"),\n      upload: document.getElementById("upload")\n    },\n    secondaryToolbar: {\n      toolbar: document.getElementById("secondaryToolbar"),\n      toggleButton: document.getElementById("secondaryToolbarToggle"),\n      presentationModeButton: document.getElementById("presentationMode"),\n      openFileButton: document.getElementById("secondaryOpenFile"),\n      printButton: document.getElementById("secondaryPrint"),\n      downloadButton: document.getElementById("secondaryDownload"),\n      viewBookmarkButton: document.getElementById("viewBookmark"),\n      firstPageButton: document.getElementById("firstPage"),\n      lastPageButton: document.getElementById("lastPage"),\n      pageRotateCwButton: document.getElementById("pageRotateCw"),\n      pageRotateCcwButton: document.getElementById("pageRotateCcw"),\n      cursorSelectToolButton: document.getElementById("cursorSelectTool"),\n      cursorHandToolButton: document.getElementById("cursorHandTool"),\n      scrollPageButton: document.getElementById("scrollPage"),\n      scrollVerticalButton: document.getElementById("scrollVertical"),\n      scrollHorizontalButton: document.getElementById("scrollHorizontal"),\n      scrollWrappedButton: document.getElementById("scrollWrapped"),\n      spreadNoneButton: document.getElementById("spreadNone"),\n      spreadOddButton: document.getElementById("spreadOdd"),\n      spreadEvenButton: document.getElementById("spreadEven"),\n      imageAltTextSettingsButton: document.getElementById("imageAltTextSettings"),\n      imageAltTextSettingsSeparator: document.getElementById("imageAltTextSettingsSeparator"),\n      documentPropertiesButton: document.getElementById("documentProperties")\n    },\n    sidebar: {\n      outerContainer: document.getElementById("outerContainer"),\n      sidebarContainer: document.getElementById("sidebarContainer"),\n      toggleButton: document.getElementById("sidebarToggle"),\n      resizer: document.getElementById("sidebarResizer"),\n      thumbnailButton: document.getElementById("viewThumbnail"),\n      outlineButton: document.getElementById("viewOutline"),\n      attachmentsButton: document.getElementById("viewAttachments"),\n      layersButton: document.getElementById("viewLayers"),\n      thumbnailView: document.getElementById("thumbnailView"),\n      outlineView: document.getElementById("outlineView"),\n      attachmentsView: document.getElementById("attachmentsView"),\n      layersView: document.getElementById("layersView"),\n      currentOutlineItemButton: document.getElementById("currentOutlineItem")\n    },\n    passwordOverlay: {\n      dialog: document.getElementById("passwordDialog"),\n      label: document.getElementById("passwordText"),\n      input: document.getElementById("password"),\n      submitButton: document.getElementById("passwordSubmit"),\n      cancelButton: document.getElementById("passwordCancel")\n    },\n    documentProperties: {\n      dialog: document.getElementById("documentPropertiesDialog"),\n      closeButton: document.getElementById("documentPropertiesClose"),\n      fields: {\n        fileName: document.getElementById("fileNameField"),\n        fileSize: document.getElementById("fileSizeField"),\n        title: document.getElementById("titleField"),\n        author: document.getElementById("authorField"),\n        subject: document.getElementById("subjectField"),\n        keywords: document.getElementById("keywordsField"),\n        creationDate: document.getElementById("creationDateField"),\n        modificationDate: document.getElementById("modificationDateField"),\n        creator: document.getElementById("creatorField"),\n        producer: document.getElementById("producerField"),\n        version: document.getElementById("versionField"),\n        pageCount: document.getElementById("pageCountField"),\n        pageSize: document.getElementById("pageSizeField"),\n        linearized: document.getElementById("linearizedField")\n      }\n    },\n    altTextDialog: {\n      dialog: document.getElementById("altTextDialog"),\n      optionDescription: document.getElementById("descriptionButton"),\n      optionDecorative: document.getElementById("decorativeButton"),\n      textarea: document.getElementById("descriptionTextarea"),\n      cancelButton: document.getElementById("altTextCancel"),\n      saveButton: document.getElementById("altTextSave")\n    },\n    newAltTextDialog: {\n      dialog: document.getElementById("newAltTextDialog"),\n      title: document.getElementById("newAltTextTitle"),\n      descriptionContainer: document.getElementById("newAltTextDescriptionContainer"),\n      textarea: document.getElementById("newAltTextDescriptionTextarea"),\n      disclaimer: document.getElementById("newAltTextDisclaimer"),\n      learnMore: document.getElementById("newAltTextLearnMore"),\n      imagePreview: document.getElementById("newAltTextImagePreview"),\n      createAutomatically: document.getElementById("newAltTextCreateAutomatically"),\n      createAutomaticallyButton: document.getElementById("newAltTextCreateAutomaticallyButton"),\n      downloadModel: document.getElementById("newAltTextDownloadModel"),\n      downloadModelDescription: document.getElementById("newAltTextDownloadModelDescription"),\n      error: document.getElementById("newAltTextError"),\n      errorCloseButton: document.getElementById("newAltTextCloseButton"),\n      cancelButton: document.getElementById("newAltTextCancel"),\n      notNowButton: document.getElementById("newAltTextNotNow"),\n      saveButton: document.getElementById("newAltTextSave")\n    },\n    altTextSettingsDialog: {\n      dialog: document.getElementById("altTextSettingsDialog"),\n      createModelButton: document.getElementById("createModelButton"),\n      aiModelSettings: document.getElementById("aiModelSettings"),\n      learnMore: document.getElementById("altTextSettingsLearnMore"),\n      deleteModelButton: document.getElementById("deleteModelButton"),\n      downloadModelButton: document.getElementById("downloadModelButton"),\n      showAltTextDialogButton: document.getElementById("showAltTextDialogButton"),\n      altTextSettingsCloseButton: document.getElementById("altTextSettingsCloseButton"),\n      closeButton: document.getElementById("altTextSettingsCloseButton")\n    },\n    annotationEditorParams: {\n      editorFreeTextFontSize: document.getElementById("editorFreeTextFontSize"),\n      editorFreeTextColor: document.getElementById("editorFreeTextColor"),\n      editorInkColor: document.getElementById("editorInkColor"),\n      editorInkThickness: document.getElementById("editorInkThickness"),\n      editorInkOpacity: document.getElementById("editorInkOpacity"),\n      editorStampAddImage: document.getElementById("editorStampAddImage"),\n      editorFreeHighlightThickness: document.getElementById("editorFreeHighlightThickness"),\n      editorHighlightShowAll: document.getElementById("editorHighlightShowAll")\n    },\n    printContainer: document.getElementById("printContainer")\n  };\n}\nfunction webViewerLoad() {\n  const config = getViewerConfiguration();\n  const event = new CustomEvent("webviewerloaded", {\n    bubbles: true,\n    cancelable: true,\n    detail: {\n      source: window\n    }\n  });\n  try {\n    parent.document.dispatchEvent(event);\n  } catch (ex) {\n    console.error(`webviewerloaded: ${ex}`);\n    document.dispatchEvent(event);\n  }\n  PDFViewerApplication.run(config);\n}\ndocument.blockUnblockOnload?.(true);\nif (document.readyState === "interactive" || document.readyState === "complete") {\n  webViewerLoad();\n} else {\n  document.addEventListener("DOMContentLoaded", webViewerLoad, true);\n}\n\nvar __webpack_exports__PDFViewerApplication = __webpack_exports__.PDFViewerApplication;\nvar __webpack_exports__PDFViewerApplicationConstants = __webpack_exports__.PDFViewerApplicationConstants;\nvar __webpack_exports__PDFViewerApplicationOptions = __webpack_exports__.PDFViewerApplicationOptions;\nexport { __webpack_exports__PDFViewerApplication as PDFViewerApplication, __webpack_exports__PDFViewerApplicationConstants as PDFViewerApplicationConstants, __webpack_exports__PDFViewerApplicationOptions as PDFViewerApplicationOptions };\n\n//# sourceMappingURL=viewer.mjs.map';

// public/pdf.min.mjs
var pdf_min_default = '/**\n * @licstart The following is the entire license notice for the\n * JavaScript code in this page\n *\n * Copyright 2024 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * JavaScript code in this page\n */var t={d:(e,i)=>{for(var s in i)t.o(i,s)&&!t.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:i[s]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)},__webpack_exports__ = globalThis.pdfjsLib = {};t.d(__webpack_exports__,{AbortException:()=>AbortException,AnnotationEditorLayer:()=>AnnotationEditorLayer,AnnotationEditorParamsType:()=>m,AnnotationEditorType:()=>g,AnnotationEditorUIManager:()=>AnnotationEditorUIManager,AnnotationLayer:()=>AnnotationLayer,AnnotationMode:()=>p,CMapCompressionType:()=>X,ColorPicker:()=>ColorPicker,DOMSVGFactory:()=>DOMSVGFactory,DrawLayer:()=>DrawLayer,FeatureTest:()=>util_FeatureTest,GlobalWorkerOptions:()=>GlobalWorkerOptions,ImageKind:()=>_,InvalidPDFException:()=>InvalidPDFException,MissingPDFException:()=>MissingPDFException,OPS:()=>K,PDFDataRangeTransport:()=>PDFDataRangeTransport,PDFDateString:()=>PDFDateString,PDFWorker:()=>PDFWorker,PasswordResponses:()=>Y,PermissionFlag:()=>f,PixelsPerInch:()=>PixelsPerInch,RenderingCancelledException:()=>RenderingCancelledException,TextLayer:()=>TextLayer,UnexpectedResponseException:()=>UnexpectedResponseException,Util:()=>Util,VerbosityLevel:()=>q,XfaLayer:()=>XfaLayer,build:()=>Yt,createValidAbsoluteUrl:()=>createValidAbsoluteUrl,fetchData:()=>fetchData,getDocument:()=>getDocument,getFilenameFromUrl:()=>getFilenameFromUrl,getPdfFilenameFromUrl:()=>getPdfFilenameFromUrl,getXfaPageViewport:()=>getXfaPageViewport,isDataScheme:()=>isDataScheme,isPdfFile:()=>isPdfFile,noContextMenu:()=>noContextMenu,normalizeUnicode:()=>normalizeUnicode,setLayerDimensions:()=>setLayerDimensions,shadow:()=>shadow,version:()=>Kt});const e=!("object"!=typeof process||process+""!="[object process]"||process.versions.nw||process.versions.electron&&process.type&&"browser"!==process.type),i=[1,0,0,1,0,0],s=[.001,0,0,.001,0,0],n=1.35,a=1,r=2,o=4,l=16,h=32,d=64,c=128,u=256,p={DISABLE:0,ENABLE:1,ENABLE_FORMS:2,ENABLE_STORAGE:3},g={DISABLE:-1,NONE:0,FREETEXT:3,HIGHLIGHT:9,STAMP:13,INK:15},m={RESIZE:1,CREATE:2,FREETEXT_SIZE:11,FREETEXT_COLOR:12,FREETEXT_OPACITY:13,INK_COLOR:21,INK_THICKNESS:22,INK_OPACITY:23,HIGHLIGHT_COLOR:31,HIGHLIGHT_DEFAULT_COLOR:32,HIGHLIGHT_THICKNESS:33,HIGHLIGHT_FREE:34,HIGHLIGHT_SHOW_ALL:35},f={PRINT:4,MODIFY_CONTENTS:8,COPY:16,MODIFY_ANNOTATIONS:32,FILL_INTERACTIVE_FORMS:256,COPY_FOR_ACCESSIBILITY:512,ASSEMBLE:1024,PRINT_HIGH_QUALITY:2048},b=0,A=1,v=2,y=3,w=3,x=4,_={GRAYSCALE_1BPP:1,RGB_24BPP:2,RGBA_32BPP:3},E=1,C=2,S=3,T=4,M=5,k=6,P=7,F=8,D=9,R=10,I=11,L=12,N=13,O=14,B=15,H=16,U=17,z=20,j=1,W=2,$=3,G=4,V=5,q={ERRORS:0,WARNINGS:1,INFOS:5},X={NONE:0,BINARY:1},K={dependency:1,setLineWidth:2,setLineCap:3,setLineJoin:4,setMiterLimit:5,setDash:6,setRenderingIntent:7,setFlatness:8,setGState:9,save:10,restore:11,transform:12,moveTo:13,lineTo:14,curveTo:15,curveTo2:16,curveTo3:17,closePath:18,rectangle:19,stroke:20,closeStroke:21,fill:22,eoFill:23,fillStroke:24,eoFillStroke:25,closeFillStroke:26,closeEOFillStroke:27,endPath:28,clip:29,eoClip:30,beginText:31,endText:32,setCharSpacing:33,setWordSpacing:34,setHScale:35,setLeading:36,setFont:37,setTextRenderingMode:38,setTextRise:39,moveText:40,setLeadingMoveText:41,setTextMatrix:42,nextLine:43,showText:44,showSpacedText:45,nextLineShowText:46,nextLineSetSpacingShowText:47,setCharWidth:48,setCharWidthAndBounds:49,setStrokeColorSpace:50,setFillColorSpace:51,setStrokeColor:52,setStrokeColorN:53,setFillColor:54,setFillColorN:55,setStrokeGray:56,setFillGray:57,setStrokeRGBColor:58,setFillRGBColor:59,setStrokeCMYKColor:60,setFillCMYKColor:61,shadingFill:62,beginInlineImage:63,beginImageData:64,endInlineImage:65,paintXObject:66,markPoint:67,markPointProps:68,beginMarkedContent:69,beginMarkedContentProps:70,endMarkedContent:71,beginCompat:72,endCompat:73,paintFormXObjectBegin:74,paintFormXObjectEnd:75,beginGroup:76,endGroup:77,beginAnnotation:80,endAnnotation:81,paintImageMaskXObject:83,paintImageMaskXObjectGroup:84,paintImageXObject:85,paintInlineImageXObject:86,paintInlineImageXObjectGroup:87,paintImageXObjectRepeat:88,paintImageMaskXObjectRepeat:89,paintSolidColorImageMask:90,constructPath:91,setStrokeTransparent:92,setFillTransparent:93},Y={NEED_PASSWORD:1,INCORRECT_PASSWORD:2};let Q=q.WARNINGS;function setVerbosityLevel(t){Number.isInteger(t)&&(Q=t)}function getVerbosityLevel(){return Q}function info(t){Q>=q.INFOS&&console.log(`Info: ${t}`)}function warn(t){Q>=q.WARNINGS&&console.log(`Warning: ${t}`)}function unreachable(t){throw new Error(t)}function assert(t,e){t||unreachable(e)}function createValidAbsoluteUrl(t,e=null,i=null){if(!t)return null;try{if(i&&"string"==typeof t){if(i.addDefaultProtocol&&t.startsWith("www.")){const e=t.match(/\\./g);e?.length>=2&&(t=`http://${t}`)}if(i.tryConvertEncoding)try{t=function stringToUTF8String(t){return decodeURIComponent(escape(t))}(t)}catch{}}const s=e?new URL(t,e):new URL(t);if(function _isValidProtocol(t){switch(t?.protocol){case"http:":case"https:":case"ftp:":case"mailto:":case"tel:":return!0;default:return!1}}(s))return s}catch{}return null}function shadow(t,e,i,s=!1){Object.defineProperty(t,e,{value:i,enumerable:!s,configurable:!0,writable:!1});return i}const J=function BaseExceptionClosure(){function BaseException(t,e){this.message=t;this.name=e}BaseException.prototype=new Error;BaseException.constructor=BaseException;return BaseException}();class PasswordException extends J{constructor(t,e){super(t,"PasswordException");this.code=e}}class UnknownErrorException extends J{constructor(t,e){super(t,"UnknownErrorException");this.details=e}}class InvalidPDFException extends J{constructor(t){super(t,"InvalidPDFException")}}class MissingPDFException extends J{constructor(t){super(t,"MissingPDFException")}}class UnexpectedResponseException extends J{constructor(t,e){super(t,"UnexpectedResponseException");this.status=e}}class FormatError extends J{constructor(t){super(t,"FormatError")}}class AbortException extends J{constructor(t){super(t,"AbortException")}}function bytesToString(t){"object"==typeof t&&void 0!==t?.length||unreachable("Invalid argument for bytesToString");const e=t.length,i=8192;if(e<i)return String.fromCharCode.apply(null,t);const s=[];for(let n=0;n<e;n+=i){const a=Math.min(n+i,e),r=t.subarray(n,a);s.push(String.fromCharCode.apply(null,r))}return s.join("")}function stringToBytes(t){"string"!=typeof t&&unreachable("Invalid argument for stringToBytes");const e=t.length,i=new Uint8Array(e);for(let s=0;s<e;++s)i[s]=255&t.charCodeAt(s);return i}function objectFromMap(t){const e=Object.create(null);for(const[i,s]of t)e[i]=s;return e}class util_FeatureTest{static get isLittleEndian(){return shadow(this,"isLittleEndian",function isLittleEndian(){const t=new Uint8Array(4);t[0]=1;return 1===new Uint32Array(t.buffer,0,1)[0]}())}static get isEvalSupported(){return shadow(this,"isEvalSupported",function isEvalSupported(){try{new Function("");return!0}catch{return!1}}())}static get isOffscreenCanvasSupported(){return shadow(this,"isOffscreenCanvasSupported","undefined"!=typeof OffscreenCanvas)}static get platform(){return"undefined"!=typeof navigator&&"string"==typeof navigator?.platform?shadow(this,"platform",{isMac:navigator.platform.includes("Mac")}):shadow(this,"platform",{isMac:!1})}static get isCSSRoundSupported(){return shadow(this,"isCSSRoundSupported",globalThis.CSS?.supports?.("width: round(1.5px, 1px)"))}}const Z=Array.from(Array(256).keys(),(t=>t.toString(16).padStart(2,"0")));class Util{static makeHexColor(t,e,i){return`#${Z[t]}${Z[e]}${Z[i]}`}static scaleMinMax(t,e){let i;if(t[0]){if(t[0]<0){i=e[0];e[0]=e[2];e[2]=i}e[0]*=t[0];e[2]*=t[0];if(t[3]<0){i=e[1];e[1]=e[3];e[3]=i}e[1]*=t[3];e[3]*=t[3]}else{i=e[0];e[0]=e[1];e[1]=i;i=e[2];e[2]=e[3];e[3]=i;if(t[1]<0){i=e[1];e[1]=e[3];e[3]=i}e[1]*=t[1];e[3]*=t[1];if(t[2]<0){i=e[0];e[0]=e[2];e[2]=i}e[0]*=t[2];e[2]*=t[2]}e[0]+=t[4];e[1]+=t[5];e[2]+=t[4];e[3]+=t[5]}static transform(t,e){return[t[0]*e[0]+t[2]*e[1],t[1]*e[0]+t[3]*e[1],t[0]*e[2]+t[2]*e[3],t[1]*e[2]+t[3]*e[3],t[0]*e[4]+t[2]*e[5]+t[4],t[1]*e[4]+t[3]*e[5]+t[5]]}static applyTransform(t,e){return[t[0]*e[0]+t[1]*e[2]+e[4],t[0]*e[1]+t[1]*e[3]+e[5]]}static applyInverseTransform(t,e){const i=e[0]*e[3]-e[1]*e[2];return[(t[0]*e[3]-t[1]*e[2]+e[2]*e[5]-e[4]*e[3])/i,(-t[0]*e[1]+t[1]*e[0]+e[4]*e[1]-e[5]*e[0])/i]}static getAxialAlignedBoundingBox(t,e){const i=this.applyTransform(t,e),s=this.applyTransform(t.slice(2,4),e),n=this.applyTransform([t[0],t[3]],e),a=this.applyTransform([t[2],t[1]],e);return[Math.min(i[0],s[0],n[0],a[0]),Math.min(i[1],s[1],n[1],a[1]),Math.max(i[0],s[0],n[0],a[0]),Math.max(i[1],s[1],n[1],a[1])]}static inverseTransform(t){const e=t[0]*t[3]-t[1]*t[2];return[t[3]/e,-t[1]/e,-t[2]/e,t[0]/e,(t[2]*t[5]-t[4]*t[3])/e,(t[4]*t[1]-t[5]*t[0])/e]}static singularValueDecompose2dScale(t){const e=[t[0],t[2],t[1],t[3]],i=t[0]*e[0]+t[1]*e[2],s=t[0]*e[1]+t[1]*e[3],n=t[2]*e[0]+t[3]*e[2],a=t[2]*e[1]+t[3]*e[3],r=(i+a)/2,o=Math.sqrt((i+a)**2-4*(i*a-n*s))/2,l=r+o||1,h=r-o||1;return[Math.sqrt(l),Math.sqrt(h)]}static normalizeRect(t){const e=t.slice(0);if(t[0]>t[2]){e[0]=t[2];e[2]=t[0]}if(t[1]>t[3]){e[1]=t[3];e[3]=t[1]}return e}static intersect(t,e){const i=Math.max(Math.min(t[0],t[2]),Math.min(e[0],e[2])),s=Math.min(Math.max(t[0],t[2]),Math.max(e[0],e[2]));if(i>s)return null;const n=Math.max(Math.min(t[1],t[3]),Math.min(e[1],e[3])),a=Math.min(Math.max(t[1],t[3]),Math.max(e[1],e[3]));return n>a?null:[i,n,s,a]}static#t(t,e,i,s,n,a,r,o,l,h){if(l<=0||l>=1)return;const d=1-l,c=l*l,u=c*l,p=d*(d*(d*t+3*l*e)+3*c*i)+u*s,g=d*(d*(d*n+3*l*a)+3*c*r)+u*o;h[0]=Math.min(h[0],p);h[1]=Math.min(h[1],g);h[2]=Math.max(h[2],p);h[3]=Math.max(h[3],g)}static#e(t,e,i,s,n,a,r,o,l,h,d,c){if(Math.abs(l)<1e-12){Math.abs(h)>=1e-12&&this.#t(t,e,i,s,n,a,r,o,-d/h,c);return}const u=h**2-4*d*l;if(u<0)return;const p=Math.sqrt(u),g=2*l;this.#t(t,e,i,s,n,a,r,o,(-h+p)/g,c);this.#t(t,e,i,s,n,a,r,o,(-h-p)/g,c)}static bezierBoundingBox(t,e,i,s,n,a,r,o,l){if(l){l[0]=Math.min(l[0],t,r);l[1]=Math.min(l[1],e,o);l[2]=Math.max(l[2],t,r);l[3]=Math.max(l[3],e,o)}else l=[Math.min(t,r),Math.min(e,o),Math.max(t,r),Math.max(e,o)];this.#e(t,i,n,r,e,s,a,o,3*(3*(i-n)-t+r),6*(t-2*i+n),3*(i-t),l);this.#e(t,i,n,r,e,s,a,o,3*(3*(s-a)-e+o),6*(e-2*s+a),3*(s-e),l);return l}}let tt=null,et=null;function normalizeUnicode(t){if(!tt){tt=/([\\u00a0\\u00b5\\u037e\\u0eb3\\u2000-\\u200a\\u202f\\u2126\\ufb00-\\ufb04\\ufb06\\ufb20-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufba1\\ufba4-\\ufba9\\ufbae-\\ufbb1\\ufbd3-\\ufbdc\\ufbde-\\ufbe7\\ufbea-\\ufbf8\\ufbfc-\\ufbfd\\ufc00-\\ufc5d\\ufc64-\\ufcf1\\ufcf5-\\ufd3d\\ufd88\\ufdf4\\ufdfa-\\ufdfb\\ufe71\\ufe77\\ufe79\\ufe7b\\ufe7d]+)|(\\ufb05+)/gu;et=new Map([["\uFB05","\u017Ft"]])}return t.replaceAll(tt,((t,e,i)=>e?e.normalize("NFKC"):et.get(i)))}const it="pdfjs_internal_id_",st=0,nt=1,at=2,rt=3,ot=4,lt=5,ht=6,dt=7,ct=8;class BaseFilterFactory{addFilter(t){return"none"}addHCMFilter(t,e){return"none"}addAlphaFilter(t){return"none"}addLuminosityFilter(t){return"none"}addHighlightHCMFilter(t,e,i,s,n){return"none"}destroy(t=!1){}}class BaseCanvasFactory{#i=!1;constructor({enableHWA:t=!1}={}){this.#i=t}create(t,e){if(t<=0||e<=0)throw new Error("Invalid canvas size");const i=this._createCanvas(t,e);return{canvas:i,context:i.getContext("2d",{willReadFrequently:!this.#i})}}reset(t,e,i){if(!t.canvas)throw new Error("Canvas is not specified");if(e<=0||i<=0)throw new Error("Invalid canvas size");t.canvas.width=e;t.canvas.height=i}destroy(t){if(!t.canvas)throw new Error("Canvas is not specified");t.canvas.width=0;t.canvas.height=0;t.canvas=null;t.context=null}_createCanvas(t,e){unreachable("Abstract method `_createCanvas` called.")}}class BaseCMapReaderFactory{constructor({baseUrl:t=null,isCompressed:e=!0}){this.baseUrl=t;this.isCompressed=e}async fetch({name:t}){if(!this.baseUrl)throw new Error("Ensure that the `cMapUrl` and `cMapPacked` API parameters are provided.");if(!t)throw new Error("CMap name must be specified.");const e=this.baseUrl+t+(this.isCompressed?".bcmap":""),i=this.isCompressed?X.BINARY:X.NONE;return this._fetchData(e,i).catch((t=>{throw new Error(`Unable to load ${this.isCompressed?"binary ":""}CMap at: ${e}`)}))}_fetchData(t,e){unreachable("Abstract method `_fetchData` called.")}}class BaseStandardFontDataFactory{constructor({baseUrl:t=null}){this.baseUrl=t}async fetch({filename:t}){if(!this.baseUrl)throw new Error("Ensure that the `standardFontDataUrl` API parameter is provided.");if(!t)throw new Error("Font filename must be specified.");const e=`${this.baseUrl}${t}`;return this._fetchData(e).catch((t=>{throw new Error(`Unable to load font data at: ${e}`)}))}_fetchData(t){unreachable("Abstract method `_fetchData` called.")}}class BaseSVGFactory{create(t,e,i=!1){if(t<=0||e<=0)throw new Error("Invalid SVG dimensions");const s=this._createSVG("svg:svg");s.setAttribute("version","1.1");if(!i){s.setAttribute("width",`${t}px`);s.setAttribute("height",`${e}px`)}s.setAttribute("preserveAspectRatio","none");s.setAttribute("viewBox",`0 0 ${t} ${e}`);return s}createElement(t){if("string"!=typeof t)throw new Error("Invalid SVG element type");return this._createSVG(t)}_createSVG(t){unreachable("Abstract method `_createSVG` called.")}}const ut="http://www.w3.org/2000/svg";class PixelsPerInch{static CSS=96;static PDF=72;static PDF_TO_CSS_UNITS=this.CSS/this.PDF}async function fetchData(t,e="text"){if(isValidFetchUrl(t,document.baseURI)){const i=await fetch(t);if(!i.ok)throw new Error(i.statusText);switch(e){case"arraybuffer":return i.arrayBuffer();case"blob":return i.blob();case"json":return i.json()}return i.text()}return new Promise(((i,s)=>{const n=new XMLHttpRequest;n.open("GET",t,!0);n.responseType=e;n.onreadystatechange=()=>{if(n.readyState===XMLHttpRequest.DONE)if(200!==n.status&&0!==n.status)s(new Error(n.statusText));else{switch(e){case"arraybuffer":case"blob":case"json":i(n.response);return}i(n.responseText)}};n.send(null)}))}class DOMCMapReaderFactory extends BaseCMapReaderFactory{_fetchData(t,e){return fetchData(t,this.isCompressed?"arraybuffer":"text").then((t=>({cMapData:t instanceof ArrayBuffer?new Uint8Array(t):stringToBytes(t),compressionType:e})))}}class DOMStandardFontDataFactory extends BaseStandardFontDataFactory{_fetchData(t){return fetchData(t,"arraybuffer").then((t=>new Uint8Array(t)))}}class DOMSVGFactory extends BaseSVGFactory{_createSVG(t){return document.createElementNS(ut,t)}}class PageViewport{constructor({viewBox:t,scale:e,rotation:i,offsetX:s=0,offsetY:n=0,dontFlip:a=!1}){this.viewBox=t;this.scale=e;this.rotation=i;this.offsetX=s;this.offsetY=n;const r=(t[2]+t[0])/2,o=(t[3]+t[1])/2;let l,h,d,c,u,p,g,m;(i%=360)<0&&(i+=360);switch(i){case 180:l=-1;h=0;d=0;c=1;break;case 90:l=0;h=1;d=1;c=0;break;case 270:l=0;h=-1;d=-1;c=0;break;case 0:l=1;h=0;d=0;c=-1;break;default:throw new Error("PageViewport: Invalid rotation, must be a multiple of 90 degrees.")}if(a){d=-d;c=-c}if(0===l){u=Math.abs(o-t[1])*e+s;p=Math.abs(r-t[0])*e+n;g=(t[3]-t[1])*e;m=(t[2]-t[0])*e}else{u=Math.abs(r-t[0])*e+s;p=Math.abs(o-t[1])*e+n;g=(t[2]-t[0])*e;m=(t[3]-t[1])*e}this.transform=[l*e,h*e,d*e,c*e,u-l*e*r-d*e*o,p-h*e*r-c*e*o];this.width=g;this.height=m}get rawDims(){const{viewBox:t}=this;return shadow(this,"rawDims",{pageWidth:t[2]-t[0],pageHeight:t[3]-t[1],pageX:t[0],pageY:t[1]})}clone({scale:t=this.scale,rotation:e=this.rotation,offsetX:i=this.offsetX,offsetY:s=this.offsetY,dontFlip:n=!1}={}){return new PageViewport({viewBox:this.viewBox.slice(),scale:t,rotation:e,offsetX:i,offsetY:s,dontFlip:n})}convertToViewportPoint(t,e){return Util.applyTransform([t,e],this.transform)}convertToViewportRectangle(t){const e=Util.applyTransform([t[0],t[1]],this.transform),i=Util.applyTransform([t[2],t[3]],this.transform);return[e[0],e[1],i[0],i[1]]}convertToPdfPoint(t,e){return Util.applyInverseTransform([t,e],this.transform)}}class RenderingCancelledException extends J{constructor(t,e=0){super(t,"RenderingCancelledException");this.extraDelay=e}}function isDataScheme(t){const e=t.length;let i=0;for(;i<e&&""===t[i].trim();)i++;return"data:"===t.substring(i,i+5).toLowerCase()}function isPdfFile(t){return"string"==typeof t&&/\\.pdf$/i.test(t)}function getFilenameFromUrl(t){[t]=t.split(/[#?]/,1);return t.substring(t.lastIndexOf("/")+1)}function getPdfFilenameFromUrl(t,e="document.pdf"){if("string"!=typeof t)return e;if(isDataScheme(t)){warn(\'getPdfFilenameFromUrl: ignore "data:"-URL for performance reasons.\');return e}const i=/[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i,s=/^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/.exec(t);let n=i.exec(s[1])||i.exec(s[2])||i.exec(s[3]);if(n){n=n[0];if(n.includes("%"))try{n=i.exec(decodeURIComponent(n))[0]}catch{}}return n||e}class StatTimer{started=Object.create(null);times=[];time(t){t in this.started&&warn(`Timer is already running for ${t}`);this.started[t]=Date.now()}timeEnd(t){t in this.started||warn(`Timer has not been started for ${t}`);this.times.push({name:t,start:this.started[t],end:Date.now()});delete this.started[t]}toString(){const t=[];let e=0;for(const{name:t}of this.times)e=Math.max(t.length,e);for(const{name:i,start:s,end:n}of this.times)t.push(`${i.padEnd(e)} ${n-s}ms\\n`);return t.join("")}}function isValidFetchUrl(t,e){try{const{protocol:i}=e?new URL(t,e):new URL(t);return"http:"===i||"https:"===i}catch{return!1}}function noContextMenu(t){t.preventDefault()}let pt;class PDFDateString{static toDateObject(t){if(!t||"string"!=typeof t)return null;pt||=new RegExp("^D:(\\\\d{4})(\\\\d{2})?(\\\\d{2})?(\\\\d{2})?(\\\\d{2})?(\\\\d{2})?([Z|+|-])?(\\\\d{2})?\'?(\\\\d{2})?\'?");const e=pt.exec(t);if(!e)return null;const i=parseInt(e[1],10);let s=parseInt(e[2],10);s=s>=1&&s<=12?s-1:0;let n=parseInt(e[3],10);n=n>=1&&n<=31?n:1;let a=parseInt(e[4],10);a=a>=0&&a<=23?a:0;let r=parseInt(e[5],10);r=r>=0&&r<=59?r:0;let o=parseInt(e[6],10);o=o>=0&&o<=59?o:0;const l=e[7]||"Z";let h=parseInt(e[8],10);h=h>=0&&h<=23?h:0;let d=parseInt(e[9],10)||0;d=d>=0&&d<=59?d:0;if("-"===l){a+=h;r+=d}else if("+"===l){a-=h;r-=d}return new Date(Date.UTC(i,s,n,a,r,o))}}function getXfaPageViewport(t,{scale:e=1,rotation:i=0}){const{width:s,height:n}=t.attributes.style,a=[0,0,parseInt(s),parseInt(n)];return new PageViewport({viewBox:a,scale:e,rotation:i})}function getRGB(t){if(t.startsWith("#")){const e=parseInt(t.slice(1),16);return[(16711680&e)>>16,(65280&e)>>8,255&e]}if(t.startsWith("rgb("))return t.slice(4,-1).split(",").map((t=>parseInt(t)));if(t.startsWith("rgba("))return t.slice(5,-1).split(",").map((t=>parseInt(t))).slice(0,3);warn(`Not a valid color format: "${t}"`);return[0,0,0]}function getCurrentTransform(t){const{a:e,b:i,c:s,d:n,e:a,f:r}=t.getTransform();return[e,i,s,n,a,r]}function getCurrentTransformInverse(t){const{a:e,b:i,c:s,d:n,e:a,f:r}=t.getTransform().invertSelf();return[e,i,s,n,a,r]}function setLayerDimensions(t,e,i=!1,s=!0){if(e instanceof PageViewport){const{pageWidth:s,pageHeight:n}=e.rawDims,{style:a}=t,r=util_FeatureTest.isCSSRoundSupported,o=`var(--scale-factor) * ${s}px`,l=`var(--scale-factor) * ${n}px`,h=r?`round(${o}, 1px)`:`calc(${o})`,d=r?`round(${l}, 1px)`:`calc(${l})`;if(i&&e.rotation%180!=0){a.width=d;a.height=h}else{a.width=h;a.height=d}}s&&t.setAttribute("data-main-rotation",e.rotation)}class EditorToolbar{#s=null;#n=null;#a;#r=null;#o=null;constructor(t){this.#a=t}render(){const t=this.#s=document.createElement("div");t.className="editToolbar";t.setAttribute("role","toolbar");const e=this.#a._uiManager._signal;t.addEventListener("contextmenu",noContextMenu,{signal:e});t.addEventListener("pointerdown",EditorToolbar.#l,{signal:e});const i=this.#r=document.createElement("div");i.className="buttons";t.append(i);const s=this.#a.toolbarPosition;if(s){const{style:e}=t,i="ltr"===this.#a._uiManager.direction?1-s[0]:s[0];e.insetInlineEnd=100*i+"%";e.top=`calc(${100*s[1]}% + var(--editor-toolbar-vert-offset))`}this.#h();return t}static#l(t){t.stopPropagation()}#d(t){this.#a._focusEventsAllowed=!1;t.preventDefault();t.stopPropagation()}#c(t){this.#a._focusEventsAllowed=!0;t.preventDefault();t.stopPropagation()}#u(t){const e=this.#a._uiManager._signal;t.addEventListener("focusin",this.#d.bind(this),{capture:!0,signal:e});t.addEventListener("focusout",this.#c.bind(this),{capture:!0,signal:e});t.addEventListener("contextmenu",noContextMenu,{signal:e})}hide(){this.#s.classList.add("hidden");this.#n?.hideDropdown()}show(){this.#s.classList.remove("hidden");this.#o?.shown()}#h(){const t=document.createElement("button");t.className="delete";t.tabIndex=0;t.setAttribute("data-l10n-id",`pdfjs-editor-remove-${this.#a.editorType}-button`);this.#u(t);t.addEventListener("click",(t=>{this.#a._uiManager.delete()}),{signal:this.#a._uiManager._signal});this.#r.append(t)}get#p(){const t=document.createElement("div");t.className="divider";return t}async addAltText(t){const e=await t.render();this.#u(e);this.#r.prepend(e,this.#p);this.#o=t}addColorPicker(t){this.#n=t;const e=t.renderButton();this.#u(e);this.#r.prepend(e,this.#p)}remove(){this.#s.remove();this.#n?.destroy();this.#n=null}}class HighlightToolbar{#r=null;#s=null;#g;constructor(t){this.#g=t}#m(){const t=this.#s=document.createElement("div");t.className="editToolbar";t.setAttribute("role","toolbar");t.addEventListener("contextmenu",noContextMenu,{signal:this.#g._signal});const e=this.#r=document.createElement("div");e.className="buttons";t.append(e);this.#f();return t}#b(t,e){let i=0,s=0;for(const n of t){const t=n.y+n.height;if(t<i)continue;const a=n.x+(e?n.width:0);if(t>i){s=a;i=t}else e?a>s&&(s=a):a<s&&(s=a)}return[e?1-s:s,i]}show(t,e,i){const[s,n]=this.#b(e,i),{style:a}=this.#s||=this.#m();t.append(this.#s);a.insetInlineEnd=100*s+"%";a.top=`calc(${100*n}% + var(--editor-toolbar-vert-offset))`}hide(){this.#s.remove()}#f(){const t=document.createElement("button");t.className="highlightButton";t.tabIndex=0;t.setAttribute("data-l10n-id","pdfjs-highlight-floating-button1");const e=document.createElement("span");t.append(e);e.className="visuallyHidden";e.setAttribute("data-l10n-id","pdfjs-highlight-floating-button-label");const i=this.#g._signal;t.addEventListener("contextmenu",noContextMenu,{signal:i});t.addEventListener("click",(()=>{this.#g.highlightSelection("floating_button")}),{signal:i});this.#r.append(t)}}function bindEvents(t,e,i){for(const s of i)e.addEventListener(s,t[s].bind(t))}class IdManager{#A=0;get id(){return"pdfjs_internal_editor_"+this.#A++}}class ImageManager{#v=function getUuid(){if("undefined"!=typeof crypto&&"function"==typeof crypto?.randomUUID)return crypto.randomUUID();const t=new Uint8Array(32);if("undefined"!=typeof crypto&&"function"==typeof crypto?.getRandomValues)crypto.getRandomValues(t);else for(let e=0;e<32;e++)t[e]=Math.floor(255*Math.random());return bytesToString(t)}();#A=0;#y=null;static get _isSVGFittingCanvas(){const t=new OffscreenCanvas(1,3).getContext("2d",{willReadFrequently:!0}),e=new Image;e.src=\'data:image/svg+xml;charset=UTF-8,<svg viewBox="0 0 1 1" width="1" height="1" xmlns="http://www.w3.org/2000/svg"><rect width="1" height="1" style="fill:red;"/></svg>\';return shadow(this,"_isSVGFittingCanvas",e.decode().then((()=>{t.drawImage(e,0,0,1,1,0,0,1,3);return 0===new Uint32Array(t.getImageData(0,0,1,1).data.buffer)[0]})))}async#w(t,e){this.#y||=new Map;let i=this.#y.get(t);if(null===i)return null;if(i?.bitmap){i.refCounter+=1;return i}try{i||={bitmap:null,id:`image_${this.#v}_${this.#A++}`,refCounter:0,isSvg:!1};let t;if("string"==typeof e){i.url=e;t=await fetchData(e,"blob")}else t=i.file=e;if("image/svg+xml"===t.type){const e=ImageManager._isSVGFittingCanvas,s=new FileReader,n=new Image,a=new Promise(((t,a)=>{n.onload=()=>{i.bitmap=n;i.isSvg=!0;t()};s.onload=async()=>{const t=i.svgUrl=s.result;n.src=await e?`${t}#svgView(preserveAspectRatio(none))`:t};n.onerror=s.onerror=a}));s.readAsDataURL(t);await a}else i.bitmap=await createImageBitmap(t);i.refCounter=1}catch(t){console.error(t);i=null}this.#y.set(t,i);i&&this.#y.set(i.id,i);return i}async getFromFile(t){const{lastModified:e,name:i,size:s,type:n}=t;return this.#w(`${e}_${i}_${s}_${n}`,t)}async getFromUrl(t){return this.#w(t,t)}async getFromId(t){this.#y||=new Map;const e=this.#y.get(t);if(!e)return null;if(e.bitmap){e.refCounter+=1;return e}return e.file?this.getFromFile(e.file):this.getFromUrl(e.url)}getSvgUrl(t){const e=this.#y.get(t);return e?.isSvg?e.svgUrl:null}deleteId(t){this.#y||=new Map;const e=this.#y.get(t);if(e){e.refCounter-=1;0===e.refCounter&&(e.bitmap=null)}}isValidId(t){return t.startsWith(`image_${this.#v}_`)}}class CommandManager{#x=[];#_=!1;#E;#C=-1;constructor(t=128){this.#E=t}add({cmd:t,undo:e,post:i,mustExec:s,type:n=NaN,overwriteIfSameType:a=!1,keepUndo:r=!1}){s&&t();if(this.#_)return;const o={cmd:t,undo:e,post:i,type:n};if(-1===this.#C){this.#x.length>0&&(this.#x.length=0);this.#C=0;this.#x.push(o);return}if(a&&this.#x[this.#C].type===n){r&&(o.undo=this.#x[this.#C].undo);this.#x[this.#C]=o;return}const l=this.#C+1;if(l===this.#E)this.#x.splice(0,1);else{this.#C=l;l<this.#x.length&&this.#x.splice(l)}this.#x.push(o)}undo(){if(-1===this.#C)return;this.#_=!0;const{undo:t,post:e}=this.#x[this.#C];t();e?.();this.#_=!1;this.#C-=1}redo(){if(this.#C<this.#x.length-1){this.#C+=1;this.#_=!0;const{cmd:t,post:e}=this.#x[this.#C];t();e?.();this.#_=!1}}hasSomethingToUndo(){return-1!==this.#C}hasSomethingToRedo(){return this.#C<this.#x.length-1}destroy(){this.#x=null}}class KeyboardManager{constructor(t){this.buffer=[];this.callbacks=new Map;this.allKeys=new Set;const{isMac:e}=util_FeatureTest.platform;for(const[i,s,n={}]of t)for(const t of i){const i=t.startsWith("mac+");if(e&&i){this.callbacks.set(t.slice(4),{callback:s,options:n});this.allKeys.add(t.split("+").at(-1))}else if(!e&&!i){this.callbacks.set(t,{callback:s,options:n});this.allKeys.add(t.split("+").at(-1))}}}#S(t){t.altKey&&this.buffer.push("alt");t.ctrlKey&&this.buffer.push("ctrl");t.metaKey&&this.buffer.push("meta");t.shiftKey&&this.buffer.push("shift");this.buffer.push(t.key);const e=this.buffer.join("+");this.buffer.length=0;return e}exec(t,e){if(!this.allKeys.has(e.key))return;const i=this.callbacks.get(this.#S(e));if(!i)return;const{callback:s,options:{bubbles:n=!1,args:a=[],checker:r=null}}=i;if(!r||r(t,e)){s.bind(t,...a,e)();if(!n){e.stopPropagation();e.preventDefault()}}}}class ColorManager{static _colorsMapping=new Map([["CanvasText",[0,0,0]],["Canvas",[255,255,255]]]);get _colors(){const t=new Map([["CanvasText",null],["Canvas",null]]);!function getColorValues(t){const e=document.createElement("span");e.style.visibility="hidden";document.body.append(e);for(const i of t.keys()){e.style.color=i;const s=window.getComputedStyle(e).color;t.set(i,getRGB(s))}e.remove()}(t);return shadow(this,"_colors",t)}convert(t){const e=getRGB(t);if(!window.matchMedia("(forced-colors: active)").matches)return e;for(const[t,i]of this._colors)if(i.every(((t,i)=>t===e[i])))return ColorManager._colorsMapping.get(t);return e}getHexCode(t){const e=this._colors.get(t);return e?Util.makeHexColor(...e):t}}class AnnotationEditorUIManager{#T=new AbortController;#M=null;#k=new Map;#P=new Map;#F=null;#D=null;#R=null;#I=new CommandManager;#L=null;#N=0;#O=new Set;#B=null;#H=null;#U=new Set;#z=!1;#j=!1;#W=!1;#$=null;#G=null;#V=null;#q=null;#X=!1;#K=null;#Y=new IdManager;#Q=!1;#J=!1;#Z=null;#tt=null;#et=null;#it=null;#st=g.NONE;#nt=new Set;#at=null;#rt=null;#ot=null;#lt={isEditing:!1,isEmpty:!0,hasSomethingToUndo:!1,hasSomethingToRedo:!1,hasSelectedEditor:!1,hasSelectedText:!1};#ht=[0,0];#dt=null;#ct=null;#ut=null;static TRANSLATE_SMALL=1;static TRANSLATE_BIG=10;static get _keyboardManager(){const t=AnnotationEditorUIManager.prototype,arrowChecker=t=>t.#ct.contains(document.activeElement)&&"BUTTON"!==document.activeElement.tagName&&t.hasSomethingToControl(),textInputChecker=(t,{target:e})=>{if(e instanceof HTMLInputElement){const{type:t}=e;return"text"!==t&&"number"!==t}return!0},e=this.TRANSLATE_SMALL,i=this.TRANSLATE_BIG;return shadow(this,"_keyboardManager",new KeyboardManager([[["ctrl+a","mac+meta+a"],t.selectAll,{checker:textInputChecker}],[["ctrl+z","mac+meta+z"],t.undo,{checker:textInputChecker}],[["ctrl+y","ctrl+shift+z","mac+meta+shift+z","ctrl+shift+Z","mac+meta+shift+Z"],t.redo,{checker:textInputChecker}],[["Backspace","alt+Backspace","ctrl+Backspace","shift+Backspace","mac+Backspace","mac+alt+Backspace","mac+ctrl+Backspace","Delete","ctrl+Delete","shift+Delete","mac+Delete"],t.delete,{checker:textInputChecker}],[["Enter","mac+Enter"],t.addNewEditorFromKeyboard,{checker:(t,{target:e})=>!(e instanceof HTMLButtonElement)&&t.#ct.contains(e)&&!t.isEnterHandled}],[[" ","mac+ "],t.addNewEditorFromKeyboard,{checker:(t,{target:e})=>!(e instanceof HTMLButtonElement)&&t.#ct.contains(document.activeElement)}],[["Escape","mac+Escape"],t.unselectAll],[["ArrowLeft","mac+ArrowLeft"],t.translateSelectedEditors,{args:[-e,0],checker:arrowChecker}],[["ctrl+ArrowLeft","mac+shift+ArrowLeft"],t.translateSelectedEditors,{args:[-i,0],checker:arrowChecker}],[["ArrowRight","mac+ArrowRight"],t.translateSelectedEditors,{args:[e,0],checker:arrowChecker}],[["ctrl+ArrowRight","mac+shift+ArrowRight"],t.translateSelectedEditors,{args:[i,0],checker:arrowChecker}],[["ArrowUp","mac+ArrowUp"],t.translateSelectedEditors,{args:[0,-e],checker:arrowChecker}],[["ctrl+ArrowUp","mac+shift+ArrowUp"],t.translateSelectedEditors,{args:[0,-i],checker:arrowChecker}],[["ArrowDown","mac+ArrowDown"],t.translateSelectedEditors,{args:[0,e],checker:arrowChecker}],[["ctrl+ArrowDown","mac+shift+ArrowDown"],t.translateSelectedEditors,{args:[0,i],checker:arrowChecker}]]))}constructor(t,e,i,s,n,a,r,o,l,h,d){const c=this._signal=this.#T.signal;this.#ct=t;this.#ut=e;this.#F=i;this._eventBus=s;s._on("editingaction",this.onEditingAction.bind(this),{signal:c});s._on("pagechanging",this.onPageChanging.bind(this),{signal:c});s._on("scalechanging",this.onScaleChanging.bind(this),{signal:c});s._on("rotationchanging",this.onRotationChanging.bind(this),{signal:c});s._on("setpreference",this.onSetPreference.bind(this),{signal:c});s._on("switchannotationeditorparams",(t=>this.updateParams(t.type,t.value)),{signal:c});this.#pt();this.#gt();this.#mt();this.#D=n.annotationStorage;this.#$=n.filterFactory;this.#rt=a;this.#q=r||null;this.#z=o;this.#j=l;this.#W=h;this.#it=d||null;this.viewParameters={realScale:PixelsPerInch.PDF_TO_CSS_UNITS,rotation:0};this.isShiftKeyDown=!1}destroy(){this.#T?.abort();this.#T=null;this._signal=null;for(const t of this.#P.values())t.destroy();this.#P.clear();this.#k.clear();this.#U.clear();this.#M=null;this.#nt.clear();this.#I.destroy();this.#F?.destroy();this.#K?.hide();this.#K=null;if(this.#G){clearTimeout(this.#G);this.#G=null}if(this.#dt){clearTimeout(this.#dt);this.#dt=null}}combinedSignal(t){return AbortSignal.any([this._signal,t.signal])}get mlManager(){return this.#it}get useNewAltTextFlow(){return this.#j}get useNewAltTextWhenAddingImage(){return this.#W}get hcmFilter(){return shadow(this,"hcmFilter",this.#rt?this.#$.addHCMFilter(this.#rt.foreground,this.#rt.background):"none")}get direction(){return shadow(this,"direction",getComputedStyle(this.#ct).direction)}get highlightColors(){return shadow(this,"highlightColors",this.#q?new Map(this.#q.split(",").map((t=>t.split("=").map((t=>t.trim()))))):null)}get highlightColorNames(){return shadow(this,"highlightColorNames",this.highlightColors?new Map(Array.from(this.highlightColors,(t=>t.reverse()))):null)}setMainHighlightColorPicker(t){this.#et=t}editAltText(t,e=!1){this.#F?.editAltText(this,t,e)}switchToMode(t,e){this._eventBus.on("annotationeditormodechanged",e,{once:!0,signal:this._signal});this._eventBus.dispatch("showannotationeditorui",{source:this,mode:t})}setPreference(t,e){this._eventBus.dispatch("setpreference",{source:this,name:t,value:e})}onSetPreference({name:t,value:e}){if("enableNewAltTextWhenAddingImage"===t)this.#W=e}onPageChanging({pageNumber:t}){this.#N=t-1}focusMainContainer(){this.#ct.focus()}findParent(t,e){for(const i of this.#P.values()){const{x:s,y:n,width:a,height:r}=i.div.getBoundingClientRect();if(t>=s&&t<=s+a&&e>=n&&e<=n+r)return i}return null}disableUserSelect(t=!1){this.#ut.classList.toggle("noUserSelect",t)}addShouldRescale(t){this.#U.add(t)}removeShouldRescale(t){this.#U.delete(t)}onScaleChanging({scale:t}){this.commitOrRemove();this.viewParameters.realScale=t*PixelsPerInch.PDF_TO_CSS_UNITS;for(const t of this.#U)t.onScaleChanging()}onRotationChanging({pagesRotation:t}){this.commitOrRemove();this.viewParameters.rotation=t}#ft({anchorNode:t}){return t.nodeType===Node.TEXT_NODE?t.parentElement:t}#bt(t){const{currentLayer:e}=this;if(e.hasTextLayer(t))return e;for(const e of this.#P.values())if(e.hasTextLayer(t))return e;return null}highlightSelection(t=""){const e=document.getSelection();if(!e||e.isCollapsed)return;const{anchorNode:i,anchorOffset:s,focusNode:n,focusOffset:a}=e,r=e.toString(),o=this.#ft(e).closest(".textLayer"),l=this.getSelectionBoxes(o);if(!l)return;e.empty();const h=this.#bt(o),d=this.#st===g.NONE,callback=()=>{h?.createAndAddNewEditor({x:0,y:0},!1,{methodOfCreation:t,boxes:l,anchorNode:i,anchorOffset:s,focusNode:n,focusOffset:a,text:r});d&&this.showAllEditors("highlight",!0,!0)};d?this.switchToMode(g.HIGHLIGHT,callback):callback()}#At(){const t=document.getSelection();if(!t||t.isCollapsed)return;const e=this.#ft(t).closest(".textLayer"),i=this.getSelectionBoxes(e);if(i){this.#K||=new HighlightToolbar(this);this.#K.show(e,i,"ltr"===this.direction)}}addToAnnotationStorage(t){t.isEmpty()||!this.#D||this.#D.has(t.id)||this.#D.setValue(t.id,t)}#vt(){const t=document.getSelection();if(!t||t.isCollapsed){if(this.#at){this.#K?.hide();this.#at=null;this.#yt({hasSelectedText:!1})}return}const{anchorNode:e}=t;if(e===this.#at)return;const i=this.#ft(t).closest(".textLayer");if(i){this.#K?.hide();this.#at=e;this.#yt({hasSelectedText:!0});if(this.#st===g.HIGHLIGHT||this.#st===g.NONE){this.#st===g.HIGHLIGHT&&this.showAllEditors("highlight",!0,!0);this.#X=this.isShiftKeyDown;if(!this.isShiftKeyDown){const t=this.#st===g.HIGHLIGHT?this.#bt(i):null;t?.toggleDrawing();const e=new AbortController,s=this.combinedSignal(e),pointerup=i=>{if("pointerup"!==i.type||0===i.button){e.abort();t?.toggleDrawing(!0);"pointerup"===i.type&&this.#wt("main_toolbar")}};window.addEventListener("pointerup",pointerup,{signal:s});window.addEventListener("blur",pointerup,{signal:s})}}}else if(this.#at){this.#K?.hide();this.#at=null;this.#yt({hasSelectedText:!1})}}#wt(t=""){this.#st===g.HIGHLIGHT?this.highlightSelection(t):this.#z&&this.#At()}#pt(){document.addEventListener("selectionchange",this.#vt.bind(this),{signal:this._signal})}#xt(){if(this.#V)return;this.#V=new AbortController;const t=this.combinedSignal(this.#V);window.addEventListener("focus",this.focus.bind(this),{signal:t});window.addEventListener("blur",this.blur.bind(this),{signal:t})}#_t(){this.#V?.abort();this.#V=null}blur(){this.isShiftKeyDown=!1;if(this.#X){this.#X=!1;this.#wt("main_toolbar")}if(!this.hasSelection)return;const{activeElement:t}=document;for(const e of this.#nt)if(e.div.contains(t)){this.#tt=[e,t];e._focusEventsAllowed=!1;break}}focus(){if(!this.#tt)return;const[t,e]=this.#tt;this.#tt=null;e.addEventListener("focusin",(()=>{t._focusEventsAllowed=!0}),{once:!0,signal:this._signal});e.focus()}#mt(){if(this.#Z)return;this.#Z=new AbortController;const t=this.combinedSignal(this.#Z);window.addEventListener("keydown",this.keydown.bind(this),{signal:t});window.addEventListener("keyup",this.keyup.bind(this),{signal:t})}#Et(){this.#Z?.abort();this.#Z=null}#Ct(){if(this.#L)return;this.#L=new AbortController;const t=this.combinedSignal(this.#L);document.addEventListener("copy",this.copy.bind(this),{signal:t});document.addEventListener("cut",this.cut.bind(this),{signal:t});document.addEventListener("paste",this.paste.bind(this),{signal:t})}#St(){this.#L?.abort();this.#L=null}#gt(){const t=this._signal;document.addEventListener("dragover",this.dragOver.bind(this),{signal:t});document.addEventListener("drop",this.drop.bind(this),{signal:t})}addEditListeners(){this.#mt();this.#Ct()}removeEditListeners(){this.#Et();this.#St()}dragOver(t){for(const{type:e}of t.dataTransfer.items)for(const i of this.#H)if(i.isHandlingMimeForPasting(e)){t.dataTransfer.dropEffect="copy";t.preventDefault();return}}drop(t){for(const e of t.dataTransfer.items)for(const i of this.#H)if(i.isHandlingMimeForPasting(e.type)){i.paste(e,this.currentLayer);t.preventDefault();return}}copy(t){t.preventDefault();this.#M?.commitOrRemove();if(!this.hasSelection)return;const e=[];for(const t of this.#nt){const i=t.serialize(!0);i&&e.push(i)}0!==e.length&&t.clipboardData.setData("application/pdfjs",JSON.stringify(e))}cut(t){this.copy(t);this.delete()}paste(t){t.preventDefault();const{clipboardData:e}=t;for(const t of e.items)for(const e of this.#H)if(e.isHandlingMimeForPasting(t.type)){e.paste(t,this.currentLayer);return}let i=e.getData("application/pdfjs");if(!i)return;try{i=JSON.parse(i)}catch(t){warn(`paste: "${t.message}".`);return}if(!Array.isArray(i))return;this.unselectAll();const s=this.currentLayer;try{const t=[];for(const e of i){const i=s.deserialize(e);if(!i)return;t.push(i)}const cmd=()=>{for(const e of t)this.#Tt(e);this.#Mt(t)},undo=()=>{for(const e of t)e.remove()};this.addCommands({cmd,undo,mustExec:!0})}catch(t){warn(`paste: "${t.message}".`)}}keydown(t){this.isShiftKeyDown||"Shift"!==t.key||(this.isShiftKeyDown=!0);this.#st===g.NONE||this.isEditorHandlingKeyboard||AnnotationEditorUIManager._keyboardManager.exec(this,t)}keyup(t){if(this.isShiftKeyDown&&"Shift"===t.key){this.isShiftKeyDown=!1;if(this.#X){this.#X=!1;this.#wt("main_toolbar")}}}onEditingAction({name:t}){switch(t){case"undo":case"redo":case"delete":case"selectAll":this[t]();break;case"highlightSelection":this.highlightSelection("context_menu")}}#yt(t){if(Object.entries(t).some((([t,e])=>this.#lt[t]!==e))){this._eventBus.dispatch("annotationeditorstateschanged",{source:this,details:Object.assign(this.#lt,t)});this.#st===g.HIGHLIGHT&&!1===t.hasSelectedEditor&&this.#kt([[m.HIGHLIGHT_FREE,!0]])}}#kt(t){this._eventBus.dispatch("annotationeditorparamschanged",{source:this,details:t})}setEditingState(t){if(t){this.#xt();this.#Ct();this.#yt({isEditing:this.#st!==g.NONE,isEmpty:this.#Pt(),hasSomethingToUndo:this.#I.hasSomethingToUndo(),hasSomethingToRedo:this.#I.hasSomethingToRedo(),hasSelectedEditor:!1})}else{this.#_t();this.#St();this.#yt({isEditing:!1});this.disableUserSelect(!1)}}registerEditorTypes(t){if(!this.#H){this.#H=t;for(const t of this.#H)this.#kt(t.defaultPropertiesToUpdate)}}getId(){return this.#Y.id}get currentLayer(){return this.#P.get(this.#N)}getLayer(t){return this.#P.get(t)}get currentPageIndex(){return this.#N}addLayer(t){this.#P.set(t.pageIndex,t);this.#Q?t.enable():t.disable()}removeLayer(t){this.#P.delete(t.pageIndex)}updateMode(t,e=null,i=!1){if(this.#st!==t){this.#st=t;if(t!==g.NONE){this.setEditingState(!0);this.#Ft();this.unselectAll();for(const e of this.#P.values())e.updateMode(t);if(e||!i){if(e)for(const t of this.#k.values())if(t.annotationElementId===e){this.setSelected(t);t.enterInEditMode();break}}else this.addNewEditorFromKeyboard()}else{this.setEditingState(!1);this.#Dt()}}}addNewEditorFromKeyboard(){this.currentLayer.canCreateNewEmptyEditor()&&this.currentLayer.addNewEditor()}updateToolbar(t){t!==this.#st&&this._eventBus.dispatch("switchannotationeditormode",{source:this,mode:t})}updateParams(t,e){if(this.#H){switch(t){case m.CREATE:this.currentLayer.addNewEditor();return;case m.HIGHLIGHT_DEFAULT_COLOR:this.#et?.updateColor(e);break;case m.HIGHLIGHT_SHOW_ALL:this._eventBus.dispatch("reporttelemetry",{source:this,details:{type:"editing",data:{type:"highlight",action:"toggle_visibility"}}});(this.#ot||=new Map).set(t,e);this.showAllEditors("highlight",e)}for(const i of this.#nt)i.updateParams(t,e);for(const i of this.#H)i.updateDefaultParams(t,e)}}showAllEditors(t,e,i=!1){for(const i of this.#k.values())i.editorType===t&&i.show(e);(this.#ot?.get(m.HIGHLIGHT_SHOW_ALL)??!0)!==e&&this.#kt([[m.HIGHLIGHT_SHOW_ALL,e]])}enableWaiting(t=!1){if(this.#J!==t){this.#J=t;for(const e of this.#P.values()){t?e.disableClick():e.enableClick();e.div.classList.toggle("waiting",t)}}}#Ft(){if(!this.#Q){this.#Q=!0;for(const t of this.#P.values())t.enable();for(const t of this.#k.values())t.enable()}}#Dt(){this.unselectAll();if(this.#Q){this.#Q=!1;for(const t of this.#P.values())t.disable();for(const t of this.#k.values())t.disable()}}getEditors(t){const e=[];for(const i of this.#k.values())i.pageIndex===t&&e.push(i);return e}getEditor(t){return this.#k.get(t)}addEditor(t){this.#k.set(t.id,t)}removeEditor(t){if(t.div.contains(document.activeElement)){this.#G&&clearTimeout(this.#G);this.#G=setTimeout((()=>{this.focusMainContainer();this.#G=null}),0)}this.#k.delete(t.id);this.unselect(t);t.annotationElementId&&this.#O.has(t.annotationElementId)||this.#D?.remove(t.id)}addDeletedAnnotationElement(t){this.#O.add(t.annotationElementId);this.addChangedExistingAnnotation(t);t.deleted=!0}isDeletedAnnotationElement(t){return this.#O.has(t)}removeDeletedAnnotationElement(t){this.#O.delete(t.annotationElementId);this.removeChangedExistingAnnotation(t);t.deleted=!1}#Tt(t){const e=this.#P.get(t.pageIndex);if(e)e.addOrRebuild(t);else{this.addEditor(t);this.addToAnnotationStorage(t)}}setActiveEditor(t){if(this.#M!==t){this.#M=t;t&&this.#kt(t.propertiesToUpdate)}}get#Rt(){let t=null;for(t of this.#nt);return t}updateUI(t){this.#Rt===t&&this.#kt(t.propertiesToUpdate)}toggleSelected(t){if(this.#nt.has(t)){this.#nt.delete(t);t.unselect();this.#yt({hasSelectedEditor:this.hasSelection})}else{this.#nt.add(t);t.select();this.#kt(t.propertiesToUpdate);this.#yt({hasSelectedEditor:!0})}}setSelected(t){for(const e of this.#nt)e!==t&&e.unselect();this.#nt.clear();this.#nt.add(t);t.select();this.#kt(t.propertiesToUpdate);this.#yt({hasSelectedEditor:!0})}isSelected(t){return this.#nt.has(t)}get firstSelectedEditor(){return this.#nt.values().next().value}unselect(t){t.unselect();this.#nt.delete(t);this.#yt({hasSelectedEditor:this.hasSelection})}get hasSelection(){return 0!==this.#nt.size}get isEnterHandled(){return 1===this.#nt.size&&this.firstSelectedEditor.isEnterHandled}undo(){this.#I.undo();this.#yt({hasSomethingToUndo:this.#I.hasSomethingToUndo(),hasSomethingToRedo:!0,isEmpty:this.#Pt()})}redo(){this.#I.redo();this.#yt({hasSomethingToUndo:!0,hasSomethingToRedo:this.#I.hasSomethingToRedo(),isEmpty:this.#Pt()})}addCommands(t){this.#I.add(t);this.#yt({hasSomethingToUndo:!0,hasSomethingToRedo:!1,isEmpty:this.#Pt()})}#Pt(){if(0===this.#k.size)return!0;if(1===this.#k.size)for(const t of this.#k.values())return t.isEmpty();return!1}delete(){this.commitOrRemove();if(!this.hasSelection)return;const t=[...this.#nt];this.addCommands({cmd:()=>{for(const e of t)e.remove()},undo:()=>{for(const e of t)this.#Tt(e)},mustExec:!0})}commitOrRemove(){this.#M?.commitOrRemove()}hasSomethingToControl(){return this.#M||this.hasSelection}#Mt(t){for(const t of this.#nt)t.unselect();this.#nt.clear();for(const e of t)if(!e.isEmpty()){this.#nt.add(e);e.select()}this.#yt({hasSelectedEditor:this.hasSelection})}selectAll(){for(const t of this.#nt)t.commit();this.#Mt(this.#k.values())}unselectAll(){if(this.#M){this.#M.commitOrRemove();if(this.#st!==g.NONE)return}if(this.hasSelection){for(const t of this.#nt)t.unselect();this.#nt.clear();this.#yt({hasSelectedEditor:!1})}}translateSelectedEditors(t,e,i=!1){i||this.commitOrRemove();if(!this.hasSelection)return;this.#ht[0]+=t;this.#ht[1]+=e;const[s,n]=this.#ht,a=[...this.#nt];this.#dt&&clearTimeout(this.#dt);this.#dt=setTimeout((()=>{this.#dt=null;this.#ht[0]=this.#ht[1]=0;this.addCommands({cmd:()=>{for(const t of a)this.#k.has(t.id)&&t.translateInPage(s,n)},undo:()=>{for(const t of a)this.#k.has(t.id)&&t.translateInPage(-s,-n)},mustExec:!1})}),1e3);for(const i of a)i.translateInPage(t,e)}setUpDragSession(){if(this.hasSelection){this.disableUserSelect(!0);this.#B=new Map;for(const t of this.#nt)this.#B.set(t,{savedX:t.x,savedY:t.y,savedPageIndex:t.pageIndex,newX:0,newY:0,newPageIndex:-1})}}endDragSession(){if(!this.#B)return!1;this.disableUserSelect(!1);const t=this.#B;this.#B=null;let e=!1;for(const[{x:i,y:s,pageIndex:n},a]of t){a.newX=i;a.newY=s;a.newPageIndex=n;e||=i!==a.savedX||s!==a.savedY||n!==a.savedPageIndex}if(!e)return!1;const move=(t,e,i,s)=>{if(this.#k.has(t.id)){const n=this.#P.get(s);if(n)t._setParentAndPosition(n,e,i);else{t.pageIndex=s;t.x=e;t.y=i}}};this.addCommands({cmd:()=>{for(const[e,{newX:i,newY:s,newPageIndex:n}]of t)move(e,i,s,n)},undo:()=>{for(const[e,{savedX:i,savedY:s,savedPageIndex:n}]of t)move(e,i,s,n)},mustExec:!0});return!0}dragSelectedEditors(t,e){if(this.#B)for(const i of this.#B.keys())i.drag(t,e)}rebuild(t){if(null===t.parent){const e=this.getLayer(t.pageIndex);if(e){e.changeParent(t);e.addOrRebuild(t)}else{this.addEditor(t);this.addToAnnotationStorage(t);t.rebuild()}}else t.parent.addOrRebuild(t)}get isEditorHandlingKeyboard(){return this.getActive()?.shouldGetKeyboardEvents()||1===this.#nt.size&&this.firstSelectedEditor.shouldGetKeyboardEvents()}isActive(t){return this.#M===t}getActive(){return this.#M}getMode(){return this.#st}get imageManager(){return shadow(this,"imageManager",new ImageManager)}getSelectionBoxes(t){if(!t)return null;const e=document.getSelection();for(let i=0,s=e.rangeCount;i<s;i++)if(!t.contains(e.getRangeAt(i).commonAncestorContainer))return null;const{x:i,y:s,width:n,height:a}=t.getBoundingClientRect();let r;switch(t.getAttribute("data-main-rotation")){case"90":r=(t,e,r,o)=>({x:(e-s)/a,y:1-(t+r-i)/n,width:o/a,height:r/n});break;case"180":r=(t,e,r,o)=>({x:1-(t+r-i)/n,y:1-(e+o-s)/a,width:r/n,height:o/a});break;case"270":r=(t,e,r,o)=>({x:1-(e+o-s)/a,y:(t-i)/n,width:o/a,height:r/n});break;default:r=(t,e,r,o)=>({x:(t-i)/n,y:(e-s)/a,width:r/n,height:o/a})}const o=[];for(let t=0,i=e.rangeCount;t<i;t++){const i=e.getRangeAt(t);if(!i.collapsed)for(const{x:t,y:e,width:s,height:n}of i.getClientRects())0!==s&&0!==n&&o.push(r(t,e,s,n))}return 0===o.length?null:o}addChangedExistingAnnotation({annotationElementId:t,id:e}){(this.#R||=new Map).set(t,e)}removeChangedExistingAnnotation({annotationElementId:t}){this.#R?.delete(t)}renderAnnotationElement(t){const e=this.#R?.get(t.data.id);if(!e)return;const i=this.#D.getRawValue(e);i&&(this.#st!==g.NONE||i.hasBeenModified)&&i.renderAnnotationElement(t)}}class AltText{#o=null;#It=!1;#Lt=null;#Nt=null;#Ot=null;#Bt=!1;#Ht=null;#a=null;#Ut=null;#zt=null;#jt=!1;static _l10nPromise=null;constructor(t){this.#a=t;this.#jt=t._uiManager.useNewAltTextFlow}static initialize(t){AltText._l10nPromise||=t}async render(){const t=this.#Lt=document.createElement("button");t.className="altText";let e;if(this.#jt){t.classList.add("new");e=await AltText._l10nPromise.get("pdfjs-editor-new-alt-text-missing-button-label")}else e=await AltText._l10nPromise.get("pdfjs-editor-alt-text-button-label");t.textContent=e;t.setAttribute("aria-label",e);t.tabIndex="0";const i=this.#a._uiManager._signal;t.addEventListener("contextmenu",noContextMenu,{signal:i});t.addEventListener("pointerdown",(t=>t.stopPropagation()),{signal:i});const onClick=t=>{t.preventDefault();this.#a._uiManager.editAltText(this.#a);this.#jt&&this.#a._reportTelemetry({action:"pdfjs.image.alt_text.image_status_label_clicked",data:{label:this.#Wt}})};t.addEventListener("click",onClick,{capture:!0,signal:i});t.addEventListener("keydown",(e=>{if(e.target===t&&"Enter"===e.key){this.#Bt=!0;onClick(e)}}),{signal:i});await this.#$t();return t}get#Wt(){return(this.#o?"added":null===this.#o&&this.guessedText&&"review")||"missing"}finish(){if(this.#Lt){this.#Lt.focus({focusVisible:this.#Bt});this.#Bt=!1}}isEmpty(){return this.#jt?null===this.#o:!this.#o&&!this.#It}hasData(){return this.#jt?null!==this.#o||!!this.#Ut:this.isEmpty()}get guessedText(){return this.#Ut}async setGuessedText(t){if(null===this.#o){this.#Ut=t;this.#zt=await AltText._l10nPromise.get("pdfjs-editor-new-alt-text-generated-alt-text-with-disclaimer")({generatedAltText:t});this.#$t()}}toggleAltTextBadge(t=!1){if(this.#jt&&!this.#o){if(!this.#Ht){const t=this.#Ht=document.createElement("div");t.className="noAltTextBadge";this.#a.div.append(t)}this.#Ht.classList.toggle("hidden",!t)}else{this.#Ht?.remove();this.#Ht=null}}serialize(t){let e=this.#o;t||this.#Ut!==e||(e=this.#zt);return{altText:e,decorative:this.#It,guessedText:this.#Ut,textWithDisclaimer:this.#zt}}get data(){return{altText:this.#o,decorative:this.#It}}set data({altText:t,decorative:e,guessedText:i,textWithDisclaimer:s,cancel:n=!1}){if(i){this.#Ut=i;this.#zt=s}if(this.#o!==t||this.#It!==e){if(!n){this.#o=t;this.#It=e}this.#$t()}}toggle(t=!1){if(this.#Lt){if(!t&&this.#Ot){clearTimeout(this.#Ot);this.#Ot=null}this.#Lt.disabled=!t}}shown(){this.#a._reportTelemetry({action:"pdfjs.image.alt_text.image_status_label_displayed",data:{label:this.#Wt}})}destroy(){this.#Lt?.remove();this.#Lt=null;this.#Nt=null;this.#Ht?.remove();this.#Ht=null}async#$t(){const t=this.#Lt;if(!t)return;if(this.#jt){const e=this.#Wt,i="review"===e?"to-review":e;t.classList.toggle("done",!!this.#o);AltText._l10nPromise.get(`pdfjs-editor-new-alt-text-${i}-button-label`).then((e=>{t.setAttribute("aria-label",e);for(const i of t.childNodes)if(i.nodeType===Node.TEXT_NODE){i.textContent=e;break}}));if(!this.#o){this.#Nt?.remove();return}}else{if(!this.#o&&!this.#It){t.classList.remove("done");this.#Nt?.remove();return}t.classList.add("done");AltText._l10nPromise.get("pdfjs-editor-alt-text-edit-button-label").then((e=>{t.setAttribute("aria-label",e)}))}let e=this.#Nt;if(!e){this.#Nt=e=document.createElement("span");e.className="tooltip";e.setAttribute("role","tooltip");const i=e.id=`alt-text-tooltip-${this.#a.id}`;t.setAttribute("aria-describedby",i);const s=100,n=this.#a._uiManager._signal;n.addEventListener("abort",(()=>{clearTimeout(this.#Ot);this.#Ot=null}),{once:!0});t.addEventListener("mouseenter",(()=>{this.#Ot=setTimeout((()=>{this.#Ot=null;this.#Nt.classList.add("show");this.#a._reportTelemetry({action:"alt_text_tooltip"})}),s)}),{signal:n});t.addEventListener("mouseleave",(()=>{if(this.#Ot){clearTimeout(this.#Ot);this.#Ot=null}this.#Nt?.classList.remove("show")}),{signal:n})}e.innerText=this.#It?await AltText._l10nPromise.get("pdfjs-editor-alt-text-decorative-tooltip"):this.#o;e.parentNode||t.append(e);const i=this.#a.getImageForAltText();i?.setAttribute("aria-describedby",e.id)}}class AnnotationEditor{#Gt=null;#Vt=null;#o=null;#qt=!1;#Xt=!1;#Kt=null;#Yt=null;#Qt=null;#Jt="";#Zt=!1;#te=null;#ee=!1;#ie=!1;#se=!1;#ne=null;#ae=0;#re=0;#oe=null;_editToolbar=null;_initialOptions=Object.create(null);_isVisible=!0;_uiManager=null;_focusEventsAllowed=!0;static _l10nPromise=null;static _l10nResizer=null;#le=!1;#he=AnnotationEditor._zIndex++;static _borderLineWidth=-1;static _colorManager=new ColorManager;static _zIndex=1;static _telemetryTimeout=1e3;static get _resizerKeyboardManager(){const t=AnnotationEditor.prototype._resizeWithKeyboard,e=AnnotationEditorUIManager.TRANSLATE_SMALL,i=AnnotationEditorUIManager.TRANSLATE_BIG;return shadow(this,"_resizerKeyboardManager",new KeyboardManager([[["ArrowLeft","mac+ArrowLeft"],t,{args:[-e,0]}],[["ctrl+ArrowLeft","mac+shift+ArrowLeft"],t,{args:[-i,0]}],[["ArrowRight","mac+ArrowRight"],t,{args:[e,0]}],[["ctrl+ArrowRight","mac+shift+ArrowRight"],t,{args:[i,0]}],[["ArrowUp","mac+ArrowUp"],t,{args:[0,-e]}],[["ctrl+ArrowUp","mac+shift+ArrowUp"],t,{args:[0,-i]}],[["ArrowDown","mac+ArrowDown"],t,{args:[0,e]}],[["ctrl+ArrowDown","mac+shift+ArrowDown"],t,{args:[0,i]}],[["Escape","mac+Escape"],AnnotationEditor.prototype._stopResizingWithKeyboard]]))}constructor(t){this.parent=t.parent;this.id=t.id;this.width=this.height=null;this.pageIndex=t.parent.pageIndex;this.name=t.name;this.div=null;this._uiManager=t.uiManager;this.annotationElementId=null;this._willKeepAspectRatio=!1;this._initialOptions.isCentered=t.isCentered;this._structTreeParentId=null;const{rotation:e,rawDims:{pageWidth:i,pageHeight:s,pageX:n,pageY:a}}=this.parent.viewport;this.rotation=e;this.pageRotation=(360+e-this._uiManager.viewParameters.rotation)%360;this.pageDimensions=[i,s];this.pageTranslation=[n,a];const[r,o]=this.parentDimensions;this.x=t.x/r;this.y=t.y/o;this.isAttachedToDOM=!1;this.deleted=!1}get editorType(){return Object.getPrototypeOf(this).constructor._type}static get _defaultLineColor(){return shadow(this,"_defaultLineColor",this._colorManager.getHexCode("CanvasText"))}static deleteAnnotationElement(t){const e=new FakeEditor({id:t.parent.getNextId(),parent:t.parent,uiManager:t._uiManager});e.annotationElementId=t.annotationElementId;e.deleted=!0;e._uiManager.addToAnnotationStorage(e)}static initialize(t,e,i){AnnotationEditor._l10nResizer||=Object.freeze({topLeft:"pdfjs-editor-resizer-top-left",topMiddle:"pdfjs-editor-resizer-top-middle",topRight:"pdfjs-editor-resizer-top-right",middleRight:"pdfjs-editor-resizer-middle-right",bottomRight:"pdfjs-editor-resizer-bottom-right",bottomMiddle:"pdfjs-editor-resizer-bottom-middle",bottomLeft:"pdfjs-editor-resizer-bottom-left",middleLeft:"pdfjs-editor-resizer-middle-left"});AnnotationEditor._l10nPromise||=new Map([...["pdfjs-editor-alt-text-button-label","pdfjs-editor-alt-text-edit-button-label","pdfjs-editor-alt-text-decorative-tooltip","pdfjs-editor-new-alt-text-added-button-label","pdfjs-editor-new-alt-text-missing-button-label","pdfjs-editor-new-alt-text-to-review-button-label"].map((e=>[e,t.get(e)])),...["pdfjs-editor-new-alt-text-generated-alt-text-with-disclaimer"].map((e=>[e,t.get.bind(t,e)]))]);if(i?.strings)for(const e of i.strings)AnnotationEditor._l10nPromise.set(e,t.get(e));if(-1!==AnnotationEditor._borderLineWidth)return;const s=getComputedStyle(document.documentElement);AnnotationEditor._borderLineWidth=parseFloat(s.getPropertyValue("--outline-width"))||0}static updateDefaultParams(t,e){}static get defaultPropertiesToUpdate(){return[]}static isHandlingMimeForPasting(t){return!1}static paste(t,e){unreachable("Not implemented")}get propertiesToUpdate(){return[]}get _isDraggable(){return this.#le}set _isDraggable(t){this.#le=t;this.div?.classList.toggle("draggable",t)}get isEnterHandled(){return!0}center(){const[t,e]=this.pageDimensions;switch(this.parentRotation){case 90:this.x-=this.height*e/(2*t);this.y+=this.width*t/(2*e);break;case 180:this.x+=this.width/2;this.y+=this.height/2;break;case 270:this.x+=this.height*e/(2*t);this.y-=this.width*t/(2*e);break;default:this.x-=this.width/2;this.y-=this.height/2}this.fixAndSetPosition()}addCommands(t){this._uiManager.addCommands(t)}get currentLayer(){return this._uiManager.currentLayer}setInBackground(){this.div.style.zIndex=0}setInForeground(){this.div.style.zIndex=this.#he}setParent(t){if(null!==t){this.pageIndex=t.pageIndex;this.pageDimensions=t.pageDimensions}else this.#de();this.parent=t}focusin(t){this._focusEventsAllowed&&(this.#Zt?this.#Zt=!1:this.parent.setSelected(this))}focusout(t){if(!this._focusEventsAllowed)return;if(!this.isAttachedToDOM)return;const e=t.relatedTarget;if(!e?.closest(`#${this.id}`)){t.preventDefault();this.parent?.isMultipleSelection||this.commitOrRemove()}}commitOrRemove(){this.isEmpty()?this.remove():this.commit()}commit(){this.addToAnnotationStorage()}addToAnnotationStorage(){this._uiManager.addToAnnotationStorage(this)}setAt(t,e,i,s){const[n,a]=this.parentDimensions;[i,s]=this.screenToPageTranslation(i,s);this.x=(t+i)/n;this.y=(e+s)/a;this.fixAndSetPosition()}#ce([t,e],i,s){[i,s]=this.screenToPageTranslation(i,s);this.x+=i/t;this.y+=s/e;this.fixAndSetPosition()}translate(t,e){this.#ce(this.parentDimensions,t,e)}translateInPage(t,e){this.#te||=[this.x,this.y];this.#ce(this.pageDimensions,t,e);this.div.scrollIntoView({block:"nearest"})}drag(t,e){this.#te||=[this.x,this.y];const[i,s]=this.parentDimensions;this.x+=t/i;this.y+=e/s;if(this.parent&&(this.x<0||this.x>1||this.y<0||this.y>1)){const{x:t,y:e}=this.div.getBoundingClientRect();if(this.parent.findNewParent(this,t,e)){this.x-=Math.floor(this.x);this.y-=Math.floor(this.y)}}let{x:n,y:a}=this;const[r,o]=this.getBaseTranslation();n+=r;a+=o;this.div.style.left=`${(100*n).toFixed(2)}%`;this.div.style.top=`${(100*a).toFixed(2)}%`;this.div.scrollIntoView({block:"nearest"})}get _hasBeenMoved(){return!!this.#te&&(this.#te[0]!==this.x||this.#te[1]!==this.y)}getBaseTranslation(){const[t,e]=this.parentDimensions,{_borderLineWidth:i}=AnnotationEditor,s=i/t,n=i/e;switch(this.rotation){case 90:return[-s,n];case 180:return[s,n];case 270:return[s,-n];default:return[-s,-n]}}get _mustFixPosition(){return!0}fixAndSetPosition(t=this.rotation){const[e,i]=this.pageDimensions;let{x:s,y:n,width:a,height:r}=this;a*=e;r*=i;s*=e;n*=i;if(this._mustFixPosition)switch(t){case 0:s=Math.max(0,Math.min(e-a,s));n=Math.max(0,Math.min(i-r,n));break;case 90:s=Math.max(0,Math.min(e-r,s));n=Math.min(i,Math.max(a,n));break;case 180:s=Math.min(e,Math.max(a,s));n=Math.min(i,Math.max(r,n));break;case 270:s=Math.min(e,Math.max(r,s));n=Math.max(0,Math.min(i-a,n))}this.x=s/=e;this.y=n/=i;const[o,l]=this.getBaseTranslation();s+=o;n+=l;const{style:h}=this.div;h.left=`${(100*s).toFixed(2)}%`;h.top=`${(100*n).toFixed(2)}%`;this.moveInDOM()}static#ue(t,e,i){switch(i){case 90:return[e,-t];case 180:return[-t,-e];case 270:return[-e,t];default:return[t,e]}}screenToPageTranslation(t,e){return AnnotationEditor.#ue(t,e,this.parentRotation)}pageTranslationToScreen(t,e){return AnnotationEditor.#ue(t,e,360-this.parentRotation)}#pe(t){switch(t){case 90:{const[t,e]=this.pageDimensions;return[0,-t/e,e/t,0]}case 180:return[-1,0,0,-1];case 270:{const[t,e]=this.pageDimensions;return[0,t/e,-e/t,0]}default:return[1,0,0,1]}}get parentScale(){return this._uiManager.viewParameters.realScale}get parentRotation(){return(this._uiManager.viewParameters.rotation+this.pageRotation)%360}get parentDimensions(){const{parentScale:t,pageDimensions:[e,i]}=this,s=e*t,n=i*t;return util_FeatureTest.isCSSRoundSupported?[Math.round(s),Math.round(n)]:[s,n]}setDims(t,e){const[i,s]=this.parentDimensions;this.div.style.width=`${(100*t/i).toFixed(2)}%`;this.#Xt||(this.div.style.height=`${(100*e/s).toFixed(2)}%`)}fixDims(){const{style:t}=this.div,{height:e,width:i}=t,s=i.endsWith("%"),n=!this.#Xt&&e.endsWith("%");if(s&&n)return;const[a,r]=this.parentDimensions;s||(t.width=`${(100*parseFloat(i)/a).toFixed(2)}%`);this.#Xt||n||(t.height=`${(100*parseFloat(e)/r).toFixed(2)}%`)}getInitialTranslation(){return[0,0]}#ge(){if(this.#Kt)return;this.#Kt=document.createElement("div");this.#Kt.classList.add("resizers");const t=this._willKeepAspectRatio?["topLeft","topRight","bottomRight","bottomLeft"]:["topLeft","topMiddle","topRight","middleRight","bottomRight","bottomMiddle","bottomLeft","middleLeft"],e=this._uiManager._signal;for(const i of t){const t=document.createElement("div");this.#Kt.append(t);t.classList.add("resizer",i);t.setAttribute("data-resizer-name",i);t.addEventListener("pointerdown",this.#me.bind(this,i),{signal:e});t.addEventListener("contextmenu",noContextMenu,{signal:e});t.tabIndex=-1}this.div.prepend(this.#Kt)}#me(t,e){e.preventDefault();const{isMac:i}=util_FeatureTest.platform;if(0!==e.button||e.ctrlKey&&i)return;this.#o?.toggle(!1);const s=this._isDraggable;this._isDraggable=!1;const n=new AbortController,a=this._uiManager.combinedSignal(n);this.parent.togglePointerEvents(!1);window.addEventListener("pointermove",this.#fe.bind(this,t),{passive:!0,capture:!0,signal:a});window.addEventListener("contextmenu",noContextMenu,{signal:a});const r=this.x,o=this.y,l=this.width,h=this.height,d=this.parent.div.style.cursor,c=this.div.style.cursor;this.div.style.cursor=this.parent.div.style.cursor=window.getComputedStyle(e.target).cursor;const pointerUpCallback=()=>{n.abort();this.parent.togglePointerEvents(!0);this.#o?.toggle(!0);this._isDraggable=s;this.parent.div.style.cursor=d;this.div.style.cursor=c;this.#be(r,o,l,h)};window.addEventListener("pointerup",pointerUpCallback,{signal:a});window.addEventListener("blur",pointerUpCallback,{signal:a})}#be(t,e,i,s){const n=this.x,a=this.y,r=this.width,o=this.height;n===t&&a===e&&r===i&&o===s||this.addCommands({cmd:()=>{this.width=r;this.height=o;this.x=n;this.y=a;const[t,e]=this.parentDimensions;this.setDims(t*r,e*o);this.fixAndSetPosition()},undo:()=>{this.width=i;this.height=s;this.x=t;this.y=e;const[n,a]=this.parentDimensions;this.setDims(n*i,a*s);this.fixAndSetPosition()},mustExec:!0})}#fe(t,e){const[i,s]=this.parentDimensions,n=this.x,a=this.y,r=this.width,o=this.height,l=AnnotationEditor.MIN_SIZE/i,h=AnnotationEditor.MIN_SIZE/s,round=t=>Math.round(1e4*t)/1e4,d=this.#pe(this.rotation),transf=(t,e)=>[d[0]*t+d[2]*e,d[1]*t+d[3]*e],c=this.#pe(360-this.rotation);let u,p,g=!1,m=!1;switch(t){case"topLeft":g=!0;u=(t,e)=>[0,0];p=(t,e)=>[t,e];break;case"topMiddle":u=(t,e)=>[t/2,0];p=(t,e)=>[t/2,e];break;case"topRight":g=!0;u=(t,e)=>[t,0];p=(t,e)=>[0,e];break;case"middleRight":m=!0;u=(t,e)=>[t,e/2];p=(t,e)=>[0,e/2];break;case"bottomRight":g=!0;u=(t,e)=>[t,e];p=(t,e)=>[0,0];break;case"bottomMiddle":u=(t,e)=>[t/2,e];p=(t,e)=>[t/2,0];break;case"bottomLeft":g=!0;u=(t,e)=>[0,e];p=(t,e)=>[t,0];break;case"middleLeft":m=!0;u=(t,e)=>[0,e/2];p=(t,e)=>[t,e/2]}const f=u(r,o),b=p(r,o);let A=transf(...b);const v=round(n+A[0]),y=round(a+A[1]);let w=1,x=1,[_,E]=this.screenToPageTranslation(e.movementX,e.movementY);[_,E]=(C=_/i,S=E/s,[c[0]*C+c[2]*S,c[1]*C+c[3]*S]);var C,S;if(g){const t=Math.hypot(r,o);w=x=Math.max(Math.min(Math.hypot(b[0]-f[0]-_,b[1]-f[1]-E)/t,1/r,1/o),l/r,h/o)}else m?w=Math.max(l,Math.min(1,Math.abs(b[0]-f[0]-_)))/r:x=Math.max(h,Math.min(1,Math.abs(b[1]-f[1]-E)))/o;const T=round(r*w),M=round(o*x);A=transf(...p(T,M));const k=v-A[0],P=y-A[1];this.width=T;this.height=M;this.x=k;this.y=P;this.setDims(i*T,s*M);this.fixAndSetPosition()}altTextFinish(){this.#o?.finish()}async addEditToolbar(){if(this._editToolbar||this.#ie)return this._editToolbar;this._editToolbar=new EditorToolbar(this);this.div.append(this._editToolbar.render());this.#o&&await this._editToolbar.addAltText(this.#o);return this._editToolbar}removeEditToolbar(){if(this._editToolbar){this._editToolbar.remove();this._editToolbar=null;this.#o?.destroy()}}getClientDimensions(){return this.div.getBoundingClientRect()}async addAltTextButton(){if(!this.#o){AltText.initialize(AnnotationEditor._l10nPromise);this.#o=new AltText(this);if(this.#Gt){this.#o.data=this.#Gt;this.#Gt=null}await this.addEditToolbar()}}get altTextData(){return this.#o?.data}set altTextData(t){this.#o&&(this.#o.data=t)}get guessedAltText(){return this.#o?.guessedText}async setGuessedAltText(t){await(this.#o?.setGuessedText(t))}serializeAltText(t){return this.#o?.serialize(t)}hasAltText(){return!!this.#o&&!this.#o.isEmpty()}hasAltTextData(){return this.#o?.hasData()??!1}render(){this.div=document.createElement("div");this.div.setAttribute("data-editor-rotation",(360-this.rotation)%360);this.div.className=this.name;this.div.setAttribute("id",this.id);this.div.tabIndex=this.#qt?-1:0;this._isVisible||this.div.classList.add("hidden");this.setInForeground();this.#Ae();const[t,e]=this.parentDimensions;if(this.parentRotation%180!=0){this.div.style.maxWidth=`${(100*e/t).toFixed(2)}%`;this.div.style.maxHeight=`${(100*t/e).toFixed(2)}%`}const[i,s]=this.getInitialTranslation();this.translate(i,s);bindEvents(this,this.div,["pointerdown"]);return this.div}pointerdown(t){const{isMac:e}=util_FeatureTest.platform;if(0!==t.button||t.ctrlKey&&e)t.preventDefault();else{this.#Zt=!0;this._isDraggable?this.#ve(t):this.#ye(t)}}#ye(t){const{isMac:e}=util_FeatureTest.platform;t.ctrlKey&&!e||t.shiftKey||t.metaKey&&e?this.parent.toggleSelected(this):this.parent.setSelected(this)}#ve(t){const e=this._uiManager.isSelected(this);this._uiManager.setUpDragSession();const i=new AbortController,s=this._uiManager.combinedSignal(i);if(e){this.div.classList.add("moving");this.#ae=t.clientX;this.#re=t.clientY;const pointerMoveCallback=t=>{const{clientX:e,clientY:i}=t,[s,n]=this.screenToPageTranslation(e-this.#ae,i-this.#re);this.#ae=e;this.#re=i;this._uiManager.dragSelectedEditors(s,n)};window.addEventListener("pointermove",pointerMoveCallback,{passive:!0,capture:!0,signal:s})}const pointerUpCallback=()=>{i.abort();e&&this.div.classList.remove("moving");this.#Zt=!1;this._uiManager.endDragSession()||this.#ye(t)};window.addEventListener("pointerup",pointerUpCallback,{signal:s});window.addEventListener("blur",pointerUpCallback,{signal:s})}moveInDOM(){this.#ne&&clearTimeout(this.#ne);this.#ne=setTimeout((()=>{this.#ne=null;this.parent?.moveEditorInDOM(this)}),0)}_setParentAndPosition(t,e,i){t.changeParent(this);this.x=e;this.y=i;this.fixAndSetPosition()}getRect(t,e,i=this.rotation){const s=this.parentScale,[n,a]=this.pageDimensions,[r,o]=this.pageTranslation,l=t/s,h=e/s,d=this.x*n,c=this.y*a,u=this.width*n,p=this.height*a;switch(i){case 0:return[d+l+r,a-c-h-p+o,d+l+u+r,a-c-h+o];case 90:return[d+h+r,a-c+l+o,d+h+p+r,a-c+l+u+o];case 180:return[d-l-u+r,a-c+h+o,d-l+r,a-c+h+p+o];case 270:return[d-h-p+r,a-c-l-u+o,d-h+r,a-c-l+o];default:throw new Error("Invalid rotation")}}getRectInCurrentCoords(t,e){const[i,s,n,a]=t,r=n-i,o=a-s;switch(this.rotation){case 0:return[i,e-a,r,o];case 90:return[i,e-s,o,r];case 180:return[n,e-s,r,o];case 270:return[n,e-a,o,r];default:throw new Error("Invalid rotation")}}onceAdded(){}isEmpty(){return!1}enableEditMode(){this.#ie=!0}disableEditMode(){this.#ie=!1}isInEditMode(){return this.#ie}shouldGetKeyboardEvents(){return this.#se}needsToBeRebuilt(){return this.div&&!this.isAttachedToDOM}#Ae(){if(this.#Qt||!this.div)return;this.#Qt=new AbortController;const t=this._uiManager.combinedSignal(this.#Qt);this.div.addEventListener("focusin",this.focusin.bind(this),{signal:t});this.div.addEventListener("focusout",this.focusout.bind(this),{signal:t})}rebuild(){this.#Ae()}rotate(t){}serialize(t=!1,e=null){unreachable("An editor must be serializable")}static deserialize(t,e,i){const s=new this.prototype.constructor({parent:e,id:e.getNextId(),uiManager:i});s.rotation=t.rotation;s.#Gt=t.accessibilityData;const[n,a]=s.pageDimensions,[r,o,l,h]=s.getRectInCurrentCoords(t.rect,a);s.x=r/n;s.y=o/a;s.width=l/n;s.height=h/a;return s}get hasBeenModified(){return!!this.annotationElementId&&(this.deleted||null!==this.serialize())}remove(){this.#Qt?.abort();this.#Qt=null;this.isEmpty()||this.commit();this.parent?this.parent.remove(this):this._uiManager.removeEditor(this);if(this.#ne){clearTimeout(this.#ne);this.#ne=null}this.#de();this.removeEditToolbar();if(this.#oe){for(const t of this.#oe.values())clearTimeout(t);this.#oe=null}this.parent=null}get isResizable(){return!1}makeResizable(){if(this.isResizable){this.#ge();this.#Kt.classList.remove("hidden");bindEvents(this,this.div,["keydown"])}}get toolbarPosition(){return null}keydown(t){if(!this.isResizable||t.target!==this.div||"Enter"!==t.key)return;this._uiManager.setSelected(this);this.#Yt={savedX:this.x,savedY:this.y,savedWidth:this.width,savedHeight:this.height};const e=this.#Kt.children;if(!this.#Vt){this.#Vt=Array.from(e);const t=this.#we.bind(this),i=this.#xe.bind(this),s=this._uiManager._signal;for(const e of this.#Vt){const n=e.getAttribute("data-resizer-name");e.setAttribute("role","spinbutton");e.addEventListener("keydown",t,{signal:s});e.addEventListener("blur",i,{signal:s});e.addEventListener("focus",this.#_e.bind(this,n),{signal:s});e.setAttribute("data-l10n-id",AnnotationEditor._l10nResizer[n])}}const i=this.#Vt[0];let s=0;for(const t of e){if(t===i)break;s++}const n=(360-this.rotation+this.parentRotation)%360/90*(this.#Vt.length/4);if(n!==s){if(n<s)for(let t=0;t<s-n;t++)this.#Kt.append(this.#Kt.firstChild);else if(n>s)for(let t=0;t<n-s;t++)this.#Kt.firstChild.before(this.#Kt.lastChild);let t=0;for(const i of e){const e=this.#Vt[t++].getAttribute("data-resizer-name");i.setAttribute("data-l10n-id",AnnotationEditor._l10nResizer[e])}}this.#Ee(0);this.#se=!0;this.#Kt.firstChild.focus({focusVisible:!0});t.preventDefault();t.stopImmediatePropagation()}#we(t){AnnotationEditor._resizerKeyboardManager.exec(this,t)}#xe(t){this.#se&&t.relatedTarget?.parentNode!==this.#Kt&&this.#de()}#_e(t){this.#Jt=this.#se?t:""}#Ee(t){if(this.#Vt)for(const e of this.#Vt)e.tabIndex=t}_resizeWithKeyboard(t,e){this.#se&&this.#fe(this.#Jt,{movementX:t,movementY:e})}#de(){this.#se=!1;this.#Ee(-1);if(this.#Yt){const{savedX:t,savedY:e,savedWidth:i,savedHeight:s}=this.#Yt;this.#be(t,e,i,s);this.#Yt=null}}_stopResizingWithKeyboard(){this.#de();this.div.focus()}select(){this.makeResizable();this.div?.classList.add("selectedEditor");if(this._editToolbar){this._editToolbar?.show();this.#o?.toggleAltTextBadge(!1)}else this.addEditToolbar().then((()=>{this.div?.classList.contains("selectedEditor")&&this._editToolbar?.show()}))}unselect(){this.#Kt?.classList.add("hidden");this.div?.classList.remove("selectedEditor");this.div?.contains(document.activeElement)&&this._uiManager.currentLayer.div.focus({preventScroll:!0});this._editToolbar?.hide();this.#o?.toggleAltTextBadge(!0)}updateParams(t,e){}disableEditing(){}enableEditing(){}enterInEditMode(){}getImageForAltText(){return null}get contentDiv(){return this.div}get isEditing(){return this.#ee}set isEditing(t){this.#ee=t;if(this.parent)if(t){this.parent.setSelected(this);this.parent.setActiveEditor(this)}else this.parent.setActiveEditor(null)}setAspectRatio(t,e){this.#Xt=!0;const i=t/e,{style:s}=this.div;s.aspectRatio=i;s.height="auto"}static get MIN_SIZE(){return 16}static canCreateNewEmptyEditor(){return!0}get telemetryInitialData(){return{action:"added"}}get telemetryFinalData(){return null}_reportTelemetry(t,e=!1){if(e){this.#oe||=new Map;const{action:e}=t;let i=this.#oe.get(e);i&&clearTimeout(i);i=setTimeout((()=>{this._reportTelemetry(t);this.#oe.delete(e);0===this.#oe.size&&(this.#oe=null)}),AnnotationEditor._telemetryTimeout);this.#oe.set(e,i)}else{t.type||=this.editorType;this._uiManager._eventBus.dispatch("reporttelemetry",{source:this,details:{type:"editing",data:t}})}}show(t=this._isVisible){this.div.classList.toggle("hidden",!t);this._isVisible=t}enable(){this.div&&(this.div.tabIndex=0);this.#qt=!1}disable(){this.div&&(this.div.tabIndex=-1);this.#qt=!0}renderAnnotationElement(t){let e=t.container.querySelector(".annotationContent");if(e){if("CANVAS"===e.nodeName){const t=e;e=document.createElement("div");e.classList.add("annotationContent",this.editorType);t.before(e)}}else{e=document.createElement("div");e.classList.add("annotationContent",this.editorType);t.container.prepend(e)}return e}resetAnnotationElement(t){const{firstChild:e}=t.container;"DIV"===e.nodeName&&e.classList.contains("annotationContent")&&e.remove()}}class FakeEditor extends AnnotationEditor{constructor(t){super(t);this.annotationElementId=t.annotationElementId;this.deleted=!0}serialize(){return{id:this.annotationElementId,deleted:!0,pageIndex:this.pageIndex}}}const gt=3285377520,mt=4294901760,ft=65535;class MurmurHash3_64{constructor(t){this.h1=t?4294967295&t:gt;this.h2=t?4294967295&t:gt}update(t){let e,i;if("string"==typeof t){e=new Uint8Array(2*t.length);i=0;for(let s=0,n=t.length;s<n;s++){const n=t.charCodeAt(s);if(n<=255)e[i++]=n;else{e[i++]=n>>>8;e[i++]=255&n}}}else{if(!ArrayBuffer.isView(t))throw new Error("Invalid data format, must be a string or TypedArray.");e=t.slice();i=e.byteLength}const s=i>>2,n=i-4*s,a=new Uint32Array(e.buffer,0,s);let r=0,o=0,l=this.h1,h=this.h2;const d=3432918353,c=461845907,u=11601,p=13715;for(let t=0;t<s;t++)if(1&t){r=a[t];r=r*d&mt|r*u&ft;r=r<<15|r>>>17;r=r*c&mt|r*p&ft;l^=r;l=l<<13|l>>>19;l=5*l+3864292196}else{o=a[t];o=o*d&mt|o*u&ft;o=o<<15|o>>>17;o=o*c&mt|o*p&ft;h^=o;h=h<<13|h>>>19;h=5*h+3864292196}r=0;switch(n){case 3:r^=e[4*s+2]<<16;case 2:r^=e[4*s+1]<<8;case 1:r^=e[4*s];r=r*d&mt|r*u&ft;r=r<<15|r>>>17;r=r*c&mt|r*p&ft;1&s?l^=r:h^=r}this.h1=l;this.h2=h}hexdigest(){let t=this.h1,e=this.h2;t^=e>>>1;t=3981806797*t&mt|36045*t&ft;e=4283543511*e&mt|(2950163797*(e<<16|t>>>16)&mt)>>>16;t^=e>>>1;t=444984403*t&mt|60499*t&ft;e=3301882366*e&mt|(3120437893*(e<<16|t>>>16)&mt)>>>16;t^=e>>>1;return(t>>>0).toString(16).padStart(8,"0")+(e>>>0).toString(16).padStart(8,"0")}}const bt=Object.freeze({map:null,hash:"",transfer:void 0});class AnnotationStorage{#Ce=!1;#Se=null;#Te=new Map;constructor(){this.onSetModified=null;this.onResetModified=null;this.onAnnotationEditor=null}getValue(t,e){const i=this.#Te.get(t);return void 0===i?e:Object.assign(e,i)}getRawValue(t){return this.#Te.get(t)}remove(t){this.#Te.delete(t);0===this.#Te.size&&this.resetModified();if("function"==typeof this.onAnnotationEditor){for(const t of this.#Te.values())if(t instanceof AnnotationEditor)return;this.onAnnotationEditor(null)}}setValue(t,e){const i=this.#Te.get(t);let s=!1;if(void 0!==i){for(const[t,n]of Object.entries(e))if(i[t]!==n){s=!0;i[t]=n}}else{s=!0;this.#Te.set(t,e)}s&&this.#Me();e instanceof AnnotationEditor&&"function"==typeof this.onAnnotationEditor&&this.onAnnotationEditor(e.constructor._type)}has(t){return this.#Te.has(t)}getAll(){return this.#Te.size>0?objectFromMap(this.#Te):null}setAll(t){for(const[e,i]of Object.entries(t))this.setValue(e,i)}get size(){return this.#Te.size}#Me(){if(!this.#Ce){this.#Ce=!0;"function"==typeof this.onSetModified&&this.onSetModified()}}resetModified(){if(this.#Ce){this.#Ce=!1;"function"==typeof this.onResetModified&&this.onResetModified()}}get print(){return new PrintAnnotationStorage(this)}get serializable(){if(0===this.#Te.size)return bt;const t=new Map,e=new MurmurHash3_64,i=[],s=Object.create(null);let n=!1;for(const[i,a]of this.#Te){const r=a instanceof AnnotationEditor?a.serialize(!1,s):a;if(r){t.set(i,r);e.update(`${i}:${JSON.stringify(r)}`);n||=!!r.bitmap}}if(n)for(const e of t.values())e.bitmap&&i.push(e.bitmap);return t.size>0?{map:t,hash:e.hexdigest(),transfer:i}:bt}get editorStats(){let t=null;const e=new Map;for(const i of this.#Te.values()){if(!(i instanceof AnnotationEditor))continue;const s=i.telemetryFinalData;if(!s)continue;const{type:n}=s;e.has(n)||e.set(n,Object.getPrototypeOf(i).constructor);t||=Object.create(null);const a=t[n]||=new Map;for(const[t,e]of Object.entries(s)){if("type"===t)continue;let i=a.get(t);if(!i){i=new Map;a.set(t,i)}const s=i.get(e)??0;i.set(e,s+1)}}for(const[i,s]of e)t[i]=s.computeTelemetryFinalData(t[i]);return t}resetModifiedIds(){this.#Se=null}get modifiedIds(){if(this.#Se)return this.#Se;const t=[];for(const e of this.#Te.values())e instanceof AnnotationEditor&&e.annotationElementId&&e.serialize()&&t.push(e.annotationElementId);return this.#Se={ids:new Set(t),hash:t.join(",")}}}class PrintAnnotationStorage extends AnnotationStorage{#ke;constructor(t){super();const{map:e,hash:i,transfer:s}=t.serializable,n=structuredClone(e,s?{transfer:s}:null);this.#ke={map:n,hash:i,transfer:s}}get print(){unreachable("Should not call PrintAnnotationStorage.print")}get serializable(){return this.#ke}get modifiedIds(){return shadow(this,"modifiedIds",{ids:new Set,hash:""})}}class FontLoader{#Pe=new Set;constructor({ownerDocument:t=globalThis.document,styleElement:e=null}){this._document=t;this.nativeFontFaces=new Set;this.styleElement=null;this.loadingRequests=[];this.loadTestFontId=0}addNativeFontFace(t){this.nativeFontFaces.add(t);this._document.fonts.add(t)}removeNativeFontFace(t){this.nativeFontFaces.delete(t);this._document.fonts.delete(t)}insertRule(t){if(!this.styleElement){this.styleElement=this._document.createElement("style");this._document.documentElement.getElementsByTagName("head")[0].append(this.styleElement)}const e=this.styleElement.sheet;e.insertRule(t,e.cssRules.length)}clear(){for(const t of this.nativeFontFaces)this._document.fonts.delete(t);this.nativeFontFaces.clear();this.#Pe.clear();if(this.styleElement){this.styleElement.remove();this.styleElement=null}}async loadSystemFont({systemFontInfo:t,_inspectFont:e}){if(t&&!this.#Pe.has(t.loadedName)){assert(!this.disableFontFace,"loadSystemFont shouldn\'t be called when `disableFontFace` is set.");if(this.isFontLoadingAPISupported){const{loadedName:i,src:s,style:n}=t,a=new FontFace(i,s,n);this.addNativeFontFace(a);try{await a.load();this.#Pe.add(i);e?.(t)}catch{warn(`Cannot load system font: ${t.baseFontName}, installing it could help to improve PDF rendering.`);this.removeNativeFontFace(a)}}else unreachable("Not implemented: loadSystemFont without the Font Loading API.")}}async bind(t){if(t.attached||t.missingFile&&!t.systemFontInfo)return;t.attached=!0;if(t.systemFontInfo){await this.loadSystemFont(t);return}if(this.isFontLoadingAPISupported){const e=t.createNativeFontFace();if(e){this.addNativeFontFace(e);try{await e.loaded}catch(i){warn(`Failed to load font \'${e.family}\': \'${i}\'.`);t.disableFontFace=!0;throw i}}return}const e=t.createFontFaceRule();if(e){this.insertRule(e);if(this.isSyncFontLoadingSupported)return;await new Promise((e=>{const i=this._queueLoadingCallback(e);this._prepareFontLoadEvent(t,i)}))}}get isFontLoadingAPISupported(){return shadow(this,"isFontLoadingAPISupported",!!this._document?.fonts)}get isSyncFontLoadingSupported(){let t=!1;(e||"undefined"!=typeof navigator&&"string"==typeof navigator?.userAgent&&/Mozilla\\/5.0.*?rv:\\d+.*? Gecko/.test(navigator.userAgent))&&(t=!0);return shadow(this,"isSyncFontLoadingSupported",t)}_queueLoadingCallback(t){const{loadingRequests:e}=this,i={done:!1,complete:function completeRequest(){assert(!i.done,"completeRequest() cannot be called twice.");i.done=!0;for(;e.length>0&&e[0].done;){const t=e.shift();setTimeout(t.callback,0)}},callback:t};e.push(i);return i}get _loadTestFont(){return shadow(this,"_loadTestFont",atob("T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQAFQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAAALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgAAAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACMAooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4DIP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAAAAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUAAQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgABAAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABYAAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAAAC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAAAAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQACAQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTjFQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA=="))}_prepareFontLoadEvent(t,e){function int32(t,e){return t.charCodeAt(e)<<24|t.charCodeAt(e+1)<<16|t.charCodeAt(e+2)<<8|255&t.charCodeAt(e+3)}function spliceString(t,e,i,s){return t.substring(0,e)+s+t.substring(e+i)}let i,s;const n=this._document.createElement("canvas");n.width=1;n.height=1;const a=n.getContext("2d");let r=0;const o=`lt${Date.now()}${this.loadTestFontId++}`;let l=this._loadTestFont;l=spliceString(l,976,o.length,o);const h=1482184792;let d=int32(l,16);for(i=0,s=o.length-3;i<s;i+=4)d=d-h+int32(o,i)|0;i<o.length&&(d=d-h+int32(o+"XXX",i)|0);l=spliceString(l,16,4,function string32(t){return String.fromCharCode(t>>24&255,t>>16&255,t>>8&255,255&t)}(d));const c=`@font-face {font-family:"${o}";src:${`url(data:font/opentype;base64,${btoa(l)});`}}`;this.insertRule(c);const u=this._document.createElement("div");u.style.visibility="hidden";u.style.width=u.style.height="10px";u.style.position="absolute";u.style.top=u.style.left="0px";for(const e of[t.loadedName,o]){const t=this._document.createElement("span");t.textContent="Hi";t.style.fontFamily=e;u.append(t)}this._document.body.append(u);!function isFontReady(t,e){if(++r>30){warn("Load test font never loaded.");e();return}a.font="30px "+t;a.fillText(".",0,20);a.getImageData(0,0,1,1).data[3]>0?e():setTimeout(isFontReady.bind(null,t,e))}(o,(()=>{u.remove();e.complete()}))}}class FontFaceObject{constructor(t,{disableFontFace:e=!1,inspectFont:i=null}){this.compiledGlyphs=Object.create(null);for(const e in t)this[e]=t[e];this.disableFontFace=!0===e;this._inspectFont=i}createNativeFontFace(){if(!this.data||this.disableFontFace)return null;let t;if(this.cssFontInfo){const e={weight:this.cssFontInfo.fontWeight};this.cssFontInfo.italicAngle&&(e.style=`oblique ${this.cssFontInfo.italicAngle}deg`);t=new FontFace(this.cssFontInfo.fontFamily,this.data,e)}else t=new FontFace(this.loadedName,this.data,{});this._inspectFont?.(this);return t}createFontFaceRule(){if(!this.data||this.disableFontFace)return null;const t=bytesToString(this.data),e=`url(data:${this.mimetype};base64,${btoa(t)});`;let i;if(this.cssFontInfo){let t=`font-weight: ${this.cssFontInfo.fontWeight};`;this.cssFontInfo.italicAngle&&(t+=`font-style: oblique ${this.cssFontInfo.italicAngle}deg;`);i=`@font-face {font-family:"${this.cssFontInfo.fontFamily}";${t}src:${e}}`}else i=`@font-face {font-family:"${this.loadedName}";src:${e}}`;this._inspectFont?.(this,e);return i}getPathGenerator(t,e){if(void 0!==this.compiledGlyphs[e])return this.compiledGlyphs[e];let i;try{i=t.get(this.loadedName+"_path_"+e)}catch(t){warn(`getPathGenerator - ignoring character: "${t}".`)}if(!Array.isArray(i)||0===i.length)return this.compiledGlyphs[e]=function(t,e){};const s=[];for(let t=0,e=i.length;t<e;)switch(i[t++]){case st:{const[e,n,a,r,o,l]=i.slice(t,t+6);s.push((t=>t.bezierCurveTo(e,n,a,r,o,l)));t+=6}break;case nt:{const[e,n]=i.slice(t,t+2);s.push((t=>t.moveTo(e,n)));t+=2}break;case at:{const[e,n]=i.slice(t,t+2);s.push((t=>t.lineTo(e,n)));t+=2}break;case rt:{const[e,n,a,r]=i.slice(t,t+4);s.push((t=>t.quadraticCurveTo(e,n,a,r)));t+=4}break;case ot:s.push((t=>t.restore()));break;case lt:s.push((t=>t.save()));break;case ht:assert(2===s.length,"Scale command is only valid at the third position.");break;case dt:{const[e,n,a,r,o,l]=i.slice(t,t+6);s.push((t=>t.transform(e,n,a,r,o,l)));t+=6}break;case ct:{const[e,n]=i.slice(t,t+2);s.push((t=>t.translate(e,n)));t+=2}}return this.compiledGlyphs[e]=function glyphDrawer(t,e){s[0](t);s[1](t);t.scale(e,-e);for(let e=2,i=s.length;e<i;e++)s[e](t)}}}if(e){var At=Promise.withResolvers(),vt=null;(async()=>{const t=await import("fs"),e=await import("http"),i=await import("https"),s=await import("url");return new Map(Object.entries({fs:t,http:e,https:i,url:s,canvas:undefined,path2d:undefined}))})().then((t=>{vt=t;At.resolve()}),(t=>{warn(`loadPackages: ${t}`);vt=new Map;At.resolve()}))}class NodePackages{static get promise(){return At.promise}static get(t){return vt?.get(t)}}const node_utils_fetchData=function(t){return NodePackages.get("fs").promises.readFile(t).then((t=>new Uint8Array(t)))};const yt="Fill",wt="Stroke",xt="Shading";function applyBoundingBox(t,e){if(!e)return;const i=e[2]-e[0],s=e[3]-e[1],n=new Path2D;n.rect(e[0],e[1],i,s);t.clip(n)}class BaseShadingPattern{getPattern(){unreachable("Abstract method `getPattern` called.")}}class RadialAxialShadingPattern extends BaseShadingPattern{constructor(t){super();this._type=t[1];this._bbox=t[2];this._colorStops=t[3];this._p0=t[4];this._p1=t[5];this._r0=t[6];this._r1=t[7];this.matrix=null}_createGradient(t){let e;"axial"===this._type?e=t.createLinearGradient(this._p0[0],this._p0[1],this._p1[0],this._p1[1]):"radial"===this._type&&(e=t.createRadialGradient(this._p0[0],this._p0[1],this._r0,this._p1[0],this._p1[1],this._r1));for(const t of this._colorStops)e.addColorStop(t[0],t[1]);return e}getPattern(t,e,i,s){let n;if(s===wt||s===yt){const a=e.current.getClippedPathBoundingBox(s,getCurrentTransform(t))||[0,0,0,0],r=Math.ceil(a[2]-a[0])||1,o=Math.ceil(a[3]-a[1])||1,l=e.cachedCanvases.getCanvas("pattern",r,o,!0),h=l.context;h.clearRect(0,0,h.canvas.width,h.canvas.height);h.beginPath();h.rect(0,0,h.canvas.width,h.canvas.height);h.translate(-a[0],-a[1]);i=Util.transform(i,[1,0,0,1,a[0],a[1]]);h.transform(...e.baseTransform);this.matrix&&h.transform(...this.matrix);applyBoundingBox(h,this._bbox);h.fillStyle=this._createGradient(h);h.fill();n=t.createPattern(l.canvas,"no-repeat");const d=new DOMMatrix(i);n.setTransform(d)}else{applyBoundingBox(t,this._bbox);n=this._createGradient(t)}return n}}function drawTriangle(t,e,i,s,n,a,r,o){const l=e.coords,h=e.colors,d=t.data,c=4*t.width;let u;if(l[i+1]>l[s+1]){u=i;i=s;s=u;u=a;a=r;r=u}if(l[s+1]>l[n+1]){u=s;s=n;n=u;u=r;r=o;o=u}if(l[i+1]>l[s+1]){u=i;i=s;s=u;u=a;a=r;r=u}const p=(l[i]+e.offsetX)*e.scaleX,g=(l[i+1]+e.offsetY)*e.scaleY,m=(l[s]+e.offsetX)*e.scaleX,f=(l[s+1]+e.offsetY)*e.scaleY,b=(l[n]+e.offsetX)*e.scaleX,A=(l[n+1]+e.offsetY)*e.scaleY;if(g>=A)return;const v=h[a],y=h[a+1],w=h[a+2],x=h[r],_=h[r+1],E=h[r+2],C=h[o],S=h[o+1],T=h[o+2],M=Math.round(g),k=Math.round(A);let P,F,D,R,I,L,N,O;for(let t=M;t<=k;t++){if(t<f){const e=t<g?0:(g-t)/(g-f);P=p-(p-m)*e;F=v-(v-x)*e;D=y-(y-_)*e;R=w-(w-E)*e}else{let e;e=t>A?1:f===A?0:(f-t)/(f-A);P=m-(m-b)*e;F=x-(x-C)*e;D=_-(_-S)*e;R=E-(E-T)*e}let e;e=t<g?0:t>A?1:(g-t)/(g-A);I=p-(p-b)*e;L=v-(v-C)*e;N=y-(y-S)*e;O=w-(w-T)*e;const i=Math.round(Math.min(P,I)),s=Math.round(Math.max(P,I));let n=c*t+4*i;for(let t=i;t<=s;t++){e=(P-t)/(P-I);e<0?e=0:e>1&&(e=1);d[n++]=F-(F-L)*e|0;d[n++]=D-(D-N)*e|0;d[n++]=R-(R-O)*e|0;d[n++]=255}}}function drawFigure(t,e,i){const s=e.coords,n=e.colors;let a,r;switch(e.type){case"lattice":const o=e.verticesPerRow,l=Math.floor(s.length/o)-1,h=o-1;for(a=0;a<l;a++){let e=a*o;for(let a=0;a<h;a++,e++){drawTriangle(t,i,s[e],s[e+1],s[e+o],n[e],n[e+1],n[e+o]);drawTriangle(t,i,s[e+o+1],s[e+1],s[e+o],n[e+o+1],n[e+1],n[e+o])}}break;case"triangles":for(a=0,r=s.length;a<r;a+=3)drawTriangle(t,i,s[a],s[a+1],s[a+2],n[a],n[a+1],n[a+2]);break;default:throw new Error("illegal figure")}}class MeshShadingPattern extends BaseShadingPattern{constructor(t){super();this._coords=t[2];this._colors=t[3];this._figures=t[4];this._bounds=t[5];this._bbox=t[7];this._background=t[8];this.matrix=null}_createMeshCanvas(t,e,i){const s=Math.floor(this._bounds[0]),n=Math.floor(this._bounds[1]),a=Math.ceil(this._bounds[2])-s,r=Math.ceil(this._bounds[3])-n,o=Math.min(Math.ceil(Math.abs(a*t[0]*1.1)),3e3),l=Math.min(Math.ceil(Math.abs(r*t[1]*1.1)),3e3),h=a/o,d=r/l,c={coords:this._coords,colors:this._colors,offsetX:-s,offsetY:-n,scaleX:1/h,scaleY:1/d},u=o+4,p=l+4,g=i.getCanvas("mesh",u,p,!1),m=g.context,f=m.createImageData(o,l);if(e){const t=f.data;for(let i=0,s=t.length;i<s;i+=4){t[i]=e[0];t[i+1]=e[1];t[i+2]=e[2];t[i+3]=255}}for(const t of this._figures)drawFigure(f,t,c);m.putImageData(f,2,2);return{canvas:g.canvas,offsetX:s-2*h,offsetY:n-2*d,scaleX:h,scaleY:d}}getPattern(t,e,i,s){applyBoundingBox(t,this._bbox);let n;if(s===xt)n=Util.singularValueDecompose2dScale(getCurrentTransform(t));else{n=Util.singularValueDecompose2dScale(e.baseTransform);if(this.matrix){const t=Util.singularValueDecompose2dScale(this.matrix);n=[n[0]*t[0],n[1]*t[1]]}}const a=this._createMeshCanvas(n,s===xt?null:this._background,e.cachedCanvases);if(s!==xt){t.setTransform(...e.baseTransform);this.matrix&&t.transform(...this.matrix)}t.translate(a.offsetX,a.offsetY);t.scale(a.scaleX,a.scaleY);return t.createPattern(a.canvas,"no-repeat")}}class DummyShadingPattern extends BaseShadingPattern{getPattern(){return"hotpink"}}const _t=1,Et=2;class TilingPattern{static MAX_PATTERN_SIZE=3e3;constructor(t,e,i,s,n){this.operatorList=t[2];this.matrix=t[3];this.bbox=t[4];this.xstep=t[5];this.ystep=t[6];this.paintType=t[7];this.tilingType=t[8];this.color=e;this.ctx=i;this.canvasGraphicsFactory=s;this.baseTransform=n}createPatternCanvas(t){const e=this.operatorList,i=this.bbox,s=this.xstep,n=this.ystep,a=this.paintType,r=this.tilingType,o=this.color,l=this.canvasGraphicsFactory;info("TilingType: "+r);const h=i[0],d=i[1],c=i[2],u=i[3],p=Util.singularValueDecompose2dScale(this.matrix),g=Util.singularValueDecompose2dScale(this.baseTransform),m=[p[0]*g[0],p[1]*g[1]],f=this.getSizeAndScale(s,this.ctx.canvas.width,m[0]),b=this.getSizeAndScale(n,this.ctx.canvas.height,m[1]),A=t.cachedCanvases.getCanvas("pattern",f.size,b.size,!0),v=A.context,y=l.createCanvasGraphics(v);y.groupLevel=t.groupLevel;this.setFillAndStrokeStyleToContext(y,a,o);let w=h,x=d,_=c,E=u;if(h<0){w=0;_+=Math.abs(h)}if(d<0){x=0;E+=Math.abs(d)}v.translate(-f.scale*w,-b.scale*x);y.transform(f.scale,0,0,b.scale,0,0);v.save();this.clipBbox(y,w,x,_,E);y.baseTransform=getCurrentTransform(y.ctx);y.executeOperatorList(e);y.endDrawing();return{canvas:A.canvas,scaleX:f.scale,scaleY:b.scale,offsetX:w,offsetY:x}}getSizeAndScale(t,e,i){t=Math.abs(t);const s=Math.max(TilingPattern.MAX_PATTERN_SIZE,e);let n=Math.ceil(t*i);n>=s?n=s:i=n/t;return{scale:i,size:n}}clipBbox(t,e,i,s,n){const a=s-e,r=n-i;t.ctx.rect(e,i,a,r);t.current.updateRectMinMax(getCurrentTransform(t.ctx),[e,i,s,n]);t.clip();t.endPath()}setFillAndStrokeStyleToContext(t,e,i){const s=t.ctx,n=t.current;switch(e){case _t:const t=this.ctx;s.fillStyle=t.fillStyle;s.strokeStyle=t.strokeStyle;n.fillColor=t.fillStyle;n.strokeColor=t.strokeStyle;break;case Et:const a=Util.makeHexColor(i[0],i[1],i[2]);s.fillStyle=a;s.strokeStyle=a;n.fillColor=a;n.strokeColor=a;break;default:throw new FormatError(`Unsupported paint type: ${e}`)}}getPattern(t,e,i,s){let n=i;if(s!==xt){n=Util.transform(n,e.baseTransform);this.matrix&&(n=Util.transform(n,this.matrix))}const a=this.createPatternCanvas(e);let r=new DOMMatrix(n);r=r.translate(a.offsetX,a.offsetY);r=r.scale(1/a.scaleX,1/a.scaleY);const o=t.createPattern(a.canvas,"repeat");o.setTransform(r);return o}}function convertBlackAndWhiteToRGBA({src:t,srcPos:e=0,dest:i,width:s,height:n,nonBlackColor:a=4294967295,inverseDecode:r=!1}){const o=util_FeatureTest.isLittleEndian?4278190080:255,[l,h]=r?[a,o]:[o,a],d=s>>3,c=7&s,u=t.length;i=new Uint32Array(i.buffer);let p=0;for(let s=0;s<n;s++){for(const s=e+d;e<s;e++){const s=e<u?t[e]:255;i[p++]=128&s?h:l;i[p++]=64&s?h:l;i[p++]=32&s?h:l;i[p++]=16&s?h:l;i[p++]=8&s?h:l;i[p++]=4&s?h:l;i[p++]=2&s?h:l;i[p++]=1&s?h:l}if(0===c)continue;const s=e<u?t[e++]:255;for(let t=0;t<c;t++)i[p++]=s&1<<7-t?h:l}return{srcPos:e,destPos:p}}const Ct=16;class CachedCanvases{constructor(t){this.canvasFactory=t;this.cache=Object.create(null)}getCanvas(t,e,i){let s;if(void 0!==this.cache[t]){s=this.cache[t];this.canvasFactory.reset(s,e,i)}else{s=this.canvasFactory.create(e,i);this.cache[t]=s}return s}delete(t){delete this.cache[t]}clear(){for(const t in this.cache){const e=this.cache[t];this.canvasFactory.destroy(e);delete this.cache[t]}}}function drawImageAtIntegerCoords(t,e,i,s,n,a,r,o,l,h){const[d,c,u,p,g,m]=getCurrentTransform(t);if(0===c&&0===u){const f=r*d+g,b=Math.round(f),A=o*p+m,v=Math.round(A),y=(r+l)*d+g,w=Math.abs(Math.round(y)-b)||1,x=(o+h)*p+m,_=Math.abs(Math.round(x)-v)||1;t.setTransform(Math.sign(d),0,0,Math.sign(p),b,v);t.drawImage(e,i,s,n,a,0,0,w,_);t.setTransform(d,c,u,p,g,m);return[w,_]}if(0===d&&0===p){const f=o*u+g,b=Math.round(f),A=r*c+m,v=Math.round(A),y=(o+h)*u+g,w=Math.abs(Math.round(y)-b)||1,x=(r+l)*c+m,_=Math.abs(Math.round(x)-v)||1;t.setTransform(0,Math.sign(c),Math.sign(u),0,b,v);t.drawImage(e,i,s,n,a,0,0,_,w);t.setTransform(d,c,u,p,g,m);return[_,w]}t.drawImage(e,i,s,n,a,r,o,l,h);return[Math.hypot(d,c)*l,Math.hypot(u,p)*h]}class CanvasExtraState{constructor(t,e){this.alphaIsShape=!1;this.fontSize=0;this.fontSizeScale=1;this.textMatrix=i;this.textMatrixScale=1;this.fontMatrix=s;this.leading=0;this.x=0;this.y=0;this.lineX=0;this.lineY=0;this.charSpacing=0;this.wordSpacing=0;this.textHScale=1;this.textRenderingMode=b;this.textRise=0;this.fillColor="#000000";this.strokeColor="#000000";this.patternFill=!1;this.fillAlpha=1;this.strokeAlpha=1;this.lineWidth=1;this.activeSMask=null;this.transferMaps="none";this.startNewPathAndClipBox([0,0,t,e])}clone(){const t=Object.create(this);t.clipBox=this.clipBox.slice();return t}setCurrentPoint(t,e){this.x=t;this.y=e}updatePathMinMax(t,e,i){[e,i]=Util.applyTransform([e,i],t);this.minX=Math.min(this.minX,e);this.minY=Math.min(this.minY,i);this.maxX=Math.max(this.maxX,e);this.maxY=Math.max(this.maxY,i)}updateRectMinMax(t,e){const i=Util.applyTransform(e,t),s=Util.applyTransform(e.slice(2),t),n=Util.applyTransform([e[0],e[3]],t),a=Util.applyTransform([e[2],e[1]],t);this.minX=Math.min(this.minX,i[0],s[0],n[0],a[0]);this.minY=Math.min(this.minY,i[1],s[1],n[1],a[1]);this.maxX=Math.max(this.maxX,i[0],s[0],n[0],a[0]);this.maxY=Math.max(this.maxY,i[1],s[1],n[1],a[1])}updateScalingPathMinMax(t,e){Util.scaleMinMax(t,e);this.minX=Math.min(this.minX,e[0]);this.minY=Math.min(this.minY,e[1]);this.maxX=Math.max(this.maxX,e[2]);this.maxY=Math.max(this.maxY,e[3])}updateCurvePathMinMax(t,e,i,s,n,a,r,o,l,h){const d=Util.bezierBoundingBox(e,i,s,n,a,r,o,l,h);h||this.updateRectMinMax(t,d)}getPathBoundingBox(t=yt,e=null){const i=[this.minX,this.minY,this.maxX,this.maxY];if(t===wt){e||unreachable("Stroke bounding box must include transform.");const t=Util.singularValueDecompose2dScale(e),s=t[0]*this.lineWidth/2,n=t[1]*this.lineWidth/2;i[0]-=s;i[1]-=n;i[2]+=s;i[3]+=n}return i}updateClipFromPath(){const t=Util.intersect(this.clipBox,this.getPathBoundingBox());this.startNewPathAndClipBox(t||[0,0,0,0])}isEmptyClip(){return this.minX===1/0}startNewPathAndClipBox(t){this.clipBox=t;this.minX=1/0;this.minY=1/0;this.maxX=0;this.maxY=0}getClippedPathBoundingBox(t=yt,e=null){return Util.intersect(this.clipBox,this.getPathBoundingBox(t,e))}}function putBinaryImageData(t,e){if("undefined"!=typeof ImageData&&e instanceof ImageData){t.putImageData(e,0,0);return}const i=e.height,s=e.width,n=i%Ct,a=(i-n)/Ct,r=0===n?a:a+1,o=t.createImageData(s,Ct);let l,h=0;const d=e.data,c=o.data;let u,p,g,m;if(e.kind===_.GRAYSCALE_1BPP){const e=d.byteLength,i=new Uint32Array(c.buffer,0,c.byteLength>>2),m=i.length,f=s+7>>3,b=4294967295,A=util_FeatureTest.isLittleEndian?4278190080:255;for(u=0;u<r;u++){g=u<a?Ct:n;l=0;for(p=0;p<g;p++){const t=e-h;let n=0;const a=t>f?s:8*t-7,r=-8&a;let o=0,c=0;for(;n<r;n+=8){c=d[h++];i[l++]=128&c?b:A;i[l++]=64&c?b:A;i[l++]=32&c?b:A;i[l++]=16&c?b:A;i[l++]=8&c?b:A;i[l++]=4&c?b:A;i[l++]=2&c?b:A;i[l++]=1&c?b:A}for(;n<a;n++){if(0===o){c=d[h++];o=128}i[l++]=c&o?b:A;o>>=1}}for(;l<m;)i[l++]=0;t.putImageData(o,0,u*Ct)}}else if(e.kind===_.RGBA_32BPP){p=0;m=s*Ct*4;for(u=0;u<a;u++){c.set(d.subarray(h,h+m));h+=m;t.putImageData(o,0,p);p+=Ct}if(u<r){m=s*n*4;c.set(d.subarray(h,h+m));t.putImageData(o,0,p)}}else{if(e.kind!==_.RGB_24BPP)throw new Error(`bad image kind: ${e.kind}`);g=Ct;m=s*g;for(u=0;u<r;u++){if(u>=a){g=n;m=s*g}l=0;for(p=m;p--;){c[l++]=d[h++];c[l++]=d[h++];c[l++]=d[h++];c[l++]=255}t.putImageData(o,0,u*Ct)}}}function putBinaryImageMask(t,e){if(e.bitmap){t.drawImage(e.bitmap,0,0);return}const i=e.height,s=e.width,n=i%Ct,a=(i-n)/Ct,r=0===n?a:a+1,o=t.createImageData(s,Ct);let l=0;const h=e.data,d=o.data;for(let e=0;e<r;e++){const i=e<a?Ct:n;({srcPos:l}=convertBlackAndWhiteToRGBA({src:h,srcPos:l,dest:d,width:s,height:i,nonBlackColor:0}));t.putImageData(o,0,e*Ct)}}function copyCtxState(t,e){const i=["strokeStyle","fillStyle","fillRule","globalAlpha","lineWidth","lineCap","lineJoin","miterLimit","globalCompositeOperation","font","filter"];for(const s of i)void 0!==t[s]&&(e[s]=t[s]);if(void 0!==t.setLineDash){e.setLineDash(t.getLineDash());e.lineDashOffset=t.lineDashOffset}}function resetCtxToDefault(t){t.strokeStyle=t.fillStyle="#000000";t.fillRule="nonzero";t.globalAlpha=1;t.lineWidth=1;t.lineCap="butt";t.lineJoin="miter";t.miterLimit=10;t.globalCompositeOperation="source-over";t.font="10px sans-serif";if(void 0!==t.setLineDash){t.setLineDash([]);t.lineDashOffset=0}if(!e){const{filter:e}=t;"none"!==e&&""!==e&&(t.filter="none")}}function getImageSmoothingEnabled(t,e){if(e)return!0;const i=Util.singularValueDecompose2dScale(t);i[0]=Math.fround(i[0]);i[1]=Math.fround(i[1]);const s=Math.fround((globalThis.devicePixelRatio||1)*PixelsPerInch.PDF_TO_CSS_UNITS);return i[0]<=s&&i[1]<=s}const St=["butt","round","square"],Tt=["miter","round","bevel"],Mt={},kt={};class CanvasGraphics{constructor(t,e,i,s,n,{optionalContentConfig:a,markedContentStack:r=null},o,l){this.ctx=t;this.current=new CanvasExtraState(this.ctx.canvas.width,this.ctx.canvas.height);this.stateStack=[];this.pendingClip=null;this.pendingEOFill=!1;this.res=null;this.xobjs=null;this.commonObjs=e;this.objs=i;this.canvasFactory=s;this.filterFactory=n;this.groupStack=[];this.processingType3=null;this.baseTransform=null;this.baseTransformStack=[];this.groupLevel=0;this.smaskStack=[];this.smaskCounter=0;this.tempSMask=null;this.suspendedCtx=null;this.contentVisible=!0;this.markedContentStack=r||[];this.optionalContentConfig=a;this.cachedCanvases=new CachedCanvases(this.canvasFactory);this.cachedPatterns=new Map;this.annotationCanvasMap=o;this.viewportScale=1;this.outputScaleX=1;this.outputScaleY=1;this.pageColors=l;this._cachedScaleForStroking=[-1,0];this._cachedGetSinglePixelWidth=null;this._cachedBitmapsMap=new Map}getObject(t,e=null){return"string"==typeof t?t.startsWith("g_")?this.commonObjs.get(t):this.objs.get(t):e}beginDrawing({transform:t,viewport:e,transparency:i=!1,background:s=null}){const n=this.ctx.canvas.width,a=this.ctx.canvas.height,r=this.ctx.fillStyle;this.ctx.fillStyle=s||"#ffffff";this.ctx.fillRect(0,0,n,a);this.ctx.fillStyle=r;if(i){const t=this.cachedCanvases.getCanvas("transparent",n,a);this.compositeCtx=this.ctx;this.transparentCanvas=t.canvas;this.ctx=t.context;this.ctx.save();this.ctx.transform(...getCurrentTransform(this.compositeCtx))}this.ctx.save();resetCtxToDefault(this.ctx);if(t){this.ctx.transform(...t);this.outputScaleX=t[0];this.outputScaleY=t[0]}this.ctx.transform(...e.transform);this.viewportScale=e.scale;this.baseTransform=getCurrentTransform(this.ctx)}executeOperatorList(t,e,i,s){const n=t.argsArray,a=t.fnArray;let r=e||0;const o=n.length;if(o===r)return r;const l=o-r>10&&"function"==typeof i,h=l?Date.now()+15:0;let d=0;const c=this.commonObjs,u=this.objs;let p;for(;;){if(void 0!==s&&r===s.nextBreakPoint){s.breakIt(r,i);return r}p=a[r];if(p!==K.dependency)this[p].apply(this,n[r]);else for(const t of n[r]){const e=t.startsWith("g_")?c:u;if(!e.has(t)){e.get(t,i);return r}}r++;if(r===o)return r;if(l&&++d>10){if(Date.now()>h){i();return r}d=0}}}#Fe(){for(;this.stateStack.length||this.inSMaskMode;)this.restore();this.current.activeSMask=null;this.ctx.restore();if(this.transparentCanvas){this.ctx=this.compositeCtx;this.ctx.save();this.ctx.setTransform(1,0,0,1,0,0);this.ctx.drawImage(this.transparentCanvas,0,0);this.ctx.restore();this.transparentCanvas=null}}endDrawing(){this.#Fe();this.cachedCanvases.clear();this.cachedPatterns.clear();for(const t of this._cachedBitmapsMap.values()){for(const e of t.values())"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement&&(e.width=e.height=0);t.clear()}this._cachedBitmapsMap.clear();this.#De()}#De(){if(this.pageColors){const t=this.filterFactory.addHCMFilter(this.pageColors.foreground,this.pageColors.background);if("none"!==t){const e=this.ctx.filter;this.ctx.filter=t;this.ctx.drawImage(this.ctx.canvas,0,0);this.ctx.filter=e}}}_scaleImage(t,e){const i=t.width,s=t.height;let n,a,r=Math.max(Math.hypot(e[0],e[1]),1),o=Math.max(Math.hypot(e[2],e[3]),1),l=i,h=s,d="prescale1";for(;r>2&&l>1||o>2&&h>1;){let e=l,i=h;if(r>2&&l>1){e=l>=16384?Math.floor(l/2)-1||1:Math.ceil(l/2);r/=l/e}if(o>2&&h>1){i=h>=16384?Math.floor(h/2)-1||1:Math.ceil(h)/2;o/=h/i}n=this.cachedCanvases.getCanvas(d,e,i);a=n.context;a.clearRect(0,0,e,i);a.drawImage(t,0,0,l,h,0,0,e,i);t=n.canvas;l=e;h=i;d="prescale1"===d?"prescale2":"prescale1"}return{img:t,paintWidth:l,paintHeight:h}}_createMaskCanvas(t){const e=this.ctx,{width:i,height:s}=t,n=this.current.fillColor,a=this.current.patternFill,r=getCurrentTransform(e);let o,l,h,d;if((t.bitmap||t.data)&&t.count>1){const e=t.bitmap||t.data.buffer;l=JSON.stringify(a?r:[r.slice(0,4),n]);o=this._cachedBitmapsMap.get(e);if(!o){o=new Map;this._cachedBitmapsMap.set(e,o)}const i=o.get(l);if(i&&!a){return{canvas:i,offsetX:Math.round(Math.min(r[0],r[2])+r[4]),offsetY:Math.round(Math.min(r[1],r[3])+r[5])}}h=i}if(!h){d=this.cachedCanvases.getCanvas("maskCanvas",i,s);putBinaryImageMask(d.context,t)}let c=Util.transform(r,[1/i,0,0,-1/s,0,0]);c=Util.transform(c,[1,0,0,1,0,-s]);const[u,p,g,m]=Util.getAxialAlignedBoundingBox([0,0,i,s],c),f=Math.round(g-u)||1,b=Math.round(m-p)||1,A=this.cachedCanvases.getCanvas("fillCanvas",f,b),v=A.context,y=u,w=p;v.translate(-y,-w);v.transform(...c);if(!h){h=this._scaleImage(d.canvas,getCurrentTransformInverse(v));h=h.img;o&&a&&o.set(l,h)}v.imageSmoothingEnabled=getImageSmoothingEnabled(getCurrentTransform(v),t.interpolate);drawImageAtIntegerCoords(v,h,0,0,h.width,h.height,0,0,i,s);v.globalCompositeOperation="source-in";const x=Util.transform(getCurrentTransformInverse(v),[1,0,0,1,-y,-w]);v.fillStyle=a?n.getPattern(e,this,x,yt):n;v.fillRect(0,0,i,s);if(o&&!a){this.cachedCanvases.delete("fillCanvas");o.set(l,A.canvas)}return{canvas:A.canvas,offsetX:Math.round(y),offsetY:Math.round(w)}}setLineWidth(t){t!==this.current.lineWidth&&(this._cachedScaleForStroking[0]=-1);this.current.lineWidth=t;this.ctx.lineWidth=t}setLineCap(t){this.ctx.lineCap=St[t]}setLineJoin(t){this.ctx.lineJoin=Tt[t]}setMiterLimit(t){this.ctx.miterLimit=t}setDash(t,e){const i=this.ctx;if(void 0!==i.setLineDash){i.setLineDash(t);i.lineDashOffset=e}}setRenderingIntent(t){}setFlatness(t){}setGState(t){for(const[e,i]of t)switch(e){case"LW":this.setLineWidth(i);break;case"LC":this.setLineCap(i);break;case"LJ":this.setLineJoin(i);break;case"ML":this.setMiterLimit(i);break;case"D":this.setDash(i[0],i[1]);break;case"RI":this.setRenderingIntent(i);break;case"FL":this.setFlatness(i);break;case"Font":this.setFont(i[0],i[1]);break;case"CA":this.current.strokeAlpha=i;break;case"ca":this.current.fillAlpha=i;this.ctx.globalAlpha=i;break;case"BM":this.ctx.globalCompositeOperation=i;break;case"SMask":this.current.activeSMask=i?this.tempSMask:null;this.tempSMask=null;this.checkSMaskState();break;case"TR":this.ctx.filter=this.current.transferMaps=this.filterFactory.addFilter(i)}}get inSMaskMode(){return!!this.suspendedCtx}checkSMaskState(){const t=this.inSMaskMode;this.current.activeSMask&&!t?this.beginSMaskMode():!this.current.activeSMask&&t&&this.endSMaskMode()}beginSMaskMode(){if(this.inSMaskMode)throw new Error("beginSMaskMode called while already in smask mode");const t=this.ctx.canvas.width,e=this.ctx.canvas.height,i="smaskGroupAt"+this.groupLevel,s=this.cachedCanvases.getCanvas(i,t,e);this.suspendedCtx=this.ctx;this.ctx=s.context;const n=this.ctx;n.setTransform(...getCurrentTransform(this.suspendedCtx));copyCtxState(this.suspendedCtx,n);!function mirrorContextOperations(t,e){if(t._removeMirroring)throw new Error("Context is already forwarding operations.");t.__originalSave=t.save;t.__originalRestore=t.restore;t.__originalRotate=t.rotate;t.__originalScale=t.scale;t.__originalTranslate=t.translate;t.__originalTransform=t.transform;t.__originalSetTransform=t.setTransform;t.__originalResetTransform=t.resetTransform;t.__originalClip=t.clip;t.__originalMoveTo=t.moveTo;t.__originalLineTo=t.lineTo;t.__originalBezierCurveTo=t.bezierCurveTo;t.__originalRect=t.rect;t.__originalClosePath=t.closePath;t.__originalBeginPath=t.beginPath;t._removeMirroring=()=>{t.save=t.__originalSave;t.restore=t.__originalRestore;t.rotate=t.__originalRotate;t.scale=t.__originalScale;t.translate=t.__originalTranslate;t.transform=t.__originalTransform;t.setTransform=t.__originalSetTransform;t.resetTransform=t.__originalResetTransform;t.clip=t.__originalClip;t.moveTo=t.__originalMoveTo;t.lineTo=t.__originalLineTo;t.bezierCurveTo=t.__originalBezierCurveTo;t.rect=t.__originalRect;t.closePath=t.__originalClosePath;t.beginPath=t.__originalBeginPath;delete t._removeMirroring};t.save=function ctxSave(){e.save();this.__originalSave()};t.restore=function ctxRestore(){e.restore();this.__originalRestore()};t.translate=function ctxTranslate(t,i){e.translate(t,i);this.__originalTranslate(t,i)};t.scale=function ctxScale(t,i){e.scale(t,i);this.__originalScale(t,i)};t.transform=function ctxTransform(t,i,s,n,a,r){e.transform(t,i,s,n,a,r);this.__originalTransform(t,i,s,n,a,r)};t.setTransform=function ctxSetTransform(t,i,s,n,a,r){e.setTransform(t,i,s,n,a,r);this.__originalSetTransform(t,i,s,n,a,r)};t.resetTransform=function ctxResetTransform(){e.resetTransform();this.__originalResetTransform()};t.rotate=function ctxRotate(t){e.rotate(t);this.__originalRotate(t)};t.clip=function ctxRotate(t){e.clip(t);this.__originalClip(t)};t.moveTo=function(t,i){e.moveTo(t,i);this.__originalMoveTo(t,i)};t.lineTo=function(t,i){e.lineTo(t,i);this.__originalLineTo(t,i)};t.bezierCurveTo=function(t,i,s,n,a,r){e.bezierCurveTo(t,i,s,n,a,r);this.__originalBezierCurveTo(t,i,s,n,a,r)};t.rect=function(t,i,s,n){e.rect(t,i,s,n);this.__originalRect(t,i,s,n)};t.closePath=function(){e.closePath();this.__originalClosePath()};t.beginPath=function(){e.beginPath();this.__originalBeginPath()}}(n,this.suspendedCtx);this.setGState([["BM","source-over"],["ca",1],["CA",1]])}endSMaskMode(){if(!this.inSMaskMode)throw new Error("endSMaskMode called while not in smask mode");this.ctx._removeMirroring();copyCtxState(this.ctx,this.suspendedCtx);this.ctx=this.suspendedCtx;this.suspendedCtx=null}compose(t){if(!this.current.activeSMask)return;if(t){t[0]=Math.floor(t[0]);t[1]=Math.floor(t[1]);t[2]=Math.ceil(t[2]);t[3]=Math.ceil(t[3])}else t=[0,0,this.ctx.canvas.width,this.ctx.canvas.height];const e=this.current.activeSMask,i=this.suspendedCtx;this.composeSMask(i,e,this.ctx,t);this.ctx.save();this.ctx.setTransform(1,0,0,1,0,0);this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height);this.ctx.restore()}composeSMask(t,e,i,s){const n=s[0],a=s[1],r=s[2]-n,o=s[3]-a;if(0!==r&&0!==o){this.genericComposeSMask(e.context,i,r,o,e.subtype,e.backdrop,e.transferMap,n,a,e.offsetX,e.offsetY);t.save();t.globalAlpha=1;t.globalCompositeOperation="source-over";t.setTransform(1,0,0,1,0,0);t.drawImage(i.canvas,0,0);t.restore()}}genericComposeSMask(t,e,i,s,n,a,r,o,l,h,d){let c=t.canvas,u=o-h,p=l-d;if(a)if(u<0||p<0||u+i>c.width||p+s>c.height){const t=this.cachedCanvases.getCanvas("maskExtension",i,s),e=t.context;e.drawImage(c,-u,-p);if(a.some((t=>0!==t))){e.globalCompositeOperation="destination-atop";e.fillStyle=Util.makeHexColor(...a);e.fillRect(0,0,i,s);e.globalCompositeOperation="source-over"}c=t.canvas;u=p=0}else if(a.some((t=>0!==t))){t.save();t.globalAlpha=1;t.setTransform(1,0,0,1,0,0);const e=new Path2D;e.rect(u,p,i,s);t.clip(e);t.globalCompositeOperation="destination-atop";t.fillStyle=Util.makeHexColor(...a);t.fillRect(u,p,i,s);t.restore()}e.save();e.globalAlpha=1;e.setTransform(1,0,0,1,0,0);"Alpha"===n&&r?e.filter=this.filterFactory.addAlphaFilter(r):"Luminosity"===n&&(e.filter=this.filterFactory.addLuminosityFilter(r));const g=new Path2D;g.rect(o,l,i,s);e.clip(g);e.globalCompositeOperation="destination-in";e.drawImage(c,u,p,i,s,o,l,i,s);e.restore()}save(){if(this.inSMaskMode){copyCtxState(this.ctx,this.suspendedCtx);this.suspendedCtx.save()}else this.ctx.save();const t=this.current;this.stateStack.push(t);this.current=t.clone()}restore(){0===this.stateStack.length&&this.inSMaskMode&&this.endSMaskMode();if(0!==this.stateStack.length){this.current=this.stateStack.pop();if(this.inSMaskMode){this.suspendedCtx.restore();copyCtxState(this.suspendedCtx,this.ctx)}else this.ctx.restore();this.checkSMaskState();this.pendingClip=null;this._cachedScaleForStroking[0]=-1;this._cachedGetSinglePixelWidth=null}}transform(t,e,i,s,n,a){this.ctx.transform(t,e,i,s,n,a);this._cachedScaleForStroking[0]=-1;this._cachedGetSinglePixelWidth=null}constructPath(t,e,i){const s=this.ctx,n=this.current;let a,r,o=n.x,l=n.y;const h=getCurrentTransform(s),d=0===h[0]&&0===h[3]||0===h[1]&&0===h[2],c=d?i.slice(0):null;for(let i=0,u=0,p=t.length;i<p;i++)switch(0|t[i]){case K.rectangle:o=e[u++];l=e[u++];const t=e[u++],i=e[u++],p=o+t,g=l+i;s.moveTo(o,l);if(0===t||0===i)s.lineTo(p,g);else{s.lineTo(p,l);s.lineTo(p,g);s.lineTo(o,g)}d||n.updateRectMinMax(h,[o,l,p,g]);s.closePath();break;case K.moveTo:o=e[u++];l=e[u++];s.moveTo(o,l);d||n.updatePathMinMax(h,o,l);break;case K.lineTo:o=e[u++];l=e[u++];s.lineTo(o,l);d||n.updatePathMinMax(h,o,l);break;case K.curveTo:a=o;r=l;o=e[u+4];l=e[u+5];s.bezierCurveTo(e[u],e[u+1],e[u+2],e[u+3],o,l);n.updateCurvePathMinMax(h,a,r,e[u],e[u+1],e[u+2],e[u+3],o,l,c);u+=6;break;case K.curveTo2:a=o;r=l;s.bezierCurveTo(o,l,e[u],e[u+1],e[u+2],e[u+3]);n.updateCurvePathMinMax(h,a,r,o,l,e[u],e[u+1],e[u+2],e[u+3],c);o=e[u+2];l=e[u+3];u+=4;break;case K.curveTo3:a=o;r=l;o=e[u+2];l=e[u+3];s.bezierCurveTo(e[u],e[u+1],o,l,o,l);n.updateCurvePathMinMax(h,a,r,e[u],e[u+1],o,l,o,l,c);u+=4;break;case K.closePath:s.closePath()}d&&n.updateScalingPathMinMax(h,c);n.setCurrentPoint(o,l)}closePath(){this.ctx.closePath()}stroke(t=!0){const e=this.ctx,i=this.current.strokeColor;e.globalAlpha=this.current.strokeAlpha;if(this.contentVisible)if("object"==typeof i&&i?.getPattern){e.save();e.strokeStyle=i.getPattern(e,this,getCurrentTransformInverse(e),wt);this.rescaleAndStroke(!1);e.restore()}else this.rescaleAndStroke(!0);t&&this.consumePath(this.current.getClippedPathBoundingBox());e.globalAlpha=this.current.fillAlpha}closeStroke(){this.closePath();this.stroke()}fill(t=!0){const e=this.ctx,i=this.current.fillColor;let s=!1;if(this.current.patternFill){e.save();e.fillStyle=i.getPattern(e,this,getCurrentTransformInverse(e),yt);s=!0}const n=this.current.getClippedPathBoundingBox();if(this.contentVisible&&null!==n)if(this.pendingEOFill){e.fill("evenodd");this.pendingEOFill=!1}else e.fill();s&&e.restore();t&&this.consumePath(n)}eoFill(){this.pendingEOFill=!0;this.fill()}fillStroke(){this.fill(!1);this.stroke(!1);this.consumePath()}eoFillStroke(){this.pendingEOFill=!0;this.fillStroke()}closeFillStroke(){this.closePath();this.fillStroke()}closeEOFillStroke(){this.pendingEOFill=!0;this.closePath();this.fillStroke()}endPath(){this.consumePath()}clip(){this.pendingClip=Mt}eoClip(){this.pendingClip=kt}beginText(){this.current.textMatrix=i;this.current.textMatrixScale=1;this.current.x=this.current.lineX=0;this.current.y=this.current.lineY=0}endText(){const t=this.pendingTextPaths,e=this.ctx;if(void 0!==t){e.save();e.beginPath();for(const i of t){e.setTransform(...i.transform);e.translate(i.x,i.y);i.addToPath(e,i.fontSize)}e.restore();e.clip();e.beginPath();delete this.pendingTextPaths}else e.beginPath()}setCharSpacing(t){this.current.charSpacing=t}setWordSpacing(t){this.current.wordSpacing=t}setHScale(t){this.current.textHScale=t/100}setLeading(t){this.current.leading=-t}setFont(t,e){const i=this.commonObjs.get(t),n=this.current;if(!i)throw new Error(`Can\'t find font for ${t}`);n.fontMatrix=i.fontMatrix||s;0!==n.fontMatrix[0]&&0!==n.fontMatrix[3]||warn("Invalid font matrix for font "+t);if(e<0){e=-e;n.fontDirection=-1}else n.fontDirection=1;this.current.font=i;this.current.fontSize=e;if(i.isType3Font)return;const a=i.loadedName||"sans-serif",r=i.systemFontInfo?.css||`"${a}", ${i.fallbackName}`;let o="normal";i.black?o="900":i.bold&&(o="bold");const l=i.italic?"italic":"normal";let h=e;e<16?h=16:e>100&&(h=100);this.current.fontSizeScale=e/h;this.ctx.font=`${l} ${o} ${h}px ${r}`}setTextRenderingMode(t){this.current.textRenderingMode=t}setTextRise(t){this.current.textRise=t}moveText(t,e){this.current.x=this.current.lineX+=t;this.current.y=this.current.lineY+=e}setLeadingMoveText(t,e){this.setLeading(-e);this.moveText(t,e)}setTextMatrix(t,e,i,s,n,a){this.current.textMatrix=[t,e,i,s,n,a];this.current.textMatrixScale=Math.hypot(t,e);this.current.x=this.current.lineX=0;this.current.y=this.current.lineY=0}nextLine(){this.moveText(0,this.current.leading)}paintChar(t,e,i,s){const n=this.ctx,a=this.current,r=a.font,o=a.textRenderingMode,l=a.fontSize/a.fontSizeScale,h=o&w,d=!!(o&x),c=a.patternFill&&!r.missingFile;let u;(r.disableFontFace||d||c)&&(u=r.getPathGenerator(this.commonObjs,t));if(r.disableFontFace||c){n.save();n.translate(e,i);n.beginPath();u(n,l);s&&n.setTransform(...s);h!==b&&h!==v||n.fill();h!==A&&h!==v||n.stroke();n.restore()}else{h!==b&&h!==v||n.fillText(t,e,i);h!==A&&h!==v||n.strokeText(t,e,i)}if(d){(this.pendingTextPaths||=[]).push({transform:getCurrentTransform(n),x:e,y:i,fontSize:l,addToPath:u})}}get isFontSubpixelAAEnabled(){const{context:t}=this.cachedCanvases.getCanvas("isFontSubpixelAAEnabled",10,10);t.scale(1.5,1);t.fillText("I",0,10);const e=t.getImageData(0,0,10,10).data;let i=!1;for(let t=3;t<e.length;t+=4)if(e[t]>0&&e[t]<255){i=!0;break}return shadow(this,"isFontSubpixelAAEnabled",i)}showText(t){const e=this.current,i=e.font;if(i.isType3Font)return this.showType3Text(t);const s=e.fontSize;if(0===s)return;const n=this.ctx,a=e.fontSizeScale,r=e.charSpacing,o=e.wordSpacing,l=e.fontDirection,h=e.textHScale*l,d=t.length,c=i.vertical,u=c?1:-1,p=i.defaultVMetrics,g=s*e.fontMatrix[0],m=e.textRenderingMode===b&&!i.disableFontFace&&!e.patternFill;n.save();n.transform(...e.textMatrix);n.translate(e.x,e.y+e.textRise);l>0?n.scale(h,-1):n.scale(h,1);let f;if(e.patternFill){n.save();const t=e.fillColor.getPattern(n,this,getCurrentTransformInverse(n),yt);f=getCurrentTransform(n);n.restore();n.fillStyle=t}let y=e.lineWidth;const x=e.textMatrixScale;if(0===x||0===y){const t=e.textRenderingMode&w;t!==A&&t!==v||(y=this.getSinglePixelWidth())}else y/=x;if(1!==a){n.scale(a,a);y/=a}n.lineWidth=y;if(i.isInvalidPDFjsFont){const i=[];let s=0;for(const e of t){i.push(e.unicode);s+=e.width}n.fillText(i.join(""),0,0);e.x+=s*g*h;n.restore();this.compose();return}let _,E=0;for(_=0;_<d;++_){const e=t[_];if("number"==typeof e){E+=u*e*s/1e3;continue}let h=!1;const d=(e.isSpace?o:0)+r,b=e.fontChar,A=e.accent;let v,y,w=e.width;if(c){const t=e.vmetric||p,i=-(e.vmetric?t[1]:.5*w)*g,s=t[2]*g;w=t?-t[0]:w;v=i/a;y=(E+s)/a}else{v=E/a;y=0}if(i.remeasure&&w>0){const t=1e3*n.measureText(b).width/s*a;if(w<t&&this.isFontSubpixelAAEnabled){const e=w/t;h=!0;n.save();n.scale(e,1);v/=e}else w!==t&&(v+=(w-t)/2e3*s/a)}if(this.contentVisible&&(e.isInFont||i.missingFile))if(m&&!A)n.fillText(b,v,y);else{this.paintChar(b,v,y,f);if(A){const t=v+s*A.offset.x/a,e=y-s*A.offset.y/a;this.paintChar(A.fontChar,t,e,f)}}E+=c?w*g-d*l:w*g+d*l;h&&n.restore()}c?e.y-=E:e.x+=E*h;n.restore();this.compose()}showType3Text(t){const e=this.ctx,i=this.current,n=i.font,a=i.fontSize,r=i.fontDirection,o=n.vertical?1:-1,l=i.charSpacing,h=i.wordSpacing,d=i.textHScale*r,c=i.fontMatrix||s,u=t.length;let p,g,m,f;if(!(i.textRenderingMode===y)&&0!==a){this._cachedScaleForStroking[0]=-1;this._cachedGetSinglePixelWidth=null;e.save();e.transform(...i.textMatrix);e.translate(i.x,i.y);e.scale(d,r);for(p=0;p<u;++p){g=t[p];if("number"==typeof g){f=o*g*a/1e3;this.ctx.translate(f,0);i.x+=f*d;continue}const s=(g.isSpace?h:0)+l,r=n.charProcOperatorList[g.operatorListId];if(!r){warn(`Type3 character "${g.operatorListId}" is not available.`);continue}if(this.contentVisible){this.processingType3=g;this.save();e.scale(a,a);e.transform(...c);this.executeOperatorList(r);this.restore()}m=Util.applyTransform([g.width,0],c)[0]*a+s;e.translate(m,0);i.x+=m*d}e.restore();this.processingType3=null}}setCharWidth(t,e){}setCharWidthAndBounds(t,e,i,s,n,a){this.ctx.rect(i,s,n-i,a-s);this.ctx.clip();this.endPath()}getColorN_Pattern(t){let e;if("TilingPattern"===t[0]){const i=t[1],s=this.baseTransform||getCurrentTransform(this.ctx),n={createCanvasGraphics:t=>new CanvasGraphics(t,this.commonObjs,this.objs,this.canvasFactory,this.filterFactory,{optionalContentConfig:this.optionalContentConfig,markedContentStack:this.markedContentStack})};e=new TilingPattern(t,i,this.ctx,n,s)}else e=this._getPattern(t[1],t[2]);return e}setStrokeColorN(){this.current.strokeColor=this.getColorN_Pattern(arguments)}setFillColorN(){this.current.fillColor=this.getColorN_Pattern(arguments);this.current.patternFill=!0}setStrokeRGBColor(t,e,i){this.ctx.strokeStyle=this.current.strokeColor=Util.makeHexColor(t,e,i)}setStrokeTransparent(){this.ctx.strokeStyle=this.current.strokeColor="transparent"}setFillRGBColor(t,e,i){this.ctx.fillStyle=this.current.fillColor=Util.makeHexColor(t,e,i);this.current.patternFill=!1}setFillTransparent(){this.ctx.fillStyle=this.current.fillColor="transparent";this.current.patternFill=!1}_getPattern(t,e=null){let i;if(this.cachedPatterns.has(t))i=this.cachedPatterns.get(t);else{i=function getShadingPattern(t){switch(t[0]){case"RadialAxial":return new RadialAxialShadingPattern(t);case"Mesh":return new MeshShadingPattern(t);case"Dummy":return new DummyShadingPattern}throw new Error(`Unknown IR type: ${t[0]}`)}(this.getObject(t));this.cachedPatterns.set(t,i)}e&&(i.matrix=e);return i}shadingFill(t){if(!this.contentVisible)return;const e=this.ctx;this.save();const i=this._getPattern(t);e.fillStyle=i.getPattern(e,this,getCurrentTransformInverse(e),xt);const s=getCurrentTransformInverse(e);if(s){const{width:t,height:i}=e.canvas,[n,a,r,o]=Util.getAxialAlignedBoundingBox([0,0,t,i],s);this.ctx.fillRect(n,a,r-n,o-a)}else this.ctx.fillRect(-1e10,-1e10,2e10,2e10);this.compose(this.current.getClippedPathBoundingBox());this.restore()}beginInlineImage(){unreachable("Should not call beginInlineImage")}beginImageData(){unreachable("Should not call beginImageData")}paintFormXObjectBegin(t,e){if(this.contentVisible){this.save();this.baseTransformStack.push(this.baseTransform);t&&this.transform(...t);this.baseTransform=getCurrentTransform(this.ctx);if(e){const t=e[2]-e[0],i=e[3]-e[1];this.ctx.rect(e[0],e[1],t,i);this.current.updateRectMinMax(getCurrentTransform(this.ctx),e);this.clip();this.endPath()}}}paintFormXObjectEnd(){if(this.contentVisible){this.restore();this.baseTransform=this.baseTransformStack.pop()}}beginGroup(t){if(!this.contentVisible)return;this.save();if(this.inSMaskMode){this.endSMaskMode();this.current.activeSMask=null}const e=this.ctx;t.isolated||info("TODO: Support non-isolated groups.");t.knockout&&warn("Knockout groups not supported.");const i=getCurrentTransform(e);t.matrix&&e.transform(...t.matrix);if(!t.bbox)throw new Error("Bounding box is required.");let s=Util.getAxialAlignedBoundingBox(t.bbox,getCurrentTransform(e));const n=[0,0,e.canvas.width,e.canvas.height];s=Util.intersect(s,n)||[0,0,0,0];const a=Math.floor(s[0]),r=Math.floor(s[1]),o=Math.max(Math.ceil(s[2])-a,1),l=Math.max(Math.ceil(s[3])-r,1);this.current.startNewPathAndClipBox([0,0,o,l]);let h="groupAt"+this.groupLevel;t.smask&&(h+="_smask_"+this.smaskCounter++%2);const d=this.cachedCanvases.getCanvas(h,o,l),c=d.context;c.translate(-a,-r);c.transform(...i);if(t.smask)this.smaskStack.push({canvas:d.canvas,context:c,offsetX:a,offsetY:r,subtype:t.smask.subtype,backdrop:t.smask.backdrop,transferMap:t.smask.transferMap||null,startTransformInverse:null});else{e.setTransform(1,0,0,1,0,0);e.translate(a,r);e.save()}copyCtxState(e,c);this.ctx=c;this.setGState([["BM","source-over"],["ca",1],["CA",1]]);this.groupStack.push(e);this.groupLevel++}endGroup(t){if(!this.contentVisible)return;this.groupLevel--;const e=this.ctx,i=this.groupStack.pop();this.ctx=i;this.ctx.imageSmoothingEnabled=!1;if(t.smask){this.tempSMask=this.smaskStack.pop();this.restore()}else{this.ctx.restore();const t=getCurrentTransform(this.ctx);this.restore();this.ctx.save();this.ctx.setTransform(...t);const i=Util.getAxialAlignedBoundingBox([0,0,e.canvas.width,e.canvas.height],t);this.ctx.drawImage(e.canvas,0,0);this.ctx.restore();this.compose(i)}}beginAnnotation(t,e,i,s,n){this.#Fe();resetCtxToDefault(this.ctx);this.ctx.save();this.save();this.baseTransform&&this.ctx.setTransform(...this.baseTransform);if(e){const s=e[2]-e[0],a=e[3]-e[1];if(n&&this.annotationCanvasMap){(i=i.slice())[4]-=e[0];i[5]-=e[1];(e=e.slice())[0]=e[1]=0;e[2]=s;e[3]=a;const[n,r]=Util.singularValueDecompose2dScale(getCurrentTransform(this.ctx)),{viewportScale:o}=this,l=Math.ceil(s*this.outputScaleX*o),h=Math.ceil(a*this.outputScaleY*o);this.annotationCanvas=this.canvasFactory.create(l,h);const{canvas:d,context:c}=this.annotationCanvas;this.annotationCanvasMap.set(t,d);this.annotationCanvas.savedCtx=this.ctx;this.ctx=c;this.ctx.save();this.ctx.setTransform(n,0,0,-r,0,a*r);resetCtxToDefault(this.ctx)}else{resetCtxToDefault(this.ctx);this.ctx.rect(e[0],e[1],s,a);this.ctx.clip();this.endPath()}}this.current=new CanvasExtraState(this.ctx.canvas.width,this.ctx.canvas.height);this.transform(...i);this.transform(...s)}endAnnotation(){if(this.annotationCanvas){this.ctx.restore();this.#De();this.ctx=this.annotationCanvas.savedCtx;delete this.annotationCanvas.savedCtx;delete this.annotationCanvas}}paintImageMaskXObject(t){if(!this.contentVisible)return;const e=t.count;(t=this.getObject(t.data,t)).count=e;const i=this.ctx,s=this.processingType3;if(s){void 0===s.compiled&&(s.compiled=function compileType3Glyph(t){const{width:e,height:i}=t;if(e>1e3||i>1e3)return null;const s=new Uint8Array([0,2,4,0,1,0,5,4,8,10,0,8,0,2,1,0]),n=e+1;let a,r,o,l=new Uint8Array(n*(i+1));const h=e+7&-8;let d=new Uint8Array(h*i),c=0;for(const e of t.data){let t=128;for(;t>0;){d[c++]=e&t?0:255;t>>=1}}let u=0;c=0;if(0!==d[c]){l[0]=1;++u}for(r=1;r<e;r++){if(d[c]!==d[c+1]){l[r]=d[c]?2:1;++u}c++}if(0!==d[c]){l[r]=2;++u}for(a=1;a<i;a++){c=a*h;o=a*n;if(d[c-h]!==d[c]){l[o]=d[c]?1:8;++u}let t=(d[c]?4:0)+(d[c-h]?8:0);for(r=1;r<e;r++){t=(t>>2)+(d[c+1]?4:0)+(d[c-h+1]?8:0);if(s[t]){l[o+r]=s[t];++u}c++}if(d[c-h]!==d[c]){l[o+r]=d[c]?2:4;++u}if(u>1e3)return null}c=h*(i-1);o=a*n;if(0!==d[c]){l[o]=8;++u}for(r=1;r<e;r++){if(d[c]!==d[c+1]){l[o+r]=d[c]?4:8;++u}c++}if(0!==d[c]){l[o+r]=4;++u}if(u>1e3)return null;const p=new Int32Array([0,n,-1,0,-n,0,0,0,1]),g=new Path2D;for(a=0;u&&a<=i;a++){let t=a*n;const i=t+e;for(;t<i&&!l[t];)t++;if(t===i)continue;g.moveTo(t%n,a);const s=t;let r=l[t];do{const e=p[r];do{t+=e}while(!l[t]);const i=l[t];if(5!==i&&10!==i){r=i;l[t]=0}else{r=i&51*r>>4;l[t]&=r>>2|r<<2}g.lineTo(t%n,t/n|0);l[t]||--u}while(s!==t);--a}d=null;l=null;return function(t){t.save();t.scale(1/e,-1/i);t.translate(0,-i);t.fill(g);t.beginPath();t.restore()}}(t));if(s.compiled){s.compiled(i);return}}const n=this._createMaskCanvas(t),a=n.canvas;i.save();i.setTransform(1,0,0,1,0,0);i.drawImage(a,n.offsetX,n.offsetY);i.restore();this.compose()}paintImageMaskXObjectRepeat(t,e,i=0,s=0,n,a){if(!this.contentVisible)return;t=this.getObject(t.data,t);const r=this.ctx;r.save();const o=getCurrentTransform(r);r.transform(e,i,s,n,0,0);const l=this._createMaskCanvas(t);r.setTransform(1,0,0,1,l.offsetX-o[4],l.offsetY-o[5]);for(let t=0,h=a.length;t<h;t+=2){const h=Util.transform(o,[e,i,s,n,a[t],a[t+1]]),[d,c]=Util.applyTransform([0,0],h);r.drawImage(l.canvas,d,c)}r.restore();this.compose()}paintImageMaskXObjectGroup(t){if(!this.contentVisible)return;const e=this.ctx,i=this.current.fillColor,s=this.current.patternFill;for(const n of t){const{data:t,width:a,height:r,transform:o}=n,l=this.cachedCanvases.getCanvas("maskCanvas",a,r),h=l.context;h.save();putBinaryImageMask(h,this.getObject(t,n));h.globalCompositeOperation="source-in";h.fillStyle=s?i.getPattern(h,this,getCurrentTransformInverse(e),yt):i;h.fillRect(0,0,a,r);h.restore();e.save();e.transform(...o);e.scale(1,-1);drawImageAtIntegerCoords(e,l.canvas,0,0,a,r,0,-1,1,1);e.restore()}this.compose()}paintImageXObject(t){if(!this.contentVisible)return;const e=this.getObject(t);e?this.paintInlineImageXObject(e):warn("Dependent image isn\'t ready yet")}paintImageXObjectRepeat(t,e,i,s){if(!this.contentVisible)return;const n=this.getObject(t);if(!n){warn("Dependent image isn\'t ready yet");return}const a=n.width,r=n.height,o=[];for(let t=0,n=s.length;t<n;t+=2)o.push({transform:[e,0,0,i,s[t],s[t+1]],x:0,y:0,w:a,h:r});this.paintInlineImageXObjectGroup(n,o)}applyTransferMapsToCanvas(t){if("none"!==this.current.transferMaps){t.filter=this.current.transferMaps;t.drawImage(t.canvas,0,0);t.filter="none"}return t.canvas}applyTransferMapsToBitmap(t){if("none"===this.current.transferMaps)return t.bitmap;const{bitmap:e,width:i,height:s}=t,n=this.cachedCanvases.getCanvas("inlineImage",i,s),a=n.context;a.filter=this.current.transferMaps;a.drawImage(e,0,0);a.filter="none";return n.canvas}paintInlineImageXObject(t){if(!this.contentVisible)return;const i=t.width,s=t.height,n=this.ctx;this.save();if(!e){const{filter:t}=n;"none"!==t&&""!==t&&(n.filter="none")}n.scale(1/i,-1/s);let a;if(t.bitmap)a=this.applyTransferMapsToBitmap(t);else if("function"==typeof HTMLElement&&t instanceof HTMLElement||!t.data)a=t;else{const e=this.cachedCanvases.getCanvas("inlineImage",i,s).context;putBinaryImageData(e,t);a=this.applyTransferMapsToCanvas(e)}const r=this._scaleImage(a,getCurrentTransformInverse(n));n.imageSmoothingEnabled=getImageSmoothingEnabled(getCurrentTransform(n),t.interpolate);drawImageAtIntegerCoords(n,r.img,0,0,r.paintWidth,r.paintHeight,0,-s,i,s);this.compose();this.restore()}paintInlineImageXObjectGroup(t,e){if(!this.contentVisible)return;const i=this.ctx;let s;if(t.bitmap)s=t.bitmap;else{const e=t.width,i=t.height,n=this.cachedCanvases.getCanvas("inlineImage",e,i).context;putBinaryImageData(n,t);s=this.applyTransferMapsToCanvas(n)}for(const t of e){i.save();i.transform(...t.transform);i.scale(1,-1);drawImageAtIntegerCoords(i,s,t.x,t.y,t.w,t.h,0,-1,1,1);i.restore()}this.compose()}paintSolidColorImageMask(){if(this.contentVisible){this.ctx.fillRect(0,0,1,1);this.compose()}}markPoint(t){}markPointProps(t,e){}beginMarkedContent(t){this.markedContentStack.push({visible:!0})}beginMarkedContentProps(t,e){"OC"===t?this.markedContentStack.push({visible:this.optionalContentConfig.isVisible(e)}):this.markedContentStack.push({visible:!0});this.contentVisible=this.isContentVisible()}endMarkedContent(){this.markedContentStack.pop();this.contentVisible=this.isContentVisible()}beginCompat(){}endCompat(){}consumePath(t){const e=this.current.isEmptyClip();this.pendingClip&&this.current.updateClipFromPath();this.pendingClip||this.compose(t);const i=this.ctx;if(this.pendingClip){e||(this.pendingClip===kt?i.clip("evenodd"):i.clip());this.pendingClip=null}this.current.startNewPathAndClipBox(this.current.clipBox);i.beginPath()}getSinglePixelWidth(){if(!this._cachedGetSinglePixelWidth){const t=getCurrentTransform(this.ctx);if(0===t[1]&&0===t[2])this._cachedGetSinglePixelWidth=1/Math.min(Math.abs(t[0]),Math.abs(t[3]));else{const e=Math.abs(t[0]*t[3]-t[2]*t[1]),i=Math.hypot(t[0],t[2]),s=Math.hypot(t[1],t[3]);this._cachedGetSinglePixelWidth=Math.max(i,s)/e}}return this._cachedGetSinglePixelWidth}getScaleForStroking(){if(-1===this._cachedScaleForStroking[0]){const{lineWidth:t}=this.current,{a:e,b:i,c:s,d:n}=this.ctx.getTransform();let a,r;if(0===i&&0===s){const i=Math.abs(e),s=Math.abs(n);if(i===s)if(0===t)a=r=1/i;else{const e=i*t;a=r=e<1?1/e:1}else if(0===t){a=1/i;r=1/s}else{const e=i*t,n=s*t;a=e<1?1/e:1;r=n<1?1/n:1}}else{const o=Math.abs(e*n-i*s),l=Math.hypot(e,i),h=Math.hypot(s,n);if(0===t){a=h/o;r=l/o}else{const e=t*o;a=h>e?h/e:1;r=l>e?l/e:1}}this._cachedScaleForStroking[0]=a;this._cachedScaleForStroking[1]=r}return this._cachedScaleForStroking}rescaleAndStroke(t){const{ctx:e}=this,{lineWidth:i}=this.current,[s,n]=this.getScaleForStroking();e.lineWidth=i||1;if(1===s&&1===n){e.stroke();return}const a=e.getLineDash();t&&e.save();e.scale(s,n);if(a.length>0){const t=Math.max(s,n);e.setLineDash(a.map((e=>e/t)));e.lineDashOffset/=t}e.stroke();t&&e.restore()}isContentVisible(){for(let t=this.markedContentStack.length-1;t>=0;t--)if(!this.markedContentStack[t].visible)return!1;return!0}}for(const t in K)void 0!==CanvasGraphics.prototype[t]&&(CanvasGraphics.prototype[K[t]]=CanvasGraphics.prototype[t]);class GlobalWorkerOptions{static#Re=null;static#Ie="";static get workerPort(){return this.#Re}static set workerPort(t){if(!("undefined"!=typeof Worker&&t instanceof Worker)&&null!==t)throw new Error("Invalid `workerPort` type.");this.#Re=t}static get workerSrc(){return this.#Ie}static set workerSrc(t){if("string"!=typeof t)throw new Error("Invalid `workerSrc` type.");this.#Ie=t}}const Pt=1,Ft=2,Dt=1,Rt=2,It=3,Lt=4,Nt=5,Ot=6,Bt=7,Ht=8;function wrapReason(t){t instanceof Error||"object"==typeof t&&null!==t||unreachable(\'wrapReason: Expected "reason" to be a (possibly cloned) Error.\');switch(t.name){case"AbortException":return new AbortException(t.message);case"MissingPDFException":return new MissingPDFException(t.message);case"PasswordException":return new PasswordException(t.message,t.code);case"UnexpectedResponseException":return new UnexpectedResponseException(t.message,t.status);case"UnknownErrorException":return new UnknownErrorException(t.message,t.details);default:return new UnknownErrorException(t.message,t.toString())}}class MessageHandler{constructor(t,e,i){this.sourceName=t;this.targetName=e;this.comObj=i;this.callbackId=1;this.streamId=1;this.streamSinks=Object.create(null);this.streamControllers=Object.create(null);this.callbackCapabilities=Object.create(null);this.actionHandler=Object.create(null);this._onComObjOnMessage=t=>{const e=t.data;if(e.targetName!==this.sourceName)return;if(e.stream){this.#Le(e);return}if(e.callback){const t=e.callbackId,i=this.callbackCapabilities[t];if(!i)throw new Error(`Cannot resolve callback ${t}`);delete this.callbackCapabilities[t];if(e.callback===Pt)i.resolve(e.data);else{if(e.callback!==Ft)throw new Error("Unexpected callback case");i.reject(wrapReason(e.reason))}return}const s=this.actionHandler[e.action];if(!s)throw new Error(`Unknown action from worker: ${e.action}`);if(e.callbackId){const t=this.sourceName,n=e.sourceName;new Promise((function(t){t(s(e.data))})).then((function(s){i.postMessage({sourceName:t,targetName:n,callback:Pt,callbackId:e.callbackId,data:s})}),(function(s){i.postMessage({sourceName:t,targetName:n,callback:Ft,callbackId:e.callbackId,reason:wrapReason(s)})}))}else e.streamId?this.#Ne(e):s(e.data)};i.addEventListener("message",this._onComObjOnMessage)}on(t,e){const i=this.actionHandler;if(i[t])throw new Error(`There is already an actionName called "${t}"`);i[t]=e}send(t,e,i){this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:t,data:e},i)}sendWithPromise(t,e,i){const s=this.callbackId++,n=Promise.withResolvers();this.callbackCapabilities[s]=n;try{this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:t,callbackId:s,data:e},i)}catch(t){n.reject(t)}return n.promise}sendWithStream(t,e,i,s){const n=this.streamId++,a=this.sourceName,r=this.targetName,o=this.comObj;return new ReadableStream({start:i=>{const l=Promise.withResolvers();this.streamControllers[n]={controller:i,startCall:l,pullCall:null,cancelCall:null,isClosed:!1};o.postMessage({sourceName:a,targetName:r,action:t,streamId:n,data:e,desiredSize:i.desiredSize},s);return l.promise},pull:t=>{const e=Promise.withResolvers();this.streamControllers[n].pullCall=e;o.postMessage({sourceName:a,targetName:r,stream:Ot,streamId:n,desiredSize:t.desiredSize});return e.promise},cancel:t=>{assert(t instanceof Error,"cancel must have a valid reason");const e=Promise.withResolvers();this.streamControllers[n].cancelCall=e;this.streamControllers[n].isClosed=!0;o.postMessage({sourceName:a,targetName:r,stream:Dt,streamId:n,reason:wrapReason(t)});return e.promise}},i)}#Ne(t){const e=t.streamId,i=this.sourceName,s=t.sourceName,n=this.comObj,a=this,r=this.actionHandler[t.action],o={enqueue(t,a=1,r){if(this.isCancelled)return;const o=this.desiredSize;this.desiredSize-=a;if(o>0&&this.desiredSize<=0){this.sinkCapability=Promise.withResolvers();this.ready=this.sinkCapability.promise}n.postMessage({sourceName:i,targetName:s,stream:Lt,streamId:e,chunk:t},r)},close(){if(!this.isCancelled){this.isCancelled=!0;n.postMessage({sourceName:i,targetName:s,stream:It,streamId:e});delete a.streamSinks[e]}},error(t){assert(t instanceof Error,"error must have a valid reason");if(!this.isCancelled){this.isCancelled=!0;n.postMessage({sourceName:i,targetName:s,stream:Nt,streamId:e,reason:wrapReason(t)})}},sinkCapability:Promise.withResolvers(),onPull:null,onCancel:null,isCancelled:!1,desiredSize:t.desiredSize,ready:null};o.sinkCapability.resolve();o.ready=o.sinkCapability.promise;this.streamSinks[e]=o;new Promise((function(e){e(r(t.data,o))})).then((function(){n.postMessage({sourceName:i,targetName:s,stream:Ht,streamId:e,success:!0})}),(function(t){n.postMessage({sourceName:i,targetName:s,stream:Ht,streamId:e,reason:wrapReason(t)})}))}#Le(t){const e=t.streamId,i=this.sourceName,s=t.sourceName,n=this.comObj,a=this.streamControllers[e],r=this.streamSinks[e];switch(t.stream){case Ht:t.success?a.startCall.resolve():a.startCall.reject(wrapReason(t.reason));break;case Bt:t.success?a.pullCall.resolve():a.pullCall.reject(wrapReason(t.reason));break;case Ot:if(!r){n.postMessage({sourceName:i,targetName:s,stream:Bt,streamId:e,success:!0});break}r.desiredSize<=0&&t.desiredSize>0&&r.sinkCapability.resolve();r.desiredSize=t.desiredSize;new Promise((function(t){t(r.onPull?.())})).then((function(){n.postMessage({sourceName:i,targetName:s,stream:Bt,streamId:e,success:!0})}),(function(t){n.postMessage({sourceName:i,targetName:s,stream:Bt,streamId:e,reason:wrapReason(t)})}));break;case Lt:assert(a,"enqueue should have stream controller");if(a.isClosed)break;a.controller.enqueue(t.chunk);break;case It:assert(a,"close should have stream controller");if(a.isClosed)break;a.isClosed=!0;a.controller.close();this.#Oe(a,e);break;case Nt:assert(a,"error should have stream controller");a.controller.error(wrapReason(t.reason));this.#Oe(a,e);break;case Rt:t.success?a.cancelCall.resolve():a.cancelCall.reject(wrapReason(t.reason));this.#Oe(a,e);break;case Dt:if(!r)break;new Promise((function(e){e(r.onCancel?.(wrapReason(t.reason)))})).then((function(){n.postMessage({sourceName:i,targetName:s,stream:Rt,streamId:e,success:!0})}),(function(t){n.postMessage({sourceName:i,targetName:s,stream:Rt,streamId:e,reason:wrapReason(t)})}));r.sinkCapability.reject(wrapReason(t.reason));r.isCancelled=!0;delete this.streamSinks[e];break;default:throw new Error("Unexpected stream case")}}async#Oe(t,e){await Promise.allSettled([t.startCall?.promise,t.pullCall?.promise,t.cancelCall?.promise]);delete this.streamControllers[e]}destroy(){this.comObj.removeEventListener("message",this._onComObjOnMessage)}}class Metadata{#Be;#He;constructor({parsedData:t,rawData:e}){this.#Be=t;this.#He=e}getRaw(){return this.#He}get(t){return this.#Be.get(t)??null}getAll(){return objectFromMap(this.#Be)}has(t){return this.#Be.has(t)}}const Ut=Symbol("INTERNAL");class OptionalContentGroup{#Ue=!1;#ze=!1;#je=!1;#We=!0;constructor(t,{name:e,intent:i,usage:s}){this.#Ue=!!(t&r);this.#ze=!!(t&o);this.name=e;this.intent=i;this.usage=s}get visible(){if(this.#je)return this.#We;if(!this.#We)return!1;const{print:t,view:e}=this.usage;return this.#Ue?"OFF"!==e?.viewState:!this.#ze||"OFF"!==t?.printState}_setVisible(t,e,i=!1){t!==Ut&&unreachable("Internal method `_setVisible` called.");this.#je=i;this.#We=e}}class OptionalContentConfig{#$e=null;#Ge=new Map;#Ve=null;#qe=null;constructor(t,e=r){this.renderingIntent=e;this.name=null;this.creator=null;if(null!==t){this.name=t.name;this.creator=t.creator;this.#qe=t.order;for(const i of t.groups)this.#Ge.set(i.id,new OptionalContentGroup(e,i));if("OFF"===t.baseState)for(const t of this.#Ge.values())t._setVisible(Ut,!1);for(const e of t.on)this.#Ge.get(e)._setVisible(Ut,!0);for(const e of t.off)this.#Ge.get(e)._setVisible(Ut,!1);this.#Ve=this.getHash()}}#Xe(t){const e=t.length;if(e<2)return!0;const i=t[0];for(let s=1;s<e;s++){const e=t[s];let n;if(Array.isArray(e))n=this.#Xe(e);else{if(!this.#Ge.has(e)){warn(`Optional content group not found: ${e}`);return!0}n=this.#Ge.get(e).visible}switch(i){case"And":if(!n)return!1;break;case"Or":if(n)return!0;break;case"Not":return!n;default:return!0}}return"And"===i}isVisible(t){if(0===this.#Ge.size)return!0;if(!t){info("Optional content group not defined.");return!0}if("OCG"===t.type){if(!this.#Ge.has(t.id)){warn(`Optional content group not found: ${t.id}`);return!0}return this.#Ge.get(t.id).visible}if("OCMD"===t.type){if(t.expression)return this.#Xe(t.expression);if(!t.policy||"AnyOn"===t.policy){for(const e of t.ids){if(!this.#Ge.has(e)){warn(`Optional content group not found: ${e}`);return!0}if(this.#Ge.get(e).visible)return!0}return!1}if("AllOn"===t.policy){for(const e of t.ids){if(!this.#Ge.has(e)){warn(`Optional content group not found: ${e}`);return!0}if(!this.#Ge.get(e).visible)return!1}return!0}if("AnyOff"===t.policy){for(const e of t.ids){if(!this.#Ge.has(e)){warn(`Optional content group not found: ${e}`);return!0}if(!this.#Ge.get(e).visible)return!0}return!1}if("AllOff"===t.policy){for(const e of t.ids){if(!this.#Ge.has(e)){warn(`Optional content group not found: ${e}`);return!0}if(this.#Ge.get(e).visible)return!1}return!0}warn(`Unknown optional content policy ${t.policy}.`);return!0}warn(`Unknown group type ${t.type}.`);return!0}setVisibility(t,e=!0){const i=this.#Ge.get(t);if(i){i._setVisible(Ut,!!e,!0);this.#$e=null}else warn(`Optional content group not found: ${t}`)}setOCGState({state:t,preserveRB:e}){let i;for(const e of t){switch(e){case"ON":case"OFF":case"Toggle":i=e;continue}const t=this.#Ge.get(e);if(t)switch(i){case"ON":t._setVisible(Ut,!0);break;case"OFF":t._setVisible(Ut,!1);break;case"Toggle":t._setVisible(Ut,!t.visible)}}this.#$e=null}get hasInitialVisibility(){return null===this.#Ve||this.getHash()===this.#Ve}getOrder(){return this.#Ge.size?this.#qe?this.#qe.slice():[...this.#Ge.keys()]:null}getGroups(){return this.#Ge.size>0?objectFromMap(this.#Ge):null}getGroup(t){return this.#Ge.get(t)||null}getHash(){if(null!==this.#$e)return this.#$e;const t=new MurmurHash3_64;for(const[e,i]of this.#Ge)t.update(`${e}:${i.visible}`);return this.#$e=t.hexdigest()}}class PDFDataTransportStream{constructor(t,{disableRange:e=!1,disableStream:i=!1}){assert(t,\'PDFDataTransportStream - missing required "pdfDataRangeTransport" argument.\');const{length:s,initialData:n,progressiveDone:a,contentDispositionFilename:r}=t;this._queuedChunks=[];this._progressiveDone=a;this._contentDispositionFilename=r;if(n?.length>0){const t=n instanceof Uint8Array&&n.byteLength===n.buffer.byteLength?n.buffer:new Uint8Array(n).buffer;this._queuedChunks.push(t)}this._pdfDataRangeTransport=t;this._isStreamingSupported=!i;this._isRangeSupported=!e;this._contentLength=s;this._fullRequestReader=null;this._rangeReaders=[];t.addRangeListener(((t,e)=>{this._onReceiveData({begin:t,chunk:e})}));t.addProgressListener(((t,e)=>{this._onProgress({loaded:t,total:e})}));t.addProgressiveReadListener((t=>{this._onReceiveData({chunk:t})}));t.addProgressiveDoneListener((()=>{this._onProgressiveDone()}));t.transportReady()}_onReceiveData({begin:t,chunk:e}){const i=e instanceof Uint8Array&&e.byteLength===e.buffer.byteLength?e.buffer:new Uint8Array(e).buffer;if(void 0===t)this._fullRequestReader?this._fullRequestReader._enqueue(i):this._queuedChunks.push(i);else{assert(this._rangeReaders.some((function(e){if(e._begin!==t)return!1;e._enqueue(i);return!0})),"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.")}}get _progressiveDataLength(){return this._fullRequestReader?._loaded??0}_onProgress(t){void 0===t.total?this._rangeReaders[0]?.onProgress?.({loaded:t.loaded}):this._fullRequestReader?.onProgress?.({loaded:t.loaded,total:t.total})}_onProgressiveDone(){this._fullRequestReader?.progressiveDone();this._progressiveDone=!0}_removeRangeReader(t){const e=this._rangeReaders.indexOf(t);e>=0&&this._rangeReaders.splice(e,1)}getFullReader(){assert(!this._fullRequestReader,"PDFDataTransportStream.getFullReader can only be called once.");const t=this._queuedChunks;this._queuedChunks=null;return new PDFDataTransportStreamReader(this,t,this._progressiveDone,this._contentDispositionFilename)}getRangeReader(t,e){if(e<=this._progressiveDataLength)return null;const i=new PDFDataTransportStreamRangeReader(this,t,e);this._pdfDataRangeTransport.requestDataRange(t,e);this._rangeReaders.push(i);return i}cancelAllRequests(t){this._fullRequestReader?.cancel(t);for(const e of this._rangeReaders.slice(0))e.cancel(t);this._pdfDataRangeTransport.abort()}}class PDFDataTransportStreamReader{constructor(t,e,i=!1,s=null){this._stream=t;this._done=i||!1;this._filename=isPdfFile(s)?s:null;this._queuedChunks=e||[];this._loaded=0;for(const t of this._queuedChunks)this._loaded+=t.byteLength;this._requests=[];this._headersReady=Promise.resolve();t._fullRequestReader=this;this.onProgress=null}_enqueue(t){if(!this._done){if(this._requests.length>0){this._requests.shift().resolve({value:t,done:!1})}else this._queuedChunks.push(t);this._loaded+=t.byteLength}}get headersReady(){return this._headersReady}get filename(){return this._filename}get isRangeSupported(){return this._stream._isRangeSupported}get isStreamingSupported(){return this._stream._isStreamingSupported}get contentLength(){return this._stream._contentLength}async read(){if(this._queuedChunks.length>0){return{value:this._queuedChunks.shift(),done:!1}}if(this._done)return{value:void 0,done:!0};const t=Promise.withResolvers();this._requests.push(t);return t.promise}cancel(t){this._done=!0;for(const t of this._requests)t.resolve({value:void 0,done:!0});this._requests.length=0}progressiveDone(){this._done||(this._done=!0)}}class PDFDataTransportStreamRangeReader{constructor(t,e,i){this._stream=t;this._begin=e;this._end=i;this._queuedChunk=null;this._requests=[];this._done=!1;this.onProgress=null}_enqueue(t){if(!this._done){if(0===this._requests.length)this._queuedChunk=t;else{this._requests.shift().resolve({value:t,done:!1});for(const t of this._requests)t.resolve({value:void 0,done:!0});this._requests.length=0}this._done=!0;this._stream._removeRangeReader(this)}}get isStreamingSupported(){return!1}async read(){if(this._queuedChunk){const t=this._queuedChunk;this._queuedChunk=null;return{value:t,done:!1}}if(this._done)return{value:void 0,done:!0};const t=Promise.withResolvers();this._requests.push(t);return t.promise}cancel(t){this._done=!0;for(const t of this._requests)t.resolve({value:void 0,done:!0});this._requests.length=0;this._stream._removeRangeReader(this)}}function validateRangeRequestCapabilities({getResponseHeader:t,isHttp:e,rangeChunkSize:i,disableRange:s}){const n={allowRangeRequests:!1,suggestedLength:void 0},a=parseInt(t("Content-Length"),10);if(!Number.isInteger(a))return n;n.suggestedLength=a;if(a<=2*i)return n;if(s||!e)return n;if("bytes"!==t("Accept-Ranges"))return n;if("identity"!==(t("Content-Encoding")||"identity"))return n;n.allowRangeRequests=!0;return n}function extractFilenameFromHeader(t){const e=t("Content-Disposition");if(e){let t=function getFilenameFromContentDispositionHeader(t){let e=!0,i=toParamRegExp("filename\\\\*","i").exec(t);if(i){i=i[1];let t=rfc2616unquote(i);t=unescape(t);t=rfc5987decode(t);t=rfc2047decode(t);return fixupEncoding(t)}i=function rfc2231getparam(t){const e=[];let i;const s=toParamRegExp("filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)","ig");for(;null!==(i=s.exec(t));){let[,t,s,n]=i;t=parseInt(t,10);if(t in e){if(0===t)break}else e[t]=[s,n]}const n=[];for(let t=0;t<e.length&&t in e;++t){let[i,s]=e[t];s=rfc2616unquote(s);if(i){s=unescape(s);0===t&&(s=rfc5987decode(s))}n.push(s)}return n.join("")}(t);if(i)return fixupEncoding(rfc2047decode(i));i=toParamRegExp("filename","i").exec(t);if(i){i=i[1];let t=rfc2616unquote(i);t=rfc2047decode(t);return fixupEncoding(t)}function toParamRegExp(t,e){return new RegExp("(?:^|;)\\\\s*"+t+\'\\\\s*=\\\\s*([^";\\\\s][^;\\\\s]*|"(?:[^"\\\\\\\\]|\\\\\\\\"?)+"?)\',e)}function textdecode(t,i){if(t){if(!/^[\\x00-\\xFF]+$/.test(i))return i;try{const s=new TextDecoder(t,{fatal:!0}),n=stringToBytes(i);i=s.decode(n);e=!1}catch{}}return i}function fixupEncoding(t){if(e&&/[\\x80-\\xff]/.test(t)){t=textdecode("utf-8",t);e&&(t=textdecode("iso-8859-1",t))}return t}function rfc2616unquote(t){if(t.startsWith(\'"\')){const e=t.slice(1).split(\'\\\\"\');for(let t=0;t<e.length;++t){const i=e[t].indexOf(\'"\');if(-1!==i){e[t]=e[t].slice(0,i);e.length=t+1}e[t]=e[t].replaceAll(/\\\\(.)/g,"$1")}t=e.join(\'"\')}return t}function rfc5987decode(t){const e=t.indexOf("\'");return-1===e?t:textdecode(t.slice(0,e),t.slice(e+1).replace(/^[^\']*\'/,""))}function rfc2047decode(t){return!t.startsWith("=?")||/[\\x00-\\x19\\x80-\\xff]/.test(t)?t:t.replaceAll(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,(function(t,e,i,s){if("q"===i||"Q"===i)return textdecode(e,s=(s=s.replaceAll("_"," ")).replaceAll(/=([0-9a-fA-F]{2})/g,(function(t,e){return String.fromCharCode(parseInt(e,16))})));try{s=atob(s)}catch{}return textdecode(e,s)}))}return""}(e);if(t.includes("%"))try{t=decodeURIComponent(t)}catch{}if(isPdfFile(t))return t}return null}function createResponseStatusError(t,e){return 404===t||0===t&&e.startsWith("file:")?new MissingPDFException(\'Missing PDF "\'+e+\'".\'):new UnexpectedResponseException(`Unexpected server response (${t}) while retrieving PDF "${e}".`,t)}function validateResponseStatus(t){return 200===t||206===t}function createFetchOptions(t,e,i){return{method:"GET",headers:t,signal:i.signal,mode:"cors",credentials:e?"include":"same-origin",redirect:"follow"}}function createHeaders(t){const e=new Headers;for(const i in t){const s=t[i];void 0!==s&&e.append(i,s)}return e}function getArrayBuffer(t){if(t instanceof Uint8Array)return t.buffer;if(t instanceof ArrayBuffer)return t;warn(`getArrayBuffer - unexpected data format: ${t}`);return new Uint8Array(t).buffer}class PDFFetchStream{constructor(t){this.source=t;this.isHttp=/^https?:/i.test(t.url);this.httpHeaders=this.isHttp&&t.httpHeaders||{};this._fullRequestReader=null;this._rangeRequestReaders=[]}get _progressiveDataLength(){return this._fullRequestReader?._loaded??0}getFullReader(){assert(!this._fullRequestReader,"PDFFetchStream.getFullReader can only be called once.");this._fullRequestReader=new PDFFetchStreamReader(this);return this._fullRequestReader}getRangeReader(t,e){if(e<=this._progressiveDataLength)return null;const i=new PDFFetchStreamRangeReader(this,t,e);this._rangeRequestReaders.push(i);return i}cancelAllRequests(t){this._fullRequestReader?.cancel(t);for(const e of this._rangeRequestReaders.slice(0))e.cancel(t)}}class PDFFetchStreamReader{constructor(t){this._stream=t;this._reader=null;this._loaded=0;this._filename=null;const e=t.source;this._withCredentials=e.withCredentials||!1;this._contentLength=e.length;this._headersCapability=Promise.withResolvers();this._disableRange=e.disableRange||!1;this._rangeChunkSize=e.rangeChunkSize;this._rangeChunkSize||this._disableRange||(this._disableRange=!0);this._abortController=new AbortController;this._isStreamingSupported=!e.disableStream;this._isRangeSupported=!e.disableRange;this._headers=createHeaders(this._stream.httpHeaders);const i=e.url;fetch(i,createFetchOptions(this._headers,this._withCredentials,this._abortController)).then((t=>{if(!validateResponseStatus(t.status))throw createResponseStatusError(t.status,i);this._reader=t.body.getReader();this._headersCapability.resolve();const getResponseHeader=e=>t.headers.get(e),{allowRangeRequests:e,suggestedLength:s}=validateRangeRequestCapabilities({getResponseHeader,isHttp:this._stream.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});this._isRangeSupported=e;this._contentLength=s||this._contentLength;this._filename=extractFilenameFromHeader(getResponseHeader);!this._isStreamingSupported&&this._isRangeSupported&&this.cancel(new AbortException("Streaming is disabled."))})).catch(this._headersCapability.reject);this.onProgress=null}get headersReady(){return this._headersCapability.promise}get filename(){return this._filename}get contentLength(){return this._contentLength}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}async read(){await this._headersCapability.promise;const{value:t,done:e}=await this._reader.read();if(e)return{value:t,done:e};this._loaded+=t.byteLength;this.onProgress?.({loaded:this._loaded,total:this._contentLength});return{value:getArrayBuffer(t),done:!1}}cancel(t){this._reader?.cancel(t);this._abortController.abort()}}class PDFFetchStreamRangeReader{constructor(t,e,i){this._stream=t;this._reader=null;this._loaded=0;const s=t.source;this._withCredentials=s.withCredentials||!1;this._readCapability=Promise.withResolvers();this._isStreamingSupported=!s.disableStream;this._abortController=new AbortController;this._headers=createHeaders(this._stream.httpHeaders);this._headers.append("Range",`bytes=${e}-${i-1}`);const n=s.url;fetch(n,createFetchOptions(this._headers,this._withCredentials,this._abortController)).then((t=>{if(!validateResponseStatus(t.status))throw createResponseStatusError(t.status,n);this._readCapability.resolve();this._reader=t.body.getReader()})).catch(this._readCapability.reject);this.onProgress=null}get isStreamingSupported(){return this._isStreamingSupported}async read(){await this._readCapability.promise;const{value:t,done:e}=await this._reader.read();if(e)return{value:t,done:e};this._loaded+=t.byteLength;this.onProgress?.({loaded:this._loaded});return{value:getArrayBuffer(t),done:!1}}cancel(t){this._reader?.cancel(t);this._abortController.abort()}}class NetworkManager{constructor(t,e={}){this.url=t;this.isHttp=/^https?:/i.test(t);this.httpHeaders=this.isHttp&&e.httpHeaders||Object.create(null);this.withCredentials=e.withCredentials||!1;this.currXhrId=0;this.pendingRequests=Object.create(null)}requestRange(t,e,i){const s={begin:t,end:e};for(const t in i)s[t]=i[t];return this.request(s)}requestFull(t){return this.request(t)}request(t){const e=new XMLHttpRequest,i=this.currXhrId++,s=this.pendingRequests[i]={xhr:e};e.open("GET",this.url);e.withCredentials=this.withCredentials;for(const t in this.httpHeaders){const i=this.httpHeaders[t];void 0!==i&&e.setRequestHeader(t,i)}if(this.isHttp&&"begin"in t&&"end"in t){e.setRequestHeader("Range",`bytes=${t.begin}-${t.end-1}`);s.expectedStatus=206}else s.expectedStatus=200;e.responseType="arraybuffer";t.onError&&(e.onerror=function(i){t.onError(e.status)});e.onreadystatechange=this.onStateChange.bind(this,i);e.onprogress=this.onProgress.bind(this,i);s.onHeadersReceived=t.onHeadersReceived;s.onDone=t.onDone;s.onError=t.onError;s.onProgress=t.onProgress;e.send(null);return i}onProgress(t,e){const i=this.pendingRequests[t];i&&i.onProgress?.(e)}onStateChange(t,e){const i=this.pendingRequests[t];if(!i)return;const s=i.xhr;if(s.readyState>=2&&i.onHeadersReceived){i.onHeadersReceived();delete i.onHeadersReceived}if(4!==s.readyState)return;if(!(t in this.pendingRequests))return;delete this.pendingRequests[t];if(0===s.status&&this.isHttp){i.onError?.(s.status);return}const n=s.status||200;if(!(200===n&&206===i.expectedStatus)&&n!==i.expectedStatus){i.onError?.(s.status);return}const a=function network_getArrayBuffer(t){const e=t.response;return"string"!=typeof e?e:stringToBytes(e).buffer}(s);if(206===n){const t=s.getResponseHeader("Content-Range"),e=/bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(t);i.onDone({begin:parseInt(e[1],10),chunk:a})}else a?i.onDone({begin:0,chunk:a}):i.onError?.(s.status)}getRequestXhr(t){return this.pendingRequests[t].xhr}isPendingRequest(t){return t in this.pendingRequests}abortRequest(t){const e=this.pendingRequests[t].xhr;delete this.pendingRequests[t];e.abort()}}class PDFNetworkStream{constructor(t){this._source=t;this._manager=new NetworkManager(t.url,{httpHeaders:t.httpHeaders,withCredentials:t.withCredentials});this._rangeChunkSize=t.rangeChunkSize;this._fullRequestReader=null;this._rangeRequestReaders=[]}_onRangeRequestReaderClosed(t){const e=this._rangeRequestReaders.indexOf(t);e>=0&&this._rangeRequestReaders.splice(e,1)}getFullReader(){assert(!this._fullRequestReader,"PDFNetworkStream.getFullReader can only be called once.");this._fullRequestReader=new PDFNetworkStreamFullRequestReader(this._manager,this._source);return this._fullRequestReader}getRangeReader(t,e){const i=new PDFNetworkStreamRangeRequestReader(this._manager,t,e);i.onClosed=this._onRangeRequestReaderClosed.bind(this);this._rangeRequestReaders.push(i);return i}cancelAllRequests(t){this._fullRequestReader?.cancel(t);for(const e of this._rangeRequestReaders.slice(0))e.cancel(t)}}class PDFNetworkStreamFullRequestReader{constructor(t,e){this._manager=t;const i={onHeadersReceived:this._onHeadersReceived.bind(this),onDone:this._onDone.bind(this),onError:this._onError.bind(this),onProgress:this._onProgress.bind(this)};this._url=e.url;this._fullRequestId=t.requestFull(i);this._headersReceivedCapability=Promise.withResolvers();this._disableRange=e.disableRange||!1;this._contentLength=e.length;this._rangeChunkSize=e.rangeChunkSize;this._rangeChunkSize||this._disableRange||(this._disableRange=!0);this._isStreamingSupported=!1;this._isRangeSupported=!1;this._cachedChunks=[];this._requests=[];this._done=!1;this._storedError=void 0;this._filename=null;this.onProgress=null}_onHeadersReceived(){const t=this._fullRequestId,e=this._manager.getRequestXhr(t),getResponseHeader=t=>e.getResponseHeader(t),{allowRangeRequests:i,suggestedLength:s}=validateRangeRequestCapabilities({getResponseHeader,isHttp:this._manager.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});i&&(this._isRangeSupported=!0);this._contentLength=s||this._contentLength;this._filename=extractFilenameFromHeader(getResponseHeader);this._isRangeSupported&&this._manager.abortRequest(t);this._headersReceivedCapability.resolve()}_onDone(t){if(t)if(this._requests.length>0){this._requests.shift().resolve({value:t.chunk,done:!1})}else this._cachedChunks.push(t.chunk);this._done=!0;if(!(this._cachedChunks.length>0)){for(const t of this._requests)t.resolve({value:void 0,done:!0});this._requests.length=0}}_onError(t){this._storedError=createResponseStatusError(t,this._url);this._headersReceivedCapability.reject(this._storedError);for(const t of this._requests)t.reject(this._storedError);this._requests.length=0;this._cachedChunks.length=0}_onProgress(t){this.onProgress?.({loaded:t.loaded,total:t.lengthComputable?t.total:this._contentLength})}get filename(){return this._filename}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}get contentLength(){return this._contentLength}get headersReady(){return this._headersReceivedCapability.promise}async read(){if(this._storedError)throw this._storedError;if(this._cachedChunks.length>0){return{value:this._cachedChunks.shift(),done:!1}}if(this._done)return{value:void 0,done:!0};const t=Promise.withResolvers();this._requests.push(t);return t.promise}cancel(t){this._done=!0;this._headersReceivedCapability.reject(t);for(const t of this._requests)t.resolve({value:void 0,done:!0});this._requests.length=0;this._manager.isPendingRequest(this._fullRequestId)&&this._manager.abortRequest(this._fullRequestId);this._fullRequestReader=null}}class PDFNetworkStreamRangeRequestReader{constructor(t,e,i){this._manager=t;const s={onDone:this._onDone.bind(this),onError:this._onError.bind(this),onProgress:this._onProgress.bind(this)};this._url=t.url;this._requestId=t.requestRange(e,i,s);this._requests=[];this._queuedChunk=null;this._done=!1;this._storedError=void 0;this.onProgress=null;this.onClosed=null}_close(){this.onClosed?.(this)}_onDone(t){const e=t.chunk;if(this._requests.length>0){this._requests.shift().resolve({value:e,done:!1})}else this._queuedChunk=e;this._done=!0;for(const t of this._requests)t.resolve({value:void 0,done:!0});this._requests.length=0;this._close()}_onError(t){this._storedError=createResponseStatusError(t,this._url);for(const t of this._requests)t.reject(this._storedError);this._requests.length=0;this._queuedChunk=null}_onProgress(t){this.isStreamingSupported||this.onProgress?.({loaded:t.loaded})}get isStreamingSupported(){return!1}async read(){if(this._storedError)throw this._storedError;if(null!==this._queuedChunk){const t=this._queuedChunk;this._queuedChunk=null;return{value:t,done:!1}}if(this._done)return{value:void 0,done:!0};const t=Promise.withResolvers();this._requests.push(t);return t.promise}cancel(t){this._done=!0;for(const t of this._requests)t.resolve({value:void 0,done:!0});this._requests.length=0;this._manager.isPendingRequest(this._requestId)&&this._manager.abortRequest(this._requestId);this._close()}}const zt=/^file:\\/\\/\\/[a-zA-Z]:\\//;class PDFNodeStream{constructor(t){this.source=t;this.url=function parseUrl(t){const e=NodePackages.get("url"),i=e.parse(t);if("file:"===i.protocol||i.host)return i;if(/^[a-z]:[/\\\\]/i.test(t))return e.parse(`file:///${t}`);i.host||(i.protocol="file:");return i}(t.url);this.isHttp="http:"===this.url.protocol||"https:"===this.url.protocol;this.isFsUrl="file:"===this.url.protocol;this.httpHeaders=this.isHttp&&t.httpHeaders||{};this._fullRequestReader=null;this._rangeRequestReaders=[]}get _progressiveDataLength(){return this._fullRequestReader?._loaded??0}getFullReader(){assert(!this._fullRequestReader,"PDFNodeStream.getFullReader can only be called once.");this._fullRequestReader=this.isFsUrl?new PDFNodeStreamFsFullReader(this):new PDFNodeStreamFullReader(this);return this._fullRequestReader}getRangeReader(t,e){if(e<=this._progressiveDataLength)return null;const i=this.isFsUrl?new PDFNodeStreamFsRangeReader(this,t,e):new PDFNodeStreamRangeReader(this,t,e);this._rangeRequestReaders.push(i);return i}cancelAllRequests(t){this._fullRequestReader?.cancel(t);for(const e of this._rangeRequestReaders.slice(0))e.cancel(t)}}class BaseFullReader{constructor(t){this._url=t.url;this._done=!1;this._storedError=null;this.onProgress=null;const e=t.source;this._contentLength=e.length;this._loaded=0;this._filename=null;this._disableRange=e.disableRange||!1;this._rangeChunkSize=e.rangeChunkSize;this._rangeChunkSize||this._disableRange||(this._disableRange=!0);this._isStreamingSupported=!e.disableStream;this._isRangeSupported=!e.disableRange;this._readableStream=null;this._readCapability=Promise.withResolvers();this._headersCapability=Promise.withResolvers()}get headersReady(){return this._headersCapability.promise}get filename(){return this._filename}get contentLength(){return this._contentLength}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}async read(){await this._readCapability.promise;if(this._done)return{value:void 0,done:!0};if(this._storedError)throw this._storedError;const t=this._readableStream.read();if(null===t){this._readCapability=Promise.withResolvers();return this.read()}this._loaded+=t.length;this.onProgress?.({loaded:this._loaded,total:this._contentLength});return{value:new Uint8Array(t).buffer,done:!1}}cancel(t){this._readableStream?this._readableStream.destroy(t):this._error(t)}_error(t){this._storedError=t;this._readCapability.resolve()}_setReadableStream(t){this._readableStream=t;t.on("readable",(()=>{this._readCapability.resolve()}));t.on("end",(()=>{t.destroy();this._done=!0;this._readCapability.resolve()}));t.on("error",(t=>{this._error(t)}));!this._isStreamingSupported&&this._isRangeSupported&&this._error(new AbortException("streaming is disabled"));this._storedError&&this._readableStream.destroy(this._storedError)}}class BaseRangeReader{constructor(t){this._url=t.url;this._done=!1;this._storedError=null;this.onProgress=null;this._loaded=0;this._readableStream=null;this._readCapability=Promise.withResolvers();const e=t.source;this._isStreamingSupported=!e.disableStream}get isStreamingSupported(){return this._isStreamingSupported}async read(){await this._readCapability.promise;if(this._done)return{value:void 0,done:!0};if(this._storedError)throw this._storedError;const t=this._readableStream.read();if(null===t){this._readCapability=Promise.withResolvers();return this.read()}this._loaded+=t.length;this.onProgress?.({loaded:this._loaded});return{value:new Uint8Array(t).buffer,done:!1}}cancel(t){this._readableStream?this._readableStream.destroy(t):this._error(t)}_error(t){this._storedError=t;this._readCapability.resolve()}_setReadableStream(t){this._readableStream=t;t.on("readable",(()=>{this._readCapability.resolve()}));t.on("end",(()=>{t.destroy();this._done=!0;this._readCapability.resolve()}));t.on("error",(t=>{this._error(t)}));this._storedError&&this._readableStream.destroy(this._storedError)}}function createRequestOptions(t,e){return{protocol:t.protocol,auth:t.auth,host:t.hostname,port:t.port,path:t.path,method:"GET",headers:e}}class PDFNodeStreamFullReader extends BaseFullReader{constructor(t){super(t);const handleResponse=e=>{if(404===e.statusCode){const t=new MissingPDFException(`Missing PDF "${this._url}".`);this._storedError=t;this._headersCapability.reject(t);return}this._headersCapability.resolve();this._setReadableStream(e);const getResponseHeader=t=>this._readableStream.headers[t.toLowerCase()],{allowRangeRequests:i,suggestedLength:s}=validateRangeRequestCapabilities({getResponseHeader,isHttp:t.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});this._isRangeSupported=i;this._contentLength=s||this._contentLength;this._filename=extractFilenameFromHeader(getResponseHeader)};this._request=null;if("http:"===this._url.protocol){const e=NodePackages.get("http");this._request=e.request(createRequestOptions(this._url,t.httpHeaders),handleResponse)}else{const e=NodePackages.get("https");this._request=e.request(createRequestOptions(this._url,t.httpHeaders),handleResponse)}this._request.on("error",(t=>{this._storedError=t;this._headersCapability.reject(t)}));this._request.end()}}class PDFNodeStreamRangeReader extends BaseRangeReader{constructor(t,e,i){super(t);this._httpHeaders={};for(const e in t.httpHeaders){const i=t.httpHeaders[e];void 0!==i&&(this._httpHeaders[e]=i)}this._httpHeaders.Range=`bytes=${e}-${i-1}`;const handleResponse=t=>{if(404!==t.statusCode)this._setReadableStream(t);else{const t=new MissingPDFException(`Missing PDF "${this._url}".`);this._storedError=t}};this._request=null;if("http:"===this._url.protocol){const t=NodePackages.get("http");this._request=t.request(createRequestOptions(this._url,this._httpHeaders),handleResponse)}else{const t=NodePackages.get("https");this._request=t.request(createRequestOptions(this._url,this._httpHeaders),handleResponse)}this._request.on("error",(t=>{this._storedError=t}));this._request.end()}}class PDFNodeStreamFsFullReader extends BaseFullReader{constructor(t){super(t);let e=decodeURIComponent(this._url.path);zt.test(this._url.href)&&(e=e.replace(/^\\//,""));const i=NodePackages.get("fs");i.promises.lstat(e).then((t=>{this._contentLength=t.size;this._setReadableStream(i.createReadStream(e));this._headersCapability.resolve()}),(t=>{"ENOENT"===t.code&&(t=new MissingPDFException(`Missing PDF "${e}".`));this._storedError=t;this._headersCapability.reject(t)}))}}class PDFNodeStreamFsRangeReader extends BaseRangeReader{constructor(t,e,i){super(t);let s=decodeURIComponent(this._url.path);zt.test(this._url.href)&&(s=s.replace(/^\\//,""));const n=NodePackages.get("fs");this._setReadableStream(n.createReadStream(s,{start:e,end:i-1}))}}const jt=30;class TextLayer{#Ke=Promise.withResolvers();#ct=null;#Ye=!1;#Qe=!!globalThis.FontInspector?.enabled;#Je=null;#Ze=null;#ti=0;#ei=0;#ii=null;#si=null;#ni=0;#ai=0;#ri=Object.create(null);#oi=[];#li=null;#hi=[];#di=new WeakMap;#ci=null;static#ui=new Map;static#pi=new Map;static#gi=null;static#mi=new Set;constructor({textContentSource:t,container:e,viewport:i}){if(t instanceof ReadableStream)this.#li=t;else{if("object"!=typeof t)throw new Error(\'No "textContentSource" parameter specified.\');this.#li=new ReadableStream({start(e){e.enqueue(t);e.close()}})}this.#ct=this.#si=e;this.#ai=i.scale*(globalThis.devicePixelRatio||1);this.#ni=i.rotation;this.#Ze={prevFontSize:null,prevFontFamily:null,div:null,properties:null,ctx:null};const{pageWidth:s,pageHeight:n,pageX:a,pageY:r}=i.rawDims;this.#ci=[1,0,0,-1,-a,r+n];this.#ei=s;this.#ti=n;TextLayer.#fi();setLayerDimensions(e,i);this.#Ke.promise.catch((()=>{})).then((()=>{TextLayer.#mi.delete(this);this.#Ze=null;this.#ri=null}))}render(){const pump=()=>{this.#ii.read().then((({value:t,done:e})=>{if(e)this.#Ke.resolve();else{this.#Je??=t.lang;Object.assign(this.#ri,t.styles);this.#bi(t.items);pump()}}),this.#Ke.reject)};this.#ii=this.#li.getReader();TextLayer.#mi.add(this);pump();return this.#Ke.promise}update({viewport:t,onBefore:e=null}){const i=t.scale*(globalThis.devicePixelRatio||1),s=t.rotation;if(s!==this.#ni){e?.();this.#ni=s;setLayerDimensions(this.#si,{rotation:s})}if(i!==this.#ai){e?.();this.#ai=i;const t={prevFontSize:null,prevFontFamily:null,div:null,properties:null,ctx:TextLayer.#Ai(this.#Je)};for(const e of this.#hi){t.properties=this.#di.get(e);t.div=e;this.#vi(t)}}}cancel(){const t=new AbortException("TextLayer task cancelled.");this.#ii?.cancel(t).catch((()=>{}));this.#ii=null;this.#Ke.reject(t)}get textDivs(){return this.#hi}get textContentItemsStr(){return this.#oi}#bi(t){if(this.#Ye)return;this.#Ze.ctx??=TextLayer.#Ai(this.#Je);const e=this.#hi,i=this.#oi;for(const s of t){if(e.length>1e5){warn("Ignoring additional textDivs for performance reasons.");this.#Ye=!0;return}if(void 0!==s.str){i.push(s.str);this.#yi(s)}else if("beginMarkedContentProps"===s.type||"beginMarkedContent"===s.type){const t=this.#ct;this.#ct=document.createElement("span");this.#ct.classList.add("markedContent");null!==s.id&&this.#ct.setAttribute("id",`${s.id}`);t.append(this.#ct)}else"endMarkedContent"===s.type&&(this.#ct=this.#ct.parentNode)}}#yi(t){const e=document.createElement("span"),i={angle:0,canvasWidth:0,hasText:""!==t.str,hasEOL:t.hasEOL,fontSize:0};this.#hi.push(e);const s=Util.transform(this.#ci,t.transform);let n=Math.atan2(s[1],s[0]);const a=this.#ri[t.fontName];a.vertical&&(n+=Math.PI/2);const r=this.#Qe&&a.fontSubstitution||a.fontFamily,o=Math.hypot(s[2],s[3]),l=o*TextLayer.#wi(r,this.#Je);let h,d;if(0===n){h=s[4];d=s[5]-l}else{h=s[4]+l*Math.sin(n);d=s[5]-l*Math.cos(n)}const c="calc(var(--scale-factor)*",u=e.style;if(this.#ct===this.#si){u.left=`${(100*h/this.#ei).toFixed(2)}%`;u.top=`${(100*d/this.#ti).toFixed(2)}%`}else{u.left=`${c}${h.toFixed(2)}px)`;u.top=`${c}${d.toFixed(2)}px)`}u.fontSize=`${c}${(TextLayer.#gi*o).toFixed(2)}px)`;u.fontFamily=r;i.fontSize=o;e.setAttribute("role","presentation");e.textContent=t.str;e.dir=t.dir;this.#Qe&&(e.dataset.fontName=a.fontSubstitutionLoadedName||t.fontName);0!==n&&(i.angle=n*(180/Math.PI));let p=!1;if(t.str.length>1)p=!0;else if(" "!==t.str&&t.transform[0]!==t.transform[3]){const e=Math.abs(t.transform[0]),i=Math.abs(t.transform[3]);e!==i&&Math.max(e,i)/Math.min(e,i)>1.5&&(p=!0)}p&&(i.canvasWidth=a.vertical?t.height:t.width);this.#di.set(e,i);this.#Ze.div=e;this.#Ze.properties=i;this.#vi(this.#Ze);i.hasText&&this.#ct.append(e);if(i.hasEOL){const t=document.createElement("br");t.setAttribute("role","presentation");this.#ct.append(t)}}#vi(t){const{div:e,properties:i,ctx:s,prevFontSize:n,prevFontFamily:a}=t,{style:r}=e;let o="";TextLayer.#gi>1&&(o=`scale(${1/TextLayer.#gi})`);if(0!==i.canvasWidth&&i.hasText){const{fontFamily:l}=r,{canvasWidth:h,fontSize:d}=i;if(n!==d||a!==l){s.font=`${d*this.#ai}px ${l}`;t.prevFontSize=d;t.prevFontFamily=l}const{width:c}=s.measureText(e.textContent);c>0&&(o=`scaleX(${h*this.#ai/c}) ${o}`)}0!==i.angle&&(o=`rotate(${i.angle}deg) ${o}`);o.length>0&&(r.transform=o)}static cleanup(){if(!(this.#mi.size>0)){this.#ui.clear();for(const{canvas:t}of this.#pi.values())t.remove();this.#pi.clear()}}static#Ai(t=null){let e=this.#pi.get(t||="");if(!e){const i=document.createElement("canvas");i.className="hiddenCanvasElement";i.lang=t;document.body.append(i);e=i.getContext("2d",{alpha:!1,willReadFrequently:!0});this.#pi.set(t,e)}return e}static#fi(){if(null!==this.#gi)return;const t=document.createElement("div");t.style.opacity=0;t.style.lineHeight=1;t.style.fontSize="1px";t.style.position="absolute";t.textContent="X";document.body.append(t);this.#gi=t.getBoundingClientRect().height;t.remove()}static#wi(t,e){const i=this.#ui.get(t);if(i)return i;const s=this.#Ai(e),n=s.font;s.canvas.width=s.canvas.height=jt;s.font=`30px ${t}`;const a=s.measureText("");let r=a.fontBoundingBoxAscent,o=Math.abs(a.fontBoundingBoxDescent);if(r){const e=r/(r+o);this.#ui.set(t,e);s.canvas.width=s.canvas.height=0;s.font=n;return e}s.strokeStyle="red";s.clearRect(0,0,jt,jt);s.strokeText("g",0,0);let l=s.getImageData(0,0,jt,jt).data;o=0;for(let t=l.length-1-3;t>=0;t-=4)if(l[t]>0){o=Math.ceil(t/4/jt);break}s.clearRect(0,0,jt,jt);s.strokeText("A",0,jt);l=s.getImageData(0,0,jt,jt).data;r=0;for(let t=0,e=l.length;t<e;t+=4)if(l[t]>0){r=jt-Math.floor(t/4/jt);break}s.canvas.width=s.canvas.height=0;s.font=n;const h=r?r/(r+o):.8;this.#ui.set(t,h);return h}}class XfaText{static textContent(t){const e=[],i={items:e,styles:Object.create(null)};!function walk(t){if(!t)return;let i=null;const s=t.name;if("#text"===s)i=t.value;else{if(!XfaText.shouldBuildText(s))return;t?.attributes?.textContent?i=t.attributes.textContent:t.value&&(i=t.value)}null!==i&&e.push({str:i});if(t.children)for(const e of t.children)walk(e)}(t);return i}static shouldBuildText(t){return!("textarea"===t||"input"===t||"option"===t||"select"===t)}}const Wt=65536,$t=e?class NodeCanvasFactory extends BaseCanvasFactory{_createCanvas(t,e){return NodePackages.get("canvas").createCanvas(t,e)}}:class DOMCanvasFactory extends BaseCanvasFactory{constructor({ownerDocument:t=globalThis.document,enableHWA:e=!1}={}){super({enableHWA:e});this._document=t}_createCanvas(t,e){const i=this._document.createElement("canvas");i.width=t;i.height=e;return i}},Gt=e?class NodeCMapReaderFactory extends BaseCMapReaderFactory{_fetchData(t,e){return node_utils_fetchData(t).then((t=>({cMapData:t,compressionType:e})))}}:DOMCMapReaderFactory,Vt=e?class NodeFilterFactory extends BaseFilterFactory{}:class DOMFilterFactory extends BaseFilterFactory{#xi;#_i;#Ei;#Ci;#Si;#Ti;#A=0;constructor({docId:t,ownerDocument:e=globalThis.document}={}){super();this.#Ci=t;this.#Si=e}get#y(){return this.#_i||=new Map}get#Mi(){return this.#Ti||=new Map}get#ki(){if(!this.#Ei){const t=this.#Si.createElement("div"),{style:e}=t;e.visibility="hidden";e.contain="strict";e.width=e.height=0;e.position="absolute";e.top=e.left=0;e.zIndex=-1;const i=this.#Si.createElementNS(ut,"svg");i.setAttribute("width",0);i.setAttribute("height",0);this.#Ei=this.#Si.createElementNS(ut,"defs");t.append(i);i.append(this.#Ei);this.#Si.body.append(t)}return this.#Ei}#Pi(t){if(1===t.length){const e=t[0],i=new Array(256);for(let t=0;t<256;t++)i[t]=e[t]/255;const s=i.join(",");return[s,s,s]}const[e,i,s]=t,n=new Array(256),a=new Array(256),r=new Array(256);for(let t=0;t<256;t++){n[t]=e[t]/255;a[t]=i[t]/255;r[t]=s[t]/255}return[n.join(","),a.join(","),r.join(",")]}#Fi(t){if(void 0===this.#xi){this.#xi="";const t=this.#Si.URL;t!==this.#Si.baseURI&&(isDataScheme(t)?warn(\'#createUrl: ignore "data:"-URL for performance reasons.\'):this.#xi=t.split("#",1)[0])}return`url(${this.#xi}#${t})`}addFilter(t){if(!t)return"none";let e=this.#y.get(t);if(e)return e;const[i,s,n]=this.#Pi(t),a=1===t.length?i:`${i}${s}${n}`;e=this.#y.get(a);if(e){this.#y.set(t,e);return e}const r=`g_${this.#Ci}_transfer_map_${this.#A++}`,o=this.#Fi(r);this.#y.set(t,o);this.#y.set(a,o);const l=this.#Di(r);this.#Ri(i,s,n,l);return o}addHCMFilter(t,e){const i=`${t}-${e}`,s="base";let n=this.#Mi.get(s);if(n?.key===i)return n.url;if(n){n.filter?.remove();n.key=i;n.url="none";n.filter=null}else{n={key:i,url:"none",filter:null};this.#Mi.set(s,n)}if(!t||!e)return n.url;const a=this.#Ii(t);t=Util.makeHexColor(...a);const r=this.#Ii(e);e=Util.makeHexColor(...r);this.#ki.style.color="";if("#000000"===t&&"#ffffff"===e||t===e)return n.url;const o=new Array(256);for(let t=0;t<=255;t++){const e=t/255;o[t]=e<=.03928?e/12.92:((e+.055)/1.055)**2.4}const l=o.join(","),h=`g_${this.#Ci}_hcm_filter`,d=n.filter=this.#Di(h);this.#Ri(l,l,l,d);this.#Li(d);const getSteps=(t,e)=>{const i=a[t]/255,s=r[t]/255,n=new Array(e+1);for(let t=0;t<=e;t++)n[t]=i+t/e*(s-i);return n.join(",")};this.#Ri(getSteps(0,5),getSteps(1,5),getSteps(2,5),d);n.url=this.#Fi(h);return n.url}addAlphaFilter(t){let e=this.#y.get(t);if(e)return e;const[i]=this.#Pi([t]),s=`alpha_${i}`;e=this.#y.get(s);if(e){this.#y.set(t,e);return e}const n=`g_${this.#Ci}_alpha_map_${this.#A++}`,a=this.#Fi(n);this.#y.set(t,a);this.#y.set(s,a);const r=this.#Di(n);this.#Ni(i,r);return a}addLuminosityFilter(t){let e,i,s=this.#y.get(t||"luminosity");if(s)return s;if(t){[e]=this.#Pi([t]);i=`luminosity_${e}`}else i="luminosity";s=this.#y.get(i);if(s){this.#y.set(t,s);return s}const n=`g_${this.#Ci}_luminosity_map_${this.#A++}`,a=this.#Fi(n);this.#y.set(t,a);this.#y.set(i,a);const r=this.#Di(n);this.#Oi(r);t&&this.#Ni(e,r);return a}addHighlightHCMFilter(t,e,i,s,n){const a=`${e}-${i}-${s}-${n}`;let r=this.#Mi.get(t);if(r?.key===a)return r.url;if(r){r.filter?.remove();r.key=a;r.url="none";r.filter=null}else{r={key:a,url:"none",filter:null};this.#Mi.set(t,r)}if(!e||!i)return r.url;const[o,l]=[e,i].map(this.#Ii.bind(this));let h=Math.round(.2126*o[0]+.7152*o[1]+.0722*o[2]),d=Math.round(.2126*l[0]+.7152*l[1]+.0722*l[2]),[c,u]=[s,n].map(this.#Ii.bind(this));d<h&&([h,d,c,u]=[d,h,u,c]);this.#ki.style.color="";const getSteps=(t,e,i)=>{const s=new Array(256),n=(d-h)/i,a=t/255,r=(e-t)/(255*i);let o=0;for(let t=0;t<=i;t++){const e=Math.round(h+t*n),i=a+t*r;for(let t=o;t<=e;t++)s[t]=i;o=e+1}for(let t=o;t<256;t++)s[t]=s[o-1];return s.join(",")},p=`g_${this.#Ci}_hcm_${t}_filter`,g=r.filter=this.#Di(p);this.#Li(g);this.#Ri(getSteps(c[0],u[0],5),getSteps(c[1],u[1],5),getSteps(c[2],u[2],5),g);r.url=this.#Fi(p);return r.url}destroy(t=!1){if(!t||0===this.#Mi.size){if(this.#Ei){this.#Ei.parentNode.parentNode.remove();this.#Ei=null}if(this.#_i){this.#_i.clear();this.#_i=null}this.#A=0}}#Oi(t){const e=this.#Si.createElementNS(ut,"feColorMatrix");e.setAttribute("type","matrix");e.setAttribute("values","0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.3 0.59 0.11 0 0");t.append(e)}#Li(t){const e=this.#Si.createElementNS(ut,"feColorMatrix");e.setAttribute("type","matrix");e.setAttribute("values","0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0");t.append(e)}#Di(t){const e=this.#Si.createElementNS(ut,"filter");e.setAttribute("color-interpolation-filters","sRGB");e.setAttribute("id",t);this.#ki.append(e);return e}#Bi(t,e,i){const s=this.#Si.createElementNS(ut,e);s.setAttribute("type","discrete");s.setAttribute("tableValues",i);t.append(s)}#Ri(t,e,i,s){const n=this.#Si.createElementNS(ut,"feComponentTransfer");s.append(n);this.#Bi(n,"feFuncR",t);this.#Bi(n,"feFuncG",e);this.#Bi(n,"feFuncB",i)}#Ni(t,e){const i=this.#Si.createElementNS(ut,"feComponentTransfer");e.append(i);this.#Bi(i,"feFuncA",t)}#Ii(t){this.#ki.style.color=t;return getRGB(getComputedStyle(this.#ki).getPropertyValue("color"))}},qt=e?class NodeStandardFontDataFactory extends BaseStandardFontDataFactory{_fetchData(t){return node_utils_fetchData(t)}}:DOMStandardFontDataFactory;function getDocument(t={}){"string"==typeof t||t instanceof URL?t={url:t}:(t instanceof ArrayBuffer||ArrayBuffer.isView(t))&&(t={data:t});const i=new PDFDocumentLoadingTask,{docId:s}=i,n=t.url?function getUrlProp(t){if(t instanceof URL)return t.href;try{return new URL(t,window.location).href}catch{if(e&&"string"==typeof t)return t}throw new Error("Invalid PDF url data: either string or URL-object is expected in the url property.")}(t.url):null,a=t.data?function getDataProp(t){if(e&&"undefined"!=typeof Buffer&&t instanceof Buffer)throw new Error("Please provide binary data as `Uint8Array`, rather than `Buffer`.");if(t instanceof Uint8Array&&t.byteLength===t.buffer.byteLength)return t;if("string"==typeof t)return stringToBytes(t);if(t instanceof ArrayBuffer||ArrayBuffer.isView(t)||"object"==typeof t&&!isNaN(t?.length))return new Uint8Array(t);throw new Error("Invalid PDF binary data: either TypedArray, string, or array-like object is expected in the data property.")}(t.data):null,r=t.httpHeaders||null,o=!0===t.withCredentials,l=t.password??null,h=t.range instanceof PDFDataRangeTransport?t.range:null,d=Number.isInteger(t.rangeChunkSize)&&t.rangeChunkSize>0?t.rangeChunkSize:Wt;let c=t.worker instanceof PDFWorker?t.worker:null;const u=t.verbosity,p="string"!=typeof t.docBaseUrl||isDataScheme(t.docBaseUrl)?null:t.docBaseUrl,g="string"==typeof t.cMapUrl?t.cMapUrl:null,m=!1!==t.cMapPacked,f=t.CMapReaderFactory||Gt,b="string"==typeof t.standardFontDataUrl?t.standardFontDataUrl:null,A=t.StandardFontDataFactory||qt,v=!0!==t.stopAtErrors,y=Number.isInteger(t.maxImageSize)&&t.maxImageSize>-1?t.maxImageSize:-1,w=!1!==t.isEvalSupported,x="boolean"==typeof t.isOffscreenCanvasSupported?t.isOffscreenCanvasSupported:!e,_=Number.isInteger(t.canvasMaxAreaInBytes)?t.canvasMaxAreaInBytes:-1,E="boolean"==typeof t.disableFontFace?t.disableFontFace:e,C=!0===t.fontExtraProperties,S=!0===t.enableXfa,T=t.ownerDocument||globalThis.document,M=!0===t.disableRange,k=!0===t.disableStream,P=!0===t.disableAutoFetch,F=!0===t.pdfBug,D=!0===t.enableHWA,R=h?h.length:t.length??NaN,I="boolean"==typeof t.useSystemFonts?t.useSystemFonts:!e&&!E,L="boolean"==typeof t.useWorkerFetch?t.useWorkerFetch:f===DOMCMapReaderFactory&&A===DOMStandardFontDataFactory&&g&&b&&isValidFetchUrl(g,document.baseURI)&&isValidFetchUrl(b,document.baseURI),N=t.canvasFactory||new $t({ownerDocument:T,enableHWA:D}),O=t.filterFactory||new Vt({docId:s,ownerDocument:T});setVerbosityLevel(u);const B={canvasFactory:N,filterFactory:O};if(!L){B.cMapReaderFactory=new f({baseUrl:g,isCompressed:m});B.standardFontDataFactory=new A({baseUrl:b})}if(!c){const t={verbosity:u,port:GlobalWorkerOptions.workerPort};c=t.port?PDFWorker.fromPort(t):new PDFWorker(t);i._worker=c}const H={docId:s,apiVersion:"4.6.64",data:a,password:l,disableAutoFetch:P,rangeChunkSize:d,length:R,docBaseUrl:p,enableXfa:S,evaluatorOptions:{maxImageSize:y,disableFontFace:E,ignoreErrors:v,isEvalSupported:w,isOffscreenCanvasSupported:x,canvasMaxAreaInBytes:_,fontExtraProperties:C,useSystemFonts:I,cMapUrl:L?g:null,standardFontDataUrl:L?b:null}},U={disableFontFace:E,fontExtraProperties:C,ownerDocument:T,pdfBug:F,styleElement:null,loadingParams:{disableAutoFetch:P,enableXfa:S}};c.promise.then((function(){if(i.destroyed)throw new Error("Loading aborted");if(c.destroyed)throw new Error("Worker was destroyed");const t=c.messageHandler.sendWithPromise("GetDocRequest",H,a?[a.buffer]:null);let l;if(h)l=new PDFDataTransportStream(h,{disableRange:M,disableStream:k});else if(!a){if(!n)throw new Error("getDocument - no `url` parameter provided.");l=(t=>{if(e){return function(){return"undefined"!=typeof fetch&&"undefined"!=typeof Response&&"body"in Response.prototype}()&&isValidFetchUrl(t.url)?new PDFFetchStream(t):new PDFNodeStream(t)}return isValidFetchUrl(t.url)?new PDFFetchStream(t):new PDFNetworkStream(t)})({url:n,length:R,httpHeaders:r,withCredentials:o,rangeChunkSize:d,disableRange:M,disableStream:k})}return t.then((t=>{if(i.destroyed)throw new Error("Loading aborted");if(c.destroyed)throw new Error("Worker was destroyed");const e=new MessageHandler(s,t,c.port),n=new WorkerTransport(e,i,l,U,B);i._transport=n;e.send("Ready",null)}))})).catch(i._capability.reject);return i}function isRefProxy(t){return"object"==typeof t&&Number.isInteger(t?.num)&&t.num>=0&&Number.isInteger(t?.gen)&&t.gen>=0}class PDFDocumentLoadingTask{static#Ci=0;constructor(){this._capability=Promise.withResolvers();this._transport=null;this._worker=null;this.docId="d"+PDFDocumentLoadingTask.#Ci++;this.destroyed=!1;this.onPassword=null;this.onProgress=null}get promise(){return this._capability.promise}async destroy(){this.destroyed=!0;try{this._worker?.port&&(this._worker._pendingDestroy=!0);await(this._transport?.destroy())}catch(t){this._worker?.port&&delete this._worker._pendingDestroy;throw t}this._transport=null;if(this._worker){this._worker.destroy();this._worker=null}}}class PDFDataRangeTransport{constructor(t,e,i=!1,s=null){this.length=t;this.initialData=e;this.progressiveDone=i;this.contentDispositionFilename=s;this._rangeListeners=[];this._progressListeners=[];this._progressiveReadListeners=[];this._progressiveDoneListeners=[];this._readyCapability=Promise.withResolvers()}addRangeListener(t){this._rangeListeners.push(t)}addProgressListener(t){this._progressListeners.push(t)}addProgressiveReadListener(t){this._progressiveReadListeners.push(t)}addProgressiveDoneListener(t){this._progressiveDoneListeners.push(t)}onDataRange(t,e){for(const i of this._rangeListeners)i(t,e)}onDataProgress(t,e){this._readyCapability.promise.then((()=>{for(const i of this._progressListeners)i(t,e)}))}onDataProgressiveRead(t){this._readyCapability.promise.then((()=>{for(const e of this._progressiveReadListeners)e(t)}))}onDataProgressiveDone(){this._readyCapability.promise.then((()=>{for(const t of this._progressiveDoneListeners)t()}))}transportReady(){this._readyCapability.resolve()}requestDataRange(t,e){unreachable("Abstract method PDFDataRangeTransport.requestDataRange")}abort(){}}class PDFDocumentProxy{constructor(t,e){this._pdfInfo=t;this._transport=e}get annotationStorage(){return this._transport.annotationStorage}get filterFactory(){return this._transport.filterFactory}get numPages(){return this._pdfInfo.numPages}get fingerprints(){return this._pdfInfo.fingerprints}get isPureXfa(){return shadow(this,"isPureXfa",!!this._transport._htmlForXfa)}get allXfaHtml(){return this._transport._htmlForXfa}getPage(t){return this._transport.getPage(t)}getPageIndex(t){return this._transport.getPageIndex(t)}getDestinations(){return this._transport.getDestinations()}getDestination(t){return this._transport.getDestination(t)}getPageLabels(){return this._transport.getPageLabels()}getPageLayout(){return this._transport.getPageLayout()}getPageMode(){return this._transport.getPageMode()}getViewerPreferences(){return this._transport.getViewerPreferences()}getOpenAction(){return this._transport.getOpenAction()}getAttachments(){return this._transport.getAttachments()}getJSActions(){return this._transport.getDocJSActions()}getOutline(){return this._transport.getOutline()}getOptionalContentConfig({intent:t="display"}={}){const{renderingIntent:e}=this._transport.getRenderingIntent(t);return this._transport.getOptionalContentConfig(e)}getPermissions(){return this._transport.getPermissions()}getMetadata(){return this._transport.getMetadata()}getMarkInfo(){return this._transport.getMarkInfo()}getData(){return this._transport.getData()}saveDocument(){return this._transport.saveDocument()}getDownloadInfo(){return this._transport.downloadInfoCapability.promise}cleanup(t=!1){return this._transport.startCleanup(t||this.isPureXfa)}destroy(){return this.loadingTask.destroy()}cachedPageNumber(t){return this._transport.cachedPageNumber(t)}get loadingParams(){return this._transport.loadingParams}get loadingTask(){return this._transport.loadingTask}getFieldObjects(){return this._transport.getFieldObjects()}hasJSActions(){return this._transport.hasJSActions()}getCalculationOrderIds(){return this._transport.getCalculationOrderIds()}}class PDFPageProxy{#Hi=null;#Ui=!1;constructor(t,e,i,s=!1){this._pageIndex=t;this._pageInfo=e;this._transport=i;this._stats=s?new StatTimer:null;this._pdfBug=s;this.commonObjs=i.commonObjs;this.objs=new PDFObjects;this._maybeCleanupAfterRender=!1;this._intentStates=new Map;this.destroyed=!1}get pageNumber(){return this._pageIndex+1}get rotate(){return this._pageInfo.rotate}get ref(){return this._pageInfo.ref}get userUnit(){return this._pageInfo.userUnit}get view(){return this._pageInfo.view}getViewport({scale:t,rotation:e=this.rotate,offsetX:i=0,offsetY:s=0,dontFlip:n=!1}={}){return new PageViewport({viewBox:this.view,scale:t,rotation:e,offsetX:i,offsetY:s,dontFlip:n})}getAnnotations({intent:t="display"}={}){const{renderingIntent:e}=this._transport.getRenderingIntent(t);return this._transport.getAnnotations(this._pageIndex,e)}getJSActions(){return this._transport.getPageJSActions(this._pageIndex)}get filterFactory(){return this._transport.filterFactory}get isPureXfa(){return shadow(this,"isPureXfa",!!this._transport._htmlForXfa)}async getXfa(){return this._transport._htmlForXfa?.children[this._pageIndex]||null}render({canvasContext:t,viewport:e,intent:i="display",annotationMode:s=p.ENABLE,transform:n=null,background:a=null,optionalContentConfigPromise:r=null,annotationCanvasMap:l=null,pageColors:h=null,printAnnotationStorage:d=null,isEditing:c=!1}){this._stats?.time("Overall");const u=this._transport.getRenderingIntent(i,s,d,c),{renderingIntent:g,cacheKey:m}=u;this.#Ui=!1;this.#zi();r||=this._transport.getOptionalContentConfig(g);let f=this._intentStates.get(m);if(!f){f=Object.create(null);this._intentStates.set(m,f)}if(f.streamReaderCancelTimeout){clearTimeout(f.streamReaderCancelTimeout);f.streamReaderCancelTimeout=null}const b=!!(g&o);if(!f.displayReadyCapability){f.displayReadyCapability=Promise.withResolvers();f.operatorList={fnArray:[],argsArray:[],lastChunk:!1,separateAnnots:null};this._stats?.time("Page Request");this._pumpOperatorList(u)}const complete=t=>{f.renderTasks.delete(A);(this._maybeCleanupAfterRender||b)&&(this.#Ui=!0);this.#ji(!b);if(t){A.capability.reject(t);this._abortOperatorList({intentState:f,reason:t instanceof Error?t:new Error(t)})}else A.capability.resolve();if(this._stats){this._stats.timeEnd("Rendering");this._stats.timeEnd("Overall");globalThis.Stats?.enabled&&globalThis.Stats.add(this.pageNumber,this._stats)}},A=new InternalRenderTask({callback:complete,params:{canvasContext:t,viewport:e,transform:n,background:a},objs:this.objs,commonObjs:this.commonObjs,annotationCanvasMap:l,operatorList:f.operatorList,pageIndex:this._pageIndex,canvasFactory:this._transport.canvasFactory,filterFactory:this._transport.filterFactory,useRequestAnimationFrame:!b,pdfBug:this._pdfBug,pageColors:h});(f.renderTasks||=new Set).add(A);const v=A.task;Promise.all([f.displayReadyCapability.promise,r]).then((([t,e])=>{if(this.destroyed)complete();else{this._stats?.time("Rendering");if(!(e.renderingIntent&g))throw new Error("Must use the same `intent`-argument when calling the `PDFPageProxy.render` and `PDFDocumentProxy.getOptionalContentConfig` methods.");A.initializeGraphics({transparency:t,optionalContentConfig:e});A.operatorListChanged()}})).catch(complete);return v}getOperatorList({intent:t="display",annotationMode:e=p.ENABLE,printAnnotationStorage:i=null,isEditing:s=!1}={}){const n=this._transport.getRenderingIntent(t,e,i,s,!0);let a,r=this._intentStates.get(n.cacheKey);if(!r){r=Object.create(null);this._intentStates.set(n.cacheKey,r)}if(!r.opListReadCapability){a=Object.create(null);a.operatorListChanged=function operatorListChanged(){if(r.operatorList.lastChunk){r.opListReadCapability.resolve(r.operatorList);r.renderTasks.delete(a)}};r.opListReadCapability=Promise.withResolvers();(r.renderTasks||=new Set).add(a);r.operatorList={fnArray:[],argsArray:[],lastChunk:!1,separateAnnots:null};this._stats?.time("Page Request");this._pumpOperatorList(n)}return r.opListReadCapability.promise}streamTextContent({includeMarkedContent:t=!1,disableNormalization:e=!1}={}){return this._transport.messageHandler.sendWithStream("GetTextContent",{pageIndex:this._pageIndex,includeMarkedContent:!0===t,disableNormalization:!0===e},{highWaterMark:100,size:t=>t.items.length})}getTextContent(t={}){if(this._transport._htmlForXfa)return this.getXfa().then((t=>XfaText.textContent(t)));const e=this.streamTextContent(t);return new Promise((function(t,i){const s=e.getReader(),n={items:[],styles:Object.create(null),lang:null};!function pump(){s.read().then((function({value:e,done:i}){if(i)t(n);else{n.lang??=e.lang;Object.assign(n.styles,e.styles);n.items.push(...e.items);pump()}}),i)}()}))}getStructTree(){return this._transport.getStructTree(this._pageIndex)}_destroy(){this.destroyed=!0;const t=[];for(const e of this._intentStates.values()){this._abortOperatorList({intentState:e,reason:new Error("Page was destroyed."),force:!0});if(!e.opListReadCapability)for(const i of e.renderTasks){t.push(i.completed);i.cancel()}}this.objs.clear();this.#Ui=!1;this.#zi();return Promise.all(t)}cleanup(t=!1){this.#Ui=!0;const e=this.#ji(!1);t&&e&&(this._stats&&=new StatTimer);return e}#ji(t=!1){this.#zi();if(!this.#Ui||this.destroyed)return!1;if(t){this.#Hi=setTimeout((()=>{this.#Hi=null;this.#ji(!1)}),5e3);return!1}for(const{renderTasks:t,operatorList:e}of this._intentStates.values())if(t.size>0||!e.lastChunk)return!1;this._intentStates.clear();this.objs.clear();this.#Ui=!1;return!0}#zi(){if(this.#Hi){clearTimeout(this.#Hi);this.#Hi=null}}_startRenderPage(t,e){const i=this._intentStates.get(e);if(i){this._stats?.timeEnd("Page Request");i.displayReadyCapability?.resolve(t)}}_renderPageChunk(t,e){for(let i=0,s=t.length;i<s;i++){e.operatorList.fnArray.push(t.fnArray[i]);e.operatorList.argsArray.push(t.argsArray[i])}e.operatorList.lastChunk=t.lastChunk;e.operatorList.separateAnnots=t.separateAnnots;for(const t of e.renderTasks)t.operatorListChanged();t.lastChunk&&this.#ji(!0)}_pumpOperatorList({renderingIntent:t,cacheKey:e,annotationStorageSerializable:i,modifiedIds:s}){const{map:n,transfer:a}=i,r=this._transport.messageHandler.sendWithStream("GetOperatorList",{pageIndex:this._pageIndex,intent:t,cacheKey:e,annotationStorage:n,modifiedIds:s},a).getReader(),o=this._intentStates.get(e);o.streamReader=r;const pump=()=>{r.read().then((({value:t,done:e})=>{if(e)o.streamReader=null;else if(!this._transport.destroyed){this._renderPageChunk(t,o);pump()}}),(t=>{o.streamReader=null;if(!this._transport.destroyed){if(o.operatorList){o.operatorList.lastChunk=!0;for(const t of o.renderTasks)t.operatorListChanged();this.#ji(!0)}if(o.displayReadyCapability)o.displayReadyCapability.reject(t);else{if(!o.opListReadCapability)throw t;o.opListReadCapability.reject(t)}}}))};pump()}_abortOperatorList({intentState:t,reason:e,force:i=!1}){if(t.streamReader){if(t.streamReaderCancelTimeout){clearTimeout(t.streamReaderCancelTimeout);t.streamReaderCancelTimeout=null}if(!i){if(t.renderTasks.size>0)return;if(e instanceof RenderingCancelledException){let i=100;e.extraDelay>0&&e.extraDelay<1e3&&(i+=e.extraDelay);t.streamReaderCancelTimeout=setTimeout((()=>{t.streamReaderCancelTimeout=null;this._abortOperatorList({intentState:t,reason:e,force:!0})}),i);return}}t.streamReader.cancel(new AbortException(e.message)).catch((()=>{}));t.streamReader=null;if(!this._transport.destroyed){for(const[e,i]of this._intentStates)if(i===t){this._intentStates.delete(e);break}this.cleanup()}}}get stats(){return this._stats}}class LoopbackPort{#Wi=new Set;#$i=Promise.resolve();postMessage(t,e){const i={data:structuredClone(t,e?{transfer:e}:null)};this.#$i.then((()=>{for(const t of this.#Wi)t.call(this,i)}))}addEventListener(t,e){this.#Wi.add(e)}removeEventListener(t,e){this.#Wi.delete(e)}terminate(){this.#Wi.clear()}}class PDFWorker{static#Gi=0;static#Vi=!1;static#qi;static{if(e){this.#Vi=!0;GlobalWorkerOptions.workerSrc||="./pdf.worker.mjs"}this._isSameOrigin=(t,e)=>{let i;try{i=new URL(t);if(!i.origin||"null"===i.origin)return!1}catch{return!1}const s=new URL(e,i);return i.origin===s.origin};this._createCDNWrapper=t=>{const e=`await import("${t}");`;return URL.createObjectURL(new Blob([e],{type:"text/javascript"}))}}constructor({name:t=null,port:e=null,verbosity:i=getVerbosityLevel()}={}){this.name=t;this.destroyed=!1;this.verbosity=i;this._readyCapability=Promise.withResolvers();this._port=null;this._webWorker=null;this._messageHandler=null;if(e){if(PDFWorker.#qi?.has(e))throw new Error("Cannot use more than one PDFWorker per port.");(PDFWorker.#qi||=new WeakMap).set(e,this);this._initializeFromPort(e)}else this._initialize()}get promise(){return e?Promise.all([NodePackages.promise,this._readyCapability.promise]):this._readyCapability.promise}#Xi(){this._readyCapability.resolve();this._messageHandler.send("configure",{verbosity:this.verbosity})}get port(){return this._port}get messageHandler(){return this._messageHandler}_initializeFromPort(t){this._port=t;this._messageHandler=new MessageHandler("main","worker",t);this._messageHandler.on("ready",(function(){}));this.#Xi()}_initialize(){if(PDFWorker.#Vi||PDFWorker.#Ki){this._setupFakeWorker();return}let{workerSrc:t}=PDFWorker;try{PDFWorker._isSameOrigin(window.location.href,t)||(t=PDFWorker._createCDNWrapper(new URL(t,window.location).href));const e=new Worker(t,{type:"module"}),i=new MessageHandler("main","worker",e),terminateEarly=()=>{s.abort();i.destroy();e.terminate();this.destroyed?this._readyCapability.reject(new Error("Worker was destroyed")):this._setupFakeWorker()},s=new AbortController;e.addEventListener("error",(()=>{this._webWorker||terminateEarly()}),{signal:s.signal});i.on("test",(t=>{s.abort();if(!this.destroyed&&t){this._messageHandler=i;this._port=e;this._webWorker=e;this.#Xi()}else terminateEarly()}));i.on("ready",(t=>{s.abort();if(this.destroyed)terminateEarly();else try{sendTest()}catch{this._setupFakeWorker()}}));const sendTest=()=>{const t=new Uint8Array;i.send("test",t,[t.buffer])};sendTest();return}catch{info("The worker has been disabled.")}this._setupFakeWorker()}_setupFakeWorker(){if(!PDFWorker.#Vi){warn("Setting up fake worker.");PDFWorker.#Vi=!0}PDFWorker._setupFakeWorkerGlobal.then((t=>{if(this.destroyed){this._readyCapability.reject(new Error("Worker was destroyed"));return}const e=new LoopbackPort;this._port=e;const i="fake"+PDFWorker.#Gi++,s=new MessageHandler(i+"_worker",i,e);t.setup(s,e);this._messageHandler=new MessageHandler(i,i+"_worker",e);this.#Xi()})).catch((t=>{this._readyCapability.reject(new Error(`Setting up fake worker failed: "${t.message}".`))}))}destroy(){this.destroyed=!0;if(this._webWorker){this._webWorker.terminate();this._webWorker=null}PDFWorker.#qi?.delete(this._port);this._port=null;if(this._messageHandler){this._messageHandler.destroy();this._messageHandler=null}}static fromPort(t){if(!t?.port)throw new Error("PDFWorker.fromPort - invalid method signature.");const e=this.#qi?.get(t.port);if(e){if(e._pendingDestroy)throw new Error("PDFWorker.fromPort - the worker is being destroyed.\\nPlease remember to await `PDFDocumentLoadingTask.destroy()`-calls.");return e}return new PDFWorker(t)}static get workerSrc(){if(GlobalWorkerOptions.workerSrc)return GlobalWorkerOptions.workerSrc;throw new Error(\'No "GlobalWorkerOptions.workerSrc" specified.\')}static get#Ki(){try{return globalThis.pdfjsWorker?.WorkerMessageHandler||null}catch{return null}}static get _setupFakeWorkerGlobal(){return shadow(this,"_setupFakeWorkerGlobal",(async()=>{if(this.#Ki)return this.#Ki;return(await import(this.workerSrc)).WorkerMessageHandler})())}}class WorkerTransport{#Yi=new Map;#Qi=new Map;#Ji=new Map;#Zi=new Map;#ts=null;constructor(t,e,i,s,n){this.messageHandler=t;this.loadingTask=e;this.commonObjs=new PDFObjects;this.fontLoader=new FontLoader({ownerDocument:s.ownerDocument,styleElement:s.styleElement});this.loadingParams=s.loadingParams;this._params=s;this.canvasFactory=n.canvasFactory;this.filterFactory=n.filterFactory;this.cMapReaderFactory=n.cMapReaderFactory;this.standardFontDataFactory=n.standardFontDataFactory;this.destroyed=!1;this.destroyCapability=null;this._networkStream=i;this._fullReader=null;this._lastProgress=null;this.downloadInfoCapability=Promise.withResolvers();this.setupMessageHandler()}#es(t,e=null){const i=this.#Yi.get(t);if(i)return i;const s=this.messageHandler.sendWithPromise(t,e);this.#Yi.set(t,s);return s}get annotationStorage(){return shadow(this,"annotationStorage",new AnnotationStorage)}getRenderingIntent(t,e=p.ENABLE,i=null,s=!1,n=!1){let g=r,m=bt;switch(t){case"any":g=a;break;case"display":break;case"print":g=o;break;default:warn(`getRenderingIntent - invalid intent: ${t}`)}const f=g&o&&i instanceof PrintAnnotationStorage?i:this.annotationStorage;switch(e){case p.DISABLE:g+=d;break;case p.ENABLE:break;case p.ENABLE_FORMS:g+=l;break;case p.ENABLE_STORAGE:g+=h;m=f.serializable;break;default:warn(`getRenderingIntent - invalid annotationMode: ${e}`)}s&&(g+=c);n&&(g+=u);const{ids:b,hash:A}=f.modifiedIds;return{renderingIntent:g,cacheKey:[g,m.hash,A].join("_"),annotationStorageSerializable:m,modifiedIds:b}}destroy(){if(this.destroyCapability)return this.destroyCapability.promise;this.destroyed=!0;this.destroyCapability=Promise.withResolvers();this.#ts?.reject(new Error("Worker was destroyed during onPassword callback"));const t=[];for(const e of this.#Qi.values())t.push(e._destroy());this.#Qi.clear();this.#Ji.clear();this.#Zi.clear();this.hasOwnProperty("annotationStorage")&&this.annotationStorage.resetModified();const e=this.messageHandler.sendWithPromise("Terminate",null);t.push(e);Promise.all(t).then((()=>{this.commonObjs.clear();this.fontLoader.clear();this.#Yi.clear();this.filterFactory.destroy();TextLayer.cleanup();this._networkStream?.cancelAllRequests(new AbortException("Worker was terminated."));if(this.messageHandler){this.messageHandler.destroy();this.messageHandler=null}this.destroyCapability.resolve()}),this.destroyCapability.reject);return this.destroyCapability.promise}setupMessageHandler(){const{messageHandler:t,loadingTask:e}=this;t.on("GetReader",((t,e)=>{assert(this._networkStream,"GetReader - no `IPDFStream` instance available.");this._fullReader=this._networkStream.getFullReader();this._fullReader.onProgress=t=>{this._lastProgress={loaded:t.loaded,total:t.total}};e.onPull=()=>{this._fullReader.read().then((function({value:t,done:i}){if(i)e.close();else{assert(t instanceof ArrayBuffer,"GetReader - expected an ArrayBuffer.");e.enqueue(new Uint8Array(t),1,[t])}})).catch((t=>{e.error(t)}))};e.onCancel=t=>{this._fullReader.cancel(t);e.ready.catch((t=>{if(!this.destroyed)throw t}))}}));t.on("ReaderHeadersReady",(t=>{const i=Promise.withResolvers(),s=this._fullReader;s.headersReady.then((()=>{if(!s.isStreamingSupported||!s.isRangeSupported){this._lastProgress&&e.onProgress?.(this._lastProgress);s.onProgress=t=>{e.onProgress?.({loaded:t.loaded,total:t.total})}}i.resolve({isStreamingSupported:s.isStreamingSupported,isRangeSupported:s.isRangeSupported,contentLength:s.contentLength})}),i.reject);return i.promise}));t.on("GetRangeReader",((t,e)=>{assert(this._networkStream,"GetRangeReader - no `IPDFStream` instance available.");const i=this._networkStream.getRangeReader(t.begin,t.end);if(i){e.onPull=()=>{i.read().then((function({value:t,done:i}){if(i)e.close();else{assert(t instanceof ArrayBuffer,"GetRangeReader - expected an ArrayBuffer.");e.enqueue(new Uint8Array(t),1,[t])}})).catch((t=>{e.error(t)}))};e.onCancel=t=>{i.cancel(t);e.ready.catch((t=>{if(!this.destroyed)throw t}))}}else e.close()}));t.on("GetDoc",(({pdfInfo:t})=>{this._numPages=t.numPages;this._htmlForXfa=t.htmlForXfa;delete t.htmlForXfa;e._capability.resolve(new PDFDocumentProxy(t,this))}));t.on("DocException",(function(t){let i;switch(t.name){case"PasswordException":i=new PasswordException(t.message,t.code);break;case"InvalidPDFException":i=new InvalidPDFException(t.message);break;case"MissingPDFException":i=new MissingPDFException(t.message);break;case"UnexpectedResponseException":i=new UnexpectedResponseException(t.message,t.status);break;case"UnknownErrorException":i=new UnknownErrorException(t.message,t.details);break;default:unreachable("DocException - expected a valid Error.")}e._capability.reject(i)}));t.on("PasswordRequest",(t=>{this.#ts=Promise.withResolvers();if(e.onPassword){const updatePassword=t=>{t instanceof Error?this.#ts.reject(t):this.#ts.resolve({password:t})};try{e.onPassword(updatePassword,t.code)}catch(t){this.#ts.reject(t)}}else this.#ts.reject(new PasswordException(t.message,t.code));return this.#ts.promise}));t.on("DataLoaded",(t=>{e.onProgress?.({loaded:t.length,total:t.length});this.downloadInfoCapability.resolve(t)}));t.on("StartRenderPage",(t=>{if(this.destroyed)return;this.#Qi.get(t.pageIndex)._startRenderPage(t.transparency,t.cacheKey)}));t.on("commonobj",(([e,i,s])=>{if(this.destroyed)return null;if(this.commonObjs.has(e))return null;switch(i){case"Font":const{disableFontFace:n,fontExtraProperties:a,pdfBug:r}=this._params;if("error"in s){const t=s.error;warn(`Error during font loading: ${t}`);this.commonObjs.resolve(e,t);break}const o=r&&globalThis.FontInspector?.enabled?(t,e)=>globalThis.FontInspector.fontAdded(t,e):null,l=new FontFaceObject(s,{disableFontFace:n,inspectFont:o});this.fontLoader.bind(l).catch((()=>t.sendWithPromise("FontFallback",{id:e}))).finally((()=>{!a&&l.data&&(l.data=null);this.commonObjs.resolve(e,l)}));break;case"CopyLocalImage":const{imageRef:h}=s;assert(h,"The imageRef must be defined.");for(const t of this.#Qi.values())for(const[,i]of t.objs)if(i?.ref===h){if(!i.dataLen)return null;this.commonObjs.resolve(e,structuredClone(i));return i.dataLen}break;case"FontPath":case"Image":case"Pattern":this.commonObjs.resolve(e,s);break;default:throw new Error(`Got unknown common object type ${i}`)}return null}));t.on("obj",(([t,e,i,s])=>{if(this.destroyed)return;const n=this.#Qi.get(e);if(!n.objs.has(t))if(0!==n._intentStates.size)switch(i){case"Image":n.objs.resolve(t,s);s?.dataLen>1e7&&(n._maybeCleanupAfterRender=!0);break;case"Pattern":n.objs.resolve(t,s);break;default:throw new Error(`Got unknown object type ${i}`)}else s?.bitmap?.close()}));t.on("DocProgress",(t=>{this.destroyed||e.onProgress?.({loaded:t.loaded,total:t.total})}));t.on("FetchBuiltInCMap",(t=>this.destroyed?Promise.reject(new Error("Worker was destroyed.")):this.cMapReaderFactory?this.cMapReaderFactory.fetch(t):Promise.reject(new Error("CMapReaderFactory not initialized, see the `useWorkerFetch` parameter."))));t.on("FetchStandardFontData",(t=>this.destroyed?Promise.reject(new Error("Worker was destroyed.")):this.standardFontDataFactory?this.standardFontDataFactory.fetch(t):Promise.reject(new Error("StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter."))))}getData(){return this.messageHandler.sendWithPromise("GetData",null)}saveDocument(){this.annotationStorage.size<=0&&warn("saveDocument called while `annotationStorage` is empty, please use the getData-method instead.");const{map:t,transfer:e}=this.annotationStorage.serializable;return this.messageHandler.sendWithPromise("SaveDocument",{isPureXfa:!!this._htmlForXfa,numPages:this._numPages,annotationStorage:t,filename:this._fullReader?.filename??null},e).finally((()=>{this.annotationStorage.resetModified()}))}getPage(t){if(!Number.isInteger(t)||t<=0||t>this._numPages)return Promise.reject(new Error("Invalid page request."));const e=t-1,i=this.#Ji.get(e);if(i)return i;const s=this.messageHandler.sendWithPromise("GetPage",{pageIndex:e}).then((i=>{if(this.destroyed)throw new Error("Transport destroyed");i.refStr&&this.#Zi.set(i.refStr,t);const s=new PDFPageProxy(e,i,this,this._params.pdfBug);this.#Qi.set(e,s);return s}));this.#Ji.set(e,s);return s}getPageIndex(t){return isRefProxy(t)?this.messageHandler.sendWithPromise("GetPageIndex",{num:t.num,gen:t.gen}):Promise.reject(new Error("Invalid pageIndex request."))}getAnnotations(t,e){return this.messageHandler.sendWithPromise("GetAnnotations",{pageIndex:t,intent:e})}getFieldObjects(){return this.#es("GetFieldObjects")}hasJSActions(){return this.#es("HasJSActions")}getCalculationOrderIds(){return this.messageHandler.sendWithPromise("GetCalculationOrderIds",null)}getDestinations(){return this.messageHandler.sendWithPromise("GetDestinations",null)}getDestination(t){return"string"!=typeof t?Promise.reject(new Error("Invalid destination request.")):this.messageHandler.sendWithPromise("GetDestination",{id:t})}getPageLabels(){return this.messageHandler.sendWithPromise("GetPageLabels",null)}getPageLayout(){return this.messageHandler.sendWithPromise("GetPageLayout",null)}getPageMode(){return this.messageHandler.sendWithPromise("GetPageMode",null)}getViewerPreferences(){return this.messageHandler.sendWithPromise("GetViewerPreferences",null)}getOpenAction(){return this.messageHandler.sendWithPromise("GetOpenAction",null)}getAttachments(){return this.messageHandler.sendWithPromise("GetAttachments",null)}getDocJSActions(){return this.#es("GetDocJSActions")}getPageJSActions(t){return this.messageHandler.sendWithPromise("GetPageJSActions",{pageIndex:t})}getStructTree(t){return this.messageHandler.sendWithPromise("GetStructTree",{pageIndex:t})}getOutline(){return this.messageHandler.sendWithPromise("GetOutline",null)}getOptionalContentConfig(t){return this.#es("GetOptionalContentConfig").then((e=>new OptionalContentConfig(e,t)))}getPermissions(){return this.messageHandler.sendWithPromise("GetPermissions",null)}getMetadata(){const t="GetMetadata",e=this.#Yi.get(t);if(e)return e;const i=this.messageHandler.sendWithPromise(t,null).then((t=>({info:t[0],metadata:t[1]?new Metadata(t[1]):null,contentDispositionFilename:this._fullReader?.filename??null,contentLength:this._fullReader?.contentLength??null})));this.#Yi.set(t,i);return i}getMarkInfo(){return this.messageHandler.sendWithPromise("GetMarkInfo",null)}async startCleanup(t=!1){if(!this.destroyed){await this.messageHandler.sendWithPromise("Cleanup",null);for(const t of this.#Qi.values()){if(!t.cleanup())throw new Error(`startCleanup: Page ${t.pageNumber} is currently rendering.`)}this.commonObjs.clear();t||this.fontLoader.clear();this.#Yi.clear();this.filterFactory.destroy(!0);TextLayer.cleanup()}}cachedPageNumber(t){if(!isRefProxy(t))return null;const e=0===t.gen?`${t.num}R`:`${t.num}R${t.gen}`;return this.#Zi.get(e)??null}}const Xt=Symbol("INITIAL_DATA");class PDFObjects{#is=Object.create(null);#ss(t){return this.#is[t]||={...Promise.withResolvers(),data:Xt}}get(t,e=null){if(e){const i=this.#ss(t);i.promise.then((()=>e(i.data)));return null}const i=this.#is[t];if(!i||i.data===Xt)throw new Error(`Requesting object that isn\'t resolved yet ${t}.`);return i.data}has(t){const e=this.#is[t];return!!e&&e.data!==Xt}resolve(t,e=null){const i=this.#ss(t);i.data=e;i.resolve()}clear(){for(const t in this.#is){const{data:e}=this.#is[t];e?.bitmap?.close()}this.#is=Object.create(null)}*[Symbol.iterator](){for(const t in this.#is){const{data:e}=this.#is[t];e!==Xt&&(yield[t,e])}}}class RenderTask{#ns=null;constructor(t){this.#ns=t;this.onContinue=null}get promise(){return this.#ns.capability.promise}cancel(t=0){this.#ns.cancel(null,t)}get separateAnnots(){const{separateAnnots:t}=this.#ns.operatorList;if(!t)return!1;const{annotationCanvasMap:e}=this.#ns;return t.form||t.canvas&&e?.size>0}}class InternalRenderTask{#as=null;static#rs=new WeakSet;constructor({callback:t,params:e,objs:i,commonObjs:s,annotationCanvasMap:n,operatorList:a,pageIndex:r,canvasFactory:o,filterFactory:l,useRequestAnimationFrame:h=!1,pdfBug:d=!1,pageColors:c=null}){this.callback=t;this.params=e;this.objs=i;this.commonObjs=s;this.annotationCanvasMap=n;this.operatorListIdx=null;this.operatorList=a;this._pageIndex=r;this.canvasFactory=o;this.filterFactory=l;this._pdfBug=d;this.pageColors=c;this.running=!1;this.graphicsReadyCallback=null;this.graphicsReady=!1;this._useRequestAnimationFrame=!0===h&&"undefined"!=typeof window;this.cancelled=!1;this.capability=Promise.withResolvers();this.task=new RenderTask(this);this._cancelBound=this.cancel.bind(this);this._continueBound=this._continue.bind(this);this._scheduleNextBound=this._scheduleNext.bind(this);this._nextBound=this._next.bind(this);this._canvas=e.canvasContext.canvas}get completed(){return this.capability.promise.catch((function(){}))}initializeGraphics({transparency:t=!1,optionalContentConfig:e}){if(this.cancelled)return;if(this._canvas){if(InternalRenderTask.#rs.has(this._canvas))throw new Error("Cannot use the same canvas during multiple render() operations. Use different canvas or ensure previous operations were cancelled or completed.");InternalRenderTask.#rs.add(this._canvas)}if(this._pdfBug&&globalThis.StepperManager?.enabled){this.stepper=globalThis.StepperManager.create(this._pageIndex);this.stepper.init(this.operatorList);this.stepper.nextBreakPoint=this.stepper.getNextBreakPoint()}const{canvasContext:i,viewport:s,transform:n,background:a}=this.params;this.gfx=new CanvasGraphics(i,this.commonObjs,this.objs,this.canvasFactory,this.filterFactory,{optionalContentConfig:e},this.annotationCanvasMap,this.pageColors);this.gfx.beginDrawing({transform:n,viewport:s,transparency:t,background:a});this.operatorListIdx=0;this.graphicsReady=!0;this.graphicsReadyCallback?.()}cancel(t=null,e=0){this.running=!1;this.cancelled=!0;this.gfx?.endDrawing();if(this.#as){window.cancelAnimationFrame(this.#as);this.#as=null}InternalRenderTask.#rs.delete(this._canvas);this.callback(t||new RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex+1}`,e))}operatorListChanged(){if(this.graphicsReady){this.stepper?.updateOperatorList(this.operatorList);this.running||this._continue()}else this.graphicsReadyCallback||=this._continueBound}_continue(){this.running=!0;this.cancelled||(this.task.onContinue?this.task.onContinue(this._scheduleNextBound):this._scheduleNext())}_scheduleNext(){this._useRequestAnimationFrame?this.#as=window.requestAnimationFrame((()=>{this.#as=null;this._nextBound().catch(this._cancelBound)})):Promise.resolve().then(this._nextBound).catch(this._cancelBound)}async _next(){if(!this.cancelled){this.operatorListIdx=this.gfx.executeOperatorList(this.operatorList,this.operatorListIdx,this._continueBound,this.stepper);if(this.operatorListIdx===this.operatorList.argsArray.length){this.running=!1;if(this.operatorList.lastChunk){this.gfx.endDrawing();InternalRenderTask.#rs.delete(this._canvas);this.callback()}}}}}const Kt="4.6.64",Yt="87acda686";function makeColorComp(t){return Math.floor(255*Math.max(0,Math.min(1,t))).toString(16).padStart(2,"0")}function scaleAndClamp(t){return Math.max(0,Math.min(255,255*t))}class ColorConverters{static CMYK_G([t,e,i,s]){return["G",1-Math.min(1,.3*t+.59*i+.11*e+s)]}static G_CMYK([t]){return["CMYK",0,0,0,1-t]}static G_RGB([t]){return["RGB",t,t,t]}static G_rgb([t]){return[t=scaleAndClamp(t),t,t]}static G_HTML([t]){const e=makeColorComp(t);return`#${e}${e}${e}`}static RGB_G([t,e,i]){return["G",.3*t+.59*e+.11*i]}static RGB_rgb(t){return t.map(scaleAndClamp)}static RGB_HTML(t){return`#${t.map(makeColorComp).join("")}`}static T_HTML(){return"#00000000"}static T_rgb(){return[null]}static CMYK_RGB([t,e,i,s]){return["RGB",1-Math.min(1,t+s),1-Math.min(1,i+s),1-Math.min(1,e+s)]}static CMYK_rgb([t,e,i,s]){return[scaleAndClamp(1-Math.min(1,t+s)),scaleAndClamp(1-Math.min(1,i+s)),scaleAndClamp(1-Math.min(1,e+s))]}static CMYK_HTML(t){const e=this.CMYK_RGB(t).slice(1);return this.RGB_HTML(e)}static RGB_CMYK([t,e,i]){const s=1-t,n=1-e,a=1-i;return["CMYK",s,n,a,Math.min(s,n,a)]}}class XfaLayer{static setupStorage(t,e,i,s,n){const a=s.getValue(e,{value:null});switch(i.name){case"textarea":null!==a.value&&(t.textContent=a.value);if("print"===n)break;t.addEventListener("input",(t=>{s.setValue(e,{value:t.target.value})}));break;case"input":if("radio"===i.attributes.type||"checkbox"===i.attributes.type){a.value===i.attributes.xfaOn?t.setAttribute("checked",!0):a.value===i.attributes.xfaOff&&t.removeAttribute("checked");if("print"===n)break;t.addEventListener("change",(t=>{s.setValue(e,{value:t.target.checked?t.target.getAttribute("xfaOn"):t.target.getAttribute("xfaOff")})}))}else{null!==a.value&&t.setAttribute("value",a.value);if("print"===n)break;t.addEventListener("input",(t=>{s.setValue(e,{value:t.target.value})}))}break;case"select":if(null!==a.value){t.setAttribute("value",a.value);for(const t of i.children)t.attributes.value===a.value?t.attributes.selected=!0:t.attributes.hasOwnProperty("selected")&&delete t.attributes.selected}t.addEventListener("input",(t=>{const i=t.target.options,n=-1===i.selectedIndex?"":i[i.selectedIndex].value;s.setValue(e,{value:n})}))}}static setAttributes({html:t,element:e,storage:i=null,intent:s,linkService:n}){const{attributes:a}=e,r=t instanceof HTMLAnchorElement;"radio"===a.type&&(a.name=`${a.name}-${s}`);for(const[e,i]of Object.entries(a))if(null!=i)switch(e){case"class":i.length&&t.setAttribute(e,i.join(" "));break;case"dataId":break;case"id":t.setAttribute("data-element-id",i);break;case"style":Object.assign(t.style,i);break;case"textContent":t.textContent=i;break;default:(!r||"href"!==e&&"newWindow"!==e)&&t.setAttribute(e,i)}r&&n.addLinkAttributes(t,a.href,a.newWindow);i&&a.dataId&&this.setupStorage(t,a.dataId,e,i)}static render(t){const e=t.annotationStorage,i=t.linkService,s=t.xfaHtml,n=t.intent||"display",a=document.createElement(s.name);s.attributes&&this.setAttributes({html:a,element:s,intent:n,linkService:i});const r="richText"!==n,o=t.div;o.append(a);if(t.viewport){const e=`matrix(${t.viewport.transform.join(",")})`;o.style.transform=e}r&&o.setAttribute("class","xfaLayer xfaFont");const l=[];if(0===s.children.length){if(s.value){const t=document.createTextNode(s.value);a.append(t);r&&XfaText.shouldBuildText(s.name)&&l.push(t)}return{textDivs:l}}const h=[[s,-1,a]];for(;h.length>0;){const[t,s,a]=h.at(-1);if(s+1===t.children.length){h.pop();continue}const o=t.children[++h.at(-1)[1]];if(null===o)continue;const{name:d}=o;if("#text"===d){const t=document.createTextNode(o.value);l.push(t);a.append(t);continue}const c=o?.attributes?.xmlns?document.createElementNS(o.attributes.xmlns,d):document.createElement(d);a.append(c);o.attributes&&this.setAttributes({html:c,element:o,storage:e,intent:n,linkService:i});if(o.children?.length>0)h.push([o,-1,c]);else if(o.value){const t=document.createTextNode(o.value);r&&XfaText.shouldBuildText(d)&&l.push(t);c.append(t)}}for(const t of o.querySelectorAll(".xfaNonInteractive input, .xfaNonInteractive textarea"))t.setAttribute("readOnly",!0);return{textDivs:l}}static update(t){const e=`matrix(${t.viewport.transform.join(",")})`;t.div.style.transform=e;t.div.hidden=!1}}const Qt=1e3,Jt=new WeakSet;function getRectDims(t){return{width:t[2]-t[0],height:t[3]-t[1]}}class AnnotationElementFactory{static create(t){switch(t.data.annotationType){case C:return new LinkAnnotationElement(t);case E:return new TextAnnotationElement(t);case z:switch(t.data.fieldType){case"Tx":return new TextWidgetAnnotationElement(t);case"Btn":return t.data.radioButton?new RadioButtonWidgetAnnotationElement(t):t.data.checkBox?new CheckboxWidgetAnnotationElement(t):new PushButtonWidgetAnnotationElement(t);case"Ch":return new ChoiceWidgetAnnotationElement(t);case"Sig":return new SignatureWidgetAnnotationElement(t)}return new WidgetAnnotationElement(t);case H:return new PopupAnnotationElement(t);case S:return new FreeTextAnnotationElement(t);case T:return new LineAnnotationElement(t);case M:return new SquareAnnotationElement(t);case k:return new CircleAnnotationElement(t);case F:return new PolylineAnnotationElement(t);case O:return new CaretAnnotationElement(t);case B:return new InkAnnotationElement(t);case P:return new PolygonAnnotationElement(t);case D:return new HighlightAnnotationElement(t);case R:return new UnderlineAnnotationElement(t);case I:return new SquigglyAnnotationElement(t);case L:return new StrikeOutAnnotationElement(t);case N:return new StampAnnotationElement(t);case U:return new FileAttachmentAnnotationElement(t);default:return new AnnotationElement(t)}}}class AnnotationElement{#os=null;#ls=!1;#hs=null;constructor(t,{isRenderable:e=!1,ignoreBorder:i=!1,createQuadrilaterals:s=!1}={}){this.isRenderable=e;this.data=t.data;this.layer=t.layer;this.linkService=t.linkService;this.downloadManager=t.downloadManager;this.imageResourcesPath=t.imageResourcesPath;this.renderForms=t.renderForms;this.svgFactory=t.svgFactory;this.annotationStorage=t.annotationStorage;this.enableScripting=t.enableScripting;this.hasJSActions=t.hasJSActions;this._fieldObjects=t.fieldObjects;this.parent=t.parent;e&&(this.container=this._createContainer(i));s&&this._createQuadrilaterals()}static _hasPopupData({titleObj:t,contentsObj:e,richText:i}){return!!(t?.str||e?.str||i?.str)}get _isEditable(){return this.data.isEditable}get hasPopupData(){return AnnotationElement._hasPopupData(this.data)}updateEdited(t){if(!this.container)return;this.#os||={rect:this.data.rect.slice(0)};const{rect:e}=t;e&&this.#ds(e);this.#hs?.popup.updateEdited(t)}resetEdited(){if(this.#os){this.#ds(this.#os.rect);this.#hs?.popup.resetEdited();this.#os=null}}#ds(t){const{container:{style:e},data:{rect:i,rotation:s},parent:{viewport:{rawDims:{pageWidth:n,pageHeight:a,pageX:r,pageY:o}}}}=this;i?.splice(0,4,...t);const{width:l,height:h}=getRectDims(t);e.left=100*(t[0]-r)/n+"%";e.top=100*(a-t[3]+o)/a+"%";if(0===s){e.width=100*l/n+"%";e.height=100*h/a+"%"}else this.setRotation(s)}_createContainer(t){const{data:e,parent:{page:i,viewport:s}}=this,n=document.createElement("section");n.setAttribute("data-annotation-id",e.id);this instanceof WidgetAnnotationElement||(n.tabIndex=Qt);const{style:a}=n;a.zIndex=this.parent.zIndex++;e.popupRef&&n.setAttribute("aria-haspopup","dialog");e.alternativeText&&(n.title=e.alternativeText);e.noRotate&&n.classList.add("norotate");if(!e.rect||this instanceof PopupAnnotationElement){const{rotation:t}=e;e.hasOwnCanvas||0===t||this.setRotation(t,n);return n}const{width:r,height:o}=getRectDims(e.rect);if(!t&&e.borderStyle.width>0){a.borderWidth=`${e.borderStyle.width}px`;const t=e.borderStyle.horizontalCornerRadius,i=e.borderStyle.verticalCornerRadius;if(t>0||i>0){const e=`calc(${t}px * var(--scale-factor)) / calc(${i}px * var(--scale-factor))`;a.borderRadius=e}else if(this instanceof RadioButtonWidgetAnnotationElement){const t=`calc(${r}px * var(--scale-factor)) / calc(${o}px * var(--scale-factor))`;a.borderRadius=t}switch(e.borderStyle.style){case j:a.borderStyle="solid";break;case W:a.borderStyle="dashed";break;case $:warn("Unimplemented border style: beveled");break;case G:warn("Unimplemented border style: inset");break;case V:a.borderBottomStyle="solid"}const s=e.borderColor||null;if(s){this.#ls=!0;a.borderColor=Util.makeHexColor(0|s[0],0|s[1],0|s[2])}else a.borderWidth=0}const l=Util.normalizeRect([e.rect[0],i.view[3]-e.rect[1]+i.view[1],e.rect[2],i.view[3]-e.rect[3]+i.view[1]]),{pageWidth:h,pageHeight:d,pageX:c,pageY:u}=s.rawDims;a.left=100*(l[0]-c)/h+"%";a.top=100*(l[1]-u)/d+"%";const{rotation:p}=e;if(e.hasOwnCanvas||0===p){a.width=100*r/h+"%";a.height=100*o/d+"%"}else this.setRotation(p,n);return n}setRotation(t,e=this.container){if(!this.data.rect)return;const{pageWidth:i,pageHeight:s}=this.parent.viewport.rawDims,{width:n,height:a}=getRectDims(this.data.rect);let r,o;if(t%180==0){r=100*n/i;o=100*a/s}else{r=100*a/i;o=100*n/s}e.style.width=`${r}%`;e.style.height=`${o}%`;e.setAttribute("data-main-rotation",(360-t)%360)}get _commonActions(){const setColor=(t,e,i)=>{const s=i.detail[t],n=s[0],a=s.slice(1);i.target.style[e]=ColorConverters[`${n}_HTML`](a);this.annotationStorage.setValue(this.data.id,{[e]:ColorConverters[`${n}_rgb`](a)})};return shadow(this,"_commonActions",{display:t=>{const{display:e}=t.detail,i=e%2==1;this.container.style.visibility=i?"hidden":"visible";this.annotationStorage.setValue(this.data.id,{noView:i,noPrint:1===e||2===e})},print:t=>{this.annotationStorage.setValue(this.data.id,{noPrint:!t.detail.print})},hidden:t=>{const{hidden:e}=t.detail;this.container.style.visibility=e?"hidden":"visible";this.annotationStorage.setValue(this.data.id,{noPrint:e,noView:e})},focus:t=>{setTimeout((()=>t.target.focus({preventScroll:!1})),0)},userName:t=>{t.target.title=t.detail.userName},readonly:t=>{t.target.disabled=t.detail.readonly},required:t=>{this._setRequired(t.target,t.detail.required)},bgColor:t=>{setColor("bgColor","backgroundColor",t)},fillColor:t=>{setColor("fillColor","backgroundColor",t)},fgColor:t=>{setColor("fgColor","color",t)},textColor:t=>{setColor("textColor","color",t)},borderColor:t=>{setColor("borderColor","borderColor",t)},strokeColor:t=>{setColor("strokeColor","borderColor",t)},rotation:t=>{const e=t.detail.rotation;this.setRotation(e);this.annotationStorage.setValue(this.data.id,{rotation:e})}})}_dispatchEventFromSandbox(t,e){const i=this._commonActions;for(const s of Object.keys(e.detail)){const n=t[s]||i[s];n?.(e)}}_setDefaultPropertiesFromJS(t){if(!this.enableScripting)return;const e=this.annotationStorage.getRawValue(this.data.id);if(!e)return;const i=this._commonActions;for(const[s,n]of Object.entries(e)){const a=i[s];if(a){a({detail:{[s]:n},target:t});delete e[s]}}}_createQuadrilaterals(){if(!this.container)return;const{quadPoints:t}=this.data;if(!t)return;const[e,i,s,n]=this.data.rect.map((t=>Math.fround(t)));if(8===t.length){const[a,r,o,l]=t.subarray(2,6);if(s===a&&n===r&&e===o&&i===l)return}const{style:a}=this.container;let r;if(this.#ls){const{borderColor:t,borderWidth:e}=a;a.borderWidth=0;r=["url(\'data:image/svg+xml;utf8,",\'<svg xmlns="http://www.w3.org/2000/svg"\',\' preserveAspectRatio="none" viewBox="0 0 1 1">\',`<g fill="transparent" stroke="${t}" stroke-width="${e}">`];this.container.classList.add("hasBorder")}const o=s-e,l=n-i,{svgFactory:h}=this,d=h.createElement("svg");d.classList.add("quadrilateralsContainer");d.setAttribute("width",0);d.setAttribute("height",0);const c=h.createElement("defs");d.append(c);const u=h.createElement("clipPath"),p=`clippath_${this.data.id}`;u.setAttribute("id",p);u.setAttribute("clipPathUnits","objectBoundingBox");c.append(u);for(let i=2,s=t.length;i<s;i+=8){const s=t[i],a=t[i+1],d=t[i+2],c=t[i+3],p=h.createElement("rect"),g=(d-e)/o,m=(n-a)/l,f=(s-d)/o,b=(a-c)/l;p.setAttribute("x",g);p.setAttribute("y",m);p.setAttribute("width",f);p.setAttribute("height",b);u.append(p);r?.push(`<rect vector-effect="non-scaling-stroke" x="${g}" y="${m}" width="${f}" height="${b}"/>`)}if(this.#ls){r.push("</g></svg>\')");a.backgroundImage=r.join("")}this.container.append(d);this.container.style.clipPath=`url(#${p})`}_createPopup(){const{container:t,data:e}=this;t.setAttribute("aria-haspopup","dialog");const i=this.#hs=new PopupAnnotationElement({data:{color:e.color,titleObj:e.titleObj,modificationDate:e.modificationDate,contentsObj:e.contentsObj,richText:e.richText,parentRect:e.rect,borderStyle:0,id:`popup_${e.id}`,rotation:e.rotation},parent:this.parent,elements:[this]});this.parent.div.append(i.render())}render(){unreachable("Abstract method `AnnotationElement.render` called")}_getElementsByName(t,e=null){const i=[];if(this._fieldObjects){const s=this._fieldObjects[t];if(s)for(const{page:t,id:n,exportValues:a}of s){if(-1===t)continue;if(n===e)continue;const s="string"==typeof a?a:null,r=document.querySelector(`[data-element-id="${n}"]`);!r||Jt.has(r)?i.push({id:n,exportValue:s,domElement:r}):warn(`_getElementsByName - element not allowed: ${n}`)}return i}for(const s of document.getElementsByName(t)){const{exportValue:t}=s,n=s.getAttribute("data-element-id");n!==e&&(Jt.has(s)&&i.push({id:n,exportValue:t,domElement:s}))}return i}show(){this.container&&(this.container.hidden=!1);this.popup?.maybeShow()}hide(){this.container&&(this.container.hidden=!0);this.popup?.forceHide()}getElementsToTriggerPopup(){return this.container}addHighlightArea(){const t=this.getElementsToTriggerPopup();if(Array.isArray(t))for(const e of t)e.classList.add("highlightArea");else t.classList.add("highlightArea")}_editOnDoubleClick(){if(!this._isEditable)return;const{annotationEditorType:t,data:{id:e}}=this;this.container.addEventListener("dblclick",(()=>{this.linkService.eventBus?.dispatch("switchannotationeditormode",{source:this,mode:t,editId:e})}))}}class LinkAnnotationElement extends AnnotationElement{constructor(t,e=null){super(t,{isRenderable:!0,ignoreBorder:!!e?.ignoreBorder,createQuadrilaterals:!0});this.isTooltipOnly=t.data.isTooltipOnly}render(){const{data:t,linkService:e}=this,i=document.createElement("a");i.setAttribute("data-element-id",t.id);let s=!1;if(t.url){e.addLinkAttributes(i,t.url,t.newWindow);s=!0}else if(t.action){this._bindNamedAction(i,t.action);s=!0}else if(t.attachment){this.#cs(i,t.attachment,t.attachmentDest);s=!0}else if(t.setOCGState){this.#us(i,t.setOCGState);s=!0}else if(t.dest){this._bindLink(i,t.dest);s=!0}else{if(t.actions&&(t.actions.Action||t.actions["Mouse Up"]||t.actions["Mouse Down"])&&this.enableScripting&&this.hasJSActions){this._bindJSAction(i,t);s=!0}if(t.resetForm){this._bindResetFormAction(i,t.resetForm);s=!0}else if(this.isTooltipOnly&&!s){this._bindLink(i,"");s=!0}}this.container.classList.add("linkAnnotation");s&&this.container.append(i);return this.container}#ps(){this.container.setAttribute("data-internal-link","")}_bindLink(t,e){t.href=this.linkService.getDestinationHash(e);t.onclick=()=>{e&&this.linkService.goToDestination(e);return!1};(e||""===e)&&this.#ps()}_bindNamedAction(t,e){t.href=this.linkService.getAnchorUrl("");t.onclick=()=>{this.linkService.executeNamedAction(e);return!1};this.#ps()}#cs(t,e,i=null){t.href=this.linkService.getAnchorUrl("");e.description&&(t.title=e.description);t.onclick=()=>{this.downloadManager?.openOrDownloadData(e.content,e.filename,i);return!1};this.#ps()}#us(t,e){t.href=this.linkService.getAnchorUrl("");t.onclick=()=>{this.linkService.executeSetOCGState(e);return!1};this.#ps()}_bindJSAction(t,e){t.href=this.linkService.getAnchorUrl("");const i=new Map([["Action","onclick"],["Mouse Up","onmouseup"],["Mouse Down","onmousedown"]]);for(const s of Object.keys(e.actions)){const n=i.get(s);n&&(t[n]=()=>{this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:e.id,name:s}});return!1})}t.onclick||(t.onclick=()=>!1);this.#ps()}_bindResetFormAction(t,e){const i=t.onclick;i||(t.href=this.linkService.getAnchorUrl(""));this.#ps();if(this._fieldObjects)t.onclick=()=>{i?.();const{fields:t,refs:s,include:n}=e,a=[];if(0!==t.length||0!==s.length){const e=new Set(s);for(const i of t){const t=this._fieldObjects[i]||[];for(const{id:i}of t)e.add(i)}for(const t of Object.values(this._fieldObjects))for(const i of t)e.has(i.id)===n&&a.push(i)}else for(const t of Object.values(this._fieldObjects))a.push(...t);const r=this.annotationStorage,o=[];for(const t of a){const{id:e}=t;o.push(e);switch(t.type){case"text":{const i=t.defaultValue||"";r.setValue(e,{value:i});break}case"checkbox":case"radiobutton":{const i=t.defaultValue===t.exportValues;r.setValue(e,{value:i});break}case"combobox":case"listbox":{const i=t.defaultValue||"";r.setValue(e,{value:i});break}default:continue}const i=document.querySelector(`[data-element-id="${e}"]`);i&&(Jt.has(i)?i.dispatchEvent(new Event("resetform")):warn(`_bindResetFormAction - element not allowed: ${e}`))}this.enableScripting&&this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:"app",ids:o,name:"ResetForm"}});return!1};else{warn(\'_bindResetFormAction - "resetForm" action not supported, ensure that the `fieldObjects` parameter is provided.\');i||(t.onclick=()=>!1)}}}class TextAnnotationElement extends AnnotationElement{constructor(t){super(t,{isRenderable:!0})}render(){this.container.classList.add("textAnnotation");const t=document.createElement("img");t.src=this.imageResourcesPath+"annotation-"+this.data.name.toLowerCase()+".svg";t.setAttribute("data-l10n-id","pdfjs-text-annotation-type");t.setAttribute("data-l10n-args",JSON.stringify({type:this.data.name}));!this.data.popupRef&&this.hasPopupData&&this._createPopup();this.container.append(t);return this.container}}class WidgetAnnotationElement extends AnnotationElement{render(){return this.container}showElementAndHideCanvas(t){if(this.data.hasOwnCanvas){"CANVAS"===t.previousSibling?.nodeName&&(t.previousSibling.hidden=!0);t.hidden=!1}}_getKeyModifier(t){return util_FeatureTest.platform.isMac?t.metaKey:t.ctrlKey}_setEventListener(t,e,i,s,n){i.includes("mouse")?t.addEventListener(i,(t=>{this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:this.data.id,name:s,value:n(t),shift:t.shiftKey,modifier:this._getKeyModifier(t)}})})):t.addEventListener(i,(t=>{if("blur"===i){if(!e.focused||!t.relatedTarget)return;e.focused=!1}else if("focus"===i){if(e.focused)return;e.focused=!0}n&&this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:this.data.id,name:s,value:n(t)}})}))}_setEventListeners(t,e,i,s){for(const[n,a]of i)if("Action"===a||this.data.actions?.[a]){"Focus"!==a&&"Blur"!==a||(e||={focused:!1});this._setEventListener(t,e,n,a,s);"Focus"!==a||this.data.actions?.Blur?"Blur"!==a||this.data.actions?.Focus||this._setEventListener(t,e,"focus","Focus",null):this._setEventListener(t,e,"blur","Blur",null)}}_setBackgroundColor(t){const e=this.data.backgroundColor||null;t.style.backgroundColor=null===e?"transparent":Util.makeHexColor(e[0],e[1],e[2])}_setTextStyle(t){const e=["left","center","right"],{fontColor:i}=this.data.defaultAppearanceData,s=this.data.defaultAppearanceData.fontSize||9,a=t.style;let r;const roundToOneDecimal=t=>Math.round(10*t)/10;if(this.data.multiLine){const t=Math.abs(this.data.rect[3]-this.data.rect[1]-2),e=t/(Math.round(t/(n*s))||1);r=Math.min(s,roundToOneDecimal(e/n))}else{const t=Math.abs(this.data.rect[3]-this.data.rect[1]-2);r=Math.min(s,roundToOneDecimal(t/n))}a.fontSize=`calc(${r}px * var(--scale-factor))`;a.color=Util.makeHexColor(i[0],i[1],i[2]);null!==this.data.textAlignment&&(a.textAlign=e[this.data.textAlignment])}_setRequired(t,e){e?t.setAttribute("required",!0):t.removeAttribute("required");t.setAttribute("aria-required",e)}}class TextWidgetAnnotationElement extends WidgetAnnotationElement{constructor(t){super(t,{isRenderable:t.renderForms||t.data.hasOwnCanvas||!t.data.hasAppearance&&!!t.data.fieldValue})}setPropertyOnSiblings(t,e,i,s){const n=this.annotationStorage;for(const a of this._getElementsByName(t.name,t.id)){a.domElement&&(a.domElement[e]=i);n.setValue(a.id,{[s]:i})}}render(){const t=this.annotationStorage,e=this.data.id;this.container.classList.add("textWidgetAnnotation");let i=null;if(this.renderForms){const s=t.getValue(e,{value:this.data.fieldValue});let n=s.value||"";const a=t.getValue(e,{charLimit:this.data.maxLen}).charLimit;a&&n.length>a&&(n=n.slice(0,a));let r=s.formattedValue||this.data.textContent?.join("\\n")||null;r&&this.data.comb&&(r=r.replaceAll(/\\s+/g,""));const o={userValue:n,formattedValue:r,lastCommittedValue:null,commitKey:1,focused:!1};if(this.data.multiLine){i=document.createElement("textarea");i.textContent=r??n;this.data.doNotScroll&&(i.style.overflowY="hidden")}else{i=document.createElement("input");i.type="text";i.setAttribute("value",r??n);this.data.doNotScroll&&(i.style.overflowX="hidden")}this.data.hasOwnCanvas&&(i.hidden=!0);Jt.add(i);i.setAttribute("data-element-id",e);i.disabled=this.data.readOnly;i.name=this.data.fieldName;i.tabIndex=Qt;this._setRequired(i,this.data.required);a&&(i.maxLength=a);i.addEventListener("input",(s=>{t.setValue(e,{value:s.target.value});this.setPropertyOnSiblings(i,"value",s.target.value,"value");o.formattedValue=null}));i.addEventListener("resetform",(t=>{const e=this.data.defaultFieldValue??"";i.value=o.userValue=e;o.formattedValue=null}));let blurListener=t=>{const{formattedValue:e}=o;null!=e&&(t.target.value=e);t.target.scrollLeft=0};if(this.enableScripting&&this.hasJSActions){i.addEventListener("focus",(t=>{if(o.focused)return;const{target:e}=t;o.userValue&&(e.value=o.userValue);o.lastCommittedValue=e.value;o.commitKey=1;this.data.actions?.Focus||(o.focused=!0)}));i.addEventListener("updatefromsandbox",(i=>{this.showElementAndHideCanvas(i.target);const s={value(i){o.userValue=i.detail.value??"";t.setValue(e,{value:o.userValue.toString()});i.target.value=o.userValue},formattedValue(i){const{formattedValue:s}=i.detail;o.formattedValue=s;null!=s&&i.target!==document.activeElement&&(i.target.value=s);t.setValue(e,{formattedValue:s})},selRange(t){t.target.setSelectionRange(...t.detail.selRange)},charLimit:i=>{const{charLimit:s}=i.detail,{target:n}=i;if(0===s){n.removeAttribute("maxLength");return}n.setAttribute("maxLength",s);let a=o.userValue;if(a&&!(a.length<=s)){a=a.slice(0,s);n.value=o.userValue=a;t.setValue(e,{value:a});this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:e,name:"Keystroke",value:a,willCommit:!0,commitKey:1,selStart:n.selectionStart,selEnd:n.selectionEnd}})}}};this._dispatchEventFromSandbox(s,i)}));i.addEventListener("keydown",(t=>{o.commitKey=1;let i=-1;"Escape"===t.key?i=0:"Enter"!==t.key||this.data.multiLine?"Tab"===t.key&&(o.commitKey=3):i=2;if(-1===i)return;const{value:s}=t.target;if(o.lastCommittedValue!==s){o.lastCommittedValue=s;o.userValue=s;this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:e,name:"Keystroke",value:s,willCommit:!0,commitKey:i,selStart:t.target.selectionStart,selEnd:t.target.selectionEnd}})}}));const s=blurListener;blurListener=null;i.addEventListener("blur",(t=>{if(!o.focused||!t.relatedTarget)return;this.data.actions?.Blur||(o.focused=!1);const{value:i}=t.target;o.userValue=i;o.lastCommittedValue!==i&&this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:e,name:"Keystroke",value:i,willCommit:!0,commitKey:o.commitKey,selStart:t.target.selectionStart,selEnd:t.target.selectionEnd}});s(t)}));this.data.actions?.Keystroke&&i.addEventListener("beforeinput",(t=>{o.lastCommittedValue=null;const{data:i,target:s}=t,{value:n,selectionStart:a,selectionEnd:r}=s;let l=a,h=r;switch(t.inputType){case"deleteWordBackward":{const t=n.substring(0,a).match(/\\w*[^\\w]*$/);t&&(l-=t[0].length);break}case"deleteWordForward":{const t=n.substring(a).match(/^[^\\w]*\\w*/);t&&(h+=t[0].length);break}case"deleteContentBackward":a===r&&(l-=1);break;case"deleteContentForward":a===r&&(h+=1)}t.preventDefault();this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:e,name:"Keystroke",value:n,change:i||"",willCommit:!1,selStart:l,selEnd:h}})}));this._setEventListeners(i,o,[["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],(t=>t.target.value))}blurListener&&i.addEventListener("blur",blurListener);if(this.data.comb){const t=(this.data.rect[2]-this.data.rect[0])/a;i.classList.add("comb");i.style.letterSpacing=`calc(${t}px * var(--scale-factor) - 1ch)`}}else{i=document.createElement("div");i.textContent=this.data.fieldValue;i.style.verticalAlign="middle";i.style.display="table-cell";this.data.hasOwnCanvas&&(i.hidden=!0)}this._setTextStyle(i);this._setBackgroundColor(i);this._setDefaultPropertiesFromJS(i);this.container.append(i);return this.container}}class SignatureWidgetAnnotationElement extends WidgetAnnotationElement{constructor(t){super(t,{isRenderable:!!t.data.hasOwnCanvas})}}class CheckboxWidgetAnnotationElement extends WidgetAnnotationElement{constructor(t){super(t,{isRenderable:t.renderForms})}render(){const t=this.annotationStorage,e=this.data,i=e.id;let s=t.getValue(i,{value:e.exportValue===e.fieldValue}).value;if("string"==typeof s){s="Off"!==s;t.setValue(i,{value:s})}this.container.classList.add("buttonWidgetAnnotation","checkBox");const n=document.createElement("input");Jt.add(n);n.setAttribute("data-element-id",i);n.disabled=e.readOnly;this._setRequired(n,this.data.required);n.type="checkbox";n.name=e.fieldName;s&&n.setAttribute("checked",!0);n.setAttribute("exportValue",e.exportValue);n.tabIndex=Qt;n.addEventListener("change",(s=>{const{name:n,checked:a}=s.target;for(const s of this._getElementsByName(n,i)){const i=a&&s.exportValue===e.exportValue;s.domElement&&(s.domElement.checked=i);t.setValue(s.id,{value:i})}t.setValue(i,{value:a})}));n.addEventListener("resetform",(t=>{const i=e.defaultFieldValue||"Off";t.target.checked=i===e.exportValue}));if(this.enableScripting&&this.hasJSActions){n.addEventListener("updatefromsandbox",(e=>{const s={value(e){e.target.checked="Off"!==e.detail.value;t.setValue(i,{value:e.target.checked})}};this._dispatchEventFromSandbox(s,e)}));this._setEventListeners(n,null,[["change","Validate"],["change","Action"],["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],(t=>t.target.checked))}this._setBackgroundColor(n);this._setDefaultPropertiesFromJS(n);this.container.append(n);return this.container}}class RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement{constructor(t){super(t,{isRenderable:t.renderForms})}render(){this.container.classList.add("buttonWidgetAnnotation","radioButton");const t=this.annotationStorage,e=this.data,i=e.id;let s=t.getValue(i,{value:e.fieldValue===e.buttonValue}).value;if("string"==typeof s){s=s!==e.buttonValue;t.setValue(i,{value:s})}if(s)for(const s of this._getElementsByName(e.fieldName,i))t.setValue(s.id,{value:!1});const n=document.createElement("input");Jt.add(n);n.setAttribute("data-element-id",i);n.disabled=e.readOnly;this._setRequired(n,this.data.required);n.type="radio";n.name=e.fieldName;s&&n.setAttribute("checked",!0);n.tabIndex=Qt;n.addEventListener("change",(e=>{const{name:s,checked:n}=e.target;for(const e of this._getElementsByName(s,i))t.setValue(e.id,{value:!1});t.setValue(i,{value:n})}));n.addEventListener("resetform",(t=>{const i=e.defaultFieldValue;t.target.checked=null!=i&&i===e.buttonValue}));if(this.enableScripting&&this.hasJSActions){const s=e.buttonValue;n.addEventListener("updatefromsandbox",(e=>{const n={value:e=>{const n=s===e.detail.value;for(const s of this._getElementsByName(e.target.name)){const e=n&&s.id===i;s.domElement&&(s.domElement.checked=e);t.setValue(s.id,{value:e})}}};this._dispatchEventFromSandbox(n,e)}));this._setEventListeners(n,null,[["change","Validate"],["change","Action"],["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],(t=>t.target.checked))}this._setBackgroundColor(n);this._setDefaultPropertiesFromJS(n);this.container.append(n);return this.container}}class PushButtonWidgetAnnotationElement extends LinkAnnotationElement{constructor(t){super(t,{ignoreBorder:t.data.hasAppearance})}render(){const t=super.render();t.classList.add("buttonWidgetAnnotation","pushButton");const e=t.lastChild;if(this.enableScripting&&this.hasJSActions&&e){this._setDefaultPropertiesFromJS(e);e.addEventListener("updatefromsandbox",(t=>{this._dispatchEventFromSandbox({},t)}))}return t}}class ChoiceWidgetAnnotationElement extends WidgetAnnotationElement{constructor(t){super(t,{isRenderable:t.renderForms})}render(){this.container.classList.add("choiceWidgetAnnotation");const t=this.annotationStorage,e=this.data.id,i=t.getValue(e,{value:this.data.fieldValue}),s=document.createElement("select");Jt.add(s);s.setAttribute("data-element-id",e);s.disabled=this.data.readOnly;this._setRequired(s,this.data.required);s.name=this.data.fieldName;s.tabIndex=Qt;let n=this.data.combo&&this.data.options.length>0;if(!this.data.combo){s.size=this.data.options.length;this.data.multiSelect&&(s.multiple=!0)}s.addEventListener("resetform",(t=>{const e=this.data.defaultFieldValue;for(const t of s.options)t.selected=t.value===e}));for(const t of this.data.options){const e=document.createElement("option");e.textContent=t.displayValue;e.value=t.exportValue;if(i.value.includes(t.exportValue)){e.setAttribute("selected",!0);n=!1}s.append(e)}let a=null;if(n){const t=document.createElement("option");t.value=" ";t.setAttribute("hidden",!0);t.setAttribute("selected",!0);s.prepend(t);a=()=>{t.remove();s.removeEventListener("input",a);a=null};s.addEventListener("input",a)}const getValue=t=>{const e=t?"value":"textContent",{options:i,multiple:n}=s;return n?Array.prototype.filter.call(i,(t=>t.selected)).map((t=>t[e])):-1===i.selectedIndex?null:i[i.selectedIndex][e]};let r=getValue(!1);const getItems=t=>{const e=t.target.options;return Array.prototype.map.call(e,(t=>({displayValue:t.textContent,exportValue:t.value})))};if(this.enableScripting&&this.hasJSActions){s.addEventListener("updatefromsandbox",(i=>{const n={value(i){a?.();const n=i.detail.value,o=new Set(Array.isArray(n)?n:[n]);for(const t of s.options)t.selected=o.has(t.value);t.setValue(e,{value:getValue(!0)});r=getValue(!1)},multipleSelection(t){s.multiple=!0},remove(i){const n=s.options,a=i.detail.remove;n[a].selected=!1;s.remove(a);if(n.length>0){-1===Array.prototype.findIndex.call(n,(t=>t.selected))&&(n[0].selected=!0)}t.setValue(e,{value:getValue(!0),items:getItems(i)});r=getValue(!1)},clear(i){for(;0!==s.length;)s.remove(0);t.setValue(e,{value:null,items:[]});r=getValue(!1)},insert(i){const{index:n,displayValue:a,exportValue:o}=i.detail.insert,l=s.children[n],h=document.createElement("option");h.textContent=a;h.value=o;l?l.before(h):s.append(h);t.setValue(e,{value:getValue(!0),items:getItems(i)});r=getValue(!1)},items(i){const{items:n}=i.detail;for(;0!==s.length;)s.remove(0);for(const t of n){const{displayValue:e,exportValue:i}=t,n=document.createElement("option");n.textContent=e;n.value=i;s.append(n)}s.options.length>0&&(s.options[0].selected=!0);t.setValue(e,{value:getValue(!0),items:getItems(i)});r=getValue(!1)},indices(i){const s=new Set(i.detail.indices);for(const t of i.target.options)t.selected=s.has(t.index);t.setValue(e,{value:getValue(!0)});r=getValue(!1)},editable(t){t.target.disabled=!t.detail.editable}};this._dispatchEventFromSandbox(n,i)}));s.addEventListener("input",(i=>{const s=getValue(!0),n=getValue(!1);t.setValue(e,{value:s});i.preventDefault();this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:e,name:"Keystroke",value:r,change:n,changeEx:s,willCommit:!1,commitKey:1,keyDown:!1}})}));this._setEventListeners(s,null,[["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"],["input","Action"],["input","Validate"]],(t=>t.target.value))}else s.addEventListener("input",(function(i){t.setValue(e,{value:getValue(!0)})}));this.data.combo&&this._setTextStyle(s);this._setBackgroundColor(s);this._setDefaultPropertiesFromJS(s);this.container.append(s);return this.container}}class PopupAnnotationElement extends AnnotationElement{constructor(t){const{data:e,elements:i}=t;super(t,{isRenderable:AnnotationElement._hasPopupData(e)});this.elements=i;this.popup=null}render(){this.container.classList.add("popupAnnotation");const t=this.popup=new PopupElement({container:this.container,color:this.data.color,titleObj:this.data.titleObj,modificationDate:this.data.modificationDate,contentsObj:this.data.contentsObj,richText:this.data.richText,rect:this.data.rect,parentRect:this.data.parentRect||null,parent:this.parent,elements:this.elements,open:this.data.open}),e=[];for(const i of this.elements){i.popup=t;e.push(i.data.id);i.addHighlightArea()}this.container.setAttribute("aria-controls",e.map((t=>`${it}${t}`)).join(","));return this.container}}class PopupElement{#gs=this.#ms.bind(this);#fs=this.#bs.bind(this);#As=this.#vs.bind(this);#ys=this.#ws.bind(this);#xs=null;#ct=null;#_s=null;#Es=null;#Cs=null;#Ss=null;#Ts=null;#Ms=!1;#ks=null;#C=null;#Ps=null;#Fs=null;#Ds=null;#os=null;#Rs=!1;constructor({container:t,color:e,elements:i,titleObj:s,modificationDate:n,contentsObj:a,richText:r,parent:o,rect:l,parentRect:h,open:d}){this.#ct=t;this.#Ds=s;this.#_s=a;this.#Fs=r;this.#Ss=o;this.#xs=e;this.#Ps=l;this.#Ts=h;this.#Cs=i;this.#Es=PDFDateString.toDateObject(n);this.trigger=i.flatMap((t=>t.getElementsToTriggerPopup()));for(const t of this.trigger){t.addEventListener("click",this.#ys);t.addEventListener("mouseenter",this.#As);t.addEventListener("mouseleave",this.#fs);t.classList.add("popupTriggerArea")}for(const t of i)t.container?.addEventListener("keydown",this.#gs);this.#ct.hidden=!0;d&&this.#ws()}render(){if(this.#ks)return;const t=this.#ks=document.createElement("div");t.className="popup";if(this.#xs){const e=t.style.outlineColor=Util.makeHexColor(...this.#xs);if(CSS.supports("background-color","color-mix(in srgb, red 30%, white)"))t.style.backgroundColor=`color-mix(in srgb, ${e} 30%, white)`;else{const e=.7;t.style.backgroundColor=Util.makeHexColor(...this.#xs.map((t=>Math.floor(e*(255-t)+t))))}}const e=document.createElement("span");e.className="header";const i=document.createElement("h1");e.append(i);({dir:i.dir,str:i.textContent}=this.#Ds);t.append(e);if(this.#Es){const t=document.createElement("span");t.classList.add("popupDate");t.setAttribute("data-l10n-id","pdfjs-annotation-date-time-string");t.setAttribute("data-l10n-args",JSON.stringify({dateObj:this.#Es.valueOf()}));e.append(t)}const s=this.#Is;if(s){XfaLayer.render({xfaHtml:s,intent:"richText",div:t});t.lastChild.classList.add("richText","popupContent")}else{const e=this._formatContents(this.#_s);t.append(e)}this.#ct.append(t)}get#Is(){const t=this.#Fs,e=this.#_s;return!t?.str||e?.str&&e.str!==t.str?null:this.#Fs.html||null}get#Ls(){return this.#Is?.attributes?.style?.fontSize||0}get#Ns(){return this.#Is?.attributes?.style?.color||null}#Os(t){const e=[],i={str:t,html:{name:"div",attributes:{dir:"auto"},children:[{name:"p",children:e}]}},s={style:{color:this.#Ns,fontSize:this.#Ls?`calc(${this.#Ls}px * var(--scale-factor))`:""}};for(const i of t.split("\\n"))e.push({name:"span",value:i,attributes:s});return i}_formatContents({str:t,dir:e}){const i=document.createElement("p");i.classList.add("popupContent");i.dir=e;const s=t.split(/(?:\\r\\n?|\\n)/);for(let t=0,e=s.length;t<e;++t){const n=s[t];i.append(document.createTextNode(n));t<e-1&&i.append(document.createElement("br"))}return i}#ms(t){t.altKey||t.shiftKey||t.ctrlKey||t.metaKey||("Enter"===t.key||"Escape"===t.key&&this.#Ms)&&this.#ws()}updateEdited({rect:t,popupContent:e}){this.#os||={contentsObj:this.#_s,richText:this.#Fs};t&&(this.#C=null);if(e){this.#Fs=this.#Os(e);this.#_s=null}this.#ks?.remove();this.#ks=null}resetEdited(){if(this.#os){({contentsObj:this.#_s,richText:this.#Fs}=this.#os);this.#os=null;this.#ks?.remove();this.#ks=null;this.#C=null}}#Bs(){if(null!==this.#C)return;const{page:{view:t},viewport:{rawDims:{pageWidth:e,pageHeight:i,pageX:s,pageY:n}}}=this.#Ss;let a=!!this.#Ts,r=a?this.#Ts:this.#Ps;for(const t of this.#Cs)if(!r||null!==Util.intersect(t.data.rect,r)){r=t.data.rect;a=!0;break}const o=Util.normalizeRect([r[0],t[3]-r[1]+t[1],r[2],t[3]-r[3]+t[1]]),l=a?r[2]-r[0]+5:0,h=o[0]+l,d=o[1];this.#C=[100*(h-s)/e,100*(d-n)/i];const{style:c}=this.#ct;c.left=`${this.#C[0]}%`;c.top=`${this.#C[1]}%`}#ws(){this.#Ms=!this.#Ms;if(this.#Ms){this.#vs();this.#ct.addEventListener("click",this.#ys);this.#ct.addEventListener("keydown",this.#gs)}else{this.#bs();this.#ct.removeEventListener("click",this.#ys);this.#ct.removeEventListener("keydown",this.#gs)}}#vs(){this.#ks||this.render();if(this.isVisible)this.#Ms&&this.#ct.classList.add("focused");else{this.#Bs();this.#ct.hidden=!1;this.#ct.style.zIndex=parseInt(this.#ct.style.zIndex)+1e3}}#bs(){this.#ct.classList.remove("focused");if(!this.#Ms&&this.isVisible){this.#ct.hidden=!0;this.#ct.style.zIndex=parseInt(this.#ct.style.zIndex)-1e3}}forceHide(){this.#Rs=this.isVisible;this.#Rs&&(this.#ct.hidden=!0)}maybeShow(){if(this.#Rs){this.#ks||this.#vs();this.#Rs=!1;this.#ct.hidden=!1}}get isVisible(){return!1===this.#ct.hidden}}class FreeTextAnnotationElement extends AnnotationElement{constructor(t){super(t,{isRenderable:!0,ignoreBorder:!0});this.textContent=t.data.textContent;this.textPosition=t.data.textPosition;this.annotationEditorType=g.FREETEXT}render(){this.container.classList.add("freeTextAnnotation");if(this.textContent){const t=document.createElement("div");t.classList.add("annotationTextContent");t.setAttribute("role","comment");for(const e of this.textContent){const i=document.createElement("span");i.textContent=e;t.append(i)}this.container.append(t)}!this.data.popupRef&&this.hasPopupData&&this._createPopup();this._editOnDoubleClick();return this.container}}class LineAnnotationElement extends AnnotationElement{#Hs=null;constructor(t){super(t,{isRenderable:!0,ignoreBorder:!0})}render(){this.container.classList.add("lineAnnotation");const t=this.data,{width:e,height:i}=getRectDims(t.rect),s=this.svgFactory.create(e,i,!0),n=this.#Hs=this.svgFactory.createElement("svg:line");n.setAttribute("x1",t.rect[2]-t.lineCoordinates[0]);n.setAttribute("y1",t.rect[3]-t.lineCoordinates[1]);n.setAttribute("x2",t.rect[2]-t.lineCoordinates[2]);n.setAttribute("y2",t.rect[3]-t.lineCoordinates[3]);n.setAttribute("stroke-width",t.borderStyle.width||1);n.setAttribute("stroke","transparent");n.setAttribute("fill","transparent");s.append(n);this.container.append(s);!t.popupRef&&this.hasPopupData&&this._createPopup();return this.container}getElementsToTriggerPopup(){return this.#Hs}addHighlightArea(){this.container.classList.add("highlightArea")}}class SquareAnnotationElement extends AnnotationElement{#Us=null;constructor(t){super(t,{isRenderable:!0,ignoreBorder:!0})}render(){this.container.classList.add("squareAnnotation");const t=this.data,{width:e,height:i}=getRectDims(t.rect),s=this.svgFactory.create(e,i,!0),n=t.borderStyle.width,a=this.#Us=this.svgFactory.createElement("svg:rect");a.setAttribute("x",n/2);a.setAttribute("y",n/2);a.setAttribute("width",e-n);a.setAttribute("height",i-n);a.setAttribute("stroke-width",n||1);a.setAttribute("stroke","transparent");a.setAttribute("fill","transparent");s.append(a);this.container.append(s);!t.popupRef&&this.hasPopupData&&this._createPopup();return this.container}getElementsToTriggerPopup(){return this.#Us}addHighlightArea(){this.container.classList.add("highlightArea")}}class CircleAnnotationElement extends AnnotationElement{#zs=null;constructor(t){super(t,{isRenderable:!0,ignoreBorder:!0})}render(){this.container.classList.add("circleAnnotation");const t=this.data,{width:e,height:i}=getRectDims(t.rect),s=this.svgFactory.create(e,i,!0),n=t.borderStyle.width,a=this.#zs=this.svgFactory.createElement("svg:ellipse");a.setAttribute("cx",e/2);a.setAttribute("cy",i/2);a.setAttribute("rx",e/2-n/2);a.setAttribute("ry",i/2-n/2);a.setAttribute("stroke-width",n||1);a.setAttribute("stroke","transparent");a.setAttribute("fill","transparent");s.append(a);this.container.append(s);!t.popupRef&&this.hasPopupData&&this._createPopup();return this.container}getElementsToTriggerPopup(){return this.#zs}addHighlightArea(){this.container.classList.add("highlightArea")}}class PolylineAnnotationElement extends AnnotationElement{#js=null;constructor(t){super(t,{isRenderable:!0,ignoreBorder:!0});this.containerClassName="polylineAnnotation";this.svgElementName="svg:polyline"}render(){this.container.classList.add(this.containerClassName);const{data:{rect:t,vertices:e,borderStyle:i,popupRef:s}}=this;if(!e)return this.container;const{width:n,height:a}=getRectDims(t),r=this.svgFactory.create(n,a,!0);let o=[];for(let i=0,s=e.length;i<s;i+=2){const s=e[i]-t[0],n=t[3]-e[i+1];o.push(`${s},${n}`)}o=o.join(" ");const l=this.#js=this.svgFactory.createElement(this.svgElementName);l.setAttribute("points",o);l.setAttribute("stroke-width",i.width||1);l.setAttribute("stroke","transparent");l.setAttribute("fill","transparent");r.append(l);this.container.append(r);!s&&this.hasPopupData&&this._createPopup();return this.container}getElementsToTriggerPopup(){return this.#js}addHighlightArea(){this.container.classList.add("highlightArea")}}class PolygonAnnotationElement extends PolylineAnnotationElement{constructor(t){super(t);this.containerClassName="polygonAnnotation";this.svgElementName="svg:polygon"}}class CaretAnnotationElement extends AnnotationElement{constructor(t){super(t,{isRenderable:!0,ignoreBorder:!0})}render(){this.container.classList.add("caretAnnotation");!this.data.popupRef&&this.hasPopupData&&this._createPopup();return this.container}}class InkAnnotationElement extends AnnotationElement{#Ws=[];constructor(t){super(t,{isRenderable:!0,ignoreBorder:!0});this.containerClassName="inkAnnotation";this.svgElementName="svg:polyline";this.annotationEditorType=g.INK}render(){this.container.classList.add(this.containerClassName);const{data:{rect:t,inkLists:e,borderStyle:i,popupRef:s}}=this,{width:n,height:a}=getRectDims(t),r=this.svgFactory.create(n,a,!0);for(const n of e){let e=[];for(let i=0,s=n.length;i<s;i+=2){const s=n[i]-t[0],a=t[3]-n[i+1];e.push(`${s},${a}`)}e=e.join(" ");const a=this.svgFactory.createElement(this.svgElementName);this.#Ws.push(a);a.setAttribute("points",e);a.setAttribute("stroke-width",i.width||1);a.setAttribute("stroke","transparent");a.setAttribute("fill","transparent");!s&&this.hasPopupData&&this._createPopup();r.append(a)}this.container.append(r);return this.container}getElementsToTriggerPopup(){return this.#Ws}addHighlightArea(){this.container.classList.add("highlightArea")}}class HighlightAnnotationElement extends AnnotationElement{constructor(t){super(t,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){!this.data.popupRef&&this.hasPopupData&&this._createPopup();this.container.classList.add("highlightAnnotation");return this.container}}class UnderlineAnnotationElement extends AnnotationElement{constructor(t){super(t,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){!this.data.popupRef&&this.hasPopupData&&this._createPopup();this.container.classList.add("underlineAnnotation");return this.container}}class SquigglyAnnotationElement extends AnnotationElement{constructor(t){super(t,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){!this.data.popupRef&&this.hasPopupData&&this._createPopup();this.container.classList.add("squigglyAnnotation");return this.container}}class StrikeOutAnnotationElement extends AnnotationElement{constructor(t){super(t,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){!this.data.popupRef&&this.hasPopupData&&this._createPopup();this.container.classList.add("strikeoutAnnotation");return this.container}}class StampAnnotationElement extends AnnotationElement{constructor(t){super(t,{isRenderable:!0,ignoreBorder:!0})}render(){this.container.classList.add("stampAnnotation");!this.data.popupRef&&this.hasPopupData&&this._createPopup();return this.container}}class FileAttachmentAnnotationElement extends AnnotationElement{#$s=null;constructor(t){super(t,{isRenderable:!0});const{file:e}=this.data;this.filename=e.filename;this.content=e.content;this.linkService.eventBus?.dispatch("fileattachmentannotation",{source:this,...e})}render(){this.container.classList.add("fileAttachmentAnnotation");const{container:t,data:e}=this;let i;if(e.hasAppearance||0===e.fillAlpha)i=document.createElement("div");else{i=document.createElement("img");i.src=`${this.imageResourcesPath}annotation-${/paperclip/i.test(e.name)?"paperclip":"pushpin"}.svg`;e.fillAlpha&&e.fillAlpha<1&&(i.style=`filter: opacity(${Math.round(100*e.fillAlpha)}%);`)}i.addEventListener("dblclick",this.#Gs.bind(this));this.#$s=i;const{isMac:s}=util_FeatureTest.platform;t.addEventListener("keydown",(t=>{"Enter"===t.key&&(s?t.metaKey:t.ctrlKey)&&this.#Gs()}));!e.popupRef&&this.hasPopupData?this._createPopup():i.classList.add("popupTriggerArea");t.append(i);return t}getElementsToTriggerPopup(){return this.#$s}addHighlightArea(){this.container.classList.add("highlightArea")}#Gs(){this.downloadManager?.openOrDownloadData(this.content,this.filename)}}class AnnotationLayer{#Vs=null;#qs=null;#Xs=new Map;constructor({div:t,accessibilityManager:e,annotationCanvasMap:i,annotationEditorUIManager:s,page:n,viewport:a}){this.div=t;this.#Vs=e;this.#qs=i;this.page=n;this.viewport=a;this.zIndex=0;this._annotationEditorUIManager=s}hasEditableAnnotations(){return this.#Xs.size>0}#Ks(t,e){const i=t.firstChild||t;i.id=`${it}${e}`;this.div.append(t);this.#Vs?.moveElementInDOM(this.div,t,i,!1)}async render(t){const{annotations:e}=t,i=this.div;setLayerDimensions(i,this.viewport);const s=new Map,n={data:null,layer:i,linkService:t.linkService,downloadManager:t.downloadManager,imageResourcesPath:t.imageResourcesPath||"",renderForms:!1!==t.renderForms,svgFactory:new DOMSVGFactory,annotationStorage:t.annotationStorage||new AnnotationStorage,enableScripting:!0===t.enableScripting,hasJSActions:t.hasJSActions,fieldObjects:t.fieldObjects,parent:this,elements:null};for(const t of e){if(t.noHTML)continue;const e=t.annotationType===H;if(e){const e=s.get(t.id);if(!e)continue;n.elements=e}else{const{width:e,height:i}=getRectDims(t.rect);if(e<=0||i<=0)continue}n.data=t;const i=AnnotationElementFactory.create(n);if(!i.isRenderable)continue;if(!e&&t.popupRef){const e=s.get(t.popupRef);e?e.push(i):s.set(t.popupRef,[i])}const a=i.render();t.hidden&&(a.style.visibility="hidden");this.#Ks(a,t.id);if(i._isEditable){this.#Xs.set(i.data.id,i);this._annotationEditorUIManager?.renderAnnotationElement(i)}}this.#Ys()}update({viewport:t}){const e=this.div;this.viewport=t;setLayerDimensions(e,{rotation:t.rotation});this.#Ys();e.hidden=!1}#Ys(){if(!this.#qs)return;const t=this.div;for(const[e,i]of this.#qs){const s=t.querySelector(`[data-annotation-id="${e}"]`);if(!s)continue;i.className="annotationContent";const{firstChild:n}=s;n?"CANVAS"===n.nodeName?n.replaceWith(i):n.classList.contains("annotationContent")?n.after(i):n.before(i):s.append(i)}this.#qs.clear()}getEditableAnnotations(){return Array.from(this.#Xs.values())}getEditableAnnotation(t){return this.#Xs.get(t)}}const Zt=/\\r\\n?|\\n/g;class FreeTextEditor extends AnnotationEditor{#xs;#Qs="";#Js=`${this.id}-editor`;#Zs=null;#Ls;#tn=null;static _freeTextDefaultContent="";static _internalPadding=0;static _defaultColor=null;static _defaultFontSize=10;static get _keyboardManager(){const t=FreeTextEditor.prototype,arrowChecker=t=>t.isEmpty(),e=AnnotationEditorUIManager.TRANSLATE_SMALL,i=AnnotationEditorUIManager.TRANSLATE_BIG;return shadow(this,"_keyboardManager",new KeyboardManager([[["ctrl+s","mac+meta+s","ctrl+p","mac+meta+p"],t.commitOrRemove,{bubbles:!0}],[["ctrl+Enter","mac+meta+Enter","Escape","mac+Escape"],t.commitOrRemove],[["ArrowLeft","mac+ArrowLeft"],t._translateEmpty,{args:[-e,0],checker:arrowChecker}],[["ctrl+ArrowLeft","mac+shift+ArrowLeft"],t._translateEmpty,{args:[-i,0],checker:arrowChecker}],[["ArrowRight","mac+ArrowRight"],t._translateEmpty,{args:[e,0],checker:arrowChecker}],[["ctrl+ArrowRight","mac+shift+ArrowRight"],t._translateEmpty,{args:[i,0],checker:arrowChecker}],[["ArrowUp","mac+ArrowUp"],t._translateEmpty,{args:[0,-e],checker:arrowChecker}],[["ctrl+ArrowUp","mac+shift+ArrowUp"],t._translateEmpty,{args:[0,-i],checker:arrowChecker}],[["ArrowDown","mac+ArrowDown"],t._translateEmpty,{args:[0,e],checker:arrowChecker}],[["ctrl+ArrowDown","mac+shift+ArrowDown"],t._translateEmpty,{args:[0,i],checker:arrowChecker}]]))}static _type="freetext";static _editorType=g.FREETEXT;constructor(t){super({...t,name:"freeTextEditor"});this.#xs=t.color||FreeTextEditor._defaultColor||AnnotationEditor._defaultLineColor;this.#Ls=t.fontSize||FreeTextEditor._defaultFontSize}static initialize(t,e){AnnotationEditor.initialize(t,e,{strings:["pdfjs-free-text-default-content"]});const i=getComputedStyle(document.documentElement);this._internalPadding=parseFloat(i.getPropertyValue("--freetext-padding"))}static updateDefaultParams(t,e){switch(t){case m.FREETEXT_SIZE:FreeTextEditor._defaultFontSize=e;break;case m.FREETEXT_COLOR:FreeTextEditor._defaultColor=e}}updateParams(t,e){switch(t){case m.FREETEXT_SIZE:this.#en(e);break;case m.FREETEXT_COLOR:this.#in(e)}}static get defaultPropertiesToUpdate(){return[[m.FREETEXT_SIZE,FreeTextEditor._defaultFontSize],[m.FREETEXT_COLOR,FreeTextEditor._defaultColor||AnnotationEditor._defaultLineColor]]}get propertiesToUpdate(){return[[m.FREETEXT_SIZE,this.#Ls],[m.FREETEXT_COLOR,this.#xs]]}#en(t){const setFontsize=t=>{this.editorDiv.style.fontSize=`calc(${t}px * var(--scale-factor))`;this.translate(0,-(t-this.#Ls)*this.parentScale);this.#Ls=t;this.#sn()},e=this.#Ls;this.addCommands({cmd:setFontsize.bind(this,t),undo:setFontsize.bind(this,e),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:m.FREETEXT_SIZE,overwriteIfSameType:!0,keepUndo:!0})}#in(t){const setColor=t=>{this.#xs=this.editorDiv.style.color=t},e=this.#xs;this.addCommands({cmd:setColor.bind(this,t),undo:setColor.bind(this,e),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:m.FREETEXT_COLOR,overwriteIfSameType:!0,keepUndo:!0})}_translateEmpty(t,e){this._uiManager.translateSelectedEditors(t,e,!0)}getInitialTranslation(){const t=this.parentScale;return[-FreeTextEditor._internalPadding*t,-(FreeTextEditor._internalPadding+this.#Ls)*t]}rebuild(){if(this.parent){super.rebuild();null!==this.div&&(this.isAttachedToDOM||this.parent.add(this))}}enableEditMode(){if(this.isInEditMode())return;this.parent.setEditingState(!1);this.parent.updateToolbar(g.FREETEXT);super.enableEditMode();this.overlayDiv.classList.remove("enabled");this.editorDiv.contentEditable=!0;this._isDraggable=!1;this.div.removeAttribute("aria-activedescendant");this.#Zs=new AbortController;const t=this._uiManager.combinedSignal(this.#Zs);this.editorDiv.addEventListener("keydown",this.editorDivKeydown.bind(this),{signal:t});this.editorDiv.addEventListener("focus",this.editorDivFocus.bind(this),{signal:t});this.editorDiv.addEventListener("blur",this.editorDivBlur.bind(this),{signal:t});this.editorDiv.addEventListener("input",this.editorDivInput.bind(this),{signal:t});this.editorDiv.addEventListener("paste",this.editorDivPaste.bind(this),{signal:t})}disableEditMode(){if(this.isInEditMode()){this.parent.setEditingState(!0);super.disableEditMode();this.overlayDiv.classList.add("enabled");this.editorDiv.contentEditable=!1;this.div.setAttribute("aria-activedescendant",this.#Js);this._isDraggable=!0;this.#Zs?.abort();this.#Zs=null;this.div.focus({preventScroll:!0});this.isEditing=!1;this.parent.div.classList.add("freetextEditing")}}focusin(t){if(this._focusEventsAllowed){super.focusin(t);t.target!==this.editorDiv&&this.editorDiv.focus()}}onceAdded(){if(!this.width){this.enableEditMode();this.editorDiv.focus();this._initialOptions?.isCentered&&this.center();this._initialOptions=null}}isEmpty(){return!this.editorDiv||""===this.editorDiv.innerText.trim()}remove(){this.isEditing=!1;if(this.parent){this.parent.setEditingState(!0);this.parent.div.classList.add("freetextEditing")}super.remove()}#nn(){const t=[];this.editorDiv.normalize();for(const e of this.editorDiv.childNodes)t.push(FreeTextEditor.#an(e));return t.join("\\n")}#sn(){const[t,e]=this.parentDimensions;let i;if(this.isAttachedToDOM)i=this.div.getBoundingClientRect();else{const{currentLayer:t,div:e}=this,s=e.style.display,n=e.classList.contains("hidden");e.classList.remove("hidden");e.style.display="hidden";t.div.append(this.div);i=e.getBoundingClientRect();e.remove();e.style.display=s;e.classList.toggle("hidden",n)}if(this.rotation%180==this.parentRotation%180){this.width=i.width/t;this.height=i.height/e}else{this.width=i.height/t;this.height=i.width/e}this.fixAndSetPosition()}commit(){if(!this.isInEditMode())return;super.commit();this.disableEditMode();const t=this.#Qs,e=this.#Qs=this.#nn().trimEnd();if(t===e)return;const setText=t=>{this.#Qs=t;if(t){this.#rn();this._uiManager.rebuild(this);this.#sn()}else this.remove()};this.addCommands({cmd:()=>{setText(e)},undo:()=>{setText(t)},mustExec:!1});this.#sn()}shouldGetKeyboardEvents(){return this.isInEditMode()}enterInEditMode(){this.enableEditMode();this.editorDiv.focus()}dblclick(t){this.enterInEditMode()}keydown(t){if(t.target===this.div&&"Enter"===t.key){this.enterInEditMode();t.preventDefault()}}editorDivKeydown(t){FreeTextEditor._keyboardManager.exec(this,t)}editorDivFocus(t){this.isEditing=!0}editorDivBlur(t){this.isEditing=!1}editorDivInput(t){this.parent.div.classList.toggle("freetextEditing",this.isEmpty())}disableEditing(){this.editorDiv.setAttribute("role","comment");this.editorDiv.removeAttribute("aria-multiline")}enableEditing(){this.editorDiv.setAttribute("role","textbox");this.editorDiv.setAttribute("aria-multiline",!0)}render(){if(this.div)return this.div;let t,e;if(this.width){t=this.x;e=this.y}super.render();this.editorDiv=document.createElement("div");this.editorDiv.className="internal";this.editorDiv.setAttribute("id",this.#Js);this.editorDiv.setAttribute("data-l10n-id","pdfjs-free-text");this.enableEditing();AnnotationEditor._l10nPromise.get("pdfjs-free-text-default-content").then((t=>this.editorDiv?.setAttribute("default-content",t)));this.editorDiv.contentEditable=!0;const{style:i}=this.editorDiv;i.fontSize=`calc(${this.#Ls}px * var(--scale-factor))`;i.color=this.#xs;this.div.append(this.editorDiv);this.overlayDiv=document.createElement("div");this.overlayDiv.classList.add("overlay","enabled");this.div.append(this.overlayDiv);bindEvents(this,this.div,["dblclick","keydown"]);if(this.width){const[i,s]=this.parentDimensions;if(this.annotationElementId){const{position:n}=this.#tn;let[a,r]=this.getInitialTranslation();[a,r]=this.pageTranslationToScreen(a,r);const[o,l]=this.pageDimensions,[h,d]=this.pageTranslation;let c,u;switch(this.rotation){case 0:c=t+(n[0]-h)/o;u=e+this.height-(n[1]-d)/l;break;case 90:c=t+(n[0]-h)/o;u=e-(n[1]-d)/l;[a,r]=[r,-a];break;case 180:c=t-this.width+(n[0]-h)/o;u=e-(n[1]-d)/l;[a,r]=[-a,-r];break;case 270:c=t+(n[0]-h-this.height*l)/o;u=e+(n[1]-d-this.width*o)/l;[a,r]=[-r,a]}this.setAt(c*i,u*s,a,r)}else this.setAt(t*i,e*s,this.width*i,this.height*s);this.#rn();this._isDraggable=!0;this.editorDiv.contentEditable=!1}else{this._isDraggable=!1;this.editorDiv.contentEditable=!0}return this.div}static#an(t){return(t.nodeType===Node.TEXT_NODE?t.nodeValue:t.innerText).replaceAll(Zt,"")}editorDivPaste(t){const e=t.clipboardData||window.clipboardData,{types:i}=e;if(1===i.length&&"text/plain"===i[0])return;t.preventDefault();const s=FreeTextEditor.#on(e.getData("text")||"").replaceAll(Zt,"\\n");if(!s)return;const n=window.getSelection();if(!n.rangeCount)return;this.editorDiv.normalize();n.deleteFromDocument();const a=n.getRangeAt(0);if(!s.includes("\\n")){a.insertNode(document.createTextNode(s));this.editorDiv.normalize();n.collapseToStart();return}const{startContainer:r,startOffset:o}=a,l=[],h=[];if(r.nodeType===Node.TEXT_NODE){const t=r.parentElement;h.push(r.nodeValue.slice(o).replaceAll(Zt,""));if(t!==this.editorDiv){let e=l;for(const i of this.editorDiv.childNodes)i!==t?e.push(FreeTextEditor.#an(i)):e=h}l.push(r.nodeValue.slice(0,o).replaceAll(Zt,""))}else if(r===this.editorDiv){let t=l,e=0;for(const i of this.editorDiv.childNodes){e++===o&&(t=h);t.push(FreeTextEditor.#an(i))}}this.#Qs=`${l.join("\\n")}${s}${h.join("\\n")}`;this.#rn();const d=new Range;let c=l.reduce(((t,e)=>t+e.length),0);for(const{firstChild:t}of this.editorDiv.childNodes)if(t.nodeType===Node.TEXT_NODE){const e=t.nodeValue.length;if(c<=e){d.setStart(t,c);d.setEnd(t,c);break}c-=e}n.removeAllRanges();n.addRange(d)}#rn(){this.editorDiv.replaceChildren();if(this.#Qs)for(const t of this.#Qs.split("\\n")){const e=document.createElement("div");e.append(t?document.createTextNode(t):document.createElement("br"));this.editorDiv.append(e)}}#ln(){return this.#Qs.replaceAll("\xA0"," ")}static#on(t){return t.replaceAll(" ","\xA0")}get contentDiv(){return this.editorDiv}static deserialize(t,e,i){let s=null;if(t instanceof FreeTextAnnotationElement){const{data:{defaultAppearanceData:{fontSize:e,fontColor:i},rect:n,rotation:a,id:r},textContent:o,textPosition:l,parent:{page:{pageNumber:h}}}=t;if(!o||0===o.length)return null;s=t={annotationType:g.FREETEXT,color:Array.from(i),fontSize:e,value:o.join("\\n"),position:l,pageIndex:h-1,rect:n.slice(0),rotation:a,id:r,deleted:!1}}const n=super.deserialize(t,e,i);n.#Ls=t.fontSize;n.#xs=Util.makeHexColor(...t.color);n.#Qs=FreeTextEditor.#on(t.value);n.annotationElementId=t.id||null;n.#tn=s;return n}serialize(t=!1){if(this.isEmpty())return null;if(this.deleted)return{pageIndex:this.pageIndex,id:this.annotationElementId,deleted:!0};const e=FreeTextEditor._internalPadding*this.parentScale,i=this.getRect(e,e),s=AnnotationEditor._colorManager.convert(this.isAttachedToDOM?getComputedStyle(this.editorDiv).color:this.#xs),n={annotationType:g.FREETEXT,color:s,fontSize:this.#Ls,value:this.#ln(),pageIndex:this.pageIndex,rect:i,rotation:this.rotation,structTreeParentId:this._structTreeParentId};if(t)return n;if(this.annotationElementId&&!this.#hn(n))return null;n.id=this.annotationElementId;return n}#hn(t){const{value:e,fontSize:i,color:s,pageIndex:n}=this.#tn;return this._hasBeenMoved||t.value!==e||t.fontSize!==i||t.color.some(((t,e)=>t!==s[e]))||t.pageIndex!==n}renderAnnotationElement(t){const e=super.renderAnnotationElement(t);if(this.deleted)return e;const{style:i}=e;i.fontSize=`calc(${this.#Ls}px * var(--scale-factor))`;i.color=this.#xs;e.replaceChildren();for(const t of this.#Qs.split("\\n")){const i=document.createElement("div");i.append(t?document.createTextNode(t):document.createElement("br"));e.append(i)}const s=FreeTextEditor._internalPadding*this.parentScale;t.updateEdited({rect:this.getRect(s,s),popupContent:this.#Qs});return e}resetAnnotationElement(t){super.resetAnnotationElement(t);t.resetEdited()}}class Outliner{#dn;#cn=[];#un=[];constructor(t,e=0,i=0,s=!0){let n=1/0,a=-1/0,r=1/0,o=-1/0;const l=10**-4;for(const{x:i,y:s,width:h,height:d}of t){const t=Math.floor((i-e)/l)*l,c=Math.ceil((i+h+e)/l)*l,u=Math.floor((s-e)/l)*l,p=Math.ceil((s+d+e)/l)*l,g=[t,u,p,!0],m=[c,u,p,!1];this.#cn.push(g,m);n=Math.min(n,t);a=Math.max(a,c);r=Math.min(r,u);o=Math.max(o,p)}const h=a-n+2*i,d=o-r+2*i,c=n-i,u=r-i,p=this.#cn.at(s?-1:-2),g=[p[0],p[2]];for(const t of this.#cn){const[e,i,s]=t;t[0]=(e-c)/h;t[1]=(i-u)/d;t[2]=(s-u)/d}this.#dn={x:c,y:u,width:h,height:d,lastPoint:g}}getOutlines(){this.#cn.sort(((t,e)=>t[0]-e[0]||t[1]-e[1]||t[2]-e[2]));const t=[];for(const e of this.#cn)if(e[3]){t.push(...this.#pn(e));this.#gn(e)}else{this.#mn(e);t.push(...this.#pn(e))}return this.#fn(t)}#fn(t){const e=[],i=new Set;for(const i of t){const[t,s,n]=i;e.push([t,s,i],[t,n,i])}e.sort(((t,e)=>t[1]-e[1]||t[0]-e[0]));for(let t=0,s=e.length;t<s;t+=2){const s=e[t][2],n=e[t+1][2];s.push(n);n.push(s);i.add(s);i.add(n)}const s=[];let n;for(;i.size>0;){const t=i.values().next().value;let[e,a,r,o,l]=t;i.delete(t);let h=e,d=a;n=[e,r];s.push(n);for(;;){let t;if(i.has(o))t=o;else{if(!i.has(l))break;t=l}i.delete(t);[e,a,r,o,l]=t;if(h!==e){n.push(h,d,e,d===a?a:r);h=e}d=d===a?r:a}n.push(h,d)}return new HighlightOutline(s,this.#dn)}#bn(t){const e=this.#un;let i=0,s=e.length-1;for(;i<=s;){const n=i+s>>1,a=e[n][0];if(a===t)return n;a<t?i=n+1:s=n-1}return s+1}#gn([,t,e]){const i=this.#bn(t);this.#un.splice(i,0,[t,e])}#mn([,t,e]){const i=this.#bn(t);for(let s=i;s<this.#un.length;s++){const[i,n]=this.#un[s];if(i!==t)break;if(i===t&&n===e){this.#un.splice(s,1);return}}for(let s=i-1;s>=0;s--){const[i,n]=this.#un[s];if(i!==t)break;if(i===t&&n===e){this.#un.splice(s,1);return}}}#pn(t){const[e,i,s]=t,n=[[e,i,s]],a=this.#bn(s);for(let t=0;t<a;t++){const[i,s]=this.#un[t];for(let t=0,a=n.length;t<a;t++){const[,r,o]=n[t];if(!(s<=r||o<=i))if(r>=i)if(o>s)n[t][1]=s;else{if(1===a)return[];n.splice(t,1);t--;a--}else{n[t][2]=i;o>s&&n.push([e,s,o])}}}return n}}class Outline{toSVGPath(){throw new Error("Abstract method `toSVGPath` must be implemented.")}get box(){throw new Error("Abstract getter `box` must be implemented.")}serialize(t,e){throw new Error("Abstract method `serialize` must be implemented.")}get free(){return this instanceof FreeHighlightOutline}}class HighlightOutline extends Outline{#dn;#An;constructor(t,e){super();this.#An=t;this.#dn=e}toSVGPath(){const t=[];for(const e of this.#An){let[i,s]=e;t.push(`M${i} ${s}`);for(let n=2;n<e.length;n+=2){const a=e[n],r=e[n+1];if(a===i){t.push(`V${r}`);s=r}else if(r===s){t.push(`H${a}`);i=a}}t.push("Z")}return t.join(" ")}serialize([t,e,i,s],n){const a=[],r=i-t,o=s-e;for(const e of this.#An){const i=new Array(e.length);for(let n=0;n<e.length;n+=2){i[n]=t+e[n]*r;i[n+1]=s-e[n+1]*o}a.push(i)}return a}get box(){return this.#dn}}class FreeOutliner{#dn;#vn=[];#yn;#wn;#xn=[];#_n=new Float64Array(18);#En;#Cn;#Sn;#Tn;#Mn;#kn;#Pn=[];static#Fn=8;static#Dn=2;static#Rn=FreeOutliner.#Fn+FreeOutliner.#Dn;constructor({x:t,y:e},i,s,n,a,r=0){this.#dn=i;this.#kn=n*s;this.#wn=a;this.#_n.set([NaN,NaN,NaN,NaN,t,e],6);this.#yn=r;this.#Tn=FreeOutliner.#Fn*s;this.#Sn=FreeOutliner.#Rn*s;this.#Mn=s;this.#Pn.push(t,e)}get free(){return!0}isEmpty(){return isNaN(this.#_n[8])}#In(){const t=this.#_n.subarray(4,6),e=this.#_n.subarray(16,18),[i,s,n,a]=this.#dn;return[(this.#En+(t[0]-e[0])/2-i)/n,(this.#Cn+(t[1]-e[1])/2-s)/a,(this.#En+(e[0]-t[0])/2-i)/n,(this.#Cn+(e[1]-t[1])/2-s)/a]}add({x:t,y:e}){this.#En=t;this.#Cn=e;const[i,s,n,a]=this.#dn;let[r,o,l,h]=this.#_n.subarray(8,12);const d=t-l,c=e-h,u=Math.hypot(d,c);if(u<this.#Sn)return!1;const p=u-this.#Tn,g=p/u,m=g*d,f=g*c;let b=r,A=o;r=l;o=h;l+=m;h+=f;this.#Pn?.push(t,e);const v=m/p,y=-f/p*this.#kn,w=v*this.#kn;this.#_n.set(this.#_n.subarray(2,8),0);this.#_n.set([l+y,h+w],4);this.#_n.set(this.#_n.subarray(14,18),12);this.#_n.set([l-y,h-w],16);if(isNaN(this.#_n[6])){if(0===this.#xn.length){this.#_n.set([r+y,o+w],2);this.#xn.push(NaN,NaN,NaN,NaN,(r+y-i)/n,(o+w-s)/a);this.#_n.set([r-y,o-w],14);this.#vn.push(NaN,NaN,NaN,NaN,(r-y-i)/n,(o-w-s)/a)}this.#_n.set([b,A,r,o,l,h],6);return!this.isEmpty()}this.#_n.set([b,A,r,o,l,h],6);if(Math.abs(Math.atan2(A-o,b-r)-Math.atan2(f,m))<Math.PI/2){[r,o,l,h]=this.#_n.subarray(2,6);this.#xn.push(NaN,NaN,NaN,NaN,((r+l)/2-i)/n,((o+h)/2-s)/a);[r,o,b,A]=this.#_n.subarray(14,18);this.#vn.push(NaN,NaN,NaN,NaN,((b+r)/2-i)/n,((A+o)/2-s)/a);return!0}[b,A,r,o,l,h]=this.#_n.subarray(0,6);this.#xn.push(((b+5*r)/6-i)/n,((A+5*o)/6-s)/a,((5*r+l)/6-i)/n,((5*o+h)/6-s)/a,((r+l)/2-i)/n,((o+h)/2-s)/a);[l,h,r,o,b,A]=this.#_n.subarray(12,18);this.#vn.push(((b+5*r)/6-i)/n,((A+5*o)/6-s)/a,((5*r+l)/6-i)/n,((5*o+h)/6-s)/a,((r+l)/2-i)/n,((o+h)/2-s)/a);return!0}toSVGPath(){if(this.isEmpty())return"";const t=this.#xn,e=this.#vn,i=this.#_n.subarray(4,6),s=this.#_n.subarray(16,18),[n,a,r,o]=this.#dn,[l,h,d,c]=this.#In();if(isNaN(this.#_n[6])&&!this.isEmpty())return`M${(this.#_n[2]-n)/r} ${(this.#_n[3]-a)/o} L${(this.#_n[4]-n)/r} ${(this.#_n[5]-a)/o} L${l} ${h} L${d} ${c} L${(this.#_n[16]-n)/r} ${(this.#_n[17]-a)/o} L${(this.#_n[14]-n)/r} ${(this.#_n[15]-a)/o} Z`;const u=[];u.push(`M${t[4]} ${t[5]}`);for(let e=6;e<t.length;e+=6)isNaN(t[e])?u.push(`L${t[e+4]} ${t[e+5]}`):u.push(`C${t[e]} ${t[e+1]} ${t[e+2]} ${t[e+3]} ${t[e+4]} ${t[e+5]}`);u.push(`L${(i[0]-n)/r} ${(i[1]-a)/o} L${l} ${h} L${d} ${c} L${(s[0]-n)/r} ${(s[1]-a)/o}`);for(let t=e.length-6;t>=6;t-=6)isNaN(e[t])?u.push(`L${e[t+4]} ${e[t+5]}`):u.push(`C${e[t]} ${e[t+1]} ${e[t+2]} ${e[t+3]} ${e[t+4]} ${e[t+5]}`);u.push(`L${e[4]} ${e[5]} Z`);return u.join(" ")}getOutlines(){const t=this.#xn,e=this.#vn,i=this.#_n,s=i.subarray(4,6),n=i.subarray(16,18),[a,r,o,l]=this.#dn,h=new Float64Array((this.#Pn?.length??0)+2);for(let t=0,e=h.length-2;t<e;t+=2){h[t]=(this.#Pn[t]-a)/o;h[t+1]=(this.#Pn[t+1]-r)/l}h[h.length-2]=(this.#En-a)/o;h[h.length-1]=(this.#Cn-r)/l;const[d,c,u,p]=this.#In();if(isNaN(i[6])&&!this.isEmpty()){const t=new Float64Array(36);t.set([NaN,NaN,NaN,NaN,(i[2]-a)/o,(i[3]-r)/l,NaN,NaN,NaN,NaN,(i[4]-a)/o,(i[5]-r)/l,NaN,NaN,NaN,NaN,d,c,NaN,NaN,NaN,NaN,u,p,NaN,NaN,NaN,NaN,(i[16]-a)/o,(i[17]-r)/l,NaN,NaN,NaN,NaN,(i[14]-a)/o,(i[15]-r)/l],0);return new FreeHighlightOutline(t,h,this.#dn,this.#Mn,this.#yn,this.#wn)}const g=new Float64Array(this.#xn.length+24+this.#vn.length);let m=t.length;for(let e=0;e<m;e+=2)if(isNaN(t[e]))g[e]=g[e+1]=NaN;else{g[e]=t[e];g[e+1]=t[e+1]}g.set([NaN,NaN,NaN,NaN,(s[0]-a)/o,(s[1]-r)/l,NaN,NaN,NaN,NaN,d,c,NaN,NaN,NaN,NaN,u,p,NaN,NaN,NaN,NaN,(n[0]-a)/o,(n[1]-r)/l],m);m+=24;for(let t=e.length-6;t>=6;t-=6)for(let i=0;i<6;i+=2)if(isNaN(e[t+i])){g[m]=g[m+1]=NaN;m+=2}else{g[m]=e[t+i];g[m+1]=e[t+i+1];m+=2}g.set([NaN,NaN,NaN,NaN,e[4],e[5]],m);return new FreeHighlightOutline(g,h,this.#dn,this.#Mn,this.#yn,this.#wn)}}class FreeHighlightOutline extends Outline{#dn;#Ln=null;#yn;#wn;#Pn;#Mn;#Nn;constructor(t,e,i,s,n,a){super();this.#Nn=t;this.#Pn=e;this.#dn=i;this.#Mn=s;this.#yn=n;this.#wn=a;this.#On(a);const{x:r,y:o,width:l,height:h}=this.#Ln;for(let e=0,i=t.length;e<i;e+=2){t[e]=(t[e]-r)/l;t[e+1]=(t[e+1]-o)/h}for(let t=0,i=e.length;t<i;t+=2){e[t]=(e[t]-r)/l;e[t+1]=(e[t+1]-o)/h}}toSVGPath(){const t=[`M${this.#Nn[4]} ${this.#Nn[5]}`];for(let e=6,i=this.#Nn.length;e<i;e+=6)isNaN(this.#Nn[e])?t.push(`L${this.#Nn[e+4]} ${this.#Nn[e+5]}`):t.push(`C${this.#Nn[e]} ${this.#Nn[e+1]} ${this.#Nn[e+2]} ${this.#Nn[e+3]} ${this.#Nn[e+4]} ${this.#Nn[e+5]}`);t.push("Z");return t.join(" ")}serialize([t,e,i,s],n){const a=i-t,r=s-e;let o,l;switch(n){case 0:o=this.#Bn(this.#Nn,t,s,a,-r);l=this.#Bn(this.#Pn,t,s,a,-r);break;case 90:o=this.#Hn(this.#Nn,t,e,a,r);l=this.#Hn(this.#Pn,t,e,a,r);break;case 180:o=this.#Bn(this.#Nn,i,e,-a,r);l=this.#Bn(this.#Pn,i,e,-a,r);break;case 270:o=this.#Hn(this.#Nn,i,s,-a,-r);l=this.#Hn(this.#Pn,i,s,-a,-r)}return{outline:Array.from(o),points:[Array.from(l)]}}#Bn(t,e,i,s,n){const a=new Float64Array(t.length);for(let r=0,o=t.length;r<o;r+=2){a[r]=e+t[r]*s;a[r+1]=i+t[r+1]*n}return a}#Hn(t,e,i,s,n){const a=new Float64Array(t.length);for(let r=0,o=t.length;r<o;r+=2){a[r]=e+t[r+1]*s;a[r+1]=i+t[r]*n}return a}#On(t){const e=this.#Nn;let i=e[4],s=e[5],n=i,a=s,r=i,o=s,l=i,h=s;const d=t?Math.max:Math.min;for(let t=6,c=e.length;t<c;t+=6){if(isNaN(e[t])){n=Math.min(n,e[t+4]);a=Math.min(a,e[t+5]);r=Math.max(r,e[t+4]);o=Math.max(o,e[t+5]);if(h<e[t+5]){l=e[t+4];h=e[t+5]}else h===e[t+5]&&(l=d(l,e[t+4]))}else{const c=Util.bezierBoundingBox(i,s,...e.slice(t,t+6));n=Math.min(n,c[0]);a=Math.min(a,c[1]);r=Math.max(r,c[2]);o=Math.max(o,c[3]);if(h<c[3]){l=c[2];h=c[3]}else h===c[3]&&(l=d(l,c[2]))}i=e[t+4];s=e[t+5]}const c=n-this.#yn,u=a-this.#yn,p=r-n+2*this.#yn,g=o-a+2*this.#yn;this.#Ln={x:c,y:u,width:p,height:g,lastPoint:[l,h]}}get box(){return this.#Ln}getNewOutline(t,e){const{x:i,y:s,width:n,height:a}=this.#Ln,[r,o,l,h]=this.#dn,d=n*l,c=a*h,u=i*l+r,p=s*h+o,g=new FreeOutliner({x:this.#Pn[0]*d+u,y:this.#Pn[1]*c+p},this.#dn,this.#Mn,t,this.#wn,e??this.#yn);for(let t=2;t<this.#Pn.length;t+=2)g.add({x:this.#Pn[t]*d+u,y:this.#Pn[t+1]*c+p});return g.getOutlines()}}class ColorPicker{#gs=this.#ms.bind(this);#Un=this.#l.bind(this);#zn=null;#jn=null;#Wn;#$n=null;#Gn=!1;#Vn=!1;#a=null;#qn;#g=null;#Xn;static get _keyboardManager(){return shadow(this,"_keyboardManager",new KeyboardManager([[["Escape","mac+Escape"],ColorPicker.prototype._hideDropdownFromKeyboard],[[" ","mac+ "],ColorPicker.prototype._colorSelectFromKeyboard],[["ArrowDown","ArrowRight","mac+ArrowDown","mac+ArrowRight"],ColorPicker.prototype._moveToNext],[["ArrowUp","ArrowLeft","mac+ArrowUp","mac+ArrowLeft"],ColorPicker.prototype._moveToPrevious],[["Home","mac+Home"],ColorPicker.prototype._moveToBeginning],[["End","mac+End"],ColorPicker.prototype._moveToEnd]]))}constructor({editor:t=null,uiManager:e=null}){if(t){this.#Vn=!1;this.#Xn=m.HIGHLIGHT_COLOR;this.#a=t}else{this.#Vn=!0;this.#Xn=m.HIGHLIGHT_DEFAULT_COLOR}this.#g=t?._uiManager||e;this.#qn=this.#g._eventBus;this.#Wn=t?.color||this.#g?.highlightColors.values().next().value||"#FFFF98"}renderButton(){const t=this.#zn=document.createElement("button");t.className="colorPicker";t.tabIndex="0";t.setAttribute("data-l10n-id","pdfjs-editor-colorpicker-button");t.setAttribute("aria-haspopup",!0);const e=this.#g._signal;t.addEventListener("click",this.#Kn.bind(this),{signal:e});t.addEventListener("keydown",this.#gs,{signal:e});const i=this.#jn=document.createElement("span");i.className="swatch";i.setAttribute("aria-hidden",!0);i.style.backgroundColor=this.#Wn;t.append(i);return t}renderMainDropdown(){const t=this.#$n=this.#Yn();t.setAttribute("aria-orientation","horizontal");t.setAttribute("aria-labelledby","highlightColorPickerLabel");return t}#Yn(){const t=document.createElement("div"),e=this.#g._signal;t.addEventListener("contextmenu",noContextMenu,{signal:e});t.className="dropdown";t.role="listbox";t.setAttribute("aria-multiselectable",!1);t.setAttribute("aria-orientation","vertical");t.setAttribute("data-l10n-id","pdfjs-editor-colorpicker-dropdown");for(const[i,s]of this.#g.highlightColors){const n=document.createElement("button");n.tabIndex="0";n.role="option";n.setAttribute("data-color",s);n.title=i;n.setAttribute("data-l10n-id",`pdfjs-editor-colorpicker-${i}`);const a=document.createElement("span");n.append(a);a.className="swatch";a.style.backgroundColor=s;n.setAttribute("aria-selected",s===this.#Wn);n.addEventListener("click",this.#Qn.bind(this,s),{signal:e});t.append(n)}t.addEventListener("keydown",this.#gs,{signal:e});return t}#Qn(t,e){e.stopPropagation();this.#qn.dispatch("switchannotationeditorparams",{source:this,type:this.#Xn,value:t})}_colorSelectFromKeyboard(t){if(t.target===this.#zn){this.#Kn(t);return}const e=t.target.getAttribute("data-color");e&&this.#Qn(e,t)}_moveToNext(t){this.#Jn?t.target!==this.#zn?t.target.nextSibling?.focus():this.#$n.firstChild?.focus():this.#Kn(t)}_moveToPrevious(t){if(t.target!==this.#$n?.firstChild&&t.target!==this.#zn){this.#Jn||this.#Kn(t);t.target.previousSibling?.focus()}else this.#Jn&&this._hideDropdownFromKeyboard()}_moveToBeginning(t){this.#Jn?this.#$n.firstChild?.focus():this.#Kn(t)}_moveToEnd(t){this.#Jn?this.#$n.lastChild?.focus():this.#Kn(t)}#ms(t){ColorPicker._keyboardManager.exec(this,t)}#Kn(t){if(this.#Jn){this.hideDropdown();return}this.#Gn=0===t.detail;window.addEventListener("pointerdown",this.#Un,{signal:this.#g._signal});if(this.#$n){this.#$n.classList.remove("hidden");return}const e=this.#$n=this.#Yn();this.#zn.append(e)}#l(t){this.#$n?.contains(t.target)||this.hideDropdown()}hideDropdown(){this.#$n?.classList.add("hidden");window.removeEventListener("pointerdown",this.#Un)}get#Jn(){return this.#$n&&!this.#$n.classList.contains("hidden")}_hideDropdownFromKeyboard(){if(!this.#Vn)if(this.#Jn){this.hideDropdown();this.#zn.focus({preventScroll:!0,focusVisible:this.#Gn})}else this.#a?.unselect()}updateColor(t){this.#jn&&(this.#jn.style.backgroundColor=t);if(!this.#$n)return;const e=this.#g.highlightColors.values();for(const i of this.#$n.children)i.setAttribute("aria-selected",e.next().value===t)}destroy(){this.#zn?.remove();this.#zn=null;this.#jn=null;this.#$n?.remove();this.#$n=null}}class HighlightEditor extends AnnotationEditor{#Zn=null;#ta=0;#ea;#ia=null;#n=null;#sa=null;#na=null;#aa=0;#ra=null;#oa=null;#A=null;#la=!1;#ha=null;#da;#ca=null;#ua="";#kn;#pa="";static _defaultColor=null;static _defaultOpacity=1;static _defaultThickness=12;static _l10nPromise;static _type="highlight";static _editorType=g.HIGHLIGHT;static _freeHighlightId=-1;static _freeHighlight=null;static _freeHighlightClipId="";static get _keyboardManager(){const t=HighlightEditor.prototype;return shadow(this,"_keyboardManager",new KeyboardManager([[["ArrowLeft","mac+ArrowLeft"],t._moveCaret,{args:[0]}],[["ArrowRight","mac+ArrowRight"],t._moveCaret,{args:[1]}],[["ArrowUp","mac+ArrowUp"],t._moveCaret,{args:[2]}],[["ArrowDown","mac+ArrowDown"],t._moveCaret,{args:[3]}]]))}constructor(t){super({...t,name:"highlightEditor"});this.color=t.color||HighlightEditor._defaultColor;this.#kn=t.thickness||HighlightEditor._defaultThickness;this.#da=t.opacity||HighlightEditor._defaultOpacity;this.#ea=t.boxes||null;this.#pa=t.methodOfCreation||"";this.#ua=t.text||"";this._isDraggable=!1;if(t.highlightId>-1){this.#la=!0;this.#ga(t);this.#ma()}else{this.#Zn=t.anchorNode;this.#ta=t.anchorOffset;this.#na=t.focusNode;this.#aa=t.focusOffset;this.#fa();this.#ma();this.rotate(this.rotation)}}get telemetryInitialData(){return{action:"added",type:this.#la?"free_highlight":"highlight",color:this._uiManager.highlightColorNames.get(this.color),thickness:this.#kn,methodOfCreation:this.#pa}}get telemetryFinalData(){return{type:"highlight",color:this._uiManager.highlightColorNames.get(this.color)}}static computeTelemetryFinalData(t){return{numberOfColors:t.get("color").size}}#fa(){const t=new Outliner(this.#ea,.001);this.#oa=t.getOutlines();({x:this.x,y:this.y,width:this.width,height:this.height}=this.#oa.box);const e=new Outliner(this.#ea,.0025,.001,"ltr"===this._uiManager.direction);this.#sa=e.getOutlines();const{lastPoint:i}=this.#sa.box;this.#ha=[(i[0]-this.x)/this.width,(i[1]-this.y)/this.height]}#ga({highlightOutlines:t,highlightId:e,clipPathId:i}){this.#oa=t;this.#sa=t.getNewOutline(this.#kn/2+1.5,.0025);if(e>=0){this.#A=e;this.#ia=i;this.parent.drawLayer.finalizeLine(e,t);this.#ca=this.parent.drawLayer.highlightOutline(this.#sa)}else if(this.parent){const e=this.parent.viewport.rotation;this.parent.drawLayer.updateLine(this.#A,t);this.parent.drawLayer.updateBox(this.#A,HighlightEditor.#ba(this.#oa.box,(e-this.rotation+360)%360));this.parent.drawLayer.updateLine(this.#ca,this.#sa);this.parent.drawLayer.updateBox(this.#ca,HighlightEditor.#ba(this.#sa.box,e))}const{x:s,y:n,width:a,height:r}=t.box;switch(this.rotation){case 0:this.x=s;this.y=n;this.width=a;this.height=r;break;case 90:{const[t,e]=this.parentDimensions;this.x=n;this.y=1-s;this.width=a*e/t;this.height=r*t/e;break}case 180:this.x=1-s;this.y=1-n;this.width=a;this.height=r;break;case 270:{const[t,e]=this.parentDimensions;this.x=1-n;this.y=s;this.width=a*e/t;this.height=r*t/e;break}}const{lastPoint:o}=this.#sa.box;this.#ha=[(o[0]-s)/a,(o[1]-n)/r]}static initialize(t,e){AnnotationEditor.initialize(t,e);HighlightEditor._defaultColor||=e.highlightColors?.values().next().value||"#fff066"}static updateDefaultParams(t,e){switch(t){case m.HIGHLIGHT_DEFAULT_COLOR:HighlightEditor._defaultColor=e;break;case m.HIGHLIGHT_THICKNESS:HighlightEditor._defaultThickness=e}}translateInPage(t,e){}get toolbarPosition(){return this.#ha}updateParams(t,e){switch(t){case m.HIGHLIGHT_COLOR:this.#in(e);break;case m.HIGHLIGHT_THICKNESS:this.#Aa(e)}}static get defaultPropertiesToUpdate(){return[[m.HIGHLIGHT_DEFAULT_COLOR,HighlightEditor._defaultColor],[m.HIGHLIGHT_THICKNESS,HighlightEditor._defaultThickness]]}get propertiesToUpdate(){return[[m.HIGHLIGHT_COLOR,this.color||HighlightEditor._defaultColor],[m.HIGHLIGHT_THICKNESS,this.#kn||HighlightEditor._defaultThickness],[m.HIGHLIGHT_FREE,this.#la]]}#in(t){const setColor=t=>{this.color=t;this.parent?.drawLayer.changeColor(this.#A,t);this.#n?.updateColor(t)},e=this.color;this.addCommands({cmd:setColor.bind(this,t),undo:setColor.bind(this,e),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:m.HIGHLIGHT_COLOR,overwriteIfSameType:!0,keepUndo:!0});this._reportTelemetry({action:"color_changed",color:this._uiManager.highlightColorNames.get(t)},!0)}#Aa(t){const e=this.#kn,setThickness=t=>{this.#kn=t;this.#va(t)};this.addCommands({cmd:setThickness.bind(this,t),undo:setThickness.bind(this,e),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:m.INK_THICKNESS,overwriteIfSameType:!0,keepUndo:!0});this._reportTelemetry({action:"thickness_changed",thickness:t},!0)}async addEditToolbar(){const t=await super.addEditToolbar();if(!t)return null;if(this._uiManager.highlightColors){this.#n=new ColorPicker({editor:this});t.addColorPicker(this.#n)}return t}disableEditing(){super.disableEditing();this.div.classList.toggle("disabled",!0)}enableEditing(){super.enableEditing();this.div.classList.toggle("disabled",!1)}fixAndSetPosition(){return super.fixAndSetPosition(this.#ya())}getBaseTranslation(){return[0,0]}getRect(t,e){return super.getRect(t,e,this.#ya())}onceAdded(){this.parent.addUndoableEditor(this);this.div.focus()}remove(){this.#wa();this._reportTelemetry({action:"deleted"});super.remove()}rebuild(){if(this.parent){super.rebuild();if(null!==this.div){this.#ma();this.isAttachedToDOM||this.parent.add(this)}}}setParent(t){let e=!1;if(this.parent&&!t)this.#wa();else if(t){this.#ma(t);e=!this.parent&&this.div?.classList.contains("selectedEditor")}super.setParent(t);this.show(this._isVisible);e&&this.select()}#va(t){if(!this.#la)return;this.#ga({highlightOutlines:this.#oa.getNewOutline(t/2)});this.fixAndSetPosition();const[e,i]=this.parentDimensions;this.setDims(this.width*e,this.height*i)}#wa(){if(null!==this.#A&&this.parent){this.parent.drawLayer.remove(this.#A);this.#A=null;this.parent.drawLayer.remove(this.#ca);this.#ca=null}}#ma(t=this.parent){if(null===this.#A){({id:this.#A,clipPathId:this.#ia}=t.drawLayer.highlight(this.#oa,this.color,this.#da));this.#ca=t.drawLayer.highlightOutline(this.#sa);this.#ra&&(this.#ra.style.clipPath=this.#ia)}}static#ba({x:t,y:e,width:i,height:s},n){switch(n){case 90:return{x:1-e-s,y:t,width:s,height:i};case 180:return{x:1-t-i,y:1-e-s,width:i,height:s};case 270:return{x:e,y:1-t-i,width:s,height:i}}return{x:t,y:e,width:i,height:s}}rotate(t){const{drawLayer:e}=this.parent;let i;if(this.#la){t=(t-this.rotation+360)%360;i=HighlightEditor.#ba(this.#oa.box,t)}else i=HighlightEditor.#ba(this,t);e.rotate(this.#A,t);e.rotate(this.#ca,t);e.updateBox(this.#A,i);e.updateBox(this.#ca,HighlightEditor.#ba(this.#sa.box,t))}render(){if(this.div)return this.div;const t=super.render();if(this.#ua){t.setAttribute("aria-label",this.#ua);t.setAttribute("role","mark")}this.#la?t.classList.add("free"):this.div.addEventListener("keydown",this.#xa.bind(this),{signal:this._uiManager._signal});const e=this.#ra=document.createElement("div");t.append(e);e.setAttribute("aria-hidden","true");e.className="internal";e.style.clipPath=this.#ia;const[i,s]=this.parentDimensions;this.setDims(this.width*i,this.height*s);bindEvents(this,this.#ra,["pointerover","pointerleave"]);this.enableEditing();return t}pointerover(){this.parent.drawLayer.addClass(this.#ca,"hovered")}pointerleave(){this.parent.drawLayer.removeClass(this.#ca,"hovered")}#xa(t){HighlightEditor._keyboardManager.exec(this,t)}_moveCaret(t){this.parent.unselect(this);switch(t){case 0:case 2:this.#_a(!0);break;case 1:case 3:this.#_a(!1)}}#_a(t){if(!this.#Zn)return;const e=window.getSelection();t?e.setPosition(this.#Zn,this.#ta):e.setPosition(this.#na,this.#aa)}select(){super.select();if(this.#ca){this.parent?.drawLayer.removeClass(this.#ca,"hovered");this.parent?.drawLayer.addClass(this.#ca,"selected")}}unselect(){super.unselect();if(this.#ca){this.parent?.drawLayer.removeClass(this.#ca,"selected");this.#la||this.#_a(!1)}}get _mustFixPosition(){return!this.#la}show(t=this._isVisible){super.show(t);if(this.parent){this.parent.drawLayer.show(this.#A,t);this.parent.drawLayer.show(this.#ca,t)}}#ya(){return this.#la?this.rotation:0}#Ea(){if(this.#la)return null;const[t,e]=this.pageDimensions,[i,s]=this.pageTranslation,n=this.#ea,a=new Float32Array(8*n.length);let r=0;for(const{x:o,y:l,width:h,height:d}of n){const n=o*t+i,c=(1-l-d)*e+s;a[r]=a[r+4]=n;a[r+1]=a[r+3]=c;a[r+2]=a[r+6]=n+h*t;a[r+5]=a[r+7]=c+d*e;r+=8}return a}#Ca(t){return this.#oa.serialize(t,this.#ya())}static startHighlighting(t,e,{target:i,x:s,y:n}){const{x:a,y:r,width:o,height:l}=i.getBoundingClientRect(),h=new AbortController,d=t.combinedSignal(h),pointerUpCallback=e=>{h.abort();this.#Sa(t,e)};window.addEventListener("blur",pointerUpCallback,{signal:d});window.addEventListener("pointerup",pointerUpCallback,{signal:d});window.addEventListener("pointerdown",(t=>{t.preventDefault();t.stopPropagation()}),{capture:!0,passive:!1,signal:d});window.addEventListener("contextmenu",noContextMenu,{signal:d});i.addEventListener("pointermove",this.#Ta.bind(this,t),{signal:d});this._freeHighlight=new FreeOutliner({x:s,y:n},[a,r,o,l],t.scale,this._defaultThickness/2,e,.001);({id:this._freeHighlightId,clipPathId:this._freeHighlightClipId}=t.drawLayer.highlight(this._freeHighlight,this._defaultColor,this._defaultOpacity,!0))}static#Ta(t,e){this._freeHighlight.add(e)&&t.drawLayer.updatePath(this._freeHighlightId,this._freeHighlight)}static#Sa(t,e){this._freeHighlight.isEmpty()?t.drawLayer.removeFreeHighlight(this._freeHighlightId):t.createAndAddNewEditor(e,!1,{highlightId:this._freeHighlightId,highlightOutlines:this._freeHighlight.getOutlines(),clipPathId:this._freeHighlightClipId,methodOfCreation:"main_toolbar"});this._freeHighlightId=-1;this._freeHighlight=null;this._freeHighlightClipId=""}static deserialize(t,e,i){const s=super.deserialize(t,e,i),{rect:[n,a,r,o],color:l,quadPoints:h}=t;s.color=Util.makeHexColor(...l);s.#da=t.opacity;const[d,c]=s.pageDimensions;s.width=(r-n)/d;s.height=(o-a)/c;const u=s.#ea=[];for(let t=0;t<h.length;t+=8)u.push({x:(h[4]-r)/d,y:(o-(1-h[t+5]))/c,width:(h[t+2]-h[t])/d,height:(h[t+5]-h[t+1])/c});s.#fa();return s}serialize(t=!1){if(this.isEmpty()||t)return null;const e=this.getRect(0,0),i=AnnotationEditor._colorManager.convert(this.color);return{annotationType:g.HIGHLIGHT,color:i,opacity:this.#da,thickness:this.#kn,quadPoints:this.#Ea(),outlines:this.#Ca(e),pageIndex:this.pageIndex,rect:e,rotation:this.#ya(),structTreeParentId:this._structTreeParentId}}static canCreateNewEmptyEditor(){return!1}}class InkEditor extends AnnotationEditor{#Ma=0;#ka=0;#Pa=null;#Fa=new Path2D;#Da=!1;#Ra=null;#Ia=!1;#La=!1;#Na=null;#Oa=null;#Ba=0;#Ha=0;#Ua=null;static _defaultColor=null;static _defaultOpacity=1;static _defaultThickness=1;static _type="ink";static _editorType=g.INK;constructor(t){super({...t,name:"inkEditor"});this.color=t.color||null;this.thickness=t.thickness||null;this.opacity=t.opacity||null;this.paths=[];this.bezierPath2D=[];this.allRawPaths=[];this.currentPath=[];this.scaleFactor=1;this.translationX=this.translationY=0;this.x=0;this.y=0;this._willKeepAspectRatio=!0}static initialize(t,e){AnnotationEditor.initialize(t,e)}static updateDefaultParams(t,e){switch(t){case m.INK_THICKNESS:InkEditor._defaultThickness=e;break;case m.INK_COLOR:InkEditor._defaultColor=e;break;case m.INK_OPACITY:InkEditor._defaultOpacity=e/100}}updateParams(t,e){switch(t){case m.INK_THICKNESS:this.#Aa(e);break;case m.INK_COLOR:this.#in(e);break;case m.INK_OPACITY:this.#za(e)}}static get defaultPropertiesToUpdate(){return[[m.INK_THICKNESS,InkEditor._defaultThickness],[m.INK_COLOR,InkEditor._defaultColor||AnnotationEditor._defaultLineColor],[m.INK_OPACITY,Math.round(100*InkEditor._defaultOpacity)]]}get propertiesToUpdate(){return[[m.INK_THICKNESS,this.thickness||InkEditor._defaultThickness],[m.INK_COLOR,this.color||InkEditor._defaultColor||AnnotationEditor._defaultLineColor],[m.INK_OPACITY,Math.round(100*(this.opacity??InkEditor._defaultOpacity))]]}#Aa(t){const setThickness=t=>{this.thickness=t;this.#ja()},e=this.thickness;this.addCommands({cmd:setThickness.bind(this,t),undo:setThickness.bind(this,e),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:m.INK_THICKNESS,overwriteIfSameType:!0,keepUndo:!0})}#in(t){const setColor=t=>{this.color=t;this.#Wa()},e=this.color;this.addCommands({cmd:setColor.bind(this,t),undo:setColor.bind(this,e),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:m.INK_COLOR,overwriteIfSameType:!0,keepUndo:!0})}#za(t){const setOpacity=t=>{this.opacity=t;this.#Wa()};t/=100;const e=this.opacity;this.addCommands({cmd:setOpacity.bind(this,t),undo:setOpacity.bind(this,e),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:m.INK_OPACITY,overwriteIfSameType:!0,keepUndo:!0})}rebuild(){if(this.parent){super.rebuild();if(null!==this.div){if(!this.canvas){this.#$a();this.#Ga()}if(!this.isAttachedToDOM){this.parent.add(this);this.#Va()}this.#ja()}}}remove(){if(null!==this.canvas){this.isEmpty()||this.commit();this.canvas.width=this.canvas.height=0;this.canvas.remove();this.canvas=null;if(this.#Pa){clearTimeout(this.#Pa);this.#Pa=null}this.#Na?.disconnect();this.#Na=null;super.remove()}}setParent(t){!this.parent&&t?this._uiManager.removeShouldRescale(this):this.parent&&null===t&&this._uiManager.addShouldRescale(this);super.setParent(t)}onScaleChanging(){const[t,e]=this.parentDimensions,i=this.width*t,s=this.height*e;this.setDimensions(i,s)}enableEditMode(){if(!this.#Da&&null!==this.canvas){super.enableEditMode();this._isDraggable=!1;this.#qa()}}disableEditMode(){if(this.isInEditMode()&&null!==this.canvas){super.disableEditMode();this._isDraggable=!this.isEmpty();this.div.classList.remove("editing");this.#Xa()}}onceAdded(){this._isDraggable=!this.isEmpty()}isEmpty(){return 0===this.paths.length||1===this.paths.length&&0===this.paths[0].length}#Ka(){const{parentRotation:t,parentDimensions:[e,i]}=this;switch(t){case 90:return[0,i,i,e];case 180:return[e,i,e,i];case 270:return[e,0,i,e];default:return[0,0,e,i]}}#Ya(){const{ctx:t,color:e,opacity:i,thickness:s,parentScale:n,scaleFactor:a}=this;t.lineWidth=s*n/a;t.lineCap="round";t.lineJoin="round";t.miterLimit=10;t.strokeStyle=`${e}${function opacityToHex(t){return Math.round(Math.min(255,Math.max(1,255*t))).toString(16).padStart(2,"0")}(i)}`}#Qa(t,e){this.canvas.addEventListener("contextmenu",noContextMenu,{signal:this._uiManager._signal});this.#Xa();this.#Ra=new AbortController;const i=this._uiManager.combinedSignal(this.#Ra);this.canvas.addEventListener("pointerleave",this.canvasPointerleave.bind(this),{signal:i});this.canvas.addEventListener("pointermove",this.canvasPointermove.bind(this),{signal:i});this.canvas.addEventListener("pointerup",this.canvasPointerup.bind(this),{signal:i});this.isEditing=!0;if(!this.#La){this.#La=!0;this.#Va();this.thickness||=InkEditor._defaultThickness;this.color||=InkEditor._defaultColor||AnnotationEditor._defaultLineColor;this.opacity??=InkEditor._defaultOpacity}this.currentPath.push([t,e]);this.#Ia=!1;this.#Ya();this.#Ua=()=>{this.#Ja();this.#Ua&&window.requestAnimationFrame(this.#Ua)};window.requestAnimationFrame(this.#Ua)}#Za(t,e){const[i,s]=this.currentPath.at(-1);if(this.currentPath.length>1&&t===i&&e===s)return;const n=this.currentPath;let a=this.#Fa;n.push([t,e]);this.#Ia=!0;if(n.length<=2){a.moveTo(...n[0]);a.lineTo(t,e)}else{if(3===n.length){this.#Fa=a=new Path2D;a.moveTo(...n[0])}this.#tr(a,...n.at(-3),...n.at(-2),t,e)}}#er(){if(0===this.currentPath.length)return;const t=this.currentPath.at(-1);this.#Fa.lineTo(...t)}#ir(t,e){this.#Ua=null;t=Math.min(Math.max(t,0),this.canvas.width);e=Math.min(Math.max(e,0),this.canvas.height);this.#Za(t,e);this.#er();let i;if(1!==this.currentPath.length)i=this.#sr();else{const s=[t,e];i=[[s,s.slice(),s.slice(),s]]}const s=this.#Fa,n=this.currentPath;this.currentPath=[];this.#Fa=new Path2D;this.addCommands({cmd:()=>{this.allRawPaths.push(n);this.paths.push(i);this.bezierPath2D.push(s);this._uiManager.rebuild(this)},undo:()=>{this.allRawPaths.pop();this.paths.pop();this.bezierPath2D.pop();if(0===this.paths.length)this.remove();else{if(!this.canvas){this.#$a();this.#Ga()}this.#ja()}},mustExec:!0})}#Ja(){if(!this.#Ia)return;this.#Ia=!1;const t=Math.ceil(this.thickness*this.parentScale),e=this.currentPath.slice(-3),i=e.map((t=>t[0])),s=e.map((t=>t[1])),{ctx:n}=(Math.min(...i),Math.max(...i),Math.min(...s),Math.max(...s),this);n.save();n.clearRect(0,0,this.canvas.width,this.canvas.height);for(const t of this.bezierPath2D)n.stroke(t);n.stroke(this.#Fa);n.restore()}#tr(t,e,i,s,n,a,r){const o=(e+s)/2,l=(i+n)/2,h=(s+a)/2,d=(n+r)/2;t.bezierCurveTo(o+2*(s-o)/3,l+2*(n-l)/3,h+2*(s-h)/3,d+2*(n-d)/3,h,d)}#sr(){const t=this.currentPath;if(t.length<=2)return[[t[0],t[0],t.at(-1),t.at(-1)]];const e=[];let i,[s,n]=t[0];for(i=1;i<t.length-2;i++){const[a,r]=t[i],[o,l]=t[i+1],h=(a+o)/2,d=(r+l)/2,c=[s+2*(a-s)/3,n+2*(r-n)/3],u=[h+2*(a-h)/3,d+2*(r-d)/3];e.push([[s,n],c,u,[h,d]]);[s,n]=[h,d]}const[a,r]=t[i],[o,l]=t[i+1],h=[s+2*(a-s)/3,n+2*(r-n)/3],d=[o+2*(a-o)/3,l+2*(r-l)/3];e.push([[s,n],h,d,[o,l]]);return e}#Wa(){if(this.isEmpty()){this.#nr();return}this.#Ya();const{canvas:t,ctx:e}=this;e.setTransform(1,0,0,1,0,0);e.clearRect(0,0,t.width,t.height);this.#nr();for(const t of this.bezierPath2D)e.stroke(t)}commit(){if(!this.#Da){super.commit();this.isEditing=!1;this.disableEditMode();this.setInForeground();this.#Da=!0;this.div.classList.add("disabled");this.#ja(!0);this.select();this.parent.addInkEditorIfNeeded(!0);this.moveInDOM();this.div.focus({preventScroll:!0})}}focusin(t){if(this._focusEventsAllowed){super.focusin(t);this.enableEditMode()}}#qa(){if(this.#Oa)return;this.#Oa=new AbortController;const t=this._uiManager.combinedSignal(this.#Oa);this.canvas.addEventListener("pointerdown",this.canvasPointerdown.bind(this),{signal:t})}#Xa(){this.pointerdownAC?.abort();this.pointerdownAC=null}canvasPointerdown(t){if(0===t.button&&this.isInEditMode()&&!this.#Da){this.setInForeground();t.preventDefault();this.div.contains(document.activeElement)||this.div.focus({preventScroll:!0});this.#Qa(t.offsetX,t.offsetY)}}canvasPointermove(t){t.preventDefault();this.#Za(t.offsetX,t.offsetY)}canvasPointerup(t){t.preventDefault();this.#ar(t)}canvasPointerleave(t){this.#ar(t)}#ar(t){this.#Ra?.abort();this.#Ra=null;this.#qa();this.#Pa&&clearTimeout(this.#Pa);this.#Pa=setTimeout((()=>{this.#Pa=null;this.canvas.removeEventListener("contextmenu",noContextMenu)}),10);this.#ir(t.offsetX,t.offsetY);this.addToAnnotationStorage();this.setInBackground()}#$a(){this.canvas=document.createElement("canvas");this.canvas.width=this.canvas.height=0;this.canvas.className="inkEditorCanvas";this.canvas.setAttribute("data-l10n-id","pdfjs-ink-canvas");this.div.append(this.canvas);this.ctx=this.canvas.getContext("2d")}#Ga(){this.#Na=new ResizeObserver((t=>{const e=t[0].contentRect;e.width&&e.height&&this.setDimensions(e.width,e.height)}));this.#Na.observe(this.div);this._uiManager._signal.addEventListener("abort",(()=>{this.#Na?.disconnect();this.#Na=null}),{once:!0})}get isResizable(){return!this.isEmpty()&&this.#Da}render(){if(this.div)return this.div;let t,e;if(this.width){t=this.x;e=this.y}super.render();this.div.setAttribute("data-l10n-id","pdfjs-ink");const[i,s,n,a]=this.#Ka();this.setAt(i,s,0,0);this.setDims(n,a);this.#$a();if(this.width){const[i,s]=this.parentDimensions;this.setAspectRatio(this.width*i,this.height*s);this.setAt(t*i,e*s,this.width*i,this.height*s);this.#La=!0;this.#Va();this.setDims(this.width*i,this.height*s);this.#Wa();this.div.classList.add("disabled")}else{this.div.classList.add("editing");this.enableEditMode()}this.#Ga();return this.div}#Va(){if(!this.#La)return;const[t,e]=this.parentDimensions;this.canvas.width=Math.ceil(this.width*t);this.canvas.height=Math.ceil(this.height*e);this.#nr()}setDimensions(t,e){const i=Math.round(t),s=Math.round(e);if(this.#Ba===i&&this.#Ha===s)return;this.#Ba=i;this.#Ha=s;this.canvas.style.visibility="hidden";const[n,a]=this.parentDimensions;this.width=t/n;this.height=e/a;this.fixAndSetPosition();this.#Da&&this.#rr(t,e);this.#Va();this.#Wa();this.canvas.style.visibility="visible";this.fixDims()}#rr(t,e){const i=this.#or(),s=(t-i)/this.#ka,n=(e-i)/this.#Ma;this.scaleFactor=Math.min(s,n)}#nr(){const t=this.#or()/2;this.ctx.setTransform(this.scaleFactor,0,0,this.scaleFactor,this.translationX*this.scaleFactor+t,this.translationY*this.scaleFactor+t)}static#lr(t){const e=new Path2D;for(let i=0,s=t.length;i<s;i++){const[s,n,a,r]=t[i];0===i&&e.moveTo(...s);e.bezierCurveTo(n[0],n[1],a[0],a[1],r[0],r[1])}return e}static#hr(t,e,i){const[s,n,a,r]=e;switch(i){case 0:for(let e=0,i=t.length;e<i;e+=2){t[e]+=s;t[e+1]=r-t[e+1]}break;case 90:for(let e=0,i=t.length;e<i;e+=2){const i=t[e];t[e]=t[e+1]+s;t[e+1]=i+n}break;case 180:for(let e=0,i=t.length;e<i;e+=2){t[e]=a-t[e];t[e+1]+=n}break;case 270:for(let e=0,i=t.length;e<i;e+=2){const i=t[e];t[e]=a-t[e+1];t[e+1]=r-i}break;default:throw new Error("Invalid rotation")}return t}static#dr(t,e,i){const[s,n,a,r]=e;switch(i){case 0:for(let e=0,i=t.length;e<i;e+=2){t[e]-=s;t[e+1]=r-t[e+1]}break;case 90:for(let e=0,i=t.length;e<i;e+=2){const i=t[e];t[e]=t[e+1]-n;t[e+1]=i-s}break;case 180:for(let e=0,i=t.length;e<i;e+=2){t[e]=a-t[e];t[e+1]-=n}break;case 270:for(let e=0,i=t.length;e<i;e+=2){const i=t[e];t[e]=r-t[e+1];t[e+1]=a-i}break;default:throw new Error("Invalid rotation")}return t}#cr(t,e,i,s){const n=[],a=this.thickness/2,r=t*e+a,o=t*i+a;for(const e of this.paths){const i=[],a=[];for(let s=0,n=e.length;s<n;s++){const[l,h,d,c]=e[s];if(l[0]===c[0]&&l[1]===c[1]&&1===n){const e=t*l[0]+r,s=t*l[1]+o;i.push(e,s);a.push(e,s);break}const u=t*l[0]+r,p=t*l[1]+o,g=t*h[0]+r,m=t*h[1]+o,f=t*d[0]+r,b=t*d[1]+o,A=t*c[0]+r,v=t*c[1]+o;if(0===s){i.push(u,p);a.push(u,p)}i.push(g,m,f,b,A,v);a.push(g,m);s===n-1&&a.push(A,v)}n.push({bezier:InkEditor.#hr(i,s,this.rotation),points:InkEditor.#hr(a,s,this.rotation)})}return n}#ur(){let t=1/0,e=-1/0,i=1/0,s=-1/0;for(const n of this.paths)for(const[a,r,o,l]of n){const n=Util.bezierBoundingBox(...a,...r,...o,...l);t=Math.min(t,n[0]);i=Math.min(i,n[1]);e=Math.max(e,n[2]);s=Math.max(s,n[3])}return[t,i,e,s]}#or(){return this.#Da?Math.ceil(this.thickness*this.parentScale):0}#ja(t=!1){if(this.isEmpty())return;if(!this.#Da){this.#Wa();return}const e=this.#ur(),i=this.#or();this.#ka=Math.max(AnnotationEditor.MIN_SIZE,e[2]-e[0]);this.#Ma=Math.max(AnnotationEditor.MIN_SIZE,e[3]-e[1]);const s=Math.ceil(i+this.#ka*this.scaleFactor),n=Math.ceil(i+this.#Ma*this.scaleFactor),[a,r]=this.parentDimensions;this.width=s/a;this.height=n/r;this.setAspectRatio(s,n);const o=this.translationX,l=this.translationY;this.translationX=-e[0];this.translationY=-e[1];this.#Va();this.#Wa();this.#Ba=s;this.#Ha=n;this.setDims(s,n);const h=t?i/this.scaleFactor/2:0;this.translate(o-this.translationX-h,l-this.translationY-h)}static deserialize(t,e,i){if(t instanceof InkAnnotationElement)return null;const s=super.deserialize(t,e,i);s.thickness=t.thickness;s.color=Util.makeHexColor(...t.color);s.opacity=t.opacity;const[n,a]=s.pageDimensions,r=s.width*n,o=s.height*a,l=s.parentScale,h=t.thickness/2;s.#Da=!0;s.#Ba=Math.round(r);s.#Ha=Math.round(o);const{paths:d,rect:c,rotation:u}=t;for(let{bezier:t}of d){t=InkEditor.#dr(t,c,u);const e=[];s.paths.push(e);let i=l*(t[0]-h),n=l*(t[1]-h);for(let s=2,a=t.length;s<a;s+=6){const a=l*(t[s]-h),r=l*(t[s+1]-h),o=l*(t[s+2]-h),d=l*(t[s+3]-h),c=l*(t[s+4]-h),u=l*(t[s+5]-h);e.push([[i,n],[a,r],[o,d],[c,u]]);i=c;n=u}const a=this.#lr(e);s.bezierPath2D.push(a)}const p=s.#ur();s.#ka=Math.max(AnnotationEditor.MIN_SIZE,p[2]-p[0]);s.#Ma=Math.max(AnnotationEditor.MIN_SIZE,p[3]-p[1]);s.#rr(r,o);return s}serialize(){if(this.isEmpty())return null;const t=this.getRect(0,0),e=AnnotationEditor._colorManager.convert(this.ctx.strokeStyle);return{annotationType:g.INK,color:e,thickness:this.thickness,opacity:this.opacity,paths:this.#cr(this.scaleFactor/this.parentScale,this.translationX,this.translationY,t),pageIndex:this.pageIndex,rect:t,rotation:this.rotation,structTreeParentId:this._structTreeParentId}}}class StampEditor extends AnnotationEditor{#pr=null;#gr=null;#mr=null;#fr=null;#br=null;#Ar="";#vr=null;#Na=null;#yr=null;#wr=!1;#xr=!1;static _type="stamp";static _editorType=g.STAMP;constructor(t){super({...t,name:"stampEditor"});this.#fr=t.bitmapUrl;this.#br=t.bitmapFile}static initialize(t,e){AnnotationEditor.initialize(t,e)}static get supportedTypes(){return shadow(this,"supportedTypes",["apng","avif","bmp","gif","jpeg","png","svg+xml","webp","x-icon"].map((t=>`image/${t}`)))}static get supportedTypesStr(){return shadow(this,"supportedTypesStr",this.supportedTypes.join(","))}static isHandlingMimeForPasting(t){return this.supportedTypes.includes(t)}static paste(t,e){e.pasteEditor(g.STAMP,{bitmapFile:t.getAsFile()})}altTextFinish(){this._uiManager.useNewAltTextFlow&&(this.div.hidden=!1);super.altTextFinish()}get telemetryFinalData(){return{type:"stamp",hasAltText:!!this.altTextData?.altText}}static computeTelemetryFinalData(t){const e=t.get("hasAltText");return{hasAltText:e.get(!0)??0,hasNoAltText:e.get(!1)??0}}#_r(t,e=!1){if(t){this.#pr=t.bitmap;if(!e){this.#gr=t.id;this.#wr=t.isSvg}t.file&&(this.#Ar=t.file.name);this.#$a()}else this.remove()}#Er(){this.#mr=null;this._uiManager.enableWaiting(!1);if(this.#vr)if(this._uiManager.useNewAltTextWhenAddingImage&&this._uiManager.useNewAltTextFlow&&this.#pr){this._editToolbar.hide();this._uiManager.editAltText(this,!0)}else{if(!this._uiManager.useNewAltTextWhenAddingImage&&this._uiManager.useNewAltTextFlow&&this.#pr){this._reportTelemetry({action:"pdfjs.image.image_added",data:{alt_text_modal:!1,alt_text_type:"empty"}});try{this.mlGuessAltText()}catch{}}this.div.focus()}}async mlGuessAltText(t=null,e=!0){if(this.hasAltTextData())return null;const{mlManager:i}=this._uiManager;if(!i)throw new Error("No ML.");if(!await i.isEnabledFor("altText"))throw new Error("ML isn\'t enabled for alt text.");const{data:s,width:n,height:a}=t||this.copyCanvas(null,!0).imageData,r=await i.guess({name:"altText",request:{data:s,width:n,height:a,channels:s.length/(n*a)}});if(!r)throw new Error("No response from the AI service.");if(r.error)throw new Error("Error from the AI service.");if(r.cancel)return null;if(!r.output)throw new Error("No valid response from the AI service.");const o=r.output;await this.setGuessedAltText(o);e&&!this.hasAltTextData()&&(this.altTextData={alt:o,decorative:!1});return o}#Cr(){if(this.#gr){this._uiManager.enableWaiting(!0);this._uiManager.imageManager.getFromId(this.#gr).then((t=>this.#_r(t,!0))).finally((()=>this.#Er()));return}if(this.#fr){const t=this.#fr;this.#fr=null;this._uiManager.enableWaiting(!0);this.#mr=this._uiManager.imageManager.getFromUrl(t).then((t=>this.#_r(t))).finally((()=>this.#Er()));return}if(this.#br){const t=this.#br;this.#br=null;this._uiManager.enableWaiting(!0);this.#mr=this._uiManager.imageManager.getFromFile(t).then((t=>this.#_r(t))).finally((()=>this.#Er()));return}const t=document.createElement("input");t.type="file";t.accept=StampEditor.supportedTypesStr;const e=this._uiManager._signal;this.#mr=new Promise((i=>{t.addEventListener("change",(async()=>{if(t.files&&0!==t.files.length){this._uiManager.enableWaiting(!0);const e=await this._uiManager.imageManager.getFromFile(t.files[0]);this._reportTelemetry({action:"pdfjs.image.image_selected",data:{alt_text_modal:this._uiManager.useNewAltTextFlow}});this.#_r(e)}else this.remove();i()}),{signal:e});t.addEventListener("cancel",(()=>{this.remove();i()}),{signal:e})})).finally((()=>this.#Er()));t.click()}remove(){if(this.#gr){this.#pr=null;this._uiManager.imageManager.deleteId(this.#gr);this.#vr?.remove();this.#vr=null;this.#Na?.disconnect();this.#Na=null;if(this.#yr){clearTimeout(this.#yr);this.#yr=null}}super.remove()}rebuild(){if(this.parent){super.rebuild();if(null!==this.div){this.#gr&&null===this.#vr&&this.#Cr();this.isAttachedToDOM||this.parent.add(this)}}else this.#gr&&this.#Cr()}onceAdded(){this._isDraggable=!0;this.div.focus()}isEmpty(){return!(this.#mr||this.#pr||this.#fr||this.#br||this.#gr)}get isResizable(){return!0}render(){if(this.div)return this.div;let t,e;if(this.width){t=this.x;e=this.y}super.render();this.div.hidden=!0;this.addAltTextButton();this.#pr?this.#$a():this.#Cr();if(this.width){const[i,s]=this.parentDimensions;this.setAt(t*i,e*s,this.width*i,this.height*s)}return this.div}#$a(){const{div:t}=this;let{width:e,height:i}=this.#pr;const[s,n]=this.pageDimensions,a=.75;if(this.width){e=this.width*s;i=this.height*n}else if(e>a*s||i>a*n){const t=Math.min(a*s/e,a*n/i);e*=t;i*=t}const[r,o]=this.parentDimensions;this.setDims(e*r/s,i*o/n);this._uiManager.enableWaiting(!1);const l=this.#vr=document.createElement("canvas");t.append(l);this._uiManager.useNewAltTextWhenAddingImage&&this._uiManager.useNewAltTextFlow||(t.hidden=!1);this.#Sr(e,i);this.#Ga();if(!this.#xr){this.parent.addUndoableEditor(this);this.#xr=!0}this._reportTelemetry({action:"inserted_image"});this.#Ar&&l.setAttribute("aria-label",this.#Ar)}copyCanvas(t,e=!1){t||(t=224);const{width:i,height:s}=this.#pr,n=document.createElement("canvas");let a=this.#pr,r=i,o=s;if(i>t||s>t){const e=Math.min(t/i,t/s);r=Math.floor(i*e);o=Math.floor(s*e);this.#wr||(a=this.#Tr(r,o))}n.width=r;n.height=o;const l=n.getContext("2d");l.filter=this._uiManager.hcmFilter;let h="white",d="#cfcfd8";if("none"!==this._uiManager.hcmFilter)d="black";else if(window.matchMedia?.("(prefers-color-scheme: dark)").matches){h="#8f8f9d";d="#42414d"}const c=15,u=new OffscreenCanvas(30,30),p=u.getContext("2d");p.fillStyle=h;p.fillRect(0,0,30,30);p.fillStyle=d;p.fillRect(0,0,c,c);p.fillRect(c,c,c,c);l.fillStyle=l.createPattern(u,"repeat");l.fillRect(0,0,r,o);if(e){const t=new OffscreenCanvas(r,o),e=t.getContext("2d",{willReadFrequently:!0});e.drawImage(a,0,0,a.width,a.height,0,0,r,o);const i=e.getImageData(0,0,r,o).data;l.drawImage(t,0,0);return{canvas:n,imageData:{width:r,height:o,data:i}}}l.drawImage(a,0,0,a.width,a.height,0,0,r,o);return{canvas:n,imageData:null}}#Mr(t,e){const[i,s]=this.parentDimensions;this.width=t/i;this.height=e/s;this.setDims(t,e);this._initialOptions?.isCentered?this.center():this.fixAndSetPosition();this._initialOptions=null;null!==this.#yr&&clearTimeout(this.#yr);this.#yr=setTimeout((()=>{this.#yr=null;this.#Sr(t,e)}),200)}#Tr(t,e){const{width:i,height:s}=this.#pr;let n=i,a=s,r=this.#pr;for(;n>2*t||a>2*e;){const i=n,s=a;n>2*t&&(n=n>=16384?Math.floor(n/2)-1:Math.ceil(n/2));a>2*e&&(a=a>=16384?Math.floor(a/2)-1:Math.ceil(a/2));const o=new OffscreenCanvas(n,a);o.getContext("2d").drawImage(r,0,0,i,s,0,0,n,a);r=o.transferToImageBitmap()}return r}#Sr(t,e){t=Math.ceil(t);e=Math.ceil(e);const i=this.#vr;if(!i||i.width===t&&i.height===e)return;i.width=t;i.height=e;const s=this.#wr?this.#pr:this.#Tr(t,e),n=i.getContext("2d");n.filter=this._uiManager.hcmFilter;n.drawImage(s,0,0,s.width,s.height,0,0,t,e)}getImageForAltText(){return this.#vr}#kr(t){if(t){if(this.#wr){const t=this._uiManager.imageManager.getSvgUrl(this.#gr);if(t)return t}const t=document.createElement("canvas");({width:t.width,height:t.height}=this.#pr);t.getContext("2d").drawImage(this.#pr,0,0);return t.toDataURL()}if(this.#wr){const[t,e]=this.pageDimensions,i=Math.round(this.width*t*PixelsPerInch.PDF_TO_CSS_UNITS),s=Math.round(this.height*e*PixelsPerInch.PDF_TO_CSS_UNITS),n=new OffscreenCanvas(i,s);n.getContext("2d").drawImage(this.#pr,0,0,this.#pr.width,this.#pr.height,0,0,i,s);return n.transferToImageBitmap()}return structuredClone(this.#pr)}#Ga(){if(this._uiManager._signal){this.#Na=new ResizeObserver((t=>{const e=t[0].contentRect;e.width&&e.height&&this.#Mr(e.width,e.height)}));this.#Na.observe(this.div);this._uiManager._signal.addEventListener("abort",(()=>{this.#Na?.disconnect();this.#Na=null}),{once:!0})}}static deserialize(t,e,i){if(t instanceof StampAnnotationElement)return null;const s=super.deserialize(t,e,i),{rect:n,bitmapUrl:a,bitmapId:r,isSvg:o,accessibilityData:l}=t;r&&i.imageManager.isValidId(r)?s.#gr=r:s.#fr=a;s.#wr=o;const[h,d]=s.pageDimensions;s.width=(n[2]-n[0])/h;s.height=(n[3]-n[1])/d;l&&(s.altTextData=l);return s}serialize(t=!1,e=null){if(this.isEmpty())return null;const i={annotationType:g.STAMP,bitmapId:this.#gr,pageIndex:this.pageIndex,rect:this.getRect(0,0),rotation:this.rotation,isSvg:this.#wr,structTreeParentId:this._structTreeParentId};if(t){i.bitmapUrl=this.#kr(!0);i.accessibilityData=this.serializeAltText(!0);return i}const{decorative:s,altText:n}=this.serializeAltText(!1);!s&&n&&(i.accessibilityData={type:"Figure",alt:n});if(null===e)return i;e.stamps||=new Map;const a=this.#wr?(i.rect[2]-i.rect[0])*(i.rect[3]-i.rect[1]):null;if(e.stamps.has(this.#gr)){if(this.#wr){const t=e.stamps.get(this.#gr);if(a>t.area){t.area=a;t.serialized.bitmap.close();t.serialized.bitmap=this.#kr(!1)}}}else{e.stamps.set(this.#gr,{area:a,serialized:i});i.bitmap=this.#kr(!1)}return i}}class AnnotationEditorLayer{#Vs;#Pr=!1;#Fr=null;#Dr=null;#Rr=null;#Ir=new Map;#Lr=!1;#Nr=!1;#Or=!1;#Br=null;#Hr=null;#g;static _initialized=!1;static#H=new Map([FreeTextEditor,InkEditor,StampEditor,HighlightEditor].map((t=>[t._editorType,t])));constructor({uiManager:t,pageIndex:e,div:i,accessibilityManager:s,annotationLayer:n,drawLayer:a,textLayer:r,viewport:o,l10n:l}){const h=[...AnnotationEditorLayer.#H.values()];if(!AnnotationEditorLayer._initialized){AnnotationEditorLayer._initialized=!0;for(const e of h)e.initialize(l,t)}t.registerEditorTypes(h);this.#g=t;this.pageIndex=e;this.div=i;this.#Vs=s;this.#Fr=n;this.viewport=o;this.#Br=r;this.drawLayer=a;this.#g.addLayer(this)}get isEmpty(){return 0===this.#Ir.size}get isInvisible(){return this.isEmpty&&this.#g.getMode()===g.NONE}updateToolbar(t){this.#g.updateToolbar(t)}updateMode(t=this.#g.getMode()){this.#Ur();switch(t){case g.NONE:this.disableTextSelection();this.togglePointerEvents(!1);this.toggleAnnotationLayerPointerEvents(!0);this.disableClick();return;case g.INK:this.addInkEditorIfNeeded(!1);this.disableTextSelection();this.togglePointerEvents(!0);this.disableClick();break;case g.HIGHLIGHT:this.enableTextSelection();this.togglePointerEvents(!1);this.disableClick();break;default:this.disableTextSelection();this.togglePointerEvents(!0);this.enableClick()}this.toggleAnnotationLayerPointerEvents(!1);const{classList:e}=this.div;for(const i of AnnotationEditorLayer.#H.values())e.toggle(`${i._type}Editing`,t===i._editorType);this.div.hidden=!1}hasTextLayer(t){return t===this.#Br?.div}addInkEditorIfNeeded(t){if(this.#g.getMode()!==g.INK)return;if(!t)for(const t of this.#Ir.values())if(t.isEmpty()){t.setInBackground();return}this.createAndAddNewEditor({offsetX:0,offsetY:0},!1).setInBackground()}setEditingState(t){this.#g.setEditingState(t)}addCommands(t){this.#g.addCommands(t)}toggleDrawing(t=!1){this.div.classList.toggle("drawing",!t)}togglePointerEvents(t=!1){this.div.classList.toggle("disabled",!t)}toggleAnnotationLayerPointerEvents(t=!1){this.#Fr?.div.classList.toggle("disabled",!t)}enable(){this.div.tabIndex=0;this.togglePointerEvents(!0);const t=new Set;for(const e of this.#Ir.values()){e.enableEditing();e.show(!0);if(e.annotationElementId){this.#g.removeChangedExistingAnnotation(e);t.add(e.annotationElementId)}}if(!this.#Fr)return;const e=this.#Fr.getEditableAnnotations();for(const i of e){i.hide();if(this.#g.isDeletedAnnotationElement(i.data.id))continue;if(t.has(i.data.id))continue;const e=this.deserialize(i);if(e){this.addOrRebuild(e);e.enableEditing()}}}disable(){this.#Or=!0;this.div.tabIndex=-1;this.togglePointerEvents(!1);const t=new Map,e=new Map;for(const i of this.#Ir.values()){i.disableEditing();if(i.annotationElementId)if(null===i.serialize()){e.set(i.annotationElementId,i);this.getEditableAnnotation(i.annotationElementId)?.show();i.remove()}else t.set(i.annotationElementId,i)}if(this.#Fr){const i=this.#Fr.getEditableAnnotations();for(const s of i){const{id:i}=s.data;if(this.#g.isDeletedAnnotationElement(i))continue;let n=e.get(i);if(n){n.resetAnnotationElement(s);n.show(!1);s.show()}else{n=t.get(i);if(n){this.#g.addChangedExistingAnnotation(n);n.renderAnnotationElement(s);n.show(!1)}s.show()}}}this.#Ur();this.isEmpty&&(this.div.hidden=!0);const{classList:i}=this.div;for(const t of AnnotationEditorLayer.#H.values())i.remove(`${t._type}Editing`);this.disableTextSelection();this.toggleAnnotationLayerPointerEvents(!0);this.#Or=!1}getEditableAnnotation(t){return this.#Fr?.getEditableAnnotation(t)||null}setActiveEditor(t){this.#g.getActive()!==t&&this.#g.setActiveEditor(t)}enableTextSelection(){this.div.tabIndex=-1;if(this.#Br?.div&&!this.#Hr){this.#Hr=new AbortController;const t=this.#g.combinedSignal(this.#Hr);this.#Br.div.addEventListener("pointerdown",this.#zr.bind(this),{signal:t});this.#Br.div.classList.add("highlighting")}}disableTextSelection(){this.div.tabIndex=0;if(this.#Br?.div&&this.#Hr){this.#Hr.abort();this.#Hr=null;this.#Br.div.classList.remove("highlighting")}}#zr(t){this.#g.unselectAll();const{target:e}=t;if(e===this.#Br.div||e.classList.contains("endOfContent")&&this.#Br.div.contains(e)){const{isMac:e}=util_FeatureTest.platform;if(0!==t.button||t.ctrlKey&&e)return;this.#g.showAllEditors("highlight",!0,!0);this.#Br.div.classList.add("free");this.toggleDrawing();HighlightEditor.startHighlighting(this,"ltr"===this.#g.direction,t);this.#Br.div.addEventListener("pointerup",(()=>{this.#Br.div.classList.remove("free");this.toggleDrawing(!0)}),{once:!0,signal:this.#g._signal});t.preventDefault()}}enableClick(){if(this.#Dr)return;this.#Dr=new AbortController;const t=this.#g.combinedSignal(this.#Dr);this.div.addEventListener("pointerdown",this.pointerdown.bind(this),{signal:t});this.div.addEventListener("pointerup",this.pointerup.bind(this),{signal:t})}disableClick(){this.#Dr?.abort();this.#Dr=null}attach(t){this.#Ir.set(t.id,t);const{annotationElementId:e}=t;e&&this.#g.isDeletedAnnotationElement(e)&&this.#g.removeDeletedAnnotationElement(t)}detach(t){this.#Ir.delete(t.id);this.#Vs?.removePointerInTextLayer(t.contentDiv);!this.#Or&&t.annotationElementId&&this.#g.addDeletedAnnotationElement(t)}remove(t){this.detach(t);this.#g.removeEditor(t);t.div.remove();t.isAttachedToDOM=!1;this.#Nr||this.addInkEditorIfNeeded(!1)}changeParent(t){if(t.parent!==this){if(t.parent&&t.annotationElementId){this.#g.addDeletedAnnotationElement(t.annotationElementId);AnnotationEditor.deleteAnnotationElement(t);t.annotationElementId=null}this.attach(t);t.parent?.detach(t);t.setParent(this);if(t.div&&t.isAttachedToDOM){t.div.remove();this.div.append(t.div)}}}add(t){if(t.parent!==this||!t.isAttachedToDOM){this.changeParent(t);this.#g.addEditor(t);this.attach(t);if(!t.isAttachedToDOM){const e=t.render();this.div.append(e);t.isAttachedToDOM=!0}t.fixAndSetPosition();t.onceAdded();this.#g.addToAnnotationStorage(t);t._reportTelemetry(t.telemetryInitialData)}}moveEditorInDOM(t){if(!t.isAttachedToDOM)return;const{activeElement:e}=document;if(t.div.contains(e)&&!this.#Rr){t._focusEventsAllowed=!1;this.#Rr=setTimeout((()=>{this.#Rr=null;if(t.div.contains(document.activeElement))t._focusEventsAllowed=!0;else{t.div.addEventListener("focusin",(()=>{t._focusEventsAllowed=!0}),{once:!0,signal:this.#g._signal});e.focus()}}),0)}t._structTreeParentId=this.#Vs?.moveElementInDOM(this.div,t.div,t.contentDiv,!0)}addOrRebuild(t){if(t.needsToBeRebuilt()){t.parent||=this;t.rebuild();t.show()}else this.add(t)}addUndoableEditor(t){this.addCommands({cmd:()=>t._uiManager.rebuild(t),undo:()=>{t.remove()},mustExec:!1})}getNextId(){return this.#g.getId()}get#jr(){return AnnotationEditorLayer.#H.get(this.#g.getMode())}combinedSignal(t){return this.#g.combinedSignal(t)}#Wr(t){const e=this.#jr;return e?new e.prototype.constructor(t):null}canCreateNewEmptyEditor(){return this.#jr?.canCreateNewEmptyEditor()}pasteEditor(t,e){this.#g.updateToolbar(t);this.#g.updateMode(t);const{offsetX:i,offsetY:s}=this.#$r(),n=this.getNextId(),a=this.#Wr({parent:this,id:n,x:i,y:s,uiManager:this.#g,isCentered:!0,...e});a&&this.add(a)}deserialize(t){return AnnotationEditorLayer.#H.get(t.annotationType??t.annotationEditorType)?.deserialize(t,this,this.#g)||null}createAndAddNewEditor(t,e,i={}){const s=this.getNextId(),n=this.#Wr({parent:this,id:s,x:t.offsetX,y:t.offsetY,uiManager:this.#g,isCentered:e,...i});n&&this.add(n);return n}#$r(){const{x:t,y:e,width:i,height:s}=this.div.getBoundingClientRect(),n=Math.max(0,t),a=Math.max(0,e),r=(n+Math.min(window.innerWidth,t+i))/2-t,o=(a+Math.min(window.innerHeight,e+s))/2-e,[l,h]=this.viewport.rotation%180==0?[r,o]:[o,r];return{offsetX:l,offsetY:h}}addNewEditor(){this.createAndAddNewEditor(this.#$r(),!0)}setSelected(t){this.#g.setSelected(t)}toggleSelected(t){this.#g.toggleSelected(t)}isSelected(t){return this.#g.isSelected(t)}unselect(t){this.#g.unselect(t)}pointerup(t){const{isMac:e}=util_FeatureTest.platform;if(!(0!==t.button||t.ctrlKey&&e)&&t.target===this.div&&this.#Lr){this.#Lr=!1;this.#Pr?this.#g.getMode()!==g.STAMP?this.createAndAddNewEditor(t,!1):this.#g.unselectAll():this.#Pr=!0}}pointerdown(t){this.#g.getMode()===g.HIGHLIGHT&&this.enableTextSelection();if(this.#Lr){this.#Lr=!1;return}const{isMac:e}=util_FeatureTest.platform;if(0!==t.button||t.ctrlKey&&e)return;if(t.target!==this.div)return;this.#Lr=!0;const i=this.#g.getActive();this.#Pr=!i||i.isEmpty()}findNewParent(t,e,i){const s=this.#g.findParent(e,i);if(null===s||s===this)return!1;s.changeParent(t);return!0}destroy(){if(this.#g.getActive()?.parent===this){this.#g.commitOrRemove();this.#g.setActiveEditor(null)}if(this.#Rr){clearTimeout(this.#Rr);this.#Rr=null}for(const t of this.#Ir.values()){this.#Vs?.removePointerInTextLayer(t.contentDiv);t.setParent(null);t.isAttachedToDOM=!1;t.div.remove()}this.div=null;this.#Ir.clear();this.#g.removeLayer(this)}#Ur(){this.#Nr=!0;for(const t of this.#Ir.values())t.isEmpty()&&t.remove();this.#Nr=!1}render({viewport:t}){this.viewport=t;setLayerDimensions(this.div,t);for(const t of this.#g.getEditors(this.pageIndex)){this.add(t);t.rebuild()}this.updateMode()}update({viewport:t}){this.#g.commitOrRemove();this.#Ur();const e=this.viewport.rotation,i=t.rotation;this.viewport=t;setLayerDimensions(this.div,{rotation:i});if(e!==i)for(const t of this.#Ir.values())t.rotate(i);this.addInkEditorIfNeeded(!1)}get pageDimensions(){const{pageWidth:t,pageHeight:e}=this.viewport.rawDims;return[t,e]}get scale(){return this.#g.viewParameters.realScale}}class DrawLayer{#Ss=null;#A=0;#Gr=new Map;#Vr=new Map;constructor({pageIndex:t}){this.pageIndex=t}setParent(t){if(this.#Ss){if(this.#Ss!==t){if(this.#Gr.size>0)for(const e of this.#Gr.values()){e.remove();t.append(e)}this.#Ss=t}}else this.#Ss=t}static get _svgFactory(){return shadow(this,"_svgFactory",new DOMSVGFactory)}static#qr(t,{x:e=0,y:i=0,width:s=1,height:n=1}={}){const{style:a}=t;a.top=100*i+"%";a.left=100*e+"%";a.width=100*s+"%";a.height=100*n+"%"}#Xr(t){const e=DrawLayer._svgFactory.create(1,1,!0);this.#Ss.append(e);e.setAttribute("aria-hidden",!0);DrawLayer.#qr(e,t);return e}#Kr(t,e){const i=DrawLayer._svgFactory.createElement("clipPath");t.append(i);const s=`clip_${e}`;i.setAttribute("id",s);i.setAttribute("clipPathUnits","objectBoundingBox");const n=DrawLayer._svgFactory.createElement("use");i.append(n);n.setAttribute("href",`#${e}`);n.classList.add("clip");return s}highlight(t,e,i,s=!1){const n=this.#A++,a=this.#Xr(t.box);a.classList.add("highlight");t.free&&a.classList.add("free");const r=DrawLayer._svgFactory.createElement("defs");a.append(r);const o=DrawLayer._svgFactory.createElement("path");r.append(o);const l=`path_p${this.pageIndex}_${n}`;o.setAttribute("id",l);o.setAttribute("d",t.toSVGPath());s&&this.#Vr.set(n,o);const h=this.#Kr(r,l),d=DrawLayer._svgFactory.createElement("use");a.append(d);a.setAttribute("fill",e);a.setAttribute("fill-opacity",i);d.setAttribute("href",`#${l}`);this.#Gr.set(n,a);return{id:n,clipPathId:`url(#${h})`}}highlightOutline(t){const e=this.#A++,i=this.#Xr(t.box);i.classList.add("highlightOutline");const s=DrawLayer._svgFactory.createElement("defs");i.append(s);const n=DrawLayer._svgFactory.createElement("path");s.append(n);const a=`path_p${this.pageIndex}_${e}`;n.setAttribute("id",a);n.setAttribute("d",t.toSVGPath());n.setAttribute("vector-effect","non-scaling-stroke");let r;if(t.free){i.classList.add("free");const t=DrawLayer._svgFactory.createElement("mask");s.append(t);r=`mask_p${this.pageIndex}_${e}`;t.setAttribute("id",r);t.setAttribute("maskUnits","objectBoundingBox");const n=DrawLayer._svgFactory.createElement("rect");t.append(n);n.setAttribute("width","1");n.setAttribute("height","1");n.setAttribute("fill","white");const o=DrawLayer._svgFactory.createElement("use");t.append(o);o.setAttribute("href",`#${a}`);o.setAttribute("stroke","none");o.setAttribute("fill","black");o.setAttribute("fill-rule","nonzero");o.classList.add("mask")}const o=DrawLayer._svgFactory.createElement("use");i.append(o);o.setAttribute("href",`#${a}`);r&&o.setAttribute("mask",`url(#${r})`);const l=o.cloneNode();i.append(l);o.classList.add("mainOutline");l.classList.add("secondaryOutline");this.#Gr.set(e,i);return e}finalizeLine(t,e){const i=this.#Vr.get(t);this.#Vr.delete(t);this.updateBox(t,e.box);i.setAttribute("d",e.toSVGPath())}updateLine(t,e){this.#Gr.get(t).firstChild.firstChild.setAttribute("d",e.toSVGPath())}removeFreeHighlight(t){this.remove(t);this.#Vr.delete(t)}updatePath(t,e){this.#Vr.get(t).setAttribute("d",e.toSVGPath())}updateBox(t,e){DrawLayer.#qr(this.#Gr.get(t),e)}show(t,e){this.#Gr.get(t).classList.toggle("hidden",!e)}rotate(t,e){this.#Gr.get(t).setAttribute("data-main-rotation",e)}changeColor(t,e){this.#Gr.get(t).setAttribute("fill",e)}changeOpacity(t,e){this.#Gr.get(t).setAttribute("fill-opacity",e)}addClass(t,e){this.#Gr.get(t).classList.add(e)}removeClass(t,e){this.#Gr.get(t).classList.remove(e)}remove(t){if(null!==this.#Ss){this.#Gr.get(t).remove();this.#Gr.delete(t)}}destroy(){this.#Ss=null;for(const t of this.#Gr.values())t.remove();this.#Gr.clear()}}var te=__webpack_exports__.AbortException,ee=__webpack_exports__.AnnotationEditorLayer,ie=__webpack_exports__.AnnotationEditorParamsType,se=__webpack_exports__.AnnotationEditorType,ne=__webpack_exports__.AnnotationEditorUIManager,ae=__webpack_exports__.AnnotationLayer,re=__webpack_exports__.AnnotationMode,oe=__webpack_exports__.CMapCompressionType,le=__webpack_exports__.ColorPicker,he=__webpack_exports__.DOMSVGFactory,de=__webpack_exports__.DrawLayer,ce=__webpack_exports__.FeatureTest,ue=__webpack_exports__.GlobalWorkerOptions,pe=__webpack_exports__.ImageKind,ge=__webpack_exports__.InvalidPDFException,me=__webpack_exports__.MissingPDFException,fe=__webpack_exports__.OPS,be=__webpack_exports__.PDFDataRangeTransport,Ae=__webpack_exports__.PDFDateString,ve=__webpack_exports__.PDFWorker,ye=__webpack_exports__.PasswordResponses,we=__webpack_exports__.PermissionFlag,xe=__webpack_exports__.PixelsPerInch,_e=__webpack_exports__.RenderingCancelledException,Ee=__webpack_exports__.TextLayer,Ce=__webpack_exports__.UnexpectedResponseException,Se=__webpack_exports__.Util,Te=__webpack_exports__.VerbosityLevel,Me=__webpack_exports__.XfaLayer,ke=__webpack_exports__.build,Pe=__webpack_exports__.createValidAbsoluteUrl,Fe=__webpack_exports__.fetchData,De=__webpack_exports__.getDocument,Re=__webpack_exports__.getFilenameFromUrl,Ie=__webpack_exports__.getPdfFilenameFromUrl,Le=__webpack_exports__.getXfaPageViewport,Ne=__webpack_exports__.isDataScheme,Oe=__webpack_exports__.isPdfFile,Be=__webpack_exports__.noContextMenu,He=__webpack_exports__.normalizeUnicode,Ue=__webpack_exports__.setLayerDimensions,ze=__webpack_exports__.shadow,je=__webpack_exports__.version;export{te as AbortException,ee as AnnotationEditorLayer,ie as AnnotationEditorParamsType,se as AnnotationEditorType,ne as AnnotationEditorUIManager,ae as AnnotationLayer,re as AnnotationMode,oe as CMapCompressionType,le as ColorPicker,he as DOMSVGFactory,de as DrawLayer,ce as FeatureTest,ue as GlobalWorkerOptions,pe as ImageKind,ge as InvalidPDFException,me as MissingPDFException,fe as OPS,be as PDFDataRangeTransport,Ae as PDFDateString,ve as PDFWorker,ye as PasswordResponses,we as PermissionFlag,xe as PixelsPerInch,_e as RenderingCancelledException,Ee as TextLayer,Ce as UnexpectedResponseException,Se as Util,Te as VerbosityLevel,Me as XfaLayer,ke as build,Pe as createValidAbsoluteUrl,Fe as fetchData,De as getDocument,Re as getFilenameFromUrl,Ie as getPdfFilenameFromUrl,Le as getXfaPageViewport,Ne as isDataScheme,Oe as isPdfFile,Be as noContextMenu,He as normalizeUnicode,Ue as setLayerDimensions,ze as shadow,je as version};';

// node_modules/@fortawesome/fontawesome-free/css/all.min.css
var all_min_default = '/*!\n * Font Awesome Free 6.6.0 by @fontawesome - https://fontawesome.com\n * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)\n * Copyright 2024 Fonticons, Inc.\n */\n.fa{font-family:var(--fa-style-family,"Font Awesome 6 Free");font-weight:var(--fa-style,900)}.fa,.fa-brands,.fa-classic,.fa-regular,.fa-sharp-solid,.fa-solid,.fab,.far,.fas{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:var(--fa-display,inline-block);font-style:normal;font-variant:normal;line-height:1;text-rendering:auto}.fa-classic,.fa-regular,.fa-solid,.far,.fas{font-family:"Font Awesome 6 Free"}.fa-brands,.fab{font-family:"Font Awesome 6 Brands"}.fa-1x{font-size:1em}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-6x{font-size:6em}.fa-7x{font-size:7em}.fa-8x{font-size:8em}.fa-9x{font-size:9em}.fa-10x{font-size:10em}.fa-2xs{font-size:.625em;line-height:.1em;vertical-align:.225em}.fa-xs{font-size:.75em;line-height:.08333em;vertical-align:.125em}.fa-sm{font-size:.875em;line-height:.07143em;vertical-align:.05357em}.fa-lg{font-size:1.25em;line-height:.05em;vertical-align:-.075em}.fa-xl{font-size:1.5em;line-height:.04167em;vertical-align:-.125em}.fa-2xl{font-size:2em;line-height:.03125em;vertical-align:-.1875em}.fa-fw{text-align:center;width:1.25em}.fa-ul{list-style-type:none;margin-left:var(--fa-li-margin,2.5em);padding-left:0}.fa-ul>li{position:relative}.fa-li{left:calc(var(--fa-li-width, 2em)*-1);position:absolute;text-align:center;width:var(--fa-li-width,2em);line-height:inherit}.fa-border{border-radius:var(--fa-border-radius,.1em);border:var(--fa-border-width,.08em) var(--fa-border-style,solid) var(--fa-border-color,#eee);padding:var(--fa-border-padding,.2em .25em .15em)}.fa-pull-left{float:left;margin-right:var(--fa-pull-margin,.3em)}.fa-pull-right{float:right;margin-left:var(--fa-pull-margin,.3em)}.fa-beat{animation-name:fa-beat;animation-delay:var(--fa-animation-delay,0s);animation-direction:var(--fa-animation-direction,normal);animation-duration:var(--fa-animation-duration,1s);animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-timing-function:var(--fa-animation-timing,ease-in-out)}.fa-bounce{animation-name:fa-bounce;animation-delay:var(--fa-animation-delay,0s);animation-direction:var(--fa-animation-direction,normal);animation-duration:var(--fa-animation-duration,1s);animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-timing-function:var(--fa-animation-timing,cubic-bezier(.28,.84,.42,1))}.fa-fade{animation-name:fa-fade;animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-timing-function:var(--fa-animation-timing,cubic-bezier(.4,0,.6,1))}.fa-beat-fade,.fa-fade{animation-delay:var(--fa-animation-delay,0s);animation-direction:var(--fa-animation-direction,normal);animation-duration:var(--fa-animation-duration,1s)}.fa-beat-fade{animation-name:fa-beat-fade;animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-timing-function:var(--fa-animation-timing,cubic-bezier(.4,0,.6,1))}.fa-flip{animation-name:fa-flip;animation-delay:var(--fa-animation-delay,0s);animation-direction:var(--fa-animation-direction,normal);animation-duration:var(--fa-animation-duration,1s);animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-timing-function:var(--fa-animation-timing,ease-in-out)}.fa-shake{animation-name:fa-shake;animation-duration:var(--fa-animation-duration,1s);animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-timing-function:var(--fa-animation-timing,linear)}.fa-shake,.fa-spin{animation-delay:var(--fa-animation-delay,0s);animation-direction:var(--fa-animation-direction,normal)}.fa-spin{animation-name:fa-spin;animation-duration:var(--fa-animation-duration,2s);animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-timing-function:var(--fa-animation-timing,linear)}.fa-spin-reverse{--fa-animation-direction:reverse}.fa-pulse,.fa-spin-pulse{animation-name:fa-spin;animation-direction:var(--fa-animation-direction,normal);animation-duration:var(--fa-animation-duration,1s);animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-timing-function:var(--fa-animation-timing,steps(8))}@media (prefers-reduced-motion:reduce){.fa-beat,.fa-beat-fade,.fa-bounce,.fa-fade,.fa-flip,.fa-pulse,.fa-shake,.fa-spin,.fa-spin-pulse{animation-delay:-1ms;animation-duration:1ms;animation-iteration-count:1;transition-delay:0s;transition-duration:0s}}@keyframes fa-beat{0%,90%{transform:scale(1)}45%{transform:scale(var(--fa-beat-scale,1.25))}}@keyframes fa-bounce{0%{transform:scale(1) translateY(0)}10%{transform:scale(var(--fa-bounce-start-scale-x,1.1),var(--fa-bounce-start-scale-y,.9)) translateY(0)}30%{transform:scale(var(--fa-bounce-jump-scale-x,.9),var(--fa-bounce-jump-scale-y,1.1)) translateY(var(--fa-bounce-height,-.5em))}50%{transform:scale(var(--fa-bounce-land-scale-x,1.05),var(--fa-bounce-land-scale-y,.95)) translateY(0)}57%{transform:scale(1) translateY(var(--fa-bounce-rebound,-.125em))}64%{transform:scale(1) translateY(0)}to{transform:scale(1) translateY(0)}}@keyframes fa-fade{50%{opacity:var(--fa-fade-opacity,.4)}}@keyframes fa-beat-fade{0%,to{opacity:var(--fa-beat-fade-opacity,.4);transform:scale(1)}50%{opacity:1;transform:scale(var(--fa-beat-fade-scale,1.125))}}@keyframes fa-flip{50%{transform:rotate3d(var(--fa-flip-x,0),var(--fa-flip-y,1),var(--fa-flip-z,0),var(--fa-flip-angle,-180deg))}}@keyframes fa-shake{0%{transform:rotate(-15deg)}4%{transform:rotate(15deg)}8%,24%{transform:rotate(-18deg)}12%,28%{transform:rotate(18deg)}16%{transform:rotate(-22deg)}20%{transform:rotate(22deg)}32%{transform:rotate(-12deg)}36%{transform:rotate(12deg)}40%,to{transform:rotate(0deg)}}@keyframes fa-spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.fa-rotate-90{transform:rotate(90deg)}.fa-rotate-180{transform:rotate(180deg)}.fa-rotate-270{transform:rotate(270deg)}.fa-flip-horizontal{transform:scaleX(-1)}.fa-flip-vertical{transform:scaleY(-1)}.fa-flip-both,.fa-flip-horizontal.fa-flip-vertical{transform:scale(-1)}.fa-rotate-by{transform:rotate(var(--fa-rotate-angle,0))}.fa-stack{display:inline-block;height:2em;line-height:2em;position:relative;vertical-align:middle;width:2.5em}.fa-stack-1x,.fa-stack-2x{left:0;position:absolute;text-align:center;width:100%;z-index:var(--fa-stack-z-index,auto)}.fa-stack-1x{line-height:inherit}.fa-stack-2x{font-size:2em}.fa-inverse{color:var(--fa-inverse,#fff)}\n\n.fa-0:before{content:"\\30"}.fa-1:before{content:"\\31"}.fa-2:before{content:"\\32"}.fa-3:before{content:"\\33"}.fa-4:before{content:"\\34"}.fa-5:before{content:"\\35"}.fa-6:before{content:"\\36"}.fa-7:before{content:"\\37"}.fa-8:before{content:"\\38"}.fa-9:before{content:"\\39"}.fa-fill-drip:before{content:"\\f576"}.fa-arrows-to-circle:before{content:"\\e4bd"}.fa-chevron-circle-right:before,.fa-circle-chevron-right:before{content:"\\f138"}.fa-at:before{content:"\\40"}.fa-trash-alt:before,.fa-trash-can:before{content:"\\f2ed"}.fa-text-height:before{content:"\\f034"}.fa-user-times:before,.fa-user-xmark:before{content:"\\f235"}.fa-stethoscope:before{content:"\\f0f1"}.fa-comment-alt:before,.fa-message:before{content:"\\f27a"}.fa-info:before{content:"\\f129"}.fa-compress-alt:before,.fa-down-left-and-up-right-to-center:before{content:"\\f422"}.fa-explosion:before{content:"\\e4e9"}.fa-file-alt:before,.fa-file-lines:before,.fa-file-text:before{content:"\\f15c"}.fa-wave-square:before{content:"\\f83e"}.fa-ring:before{content:"\\f70b"}.fa-building-un:before{content:"\\e4d9"}.fa-dice-three:before{content:"\\f527"}.fa-calendar-alt:before,.fa-calendar-days:before{content:"\\f073"}.fa-anchor-circle-check:before{content:"\\e4aa"}.fa-building-circle-arrow-right:before{content:"\\e4d1"}.fa-volleyball-ball:before,.fa-volleyball:before{content:"\\f45f"}.fa-arrows-up-to-line:before{content:"\\e4c2"}.fa-sort-desc:before,.fa-sort-down:before{content:"\\f0dd"}.fa-circle-minus:before,.fa-minus-circle:before{content:"\\f056"}.fa-door-open:before{content:"\\f52b"}.fa-right-from-bracket:before,.fa-sign-out-alt:before{content:"\\f2f5"}.fa-atom:before{content:"\\f5d2"}.fa-soap:before{content:"\\e06e"}.fa-heart-music-camera-bolt:before,.fa-icons:before{content:"\\f86d"}.fa-microphone-alt-slash:before,.fa-microphone-lines-slash:before{content:"\\f539"}.fa-bridge-circle-check:before{content:"\\e4c9"}.fa-pump-medical:before{content:"\\e06a"}.fa-fingerprint:before{content:"\\f577"}.fa-hand-point-right:before{content:"\\f0a4"}.fa-magnifying-glass-location:before,.fa-search-location:before{content:"\\f689"}.fa-forward-step:before,.fa-step-forward:before{content:"\\f051"}.fa-face-smile-beam:before,.fa-smile-beam:before{content:"\\f5b8"}.fa-flag-checkered:before{content:"\\f11e"}.fa-football-ball:before,.fa-football:before{content:"\\f44e"}.fa-school-circle-exclamation:before{content:"\\e56c"}.fa-crop:before{content:"\\f125"}.fa-angle-double-down:before,.fa-angles-down:before{content:"\\f103"}.fa-users-rectangle:before{content:"\\e594"}.fa-people-roof:before{content:"\\e537"}.fa-people-line:before{content:"\\e534"}.fa-beer-mug-empty:before,.fa-beer:before{content:"\\f0fc"}.fa-diagram-predecessor:before{content:"\\e477"}.fa-arrow-up-long:before,.fa-long-arrow-up:before{content:"\\f176"}.fa-burn:before,.fa-fire-flame-simple:before{content:"\\f46a"}.fa-male:before,.fa-person:before{content:"\\f183"}.fa-laptop:before{content:"\\f109"}.fa-file-csv:before{content:"\\f6dd"}.fa-menorah:before{content:"\\f676"}.fa-truck-plane:before{content:"\\e58f"}.fa-record-vinyl:before{content:"\\f8d9"}.fa-face-grin-stars:before,.fa-grin-stars:before{content:"\\f587"}.fa-bong:before{content:"\\f55c"}.fa-pastafarianism:before,.fa-spaghetti-monster-flying:before{content:"\\f67b"}.fa-arrow-down-up-across-line:before{content:"\\e4af"}.fa-spoon:before,.fa-utensil-spoon:before{content:"\\f2e5"}.fa-jar-wheat:before{content:"\\e517"}.fa-envelopes-bulk:before,.fa-mail-bulk:before{content:"\\f674"}.fa-file-circle-exclamation:before{content:"\\e4eb"}.fa-circle-h:before,.fa-hospital-symbol:before{content:"\\f47e"}.fa-pager:before{content:"\\f815"}.fa-address-book:before,.fa-contact-book:before{content:"\\f2b9"}.fa-strikethrough:before{content:"\\f0cc"}.fa-k:before{content:"\\4b"}.fa-landmark-flag:before{content:"\\e51c"}.fa-pencil-alt:before,.fa-pencil:before{content:"\\f303"}.fa-backward:before{content:"\\f04a"}.fa-caret-right:before{content:"\\f0da"}.fa-comments:before{content:"\\f086"}.fa-file-clipboard:before,.fa-paste:before{content:"\\f0ea"}.fa-code-pull-request:before{content:"\\e13c"}.fa-clipboard-list:before{content:"\\f46d"}.fa-truck-loading:before,.fa-truck-ramp-box:before{content:"\\f4de"}.fa-user-check:before{content:"\\f4fc"}.fa-vial-virus:before{content:"\\e597"}.fa-sheet-plastic:before{content:"\\e571"}.fa-blog:before{content:"\\f781"}.fa-user-ninja:before{content:"\\f504"}.fa-person-arrow-up-from-line:before{content:"\\e539"}.fa-scroll-torah:before,.fa-torah:before{content:"\\f6a0"}.fa-broom-ball:before,.fa-quidditch-broom-ball:before,.fa-quidditch:before{content:"\\f458"}.fa-toggle-off:before{content:"\\f204"}.fa-archive:before,.fa-box-archive:before{content:"\\f187"}.fa-person-drowning:before{content:"\\e545"}.fa-arrow-down-9-1:before,.fa-sort-numeric-desc:before,.fa-sort-numeric-down-alt:before{content:"\\f886"}.fa-face-grin-tongue-squint:before,.fa-grin-tongue-squint:before{content:"\\f58a"}.fa-spray-can:before{content:"\\f5bd"}.fa-truck-monster:before{content:"\\f63b"}.fa-w:before{content:"\\57"}.fa-earth-africa:before,.fa-globe-africa:before{content:"\\f57c"}.fa-rainbow:before{content:"\\f75b"}.fa-circle-notch:before{content:"\\f1ce"}.fa-tablet-alt:before,.fa-tablet-screen-button:before{content:"\\f3fa"}.fa-paw:before{content:"\\f1b0"}.fa-cloud:before{content:"\\f0c2"}.fa-trowel-bricks:before{content:"\\e58a"}.fa-face-flushed:before,.fa-flushed:before{content:"\\f579"}.fa-hospital-user:before{content:"\\f80d"}.fa-tent-arrow-left-right:before{content:"\\e57f"}.fa-gavel:before,.fa-legal:before{content:"\\f0e3"}.fa-binoculars:before{content:"\\f1e5"}.fa-microphone-slash:before{content:"\\f131"}.fa-box-tissue:before{content:"\\e05b"}.fa-motorcycle:before{content:"\\f21c"}.fa-bell-concierge:before,.fa-concierge-bell:before{content:"\\f562"}.fa-pen-ruler:before,.fa-pencil-ruler:before{content:"\\f5ae"}.fa-people-arrows-left-right:before,.fa-people-arrows:before{content:"\\e068"}.fa-mars-and-venus-burst:before{content:"\\e523"}.fa-caret-square-right:before,.fa-square-caret-right:before{content:"\\f152"}.fa-cut:before,.fa-scissors:before{content:"\\f0c4"}.fa-sun-plant-wilt:before{content:"\\e57a"}.fa-toilets-portable:before{content:"\\e584"}.fa-hockey-puck:before{content:"\\f453"}.fa-table:before{content:"\\f0ce"}.fa-magnifying-glass-arrow-right:before{content:"\\e521"}.fa-digital-tachograph:before,.fa-tachograph-digital:before{content:"\\f566"}.fa-users-slash:before{content:"\\e073"}.fa-clover:before{content:"\\e139"}.fa-mail-reply:before,.fa-reply:before{content:"\\f3e5"}.fa-star-and-crescent:before{content:"\\f699"}.fa-house-fire:before{content:"\\e50c"}.fa-minus-square:before,.fa-square-minus:before{content:"\\f146"}.fa-helicopter:before{content:"\\f533"}.fa-compass:before{content:"\\f14e"}.fa-caret-square-down:before,.fa-square-caret-down:before{content:"\\f150"}.fa-file-circle-question:before{content:"\\e4ef"}.fa-laptop-code:before{content:"\\f5fc"}.fa-swatchbook:before{content:"\\f5c3"}.fa-prescription-bottle:before{content:"\\f485"}.fa-bars:before,.fa-navicon:before{content:"\\f0c9"}.fa-people-group:before{content:"\\e533"}.fa-hourglass-3:before,.fa-hourglass-end:before{content:"\\f253"}.fa-heart-broken:before,.fa-heart-crack:before{content:"\\f7a9"}.fa-external-link-square-alt:before,.fa-square-up-right:before{content:"\\f360"}.fa-face-kiss-beam:before,.fa-kiss-beam:before{content:"\\f597"}.fa-film:before{content:"\\f008"}.fa-ruler-horizontal:before{content:"\\f547"}.fa-people-robbery:before{content:"\\e536"}.fa-lightbulb:before{content:"\\f0eb"}.fa-caret-left:before{content:"\\f0d9"}.fa-circle-exclamation:before,.fa-exclamation-circle:before{content:"\\f06a"}.fa-school-circle-xmark:before{content:"\\e56d"}.fa-arrow-right-from-bracket:before,.fa-sign-out:before{content:"\\f08b"}.fa-chevron-circle-down:before,.fa-circle-chevron-down:before{content:"\\f13a"}.fa-unlock-alt:before,.fa-unlock-keyhole:before{content:"\\f13e"}.fa-cloud-showers-heavy:before{content:"\\f740"}.fa-headphones-alt:before,.fa-headphones-simple:before{content:"\\f58f"}.fa-sitemap:before{content:"\\f0e8"}.fa-circle-dollar-to-slot:before,.fa-donate:before{content:"\\f4b9"}.fa-memory:before{content:"\\f538"}.fa-road-spikes:before{content:"\\e568"}.fa-fire-burner:before{content:"\\e4f1"}.fa-flag:before{content:"\\f024"}.fa-hanukiah:before{content:"\\f6e6"}.fa-feather:before{content:"\\f52d"}.fa-volume-down:before,.fa-volume-low:before{content:"\\f027"}.fa-comment-slash:before{content:"\\f4b3"}.fa-cloud-sun-rain:before{content:"\\f743"}.fa-compress:before{content:"\\f066"}.fa-wheat-alt:before,.fa-wheat-awn:before{content:"\\e2cd"}.fa-ankh:before{content:"\\f644"}.fa-hands-holding-child:before{content:"\\e4fa"}.fa-asterisk:before{content:"\\2a"}.fa-check-square:before,.fa-square-check:before{content:"\\f14a"}.fa-peseta-sign:before{content:"\\e221"}.fa-header:before,.fa-heading:before{content:"\\f1dc"}.fa-ghost:before{content:"\\f6e2"}.fa-list-squares:before,.fa-list:before{content:"\\f03a"}.fa-phone-square-alt:before,.fa-square-phone-flip:before{content:"\\f87b"}.fa-cart-plus:before{content:"\\f217"}.fa-gamepad:before{content:"\\f11b"}.fa-circle-dot:before,.fa-dot-circle:before{content:"\\f192"}.fa-dizzy:before,.fa-face-dizzy:before{content:"\\f567"}.fa-egg:before{content:"\\f7fb"}.fa-house-medical-circle-xmark:before{content:"\\e513"}.fa-campground:before{content:"\\f6bb"}.fa-folder-plus:before{content:"\\f65e"}.fa-futbol-ball:before,.fa-futbol:before,.fa-soccer-ball:before{content:"\\f1e3"}.fa-paint-brush:before,.fa-paintbrush:before{content:"\\f1fc"}.fa-lock:before{content:"\\f023"}.fa-gas-pump:before{content:"\\f52f"}.fa-hot-tub-person:before,.fa-hot-tub:before{content:"\\f593"}.fa-map-location:before,.fa-map-marked:before{content:"\\f59f"}.fa-house-flood-water:before{content:"\\e50e"}.fa-tree:before{content:"\\f1bb"}.fa-bridge-lock:before{content:"\\e4cc"}.fa-sack-dollar:before{content:"\\f81d"}.fa-edit:before,.fa-pen-to-square:before{content:"\\f044"}.fa-car-side:before{content:"\\f5e4"}.fa-share-alt:before,.fa-share-nodes:before{content:"\\f1e0"}.fa-heart-circle-minus:before{content:"\\e4ff"}.fa-hourglass-2:before,.fa-hourglass-half:before{content:"\\f252"}.fa-microscope:before{content:"\\f610"}.fa-sink:before{content:"\\e06d"}.fa-bag-shopping:before,.fa-shopping-bag:before{content:"\\f290"}.fa-arrow-down-z-a:before,.fa-sort-alpha-desc:before,.fa-sort-alpha-down-alt:before{content:"\\f881"}.fa-mitten:before{content:"\\f7b5"}.fa-person-rays:before{content:"\\e54d"}.fa-users:before{content:"\\f0c0"}.fa-eye-slash:before{content:"\\f070"}.fa-flask-vial:before{content:"\\e4f3"}.fa-hand-paper:before,.fa-hand:before{content:"\\f256"}.fa-om:before{content:"\\f679"}.fa-worm:before{content:"\\e599"}.fa-house-circle-xmark:before{content:"\\e50b"}.fa-plug:before{content:"\\f1e6"}.fa-chevron-up:before{content:"\\f077"}.fa-hand-spock:before{content:"\\f259"}.fa-stopwatch:before{content:"\\f2f2"}.fa-face-kiss:before,.fa-kiss:before{content:"\\f596"}.fa-bridge-circle-xmark:before{content:"\\e4cb"}.fa-face-grin-tongue:before,.fa-grin-tongue:before{content:"\\f589"}.fa-chess-bishop:before{content:"\\f43a"}.fa-face-grin-wink:before,.fa-grin-wink:before{content:"\\f58c"}.fa-deaf:before,.fa-deafness:before,.fa-ear-deaf:before,.fa-hard-of-hearing:before{content:"\\f2a4"}.fa-road-circle-check:before{content:"\\e564"}.fa-dice-five:before{content:"\\f523"}.fa-rss-square:before,.fa-square-rss:before{content:"\\f143"}.fa-land-mine-on:before{content:"\\e51b"}.fa-i-cursor:before{content:"\\f246"}.fa-stamp:before{content:"\\f5bf"}.fa-stairs:before{content:"\\e289"}.fa-i:before{content:"\\49"}.fa-hryvnia-sign:before,.fa-hryvnia:before{content:"\\f6f2"}.fa-pills:before{content:"\\f484"}.fa-face-grin-wide:before,.fa-grin-alt:before{content:"\\f581"}.fa-tooth:before{content:"\\f5c9"}.fa-v:before{content:"\\56"}.fa-bangladeshi-taka-sign:before{content:"\\e2e6"}.fa-bicycle:before{content:"\\f206"}.fa-rod-asclepius:before,.fa-rod-snake:before,.fa-staff-aesculapius:before,.fa-staff-snake:before{content:"\\e579"}.fa-head-side-cough-slash:before{content:"\\e062"}.fa-ambulance:before,.fa-truck-medical:before{content:"\\f0f9"}.fa-wheat-awn-circle-exclamation:before{content:"\\e598"}.fa-snowman:before{content:"\\f7d0"}.fa-mortar-pestle:before{content:"\\f5a7"}.fa-road-barrier:before{content:"\\e562"}.fa-school:before{content:"\\f549"}.fa-igloo:before{content:"\\f7ae"}.fa-joint:before{content:"\\f595"}.fa-angle-right:before{content:"\\f105"}.fa-horse:before{content:"\\f6f0"}.fa-q:before{content:"\\51"}.fa-g:before{content:"\\47"}.fa-notes-medical:before{content:"\\f481"}.fa-temperature-2:before,.fa-temperature-half:before,.fa-thermometer-2:before,.fa-thermometer-half:before{content:"\\f2c9"}.fa-dong-sign:before{content:"\\e169"}.fa-capsules:before{content:"\\f46b"}.fa-poo-bolt:before,.fa-poo-storm:before{content:"\\f75a"}.fa-face-frown-open:before,.fa-frown-open:before{content:"\\f57a"}.fa-hand-point-up:before{content:"\\f0a6"}.fa-money-bill:before{content:"\\f0d6"}.fa-bookmark:before{content:"\\f02e"}.fa-align-justify:before{content:"\\f039"}.fa-umbrella-beach:before{content:"\\f5ca"}.fa-helmet-un:before{content:"\\e503"}.fa-bullseye:before{content:"\\f140"}.fa-bacon:before{content:"\\f7e5"}.fa-hand-point-down:before{content:"\\f0a7"}.fa-arrow-up-from-bracket:before{content:"\\e09a"}.fa-folder-blank:before,.fa-folder:before{content:"\\f07b"}.fa-file-medical-alt:before,.fa-file-waveform:before{content:"\\f478"}.fa-radiation:before{content:"\\f7b9"}.fa-chart-simple:before{content:"\\e473"}.fa-mars-stroke:before{content:"\\f229"}.fa-vial:before{content:"\\f492"}.fa-dashboard:before,.fa-gauge-med:before,.fa-gauge:before,.fa-tachometer-alt-average:before{content:"\\f624"}.fa-magic-wand-sparkles:before,.fa-wand-magic-sparkles:before{content:"\\e2ca"}.fa-e:before{content:"\\45"}.fa-pen-alt:before,.fa-pen-clip:before{content:"\\f305"}.fa-bridge-circle-exclamation:before{content:"\\e4ca"}.fa-user:before{content:"\\f007"}.fa-school-circle-check:before{content:"\\e56b"}.fa-dumpster:before{content:"\\f793"}.fa-shuttle-van:before,.fa-van-shuttle:before{content:"\\f5b6"}.fa-building-user:before{content:"\\e4da"}.fa-caret-square-left:before,.fa-square-caret-left:before{content:"\\f191"}.fa-highlighter:before{content:"\\f591"}.fa-key:before{content:"\\f084"}.fa-bullhorn:before{content:"\\f0a1"}.fa-globe:before{content:"\\f0ac"}.fa-synagogue:before{content:"\\f69b"}.fa-person-half-dress:before{content:"\\e548"}.fa-road-bridge:before{content:"\\e563"}.fa-location-arrow:before{content:"\\f124"}.fa-c:before{content:"\\43"}.fa-tablet-button:before{content:"\\f10a"}.fa-building-lock:before{content:"\\e4d6"}.fa-pizza-slice:before{content:"\\f818"}.fa-money-bill-wave:before{content:"\\f53a"}.fa-area-chart:before,.fa-chart-area:before{content:"\\f1fe"}.fa-house-flag:before{content:"\\e50d"}.fa-person-circle-minus:before{content:"\\e540"}.fa-ban:before,.fa-cancel:before{content:"\\f05e"}.fa-camera-rotate:before{content:"\\e0d8"}.fa-air-freshener:before,.fa-spray-can-sparkles:before{content:"\\f5d0"}.fa-star:before{content:"\\f005"}.fa-repeat:before{content:"\\f363"}.fa-cross:before{content:"\\f654"}.fa-box:before{content:"\\f466"}.fa-venus-mars:before{content:"\\f228"}.fa-arrow-pointer:before,.fa-mouse-pointer:before{content:"\\f245"}.fa-expand-arrows-alt:before,.fa-maximize:before{content:"\\f31e"}.fa-charging-station:before{content:"\\f5e7"}.fa-shapes:before,.fa-triangle-circle-square:before{content:"\\f61f"}.fa-random:before,.fa-shuffle:before{content:"\\f074"}.fa-person-running:before,.fa-running:before{content:"\\f70c"}.fa-mobile-retro:before{content:"\\e527"}.fa-grip-lines-vertical:before{content:"\\f7a5"}.fa-spider:before{content:"\\f717"}.fa-hands-bound:before{content:"\\e4f9"}.fa-file-invoice-dollar:before{content:"\\f571"}.fa-plane-circle-exclamation:before{content:"\\e556"}.fa-x-ray:before{content:"\\f497"}.fa-spell-check:before{content:"\\f891"}.fa-slash:before{content:"\\f715"}.fa-computer-mouse:before,.fa-mouse:before{content:"\\f8cc"}.fa-arrow-right-to-bracket:before,.fa-sign-in:before{content:"\\f090"}.fa-shop-slash:before,.fa-store-alt-slash:before{content:"\\e070"}.fa-server:before{content:"\\f233"}.fa-virus-covid-slash:before{content:"\\e4a9"}.fa-shop-lock:before{content:"\\e4a5"}.fa-hourglass-1:before,.fa-hourglass-start:before{content:"\\f251"}.fa-blender-phone:before{content:"\\f6b6"}.fa-building-wheat:before{content:"\\e4db"}.fa-person-breastfeeding:before{content:"\\e53a"}.fa-right-to-bracket:before,.fa-sign-in-alt:before{content:"\\f2f6"}.fa-venus:before{content:"\\f221"}.fa-passport:before{content:"\\f5ab"}.fa-thumb-tack-slash:before,.fa-thumbtack-slash:before{content:"\\e68f"}.fa-heart-pulse:before,.fa-heartbeat:before{content:"\\f21e"}.fa-people-carry-box:before,.fa-people-carry:before{content:"\\f4ce"}.fa-temperature-high:before{content:"\\f769"}.fa-microchip:before{content:"\\f2db"}.fa-crown:before{content:"\\f521"}.fa-weight-hanging:before{content:"\\f5cd"}.fa-xmarks-lines:before{content:"\\e59a"}.fa-file-prescription:before{content:"\\f572"}.fa-weight-scale:before,.fa-weight:before{content:"\\f496"}.fa-user-friends:before,.fa-user-group:before{content:"\\f500"}.fa-arrow-up-a-z:before,.fa-sort-alpha-up:before{content:"\\f15e"}.fa-chess-knight:before{content:"\\f441"}.fa-face-laugh-squint:before,.fa-laugh-squint:before{content:"\\f59b"}.fa-wheelchair:before{content:"\\f193"}.fa-arrow-circle-up:before,.fa-circle-arrow-up:before{content:"\\f0aa"}.fa-toggle-on:before{content:"\\f205"}.fa-person-walking:before,.fa-walking:before{content:"\\f554"}.fa-l:before{content:"\\4c"}.fa-fire:before{content:"\\f06d"}.fa-bed-pulse:before,.fa-procedures:before{content:"\\f487"}.fa-shuttle-space:before,.fa-space-shuttle:before{content:"\\f197"}.fa-face-laugh:before,.fa-laugh:before{content:"\\f599"}.fa-folder-open:before{content:"\\f07c"}.fa-heart-circle-plus:before{content:"\\e500"}.fa-code-fork:before{content:"\\e13b"}.fa-city:before{content:"\\f64f"}.fa-microphone-alt:before,.fa-microphone-lines:before{content:"\\f3c9"}.fa-pepper-hot:before{content:"\\f816"}.fa-unlock:before{content:"\\f09c"}.fa-colon-sign:before{content:"\\e140"}.fa-headset:before{content:"\\f590"}.fa-store-slash:before{content:"\\e071"}.fa-road-circle-xmark:before{content:"\\e566"}.fa-user-minus:before{content:"\\f503"}.fa-mars-stroke-up:before,.fa-mars-stroke-v:before{content:"\\f22a"}.fa-champagne-glasses:before,.fa-glass-cheers:before{content:"\\f79f"}.fa-clipboard:before{content:"\\f328"}.fa-house-circle-exclamation:before{content:"\\e50a"}.fa-file-arrow-up:before,.fa-file-upload:before{content:"\\f574"}.fa-wifi-3:before,.fa-wifi-strong:before,.fa-wifi:before{content:"\\f1eb"}.fa-bath:before,.fa-bathtub:before{content:"\\f2cd"}.fa-underline:before{content:"\\f0cd"}.fa-user-edit:before,.fa-user-pen:before{content:"\\f4ff"}.fa-signature:before{content:"\\f5b7"}.fa-stroopwafel:before{content:"\\f551"}.fa-bold:before{content:"\\f032"}.fa-anchor-lock:before{content:"\\e4ad"}.fa-building-ngo:before{content:"\\e4d7"}.fa-manat-sign:before{content:"\\e1d5"}.fa-not-equal:before{content:"\\f53e"}.fa-border-style:before,.fa-border-top-left:before{content:"\\f853"}.fa-map-location-dot:before,.fa-map-marked-alt:before{content:"\\f5a0"}.fa-jedi:before{content:"\\f669"}.fa-poll:before,.fa-square-poll-vertical:before{content:"\\f681"}.fa-mug-hot:before{content:"\\f7b6"}.fa-battery-car:before,.fa-car-battery:before{content:"\\f5df"}.fa-gift:before{content:"\\f06b"}.fa-dice-two:before{content:"\\f528"}.fa-chess-queen:before{content:"\\f445"}.fa-glasses:before{content:"\\f530"}.fa-chess-board:before{content:"\\f43c"}.fa-building-circle-check:before{content:"\\e4d2"}.fa-person-chalkboard:before{content:"\\e53d"}.fa-mars-stroke-h:before,.fa-mars-stroke-right:before{content:"\\f22b"}.fa-hand-back-fist:before,.fa-hand-rock:before{content:"\\f255"}.fa-caret-square-up:before,.fa-square-caret-up:before{content:"\\f151"}.fa-cloud-showers-water:before{content:"\\e4e4"}.fa-bar-chart:before,.fa-chart-bar:before{content:"\\f080"}.fa-hands-bubbles:before,.fa-hands-wash:before{content:"\\e05e"}.fa-less-than-equal:before{content:"\\f537"}.fa-train:before{content:"\\f238"}.fa-eye-low-vision:before,.fa-low-vision:before{content:"\\f2a8"}.fa-crow:before{content:"\\f520"}.fa-sailboat:before{content:"\\e445"}.fa-window-restore:before{content:"\\f2d2"}.fa-plus-square:before,.fa-square-plus:before{content:"\\f0fe"}.fa-torii-gate:before{content:"\\f6a1"}.fa-frog:before{content:"\\f52e"}.fa-bucket:before{content:"\\e4cf"}.fa-image:before{content:"\\f03e"}.fa-microphone:before{content:"\\f130"}.fa-cow:before{content:"\\f6c8"}.fa-caret-up:before{content:"\\f0d8"}.fa-screwdriver:before{content:"\\f54a"}.fa-folder-closed:before{content:"\\e185"}.fa-house-tsunami:before{content:"\\e515"}.fa-square-nfi:before{content:"\\e576"}.fa-arrow-up-from-ground-water:before{content:"\\e4b5"}.fa-glass-martini-alt:before,.fa-martini-glass:before{content:"\\f57b"}.fa-rotate-back:before,.fa-rotate-backward:before,.fa-rotate-left:before,.fa-undo-alt:before{content:"\\f2ea"}.fa-columns:before,.fa-table-columns:before{content:"\\f0db"}.fa-lemon:before{content:"\\f094"}.fa-head-side-mask:before{content:"\\e063"}.fa-handshake:before{content:"\\f2b5"}.fa-gem:before{content:"\\f3a5"}.fa-dolly-box:before,.fa-dolly:before{content:"\\f472"}.fa-smoking:before{content:"\\f48d"}.fa-compress-arrows-alt:before,.fa-minimize:before{content:"\\f78c"}.fa-monument:before{content:"\\f5a6"}.fa-snowplow:before{content:"\\f7d2"}.fa-angle-double-right:before,.fa-angles-right:before{content:"\\f101"}.fa-cannabis:before{content:"\\f55f"}.fa-circle-play:before,.fa-play-circle:before{content:"\\f144"}.fa-tablets:before{content:"\\f490"}.fa-ethernet:before{content:"\\f796"}.fa-eur:before,.fa-euro-sign:before,.fa-euro:before{content:"\\f153"}.fa-chair:before{content:"\\f6c0"}.fa-check-circle:before,.fa-circle-check:before{content:"\\f058"}.fa-circle-stop:before,.fa-stop-circle:before{content:"\\f28d"}.fa-compass-drafting:before,.fa-drafting-compass:before{content:"\\f568"}.fa-plate-wheat:before{content:"\\e55a"}.fa-icicles:before{content:"\\f7ad"}.fa-person-shelter:before{content:"\\e54f"}.fa-neuter:before{content:"\\f22c"}.fa-id-badge:before{content:"\\f2c1"}.fa-marker:before{content:"\\f5a1"}.fa-face-laugh-beam:before,.fa-laugh-beam:before{content:"\\f59a"}.fa-helicopter-symbol:before{content:"\\e502"}.fa-universal-access:before{content:"\\f29a"}.fa-chevron-circle-up:before,.fa-circle-chevron-up:before{content:"\\f139"}.fa-lari-sign:before{content:"\\e1c8"}.fa-volcano:before{content:"\\f770"}.fa-person-walking-dashed-line-arrow-right:before{content:"\\e553"}.fa-gbp:before,.fa-pound-sign:before,.fa-sterling-sign:before{content:"\\f154"}.fa-viruses:before{content:"\\e076"}.fa-square-person-confined:before{content:"\\e577"}.fa-user-tie:before{content:"\\f508"}.fa-arrow-down-long:before,.fa-long-arrow-down:before{content:"\\f175"}.fa-tent-arrow-down-to-line:before{content:"\\e57e"}.fa-certificate:before{content:"\\f0a3"}.fa-mail-reply-all:before,.fa-reply-all:before{content:"\\f122"}.fa-suitcase:before{content:"\\f0f2"}.fa-person-skating:before,.fa-skating:before{content:"\\f7c5"}.fa-filter-circle-dollar:before,.fa-funnel-dollar:before{content:"\\f662"}.fa-camera-retro:before{content:"\\f083"}.fa-arrow-circle-down:before,.fa-circle-arrow-down:before{content:"\\f0ab"}.fa-arrow-right-to-file:before,.fa-file-import:before{content:"\\f56f"}.fa-external-link-square:before,.fa-square-arrow-up-right:before{content:"\\f14c"}.fa-box-open:before{content:"\\f49e"}.fa-scroll:before{content:"\\f70e"}.fa-spa:before{content:"\\f5bb"}.fa-location-pin-lock:before{content:"\\e51f"}.fa-pause:before{content:"\\f04c"}.fa-hill-avalanche:before{content:"\\e507"}.fa-temperature-0:before,.fa-temperature-empty:before,.fa-thermometer-0:before,.fa-thermometer-empty:before{content:"\\f2cb"}.fa-bomb:before{content:"\\f1e2"}.fa-registered:before{content:"\\f25d"}.fa-address-card:before,.fa-contact-card:before,.fa-vcard:before{content:"\\f2bb"}.fa-balance-scale-right:before,.fa-scale-unbalanced-flip:before{content:"\\f516"}.fa-subscript:before{content:"\\f12c"}.fa-diamond-turn-right:before,.fa-directions:before{content:"\\f5eb"}.fa-burst:before{content:"\\e4dc"}.fa-house-laptop:before,.fa-laptop-house:before{content:"\\e066"}.fa-face-tired:before,.fa-tired:before{content:"\\f5c8"}.fa-money-bills:before{content:"\\e1f3"}.fa-smog:before{content:"\\f75f"}.fa-crutch:before{content:"\\f7f7"}.fa-cloud-arrow-up:before,.fa-cloud-upload-alt:before,.fa-cloud-upload:before{content:"\\f0ee"}.fa-palette:before{content:"\\f53f"}.fa-arrows-turn-right:before{content:"\\e4c0"}.fa-vest:before{content:"\\e085"}.fa-ferry:before{content:"\\e4ea"}.fa-arrows-down-to-people:before{content:"\\e4b9"}.fa-seedling:before,.fa-sprout:before{content:"\\f4d8"}.fa-arrows-alt-h:before,.fa-left-right:before{content:"\\f337"}.fa-boxes-packing:before{content:"\\e4c7"}.fa-arrow-circle-left:before,.fa-circle-arrow-left:before{content:"\\f0a8"}.fa-group-arrows-rotate:before{content:"\\e4f6"}.fa-bowl-food:before{content:"\\e4c6"}.fa-candy-cane:before{content:"\\f786"}.fa-arrow-down-wide-short:before,.fa-sort-amount-asc:before,.fa-sort-amount-down:before{content:"\\f160"}.fa-cloud-bolt:before,.fa-thunderstorm:before{content:"\\f76c"}.fa-remove-format:before,.fa-text-slash:before{content:"\\f87d"}.fa-face-smile-wink:before,.fa-smile-wink:before{content:"\\f4da"}.fa-file-word:before{content:"\\f1c2"}.fa-file-powerpoint:before{content:"\\f1c4"}.fa-arrows-h:before,.fa-arrows-left-right:before{content:"\\f07e"}.fa-house-lock:before{content:"\\e510"}.fa-cloud-arrow-down:before,.fa-cloud-download-alt:before,.fa-cloud-download:before{content:"\\f0ed"}.fa-children:before{content:"\\e4e1"}.fa-blackboard:before,.fa-chalkboard:before{content:"\\f51b"}.fa-user-alt-slash:before,.fa-user-large-slash:before{content:"\\f4fa"}.fa-envelope-open:before{content:"\\f2b6"}.fa-handshake-alt-slash:before,.fa-handshake-simple-slash:before{content:"\\e05f"}.fa-mattress-pillow:before{content:"\\e525"}.fa-guarani-sign:before{content:"\\e19a"}.fa-arrows-rotate:before,.fa-refresh:before,.fa-sync:before{content:"\\f021"}.fa-fire-extinguisher:before{content:"\\f134"}.fa-cruzeiro-sign:before{content:"\\e152"}.fa-greater-than-equal:before{content:"\\f532"}.fa-shield-alt:before,.fa-shield-halved:before{content:"\\f3ed"}.fa-atlas:before,.fa-book-atlas:before{content:"\\f558"}.fa-virus:before{content:"\\e074"}.fa-envelope-circle-check:before{content:"\\e4e8"}.fa-layer-group:before{content:"\\f5fd"}.fa-arrows-to-dot:before{content:"\\e4be"}.fa-archway:before{content:"\\f557"}.fa-heart-circle-check:before{content:"\\e4fd"}.fa-house-chimney-crack:before,.fa-house-damage:before{content:"\\f6f1"}.fa-file-archive:before,.fa-file-zipper:before{content:"\\f1c6"}.fa-square:before{content:"\\f0c8"}.fa-glass-martini:before,.fa-martini-glass-empty:before{content:"\\f000"}.fa-couch:before{content:"\\f4b8"}.fa-cedi-sign:before{content:"\\e0df"}.fa-italic:before{content:"\\f033"}.fa-table-cells-column-lock:before{content:"\\e678"}.fa-church:before{content:"\\f51d"}.fa-comments-dollar:before{content:"\\f653"}.fa-democrat:before{content:"\\f747"}.fa-z:before{content:"\\5a"}.fa-person-skiing:before,.fa-skiing:before{content:"\\f7c9"}.fa-road-lock:before{content:"\\e567"}.fa-a:before{content:"\\41"}.fa-temperature-arrow-down:before,.fa-temperature-down:before{content:"\\e03f"}.fa-feather-alt:before,.fa-feather-pointed:before{content:"\\f56b"}.fa-p:before{content:"\\50"}.fa-snowflake:before{content:"\\f2dc"}.fa-newspaper:before{content:"\\f1ea"}.fa-ad:before,.fa-rectangle-ad:before{content:"\\f641"}.fa-arrow-circle-right:before,.fa-circle-arrow-right:before{content:"\\f0a9"}.fa-filter-circle-xmark:before{content:"\\e17b"}.fa-locust:before{content:"\\e520"}.fa-sort:before,.fa-unsorted:before{content:"\\f0dc"}.fa-list-1-2:before,.fa-list-numeric:before,.fa-list-ol:before{content:"\\f0cb"}.fa-person-dress-burst:before{content:"\\e544"}.fa-money-check-alt:before,.fa-money-check-dollar:before{content:"\\f53d"}.fa-vector-square:before{content:"\\f5cb"}.fa-bread-slice:before{content:"\\f7ec"}.fa-language:before{content:"\\f1ab"}.fa-face-kiss-wink-heart:before,.fa-kiss-wink-heart:before{content:"\\f598"}.fa-filter:before{content:"\\f0b0"}.fa-question:before{content:"\\3f"}.fa-file-signature:before{content:"\\f573"}.fa-arrows-alt:before,.fa-up-down-left-right:before{content:"\\f0b2"}.fa-house-chimney-user:before{content:"\\e065"}.fa-hand-holding-heart:before{content:"\\f4be"}.fa-puzzle-piece:before{content:"\\f12e"}.fa-money-check:before{content:"\\f53c"}.fa-star-half-alt:before,.fa-star-half-stroke:before{content:"\\f5c0"}.fa-code:before{content:"\\f121"}.fa-glass-whiskey:before,.fa-whiskey-glass:before{content:"\\f7a0"}.fa-building-circle-exclamation:before{content:"\\e4d3"}.fa-magnifying-glass-chart:before{content:"\\e522"}.fa-arrow-up-right-from-square:before,.fa-external-link:before{content:"\\f08e"}.fa-cubes-stacked:before{content:"\\e4e6"}.fa-krw:before,.fa-won-sign:before,.fa-won:before{content:"\\f159"}.fa-virus-covid:before{content:"\\e4a8"}.fa-austral-sign:before{content:"\\e0a9"}.fa-f:before{content:"\\46"}.fa-leaf:before{content:"\\f06c"}.fa-road:before{content:"\\f018"}.fa-cab:before,.fa-taxi:before{content:"\\f1ba"}.fa-person-circle-plus:before{content:"\\e541"}.fa-chart-pie:before,.fa-pie-chart:before{content:"\\f200"}.fa-bolt-lightning:before{content:"\\e0b7"}.fa-sack-xmark:before{content:"\\e56a"}.fa-file-excel:before{content:"\\f1c3"}.fa-file-contract:before{content:"\\f56c"}.fa-fish-fins:before{content:"\\e4f2"}.fa-building-flag:before{content:"\\e4d5"}.fa-face-grin-beam:before,.fa-grin-beam:before{content:"\\f582"}.fa-object-ungroup:before{content:"\\f248"}.fa-poop:before{content:"\\f619"}.fa-location-pin:before,.fa-map-marker:before{content:"\\f041"}.fa-kaaba:before{content:"\\f66b"}.fa-toilet-paper:before{content:"\\f71e"}.fa-hard-hat:before,.fa-hat-hard:before,.fa-helmet-safety:before{content:"\\f807"}.fa-eject:before{content:"\\f052"}.fa-arrow-alt-circle-right:before,.fa-circle-right:before{content:"\\f35a"}.fa-plane-circle-check:before{content:"\\e555"}.fa-face-rolling-eyes:before,.fa-meh-rolling-eyes:before{content:"\\f5a5"}.fa-object-group:before{content:"\\f247"}.fa-chart-line:before,.fa-line-chart:before{content:"\\f201"}.fa-mask-ventilator:before{content:"\\e524"}.fa-arrow-right:before{content:"\\f061"}.fa-map-signs:before,.fa-signs-post:before{content:"\\f277"}.fa-cash-register:before{content:"\\f788"}.fa-person-circle-question:before{content:"\\e542"}.fa-h:before{content:"\\48"}.fa-tarp:before{content:"\\e57b"}.fa-screwdriver-wrench:before,.fa-tools:before{content:"\\f7d9"}.fa-arrows-to-eye:before{content:"\\e4bf"}.fa-plug-circle-bolt:before{content:"\\e55b"}.fa-heart:before{content:"\\f004"}.fa-mars-and-venus:before{content:"\\f224"}.fa-home-user:before,.fa-house-user:before{content:"\\e1b0"}.fa-dumpster-fire:before{content:"\\f794"}.fa-house-crack:before{content:"\\e3b1"}.fa-cocktail:before,.fa-martini-glass-citrus:before{content:"\\f561"}.fa-face-surprise:before,.fa-surprise:before{content:"\\f5c2"}.fa-bottle-water:before{content:"\\e4c5"}.fa-circle-pause:before,.fa-pause-circle:before{content:"\\f28b"}.fa-toilet-paper-slash:before{content:"\\e072"}.fa-apple-alt:before,.fa-apple-whole:before{content:"\\f5d1"}.fa-kitchen-set:before{content:"\\e51a"}.fa-r:before{content:"\\52"}.fa-temperature-1:before,.fa-temperature-quarter:before,.fa-thermometer-1:before,.fa-thermometer-quarter:before{content:"\\f2ca"}.fa-cube:before{content:"\\f1b2"}.fa-bitcoin-sign:before{content:"\\e0b4"}.fa-shield-dog:before{content:"\\e573"}.fa-solar-panel:before{content:"\\f5ba"}.fa-lock-open:before{content:"\\f3c1"}.fa-elevator:before{content:"\\e16d"}.fa-money-bill-transfer:before{content:"\\e528"}.fa-money-bill-trend-up:before{content:"\\e529"}.fa-house-flood-water-circle-arrow-right:before{content:"\\e50f"}.fa-poll-h:before,.fa-square-poll-horizontal:before{content:"\\f682"}.fa-circle:before{content:"\\f111"}.fa-backward-fast:before,.fa-fast-backward:before{content:"\\f049"}.fa-recycle:before{content:"\\f1b8"}.fa-user-astronaut:before{content:"\\f4fb"}.fa-plane-slash:before{content:"\\e069"}.fa-trademark:before{content:"\\f25c"}.fa-basketball-ball:before,.fa-basketball:before{content:"\\f434"}.fa-satellite-dish:before{content:"\\f7c0"}.fa-arrow-alt-circle-up:before,.fa-circle-up:before{content:"\\f35b"}.fa-mobile-alt:before,.fa-mobile-screen-button:before{content:"\\f3cd"}.fa-volume-high:before,.fa-volume-up:before{content:"\\f028"}.fa-users-rays:before{content:"\\e593"}.fa-wallet:before{content:"\\f555"}.fa-clipboard-check:before{content:"\\f46c"}.fa-file-audio:before{content:"\\f1c7"}.fa-burger:before,.fa-hamburger:before{content:"\\f805"}.fa-wrench:before{content:"\\f0ad"}.fa-bugs:before{content:"\\e4d0"}.fa-rupee-sign:before,.fa-rupee:before{content:"\\f156"}.fa-file-image:before{content:"\\f1c5"}.fa-circle-question:before,.fa-question-circle:before{content:"\\f059"}.fa-plane-departure:before{content:"\\f5b0"}.fa-handshake-slash:before{content:"\\e060"}.fa-book-bookmark:before{content:"\\e0bb"}.fa-code-branch:before{content:"\\f126"}.fa-hat-cowboy:before{content:"\\f8c0"}.fa-bridge:before{content:"\\e4c8"}.fa-phone-alt:before,.fa-phone-flip:before{content:"\\f879"}.fa-truck-front:before{content:"\\e2b7"}.fa-cat:before{content:"\\f6be"}.fa-anchor-circle-exclamation:before{content:"\\e4ab"}.fa-truck-field:before{content:"\\e58d"}.fa-route:before{content:"\\f4d7"}.fa-clipboard-question:before{content:"\\e4e3"}.fa-panorama:before{content:"\\e209"}.fa-comment-medical:before{content:"\\f7f5"}.fa-teeth-open:before{content:"\\f62f"}.fa-file-circle-minus:before{content:"\\e4ed"}.fa-tags:before{content:"\\f02c"}.fa-wine-glass:before{content:"\\f4e3"}.fa-fast-forward:before,.fa-forward-fast:before{content:"\\f050"}.fa-face-meh-blank:before,.fa-meh-blank:before{content:"\\f5a4"}.fa-parking:before,.fa-square-parking:before{content:"\\f540"}.fa-house-signal:before{content:"\\e012"}.fa-bars-progress:before,.fa-tasks-alt:before{content:"\\f828"}.fa-faucet-drip:before{content:"\\e006"}.fa-cart-flatbed:before,.fa-dolly-flatbed:before{content:"\\f474"}.fa-ban-smoking:before,.fa-smoking-ban:before{content:"\\f54d"}.fa-terminal:before{content:"\\f120"}.fa-mobile-button:before{content:"\\f10b"}.fa-house-medical-flag:before{content:"\\e514"}.fa-basket-shopping:before,.fa-shopping-basket:before{content:"\\f291"}.fa-tape:before{content:"\\f4db"}.fa-bus-alt:before,.fa-bus-simple:before{content:"\\f55e"}.fa-eye:before{content:"\\f06e"}.fa-face-sad-cry:before,.fa-sad-cry:before{content:"\\f5b3"}.fa-audio-description:before{content:"\\f29e"}.fa-person-military-to-person:before{content:"\\e54c"}.fa-file-shield:before{content:"\\e4f0"}.fa-user-slash:before{content:"\\f506"}.fa-pen:before{content:"\\f304"}.fa-tower-observation:before{content:"\\e586"}.fa-file-code:before{content:"\\f1c9"}.fa-signal-5:before,.fa-signal-perfect:before,.fa-signal:before{content:"\\f012"}.fa-bus:before{content:"\\f207"}.fa-heart-circle-xmark:before{content:"\\e501"}.fa-home-lg:before,.fa-house-chimney:before{content:"\\e3af"}.fa-window-maximize:before{content:"\\f2d0"}.fa-face-frown:before,.fa-frown:before{content:"\\f119"}.fa-prescription:before{content:"\\f5b1"}.fa-shop:before,.fa-store-alt:before{content:"\\f54f"}.fa-floppy-disk:before,.fa-save:before{content:"\\f0c7"}.fa-vihara:before{content:"\\f6a7"}.fa-balance-scale-left:before,.fa-scale-unbalanced:before{content:"\\f515"}.fa-sort-asc:before,.fa-sort-up:before{content:"\\f0de"}.fa-comment-dots:before,.fa-commenting:before{content:"\\f4ad"}.fa-plant-wilt:before{content:"\\e5aa"}.fa-diamond:before{content:"\\f219"}.fa-face-grin-squint:before,.fa-grin-squint:before{content:"\\f585"}.fa-hand-holding-dollar:before,.fa-hand-holding-usd:before{content:"\\f4c0"}.fa-bacterium:before{content:"\\e05a"}.fa-hand-pointer:before{content:"\\f25a"}.fa-drum-steelpan:before{content:"\\f56a"}.fa-hand-scissors:before{content:"\\f257"}.fa-hands-praying:before,.fa-praying-hands:before{content:"\\f684"}.fa-arrow-right-rotate:before,.fa-arrow-rotate-forward:before,.fa-arrow-rotate-right:before,.fa-redo:before{content:"\\f01e"}.fa-biohazard:before{content:"\\f780"}.fa-location-crosshairs:before,.fa-location:before{content:"\\f601"}.fa-mars-double:before{content:"\\f227"}.fa-child-dress:before{content:"\\e59c"}.fa-users-between-lines:before{content:"\\e591"}.fa-lungs-virus:before{content:"\\e067"}.fa-face-grin-tears:before,.fa-grin-tears:before{content:"\\f588"}.fa-phone:before{content:"\\f095"}.fa-calendar-times:before,.fa-calendar-xmark:before{content:"\\f273"}.fa-child-reaching:before{content:"\\e59d"}.fa-head-side-virus:before{content:"\\e064"}.fa-user-cog:before,.fa-user-gear:before{content:"\\f4fe"}.fa-arrow-up-1-9:before,.fa-sort-numeric-up:before{content:"\\f163"}.fa-door-closed:before{content:"\\f52a"}.fa-shield-virus:before{content:"\\e06c"}.fa-dice-six:before{content:"\\f526"}.fa-mosquito-net:before{content:"\\e52c"}.fa-bridge-water:before{content:"\\e4ce"}.fa-person-booth:before{content:"\\f756"}.fa-text-width:before{content:"\\f035"}.fa-hat-wizard:before{content:"\\f6e8"}.fa-pen-fancy:before{content:"\\f5ac"}.fa-digging:before,.fa-person-digging:before{content:"\\f85e"}.fa-trash:before{content:"\\f1f8"}.fa-gauge-simple-med:before,.fa-gauge-simple:before,.fa-tachometer-average:before{content:"\\f629"}.fa-book-medical:before{content:"\\f7e6"}.fa-poo:before{content:"\\f2fe"}.fa-quote-right-alt:before,.fa-quote-right:before{content:"\\f10e"}.fa-shirt:before,.fa-t-shirt:before,.fa-tshirt:before{content:"\\f553"}.fa-cubes:before{content:"\\f1b3"}.fa-divide:before{content:"\\f529"}.fa-tenge-sign:before,.fa-tenge:before{content:"\\f7d7"}.fa-headphones:before{content:"\\f025"}.fa-hands-holding:before{content:"\\f4c2"}.fa-hands-clapping:before{content:"\\e1a8"}.fa-republican:before{content:"\\f75e"}.fa-arrow-left:before{content:"\\f060"}.fa-person-circle-xmark:before{content:"\\e543"}.fa-ruler:before{content:"\\f545"}.fa-align-left:before{content:"\\f036"}.fa-dice-d6:before{content:"\\f6d1"}.fa-restroom:before{content:"\\f7bd"}.fa-j:before{content:"\\4a"}.fa-users-viewfinder:before{content:"\\e595"}.fa-file-video:before{content:"\\f1c8"}.fa-external-link-alt:before,.fa-up-right-from-square:before{content:"\\f35d"}.fa-table-cells:before,.fa-th:before{content:"\\f00a"}.fa-file-pdf:before{content:"\\f1c1"}.fa-bible:before,.fa-book-bible:before{content:"\\f647"}.fa-o:before{content:"\\4f"}.fa-medkit:before,.fa-suitcase-medical:before{content:"\\f0fa"}.fa-user-secret:before{content:"\\f21b"}.fa-otter:before{content:"\\f700"}.fa-female:before,.fa-person-dress:before{content:"\\f182"}.fa-comment-dollar:before{content:"\\f651"}.fa-briefcase-clock:before,.fa-business-time:before{content:"\\f64a"}.fa-table-cells-large:before,.fa-th-large:before{content:"\\f009"}.fa-book-tanakh:before,.fa-tanakh:before{content:"\\f827"}.fa-phone-volume:before,.fa-volume-control-phone:before{content:"\\f2a0"}.fa-hat-cowboy-side:before{content:"\\f8c1"}.fa-clipboard-user:before{content:"\\f7f3"}.fa-child:before{content:"\\f1ae"}.fa-lira-sign:before{content:"\\f195"}.fa-satellite:before{content:"\\f7bf"}.fa-plane-lock:before{content:"\\e558"}.fa-tag:before{content:"\\f02b"}.fa-comment:before{content:"\\f075"}.fa-birthday-cake:before,.fa-cake-candles:before,.fa-cake:before{content:"\\f1fd"}.fa-envelope:before{content:"\\f0e0"}.fa-angle-double-up:before,.fa-angles-up:before{content:"\\f102"}.fa-paperclip:before{content:"\\f0c6"}.fa-arrow-right-to-city:before{content:"\\e4b3"}.fa-ribbon:before{content:"\\f4d6"}.fa-lungs:before{content:"\\f604"}.fa-arrow-up-9-1:before,.fa-sort-numeric-up-alt:before{content:"\\f887"}.fa-litecoin-sign:before{content:"\\e1d3"}.fa-border-none:before{content:"\\f850"}.fa-circle-nodes:before{content:"\\e4e2"}.fa-parachute-box:before{content:"\\f4cd"}.fa-indent:before{content:"\\f03c"}.fa-truck-field-un:before{content:"\\e58e"}.fa-hourglass-empty:before,.fa-hourglass:before{content:"\\f254"}.fa-mountain:before{content:"\\f6fc"}.fa-user-doctor:before,.fa-user-md:before{content:"\\f0f0"}.fa-circle-info:before,.fa-info-circle:before{content:"\\f05a"}.fa-cloud-meatball:before{content:"\\f73b"}.fa-camera-alt:before,.fa-camera:before{content:"\\f030"}.fa-square-virus:before{content:"\\e578"}.fa-meteor:before{content:"\\f753"}.fa-car-on:before{content:"\\e4dd"}.fa-sleigh:before{content:"\\f7cc"}.fa-arrow-down-1-9:before,.fa-sort-numeric-asc:before,.fa-sort-numeric-down:before{content:"\\f162"}.fa-hand-holding-droplet:before,.fa-hand-holding-water:before{content:"\\f4c1"}.fa-water:before{content:"\\f773"}.fa-calendar-check:before{content:"\\f274"}.fa-braille:before{content:"\\f2a1"}.fa-prescription-bottle-alt:before,.fa-prescription-bottle-medical:before{content:"\\f486"}.fa-landmark:before{content:"\\f66f"}.fa-truck:before{content:"\\f0d1"}.fa-crosshairs:before{content:"\\f05b"}.fa-person-cane:before{content:"\\e53c"}.fa-tent:before{content:"\\e57d"}.fa-vest-patches:before{content:"\\e086"}.fa-check-double:before{content:"\\f560"}.fa-arrow-down-a-z:before,.fa-sort-alpha-asc:before,.fa-sort-alpha-down:before{content:"\\f15d"}.fa-money-bill-wheat:before{content:"\\e52a"}.fa-cookie:before{content:"\\f563"}.fa-arrow-left-rotate:before,.fa-arrow-rotate-back:before,.fa-arrow-rotate-backward:before,.fa-arrow-rotate-left:before,.fa-undo:before{content:"\\f0e2"}.fa-hard-drive:before,.fa-hdd:before{content:"\\f0a0"}.fa-face-grin-squint-tears:before,.fa-grin-squint-tears:before{content:"\\f586"}.fa-dumbbell:before{content:"\\f44b"}.fa-list-alt:before,.fa-rectangle-list:before{content:"\\f022"}.fa-tarp-droplet:before{content:"\\e57c"}.fa-house-medical-circle-check:before{content:"\\e511"}.fa-person-skiing-nordic:before,.fa-skiing-nordic:before{content:"\\f7ca"}.fa-calendar-plus:before{content:"\\f271"}.fa-plane-arrival:before{content:"\\f5af"}.fa-arrow-alt-circle-left:before,.fa-circle-left:before{content:"\\f359"}.fa-subway:before,.fa-train-subway:before{content:"\\f239"}.fa-chart-gantt:before{content:"\\e0e4"}.fa-indian-rupee-sign:before,.fa-indian-rupee:before,.fa-inr:before{content:"\\e1bc"}.fa-crop-alt:before,.fa-crop-simple:before{content:"\\f565"}.fa-money-bill-1:before,.fa-money-bill-alt:before{content:"\\f3d1"}.fa-left-long:before,.fa-long-arrow-alt-left:before{content:"\\f30a"}.fa-dna:before{content:"\\f471"}.fa-virus-slash:before{content:"\\e075"}.fa-minus:before,.fa-subtract:before{content:"\\f068"}.fa-chess:before{content:"\\f439"}.fa-arrow-left-long:before,.fa-long-arrow-left:before{content:"\\f177"}.fa-plug-circle-check:before{content:"\\e55c"}.fa-street-view:before{content:"\\f21d"}.fa-franc-sign:before{content:"\\e18f"}.fa-volume-off:before{content:"\\f026"}.fa-american-sign-language-interpreting:before,.fa-asl-interpreting:before,.fa-hands-american-sign-language-interpreting:before,.fa-hands-asl-interpreting:before{content:"\\f2a3"}.fa-cog:before,.fa-gear:before{content:"\\f013"}.fa-droplet-slash:before,.fa-tint-slash:before{content:"\\f5c7"}.fa-mosque:before{content:"\\f678"}.fa-mosquito:before{content:"\\e52b"}.fa-star-of-david:before{content:"\\f69a"}.fa-person-military-rifle:before{content:"\\e54b"}.fa-cart-shopping:before,.fa-shopping-cart:before{content:"\\f07a"}.fa-vials:before{content:"\\f493"}.fa-plug-circle-plus:before{content:"\\e55f"}.fa-place-of-worship:before{content:"\\f67f"}.fa-grip-vertical:before{content:"\\f58e"}.fa-arrow-turn-up:before,.fa-level-up:before{content:"\\f148"}.fa-u:before{content:"\\55"}.fa-square-root-alt:before,.fa-square-root-variable:before{content:"\\f698"}.fa-clock-four:before,.fa-clock:before{content:"\\f017"}.fa-backward-step:before,.fa-step-backward:before{content:"\\f048"}.fa-pallet:before{content:"\\f482"}.fa-faucet:before{content:"\\e005"}.fa-baseball-bat-ball:before{content:"\\f432"}.fa-s:before{content:"\\53"}.fa-timeline:before{content:"\\e29c"}.fa-keyboard:before{content:"\\f11c"}.fa-caret-down:before{content:"\\f0d7"}.fa-clinic-medical:before,.fa-house-chimney-medical:before{content:"\\f7f2"}.fa-temperature-3:before,.fa-temperature-three-quarters:before,.fa-thermometer-3:before,.fa-thermometer-three-quarters:before{content:"\\f2c8"}.fa-mobile-android-alt:before,.fa-mobile-screen:before{content:"\\f3cf"}.fa-plane-up:before{content:"\\e22d"}.fa-piggy-bank:before{content:"\\f4d3"}.fa-battery-3:before,.fa-battery-half:before{content:"\\f242"}.fa-mountain-city:before{content:"\\e52e"}.fa-coins:before{content:"\\f51e"}.fa-khanda:before{content:"\\f66d"}.fa-sliders-h:before,.fa-sliders:before{content:"\\f1de"}.fa-folder-tree:before{content:"\\f802"}.fa-network-wired:before{content:"\\f6ff"}.fa-map-pin:before{content:"\\f276"}.fa-hamsa:before{content:"\\f665"}.fa-cent-sign:before{content:"\\e3f5"}.fa-flask:before{content:"\\f0c3"}.fa-person-pregnant:before{content:"\\e31e"}.fa-wand-sparkles:before{content:"\\f72b"}.fa-ellipsis-v:before,.fa-ellipsis-vertical:before{content:"\\f142"}.fa-ticket:before{content:"\\f145"}.fa-power-off:before{content:"\\f011"}.fa-long-arrow-alt-right:before,.fa-right-long:before{content:"\\f30b"}.fa-flag-usa:before{content:"\\f74d"}.fa-laptop-file:before{content:"\\e51d"}.fa-teletype:before,.fa-tty:before{content:"\\f1e4"}.fa-diagram-next:before{content:"\\e476"}.fa-person-rifle:before{content:"\\e54e"}.fa-house-medical-circle-exclamation:before{content:"\\e512"}.fa-closed-captioning:before{content:"\\f20a"}.fa-hiking:before,.fa-person-hiking:before{content:"\\f6ec"}.fa-venus-double:before{content:"\\f226"}.fa-images:before{content:"\\f302"}.fa-calculator:before{content:"\\f1ec"}.fa-people-pulling:before{content:"\\e535"}.fa-n:before{content:"\\4e"}.fa-cable-car:before,.fa-tram:before{content:"\\f7da"}.fa-cloud-rain:before{content:"\\f73d"}.fa-building-circle-xmark:before{content:"\\e4d4"}.fa-ship:before{content:"\\f21a"}.fa-arrows-down-to-line:before{content:"\\e4b8"}.fa-download:before{content:"\\f019"}.fa-face-grin:before,.fa-grin:before{content:"\\f580"}.fa-backspace:before,.fa-delete-left:before{content:"\\f55a"}.fa-eye-dropper-empty:before,.fa-eye-dropper:before,.fa-eyedropper:before{content:"\\f1fb"}.fa-file-circle-check:before{content:"\\e5a0"}.fa-forward:before{content:"\\f04e"}.fa-mobile-android:before,.fa-mobile-phone:before,.fa-mobile:before{content:"\\f3ce"}.fa-face-meh:before,.fa-meh:before{content:"\\f11a"}.fa-align-center:before{content:"\\f037"}.fa-book-dead:before,.fa-book-skull:before{content:"\\f6b7"}.fa-drivers-license:before,.fa-id-card:before{content:"\\f2c2"}.fa-dedent:before,.fa-outdent:before{content:"\\f03b"}.fa-heart-circle-exclamation:before{content:"\\e4fe"}.fa-home-alt:before,.fa-home-lg-alt:before,.fa-home:before,.fa-house:before{content:"\\f015"}.fa-calendar-week:before{content:"\\f784"}.fa-laptop-medical:before{content:"\\f812"}.fa-b:before{content:"\\42"}.fa-file-medical:before{content:"\\f477"}.fa-dice-one:before{content:"\\f525"}.fa-kiwi-bird:before{content:"\\f535"}.fa-arrow-right-arrow-left:before,.fa-exchange:before{content:"\\f0ec"}.fa-redo-alt:before,.fa-rotate-forward:before,.fa-rotate-right:before{content:"\\f2f9"}.fa-cutlery:before,.fa-utensils:before{content:"\\f2e7"}.fa-arrow-up-wide-short:before,.fa-sort-amount-up:before{content:"\\f161"}.fa-mill-sign:before{content:"\\e1ed"}.fa-bowl-rice:before{content:"\\e2eb"}.fa-skull:before{content:"\\f54c"}.fa-broadcast-tower:before,.fa-tower-broadcast:before{content:"\\f519"}.fa-truck-pickup:before{content:"\\f63c"}.fa-long-arrow-alt-up:before,.fa-up-long:before{content:"\\f30c"}.fa-stop:before{content:"\\f04d"}.fa-code-merge:before{content:"\\f387"}.fa-upload:before{content:"\\f093"}.fa-hurricane:before{content:"\\f751"}.fa-mound:before{content:"\\e52d"}.fa-toilet-portable:before{content:"\\e583"}.fa-compact-disc:before{content:"\\f51f"}.fa-file-arrow-down:before,.fa-file-download:before{content:"\\f56d"}.fa-caravan:before{content:"\\f8ff"}.fa-shield-cat:before{content:"\\e572"}.fa-bolt:before,.fa-zap:before{content:"\\f0e7"}.fa-glass-water:before{content:"\\e4f4"}.fa-oil-well:before{content:"\\e532"}.fa-vault:before{content:"\\e2c5"}.fa-mars:before{content:"\\f222"}.fa-toilet:before{content:"\\f7d8"}.fa-plane-circle-xmark:before{content:"\\e557"}.fa-cny:before,.fa-jpy:before,.fa-rmb:before,.fa-yen-sign:before,.fa-yen:before{content:"\\f157"}.fa-rouble:before,.fa-rub:before,.fa-ruble-sign:before,.fa-ruble:before{content:"\\f158"}.fa-sun:before{content:"\\f185"}.fa-guitar:before{content:"\\f7a6"}.fa-face-laugh-wink:before,.fa-laugh-wink:before{content:"\\f59c"}.fa-horse-head:before{content:"\\f7ab"}.fa-bore-hole:before{content:"\\e4c3"}.fa-industry:before{content:"\\f275"}.fa-arrow-alt-circle-down:before,.fa-circle-down:before{content:"\\f358"}.fa-arrows-turn-to-dots:before{content:"\\e4c1"}.fa-florin-sign:before{content:"\\e184"}.fa-arrow-down-short-wide:before,.fa-sort-amount-desc:before,.fa-sort-amount-down-alt:before{content:"\\f884"}.fa-less-than:before{content:"\\3c"}.fa-angle-down:before{content:"\\f107"}.fa-car-tunnel:before{content:"\\e4de"}.fa-head-side-cough:before{content:"\\e061"}.fa-grip-lines:before{content:"\\f7a4"}.fa-thumbs-down:before{content:"\\f165"}.fa-user-lock:before{content:"\\f502"}.fa-arrow-right-long:before,.fa-long-arrow-right:before{content:"\\f178"}.fa-anchor-circle-xmark:before{content:"\\e4ac"}.fa-ellipsis-h:before,.fa-ellipsis:before{content:"\\f141"}.fa-chess-pawn:before{content:"\\f443"}.fa-first-aid:before,.fa-kit-medical:before{content:"\\f479"}.fa-person-through-window:before{content:"\\e5a9"}.fa-toolbox:before{content:"\\f552"}.fa-hands-holding-circle:before{content:"\\e4fb"}.fa-bug:before{content:"\\f188"}.fa-credit-card-alt:before,.fa-credit-card:before{content:"\\f09d"}.fa-automobile:before,.fa-car:before{content:"\\f1b9"}.fa-hand-holding-hand:before{content:"\\e4f7"}.fa-book-open-reader:before,.fa-book-reader:before{content:"\\f5da"}.fa-mountain-sun:before{content:"\\e52f"}.fa-arrows-left-right-to-line:before{content:"\\e4ba"}.fa-dice-d20:before{content:"\\f6cf"}.fa-truck-droplet:before{content:"\\e58c"}.fa-file-circle-xmark:before{content:"\\e5a1"}.fa-temperature-arrow-up:before,.fa-temperature-up:before{content:"\\e040"}.fa-medal:before{content:"\\f5a2"}.fa-bed:before{content:"\\f236"}.fa-h-square:before,.fa-square-h:before{content:"\\f0fd"}.fa-podcast:before{content:"\\f2ce"}.fa-temperature-4:before,.fa-temperature-full:before,.fa-thermometer-4:before,.fa-thermometer-full:before{content:"\\f2c7"}.fa-bell:before{content:"\\f0f3"}.fa-superscript:before{content:"\\f12b"}.fa-plug-circle-xmark:before{content:"\\e560"}.fa-star-of-life:before{content:"\\f621"}.fa-phone-slash:before{content:"\\f3dd"}.fa-paint-roller:before{content:"\\f5aa"}.fa-hands-helping:before,.fa-handshake-angle:before{content:"\\f4c4"}.fa-location-dot:before,.fa-map-marker-alt:before{content:"\\f3c5"}.fa-file:before{content:"\\f15b"}.fa-greater-than:before{content:"\\3e"}.fa-person-swimming:before,.fa-swimmer:before{content:"\\f5c4"}.fa-arrow-down:before{content:"\\f063"}.fa-droplet:before,.fa-tint:before{content:"\\f043"}.fa-eraser:before{content:"\\f12d"}.fa-earth-america:before,.fa-earth-americas:before,.fa-earth:before,.fa-globe-americas:before{content:"\\f57d"}.fa-person-burst:before{content:"\\e53b"}.fa-dove:before{content:"\\f4ba"}.fa-battery-0:before,.fa-battery-empty:before{content:"\\f244"}.fa-socks:before{content:"\\f696"}.fa-inbox:before{content:"\\f01c"}.fa-section:before{content:"\\e447"}.fa-gauge-high:before,.fa-tachometer-alt-fast:before,.fa-tachometer-alt:before{content:"\\f625"}.fa-envelope-open-text:before{content:"\\f658"}.fa-hospital-alt:before,.fa-hospital-wide:before,.fa-hospital:before{content:"\\f0f8"}.fa-wine-bottle:before{content:"\\f72f"}.fa-chess-rook:before{content:"\\f447"}.fa-bars-staggered:before,.fa-reorder:before,.fa-stream:before{content:"\\f550"}.fa-dharmachakra:before{content:"\\f655"}.fa-hotdog:before{content:"\\f80f"}.fa-blind:before,.fa-person-walking-with-cane:before{content:"\\f29d"}.fa-drum:before{content:"\\f569"}.fa-ice-cream:before{content:"\\f810"}.fa-heart-circle-bolt:before{content:"\\e4fc"}.fa-fax:before{content:"\\f1ac"}.fa-paragraph:before{content:"\\f1dd"}.fa-check-to-slot:before,.fa-vote-yea:before{content:"\\f772"}.fa-star-half:before{content:"\\f089"}.fa-boxes-alt:before,.fa-boxes-stacked:before,.fa-boxes:before{content:"\\f468"}.fa-chain:before,.fa-link:before{content:"\\f0c1"}.fa-assistive-listening-systems:before,.fa-ear-listen:before{content:"\\f2a2"}.fa-tree-city:before{content:"\\e587"}.fa-play:before{content:"\\f04b"}.fa-font:before{content:"\\f031"}.fa-table-cells-row-lock:before{content:"\\e67a"}.fa-rupiah-sign:before{content:"\\e23d"}.fa-magnifying-glass:before,.fa-search:before{content:"\\f002"}.fa-ping-pong-paddle-ball:before,.fa-table-tennis-paddle-ball:before,.fa-table-tennis:before{content:"\\f45d"}.fa-diagnoses:before,.fa-person-dots-from-line:before{content:"\\f470"}.fa-trash-can-arrow-up:before,.fa-trash-restore-alt:before{content:"\\f82a"}.fa-naira-sign:before{content:"\\e1f6"}.fa-cart-arrow-down:before{content:"\\f218"}.fa-walkie-talkie:before{content:"\\f8ef"}.fa-file-edit:before,.fa-file-pen:before{content:"\\f31c"}.fa-receipt:before{content:"\\f543"}.fa-pen-square:before,.fa-pencil-square:before,.fa-square-pen:before{content:"\\f14b"}.fa-suitcase-rolling:before{content:"\\f5c1"}.fa-person-circle-exclamation:before{content:"\\e53f"}.fa-chevron-down:before{content:"\\f078"}.fa-battery-5:before,.fa-battery-full:before,.fa-battery:before{content:"\\f240"}.fa-skull-crossbones:before{content:"\\f714"}.fa-code-compare:before{content:"\\e13a"}.fa-list-dots:before,.fa-list-ul:before{content:"\\f0ca"}.fa-school-lock:before{content:"\\e56f"}.fa-tower-cell:before{content:"\\e585"}.fa-down-long:before,.fa-long-arrow-alt-down:before{content:"\\f309"}.fa-ranking-star:before{content:"\\e561"}.fa-chess-king:before{content:"\\f43f"}.fa-person-harassing:before{content:"\\e549"}.fa-brazilian-real-sign:before{content:"\\e46c"}.fa-landmark-alt:before,.fa-landmark-dome:before{content:"\\f752"}.fa-arrow-up:before{content:"\\f062"}.fa-television:before,.fa-tv-alt:before,.fa-tv:before{content:"\\f26c"}.fa-shrimp:before{content:"\\e448"}.fa-list-check:before,.fa-tasks:before{content:"\\f0ae"}.fa-jug-detergent:before{content:"\\e519"}.fa-circle-user:before,.fa-user-circle:before{content:"\\f2bd"}.fa-user-shield:before{content:"\\f505"}.fa-wind:before{content:"\\f72e"}.fa-car-burst:before,.fa-car-crash:before{content:"\\f5e1"}.fa-y:before{content:"\\59"}.fa-person-snowboarding:before,.fa-snowboarding:before{content:"\\f7ce"}.fa-shipping-fast:before,.fa-truck-fast:before{content:"\\f48b"}.fa-fish:before{content:"\\f578"}.fa-user-graduate:before{content:"\\f501"}.fa-adjust:before,.fa-circle-half-stroke:before{content:"\\f042"}.fa-clapperboard:before{content:"\\e131"}.fa-circle-radiation:before,.fa-radiation-alt:before{content:"\\f7ba"}.fa-baseball-ball:before,.fa-baseball:before{content:"\\f433"}.fa-jet-fighter-up:before{content:"\\e518"}.fa-diagram-project:before,.fa-project-diagram:before{content:"\\f542"}.fa-copy:before{content:"\\f0c5"}.fa-volume-mute:before,.fa-volume-times:before,.fa-volume-xmark:before{content:"\\f6a9"}.fa-hand-sparkles:before{content:"\\e05d"}.fa-grip-horizontal:before,.fa-grip:before{content:"\\f58d"}.fa-share-from-square:before,.fa-share-square:before{content:"\\f14d"}.fa-child-combatant:before,.fa-child-rifle:before{content:"\\e4e0"}.fa-gun:before{content:"\\e19b"}.fa-phone-square:before,.fa-square-phone:before{content:"\\f098"}.fa-add:before,.fa-plus:before{content:"\\2b"}.fa-expand:before{content:"\\f065"}.fa-computer:before{content:"\\e4e5"}.fa-close:before,.fa-multiply:before,.fa-remove:before,.fa-times:before,.fa-xmark:before{content:"\\f00d"}.fa-arrows-up-down-left-right:before,.fa-arrows:before{content:"\\f047"}.fa-chalkboard-teacher:before,.fa-chalkboard-user:before{content:"\\f51c"}.fa-peso-sign:before{content:"\\e222"}.fa-building-shield:before{content:"\\e4d8"}.fa-baby:before{content:"\\f77c"}.fa-users-line:before{content:"\\e592"}.fa-quote-left-alt:before,.fa-quote-left:before{content:"\\f10d"}.fa-tractor:before{content:"\\f722"}.fa-trash-arrow-up:before,.fa-trash-restore:before{content:"\\f829"}.fa-arrow-down-up-lock:before{content:"\\e4b0"}.fa-lines-leaning:before{content:"\\e51e"}.fa-ruler-combined:before{content:"\\f546"}.fa-copyright:before{content:"\\f1f9"}.fa-equals:before{content:"\\3d"}.fa-blender:before{content:"\\f517"}.fa-teeth:before{content:"\\f62e"}.fa-ils:before,.fa-shekel-sign:before,.fa-shekel:before,.fa-sheqel-sign:before,.fa-sheqel:before{content:"\\f20b"}.fa-map:before{content:"\\f279"}.fa-rocket:before{content:"\\f135"}.fa-photo-film:before,.fa-photo-video:before{content:"\\f87c"}.fa-folder-minus:before{content:"\\f65d"}.fa-store:before{content:"\\f54e"}.fa-arrow-trend-up:before{content:"\\e098"}.fa-plug-circle-minus:before{content:"\\e55e"}.fa-sign-hanging:before,.fa-sign:before{content:"\\f4d9"}.fa-bezier-curve:before{content:"\\f55b"}.fa-bell-slash:before{content:"\\f1f6"}.fa-tablet-android:before,.fa-tablet:before{content:"\\f3fb"}.fa-school-flag:before{content:"\\e56e"}.fa-fill:before{content:"\\f575"}.fa-angle-up:before{content:"\\f106"}.fa-drumstick-bite:before{content:"\\f6d7"}.fa-holly-berry:before{content:"\\f7aa"}.fa-chevron-left:before{content:"\\f053"}.fa-bacteria:before{content:"\\e059"}.fa-hand-lizard:before{content:"\\f258"}.fa-notdef:before{content:"\\e1fe"}.fa-disease:before{content:"\\f7fa"}.fa-briefcase-medical:before{content:"\\f469"}.fa-genderless:before{content:"\\f22d"}.fa-chevron-right:before{content:"\\f054"}.fa-retweet:before{content:"\\f079"}.fa-car-alt:before,.fa-car-rear:before{content:"\\f5de"}.fa-pump-soap:before{content:"\\e06b"}.fa-video-slash:before{content:"\\f4e2"}.fa-battery-2:before,.fa-battery-quarter:before{content:"\\f243"}.fa-radio:before{content:"\\f8d7"}.fa-baby-carriage:before,.fa-carriage-baby:before{content:"\\f77d"}.fa-traffic-light:before{content:"\\f637"}.fa-thermometer:before{content:"\\f491"}.fa-vr-cardboard:before{content:"\\f729"}.fa-hand-middle-finger:before{content:"\\f806"}.fa-percent:before,.fa-percentage:before{content:"\\25"}.fa-truck-moving:before{content:"\\f4df"}.fa-glass-water-droplet:before{content:"\\e4f5"}.fa-display:before{content:"\\e163"}.fa-face-smile:before,.fa-smile:before{content:"\\f118"}.fa-thumb-tack:before,.fa-thumbtack:before{content:"\\f08d"}.fa-trophy:before{content:"\\f091"}.fa-person-praying:before,.fa-pray:before{content:"\\f683"}.fa-hammer:before{content:"\\f6e3"}.fa-hand-peace:before{content:"\\f25b"}.fa-rotate:before,.fa-sync-alt:before{content:"\\f2f1"}.fa-spinner:before{content:"\\f110"}.fa-robot:before{content:"\\f544"}.fa-peace:before{content:"\\f67c"}.fa-cogs:before,.fa-gears:before{content:"\\f085"}.fa-warehouse:before{content:"\\f494"}.fa-arrow-up-right-dots:before{content:"\\e4b7"}.fa-splotch:before{content:"\\f5bc"}.fa-face-grin-hearts:before,.fa-grin-hearts:before{content:"\\f584"}.fa-dice-four:before{content:"\\f524"}.fa-sim-card:before{content:"\\f7c4"}.fa-transgender-alt:before,.fa-transgender:before{content:"\\f225"}.fa-mercury:before{content:"\\f223"}.fa-arrow-turn-down:before,.fa-level-down:before{content:"\\f149"}.fa-person-falling-burst:before{content:"\\e547"}.fa-award:before{content:"\\f559"}.fa-ticket-alt:before,.fa-ticket-simple:before{content:"\\f3ff"}.fa-building:before{content:"\\f1ad"}.fa-angle-double-left:before,.fa-angles-left:before{content:"\\f100"}.fa-qrcode:before{content:"\\f029"}.fa-clock-rotate-left:before,.fa-history:before{content:"\\f1da"}.fa-face-grin-beam-sweat:before,.fa-grin-beam-sweat:before{content:"\\f583"}.fa-arrow-right-from-file:before,.fa-file-export:before{content:"\\f56e"}.fa-shield-blank:before,.fa-shield:before{content:"\\f132"}.fa-arrow-up-short-wide:before,.fa-sort-amount-up-alt:before{content:"\\f885"}.fa-house-medical:before{content:"\\e3b2"}.fa-golf-ball-tee:before,.fa-golf-ball:before{content:"\\f450"}.fa-chevron-circle-left:before,.fa-circle-chevron-left:before{content:"\\f137"}.fa-house-chimney-window:before{content:"\\e00d"}.fa-pen-nib:before{content:"\\f5ad"}.fa-tent-arrow-turn-left:before{content:"\\e580"}.fa-tents:before{content:"\\e582"}.fa-magic:before,.fa-wand-magic:before{content:"\\f0d0"}.fa-dog:before{content:"\\f6d3"}.fa-carrot:before{content:"\\f787"}.fa-moon:before{content:"\\f186"}.fa-wine-glass-alt:before,.fa-wine-glass-empty:before{content:"\\f5ce"}.fa-cheese:before{content:"\\f7ef"}.fa-yin-yang:before{content:"\\f6ad"}.fa-music:before{content:"\\f001"}.fa-code-commit:before{content:"\\f386"}.fa-temperature-low:before{content:"\\f76b"}.fa-biking:before,.fa-person-biking:before{content:"\\f84a"}.fa-broom:before{content:"\\f51a"}.fa-shield-heart:before{content:"\\e574"}.fa-gopuram:before{content:"\\f664"}.fa-earth-oceania:before,.fa-globe-oceania:before{content:"\\e47b"}.fa-square-xmark:before,.fa-times-square:before,.fa-xmark-square:before{content:"\\f2d3"}.fa-hashtag:before{content:"\\23"}.fa-expand-alt:before,.fa-up-right-and-down-left-from-center:before{content:"\\f424"}.fa-oil-can:before{content:"\\f613"}.fa-t:before{content:"\\54"}.fa-hippo:before{content:"\\f6ed"}.fa-chart-column:before{content:"\\e0e3"}.fa-infinity:before{content:"\\f534"}.fa-vial-circle-check:before{content:"\\e596"}.fa-person-arrow-down-to-line:before{content:"\\e538"}.fa-voicemail:before{content:"\\f897"}.fa-fan:before{content:"\\f863"}.fa-person-walking-luggage:before{content:"\\e554"}.fa-arrows-alt-v:before,.fa-up-down:before{content:"\\f338"}.fa-cloud-moon-rain:before{content:"\\f73c"}.fa-calendar:before{content:"\\f133"}.fa-trailer:before{content:"\\e041"}.fa-bahai:before,.fa-haykal:before{content:"\\f666"}.fa-sd-card:before{content:"\\f7c2"}.fa-dragon:before{content:"\\f6d5"}.fa-shoe-prints:before{content:"\\f54b"}.fa-circle-plus:before,.fa-plus-circle:before{content:"\\f055"}.fa-face-grin-tongue-wink:before,.fa-grin-tongue-wink:before{content:"\\f58b"}.fa-hand-holding:before{content:"\\f4bd"}.fa-plug-circle-exclamation:before{content:"\\e55d"}.fa-chain-broken:before,.fa-chain-slash:before,.fa-link-slash:before,.fa-unlink:before{content:"\\f127"}.fa-clone:before{content:"\\f24d"}.fa-person-walking-arrow-loop-left:before{content:"\\e551"}.fa-arrow-up-z-a:before,.fa-sort-alpha-up-alt:before{content:"\\f882"}.fa-fire-alt:before,.fa-fire-flame-curved:before{content:"\\f7e4"}.fa-tornado:before{content:"\\f76f"}.fa-file-circle-plus:before{content:"\\e494"}.fa-book-quran:before,.fa-quran:before{content:"\\f687"}.fa-anchor:before{content:"\\f13d"}.fa-border-all:before{content:"\\f84c"}.fa-angry:before,.fa-face-angry:before{content:"\\f556"}.fa-cookie-bite:before{content:"\\f564"}.fa-arrow-trend-down:before{content:"\\e097"}.fa-feed:before,.fa-rss:before{content:"\\f09e"}.fa-draw-polygon:before{content:"\\f5ee"}.fa-balance-scale:before,.fa-scale-balanced:before{content:"\\f24e"}.fa-gauge-simple-high:before,.fa-tachometer-fast:before,.fa-tachometer:before{content:"\\f62a"}.fa-shower:before{content:"\\f2cc"}.fa-desktop-alt:before,.fa-desktop:before{content:"\\f390"}.fa-m:before{content:"\\4d"}.fa-table-list:before,.fa-th-list:before{content:"\\f00b"}.fa-comment-sms:before,.fa-sms:before{content:"\\f7cd"}.fa-book:before{content:"\\f02d"}.fa-user-plus:before{content:"\\f234"}.fa-check:before{content:"\\f00c"}.fa-battery-4:before,.fa-battery-three-quarters:before{content:"\\f241"}.fa-house-circle-check:before{content:"\\e509"}.fa-angle-left:before{content:"\\f104"}.fa-diagram-successor:before{content:"\\e47a"}.fa-truck-arrow-right:before{content:"\\e58b"}.fa-arrows-split-up-and-left:before{content:"\\e4bc"}.fa-fist-raised:before,.fa-hand-fist:before{content:"\\f6de"}.fa-cloud-moon:before{content:"\\f6c3"}.fa-briefcase:before{content:"\\f0b1"}.fa-person-falling:before{content:"\\e546"}.fa-image-portrait:before,.fa-portrait:before{content:"\\f3e0"}.fa-user-tag:before{content:"\\f507"}.fa-rug:before{content:"\\e569"}.fa-earth-europe:before,.fa-globe-europe:before{content:"\\f7a2"}.fa-cart-flatbed-suitcase:before,.fa-luggage-cart:before{content:"\\f59d"}.fa-rectangle-times:before,.fa-rectangle-xmark:before,.fa-times-rectangle:before,.fa-window-close:before{content:"\\f410"}.fa-baht-sign:before{content:"\\e0ac"}.fa-book-open:before{content:"\\f518"}.fa-book-journal-whills:before,.fa-journal-whills:before{content:"\\f66a"}.fa-handcuffs:before{content:"\\e4f8"}.fa-exclamation-triangle:before,.fa-triangle-exclamation:before,.fa-warning:before{content:"\\f071"}.fa-database:before{content:"\\f1c0"}.fa-mail-forward:before,.fa-share:before{content:"\\f064"}.fa-bottle-droplet:before{content:"\\e4c4"}.fa-mask-face:before{content:"\\e1d7"}.fa-hill-rockslide:before{content:"\\e508"}.fa-exchange-alt:before,.fa-right-left:before{content:"\\f362"}.fa-paper-plane:before{content:"\\f1d8"}.fa-road-circle-exclamation:before{content:"\\e565"}.fa-dungeon:before{content:"\\f6d9"}.fa-align-right:before{content:"\\f038"}.fa-money-bill-1-wave:before,.fa-money-bill-wave-alt:before{content:"\\f53b"}.fa-life-ring:before{content:"\\f1cd"}.fa-hands:before,.fa-sign-language:before,.fa-signing:before{content:"\\f2a7"}.fa-calendar-day:before{content:"\\f783"}.fa-ladder-water:before,.fa-swimming-pool:before,.fa-water-ladder:before{content:"\\f5c5"}.fa-arrows-up-down:before,.fa-arrows-v:before{content:"\\f07d"}.fa-face-grimace:before,.fa-grimace:before{content:"\\f57f"}.fa-wheelchair-alt:before,.fa-wheelchair-move:before{content:"\\e2ce"}.fa-level-down-alt:before,.fa-turn-down:before{content:"\\f3be"}.fa-person-walking-arrow-right:before{content:"\\e552"}.fa-envelope-square:before,.fa-square-envelope:before{content:"\\f199"}.fa-dice:before{content:"\\f522"}.fa-bowling-ball:before{content:"\\f436"}.fa-brain:before{content:"\\f5dc"}.fa-band-aid:before,.fa-bandage:before{content:"\\f462"}.fa-calendar-minus:before{content:"\\f272"}.fa-circle-xmark:before,.fa-times-circle:before,.fa-xmark-circle:before{content:"\\f057"}.fa-gifts:before{content:"\\f79c"}.fa-hotel:before{content:"\\f594"}.fa-earth-asia:before,.fa-globe-asia:before{content:"\\f57e"}.fa-id-card-alt:before,.fa-id-card-clip:before{content:"\\f47f"}.fa-magnifying-glass-plus:before,.fa-search-plus:before{content:"\\f00e"}.fa-thumbs-up:before{content:"\\f164"}.fa-user-clock:before{content:"\\f4fd"}.fa-allergies:before,.fa-hand-dots:before{content:"\\f461"}.fa-file-invoice:before{content:"\\f570"}.fa-window-minimize:before{content:"\\f2d1"}.fa-coffee:before,.fa-mug-saucer:before{content:"\\f0f4"}.fa-brush:before{content:"\\f55d"}.fa-mask:before{content:"\\f6fa"}.fa-magnifying-glass-minus:before,.fa-search-minus:before{content:"\\f010"}.fa-ruler-vertical:before{content:"\\f548"}.fa-user-alt:before,.fa-user-large:before{content:"\\f406"}.fa-train-tram:before{content:"\\e5b4"}.fa-user-nurse:before{content:"\\f82f"}.fa-syringe:before{content:"\\f48e"}.fa-cloud-sun:before{content:"\\f6c4"}.fa-stopwatch-20:before{content:"\\e06f"}.fa-square-full:before{content:"\\f45c"}.fa-magnet:before{content:"\\f076"}.fa-jar:before{content:"\\e516"}.fa-note-sticky:before,.fa-sticky-note:before{content:"\\f249"}.fa-bug-slash:before{content:"\\e490"}.fa-arrow-up-from-water-pump:before{content:"\\e4b6"}.fa-bone:before{content:"\\f5d7"}.fa-table-cells-row-unlock:before{content:"\\e691"}.fa-user-injured:before{content:"\\f728"}.fa-face-sad-tear:before,.fa-sad-tear:before{content:"\\f5b4"}.fa-plane:before{content:"\\f072"}.fa-tent-arrows-down:before{content:"\\e581"}.fa-exclamation:before{content:"\\21"}.fa-arrows-spin:before{content:"\\e4bb"}.fa-print:before{content:"\\f02f"}.fa-try:before,.fa-turkish-lira-sign:before,.fa-turkish-lira:before{content:"\\e2bb"}.fa-dollar-sign:before,.fa-dollar:before,.fa-usd:before{content:"\\24"}.fa-x:before{content:"\\58"}.fa-magnifying-glass-dollar:before,.fa-search-dollar:before{content:"\\f688"}.fa-users-cog:before,.fa-users-gear:before{content:"\\f509"}.fa-person-military-pointing:before{content:"\\e54a"}.fa-bank:before,.fa-building-columns:before,.fa-institution:before,.fa-museum:before,.fa-university:before{content:"\\f19c"}.fa-umbrella:before{content:"\\f0e9"}.fa-trowel:before{content:"\\e589"}.fa-d:before{content:"\\44"}.fa-stapler:before{content:"\\e5af"}.fa-masks-theater:before,.fa-theater-masks:before{content:"\\f630"}.fa-kip-sign:before{content:"\\e1c4"}.fa-hand-point-left:before{content:"\\f0a5"}.fa-handshake-alt:before,.fa-handshake-simple:before{content:"\\f4c6"}.fa-fighter-jet:before,.fa-jet-fighter:before{content:"\\f0fb"}.fa-share-alt-square:before,.fa-square-share-nodes:before{content:"\\f1e1"}.fa-barcode:before{content:"\\f02a"}.fa-plus-minus:before{content:"\\e43c"}.fa-video-camera:before,.fa-video:before{content:"\\f03d"}.fa-graduation-cap:before,.fa-mortar-board:before{content:"\\f19d"}.fa-hand-holding-medical:before{content:"\\e05c"}.fa-person-circle-check:before{content:"\\e53e"}.fa-level-up-alt:before,.fa-turn-up:before{content:"\\f3bf"}\n.fa-sr-only,.fa-sr-only-focusable:not(:focus),.sr-only,.sr-only-focusable:not(:focus){position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border-width:0}:host,:root{--fa-style-family-brands:"Font Awesome 6 Brands";--fa-font-brands:normal 400 1em/1 "Font Awesome 6 Brands"}@font-face{font-family:"Font Awesome 6 Brands";font-style:normal;font-weight:400;font-display:block;src:url(../webfonts/fa-brands-400.woff2) format("woff2"),url(../webfonts/fa-brands-400.ttf) format("truetype")}.fa-brands,.fab{font-weight:400}.fa-monero:before{content:"\\f3d0"}.fa-hooli:before{content:"\\f427"}.fa-yelp:before{content:"\\f1e9"}.fa-cc-visa:before{content:"\\f1f0"}.fa-lastfm:before{content:"\\f202"}.fa-shopware:before{content:"\\f5b5"}.fa-creative-commons-nc:before{content:"\\f4e8"}.fa-aws:before{content:"\\f375"}.fa-redhat:before{content:"\\f7bc"}.fa-yoast:before{content:"\\f2b1"}.fa-cloudflare:before{content:"\\e07d"}.fa-ups:before{content:"\\f7e0"}.fa-pixiv:before{content:"\\e640"}.fa-wpexplorer:before{content:"\\f2de"}.fa-dyalog:before{content:"\\f399"}.fa-bity:before{content:"\\f37a"}.fa-stackpath:before{content:"\\f842"}.fa-buysellads:before{content:"\\f20d"}.fa-first-order:before{content:"\\f2b0"}.fa-modx:before{content:"\\f285"}.fa-guilded:before{content:"\\e07e"}.fa-vnv:before{content:"\\f40b"}.fa-js-square:before,.fa-square-js:before{content:"\\f3b9"}.fa-microsoft:before{content:"\\f3ca"}.fa-qq:before{content:"\\f1d6"}.fa-orcid:before{content:"\\f8d2"}.fa-java:before{content:"\\f4e4"}.fa-invision:before{content:"\\f7b0"}.fa-creative-commons-pd-alt:before{content:"\\f4ed"}.fa-centercode:before{content:"\\f380"}.fa-glide-g:before{content:"\\f2a6"}.fa-drupal:before{content:"\\f1a9"}.fa-jxl:before{content:"\\e67b"}.fa-dart-lang:before{content:"\\e693"}.fa-hire-a-helper:before{content:"\\f3b0"}.fa-creative-commons-by:before{content:"\\f4e7"}.fa-unity:before{content:"\\e049"}.fa-whmcs:before{content:"\\f40d"}.fa-rocketchat:before{content:"\\f3e8"}.fa-vk:before{content:"\\f189"}.fa-untappd:before{content:"\\f405"}.fa-mailchimp:before{content:"\\f59e"}.fa-css3-alt:before{content:"\\f38b"}.fa-reddit-square:before,.fa-square-reddit:before{content:"\\f1a2"}.fa-vimeo-v:before{content:"\\f27d"}.fa-contao:before{content:"\\f26d"}.fa-square-font-awesome:before{content:"\\e5ad"}.fa-deskpro:before{content:"\\f38f"}.fa-brave:before{content:"\\e63c"}.fa-sistrix:before{content:"\\f3ee"}.fa-instagram-square:before,.fa-square-instagram:before{content:"\\e055"}.fa-battle-net:before{content:"\\f835"}.fa-the-red-yeti:before{content:"\\f69d"}.fa-hacker-news-square:before,.fa-square-hacker-news:before{content:"\\f3af"}.fa-edge:before{content:"\\f282"}.fa-threads:before{content:"\\e618"}.fa-napster:before{content:"\\f3d2"}.fa-snapchat-square:before,.fa-square-snapchat:before{content:"\\f2ad"}.fa-google-plus-g:before{content:"\\f0d5"}.fa-artstation:before{content:"\\f77a"}.fa-markdown:before{content:"\\f60f"}.fa-sourcetree:before{content:"\\f7d3"}.fa-google-plus:before{content:"\\f2b3"}.fa-diaspora:before{content:"\\f791"}.fa-foursquare:before{content:"\\f180"}.fa-stack-overflow:before{content:"\\f16c"}.fa-github-alt:before{content:"\\f113"}.fa-phoenix-squadron:before{content:"\\f511"}.fa-pagelines:before{content:"\\f18c"}.fa-algolia:before{content:"\\f36c"}.fa-red-river:before{content:"\\f3e3"}.fa-creative-commons-sa:before{content:"\\f4ef"}.fa-safari:before{content:"\\f267"}.fa-google:before{content:"\\f1a0"}.fa-font-awesome-alt:before,.fa-square-font-awesome-stroke:before{content:"\\f35c"}.fa-atlassian:before{content:"\\f77b"}.fa-linkedin-in:before{content:"\\f0e1"}.fa-digital-ocean:before{content:"\\f391"}.fa-nimblr:before{content:"\\f5a8"}.fa-chromecast:before{content:"\\f838"}.fa-evernote:before{content:"\\f839"}.fa-hacker-news:before{content:"\\f1d4"}.fa-creative-commons-sampling:before{content:"\\f4f0"}.fa-adversal:before{content:"\\f36a"}.fa-creative-commons:before{content:"\\f25e"}.fa-watchman-monitoring:before{content:"\\e087"}.fa-fonticons:before{content:"\\f280"}.fa-weixin:before{content:"\\f1d7"}.fa-shirtsinbulk:before{content:"\\f214"}.fa-codepen:before{content:"\\f1cb"}.fa-git-alt:before{content:"\\f841"}.fa-lyft:before{content:"\\f3c3"}.fa-rev:before{content:"\\f5b2"}.fa-windows:before{content:"\\f17a"}.fa-wizards-of-the-coast:before{content:"\\f730"}.fa-square-viadeo:before,.fa-viadeo-square:before{content:"\\f2aa"}.fa-meetup:before{content:"\\f2e0"}.fa-centos:before{content:"\\f789"}.fa-adn:before{content:"\\f170"}.fa-cloudsmith:before{content:"\\f384"}.fa-opensuse:before{content:"\\e62b"}.fa-pied-piper-alt:before{content:"\\f1a8"}.fa-dribbble-square:before,.fa-square-dribbble:before{content:"\\f397"}.fa-codiepie:before{content:"\\f284"}.fa-node:before{content:"\\f419"}.fa-mix:before{content:"\\f3cb"}.fa-steam:before{content:"\\f1b6"}.fa-cc-apple-pay:before{content:"\\f416"}.fa-scribd:before{content:"\\f28a"}.fa-debian:before{content:"\\e60b"}.fa-openid:before{content:"\\f19b"}.fa-instalod:before{content:"\\e081"}.fa-expeditedssl:before{content:"\\f23e"}.fa-sellcast:before{content:"\\f2da"}.fa-square-twitter:before,.fa-twitter-square:before{content:"\\f081"}.fa-r-project:before{content:"\\f4f7"}.fa-delicious:before{content:"\\f1a5"}.fa-freebsd:before{content:"\\f3a4"}.fa-vuejs:before{content:"\\f41f"}.fa-accusoft:before{content:"\\f369"}.fa-ioxhost:before{content:"\\f208"}.fa-fonticons-fi:before{content:"\\f3a2"}.fa-app-store:before{content:"\\f36f"}.fa-cc-mastercard:before{content:"\\f1f1"}.fa-itunes-note:before{content:"\\f3b5"}.fa-golang:before{content:"\\e40f"}.fa-kickstarter:before,.fa-square-kickstarter:before{content:"\\f3bb"}.fa-grav:before{content:"\\f2d6"}.fa-weibo:before{content:"\\f18a"}.fa-uncharted:before{content:"\\e084"}.fa-firstdraft:before{content:"\\f3a1"}.fa-square-youtube:before,.fa-youtube-square:before{content:"\\f431"}.fa-wikipedia-w:before{content:"\\f266"}.fa-rendact:before,.fa-wpressr:before{content:"\\f3e4"}.fa-angellist:before{content:"\\f209"}.fa-galactic-republic:before{content:"\\f50c"}.fa-nfc-directional:before{content:"\\e530"}.fa-skype:before{content:"\\f17e"}.fa-joget:before{content:"\\f3b7"}.fa-fedora:before{content:"\\f798"}.fa-stripe-s:before{content:"\\f42a"}.fa-meta:before{content:"\\e49b"}.fa-laravel:before{content:"\\f3bd"}.fa-hotjar:before{content:"\\f3b1"}.fa-bluetooth-b:before{content:"\\f294"}.fa-square-letterboxd:before{content:"\\e62e"}.fa-sticker-mule:before{content:"\\f3f7"}.fa-creative-commons-zero:before{content:"\\f4f3"}.fa-hips:before{content:"\\f452"}.fa-behance:before{content:"\\f1b4"}.fa-reddit:before{content:"\\f1a1"}.fa-discord:before{content:"\\f392"}.fa-chrome:before{content:"\\f268"}.fa-app-store-ios:before{content:"\\f370"}.fa-cc-discover:before{content:"\\f1f2"}.fa-wpbeginner:before{content:"\\f297"}.fa-confluence:before{content:"\\f78d"}.fa-shoelace:before{content:"\\e60c"}.fa-mdb:before{content:"\\f8ca"}.fa-dochub:before{content:"\\f394"}.fa-accessible-icon:before{content:"\\f368"}.fa-ebay:before{content:"\\f4f4"}.fa-amazon:before{content:"\\f270"}.fa-unsplash:before{content:"\\e07c"}.fa-yarn:before{content:"\\f7e3"}.fa-square-steam:before,.fa-steam-square:before{content:"\\f1b7"}.fa-500px:before{content:"\\f26e"}.fa-square-vimeo:before,.fa-vimeo-square:before{content:"\\f194"}.fa-asymmetrik:before{content:"\\f372"}.fa-font-awesome-flag:before,.fa-font-awesome-logo-full:before,.fa-font-awesome:before{content:"\\f2b4"}.fa-gratipay:before{content:"\\f184"}.fa-apple:before{content:"\\f179"}.fa-hive:before{content:"\\e07f"}.fa-gitkraken:before{content:"\\f3a6"}.fa-keybase:before{content:"\\f4f5"}.fa-apple-pay:before{content:"\\f415"}.fa-padlet:before{content:"\\e4a0"}.fa-amazon-pay:before{content:"\\f42c"}.fa-github-square:before,.fa-square-github:before{content:"\\f092"}.fa-stumbleupon:before{content:"\\f1a4"}.fa-fedex:before{content:"\\f797"}.fa-phoenix-framework:before{content:"\\f3dc"}.fa-shopify:before{content:"\\e057"}.fa-neos:before{content:"\\f612"}.fa-square-threads:before{content:"\\e619"}.fa-hackerrank:before{content:"\\f5f7"}.fa-researchgate:before{content:"\\f4f8"}.fa-swift:before{content:"\\f8e1"}.fa-angular:before{content:"\\f420"}.fa-speakap:before{content:"\\f3f3"}.fa-angrycreative:before{content:"\\f36e"}.fa-y-combinator:before{content:"\\f23b"}.fa-empire:before{content:"\\f1d1"}.fa-envira:before{content:"\\f299"}.fa-google-scholar:before{content:"\\e63b"}.fa-gitlab-square:before,.fa-square-gitlab:before{content:"\\e5ae"}.fa-studiovinari:before{content:"\\f3f8"}.fa-pied-piper:before{content:"\\f2ae"}.fa-wordpress:before{content:"\\f19a"}.fa-product-hunt:before{content:"\\f288"}.fa-firefox:before{content:"\\f269"}.fa-linode:before{content:"\\f2b8"}.fa-goodreads:before{content:"\\f3a8"}.fa-odnoklassniki-square:before,.fa-square-odnoklassniki:before{content:"\\f264"}.fa-jsfiddle:before{content:"\\f1cc"}.fa-sith:before{content:"\\f512"}.fa-themeisle:before{content:"\\f2b2"}.fa-page4:before{content:"\\f3d7"}.fa-hashnode:before{content:"\\e499"}.fa-react:before{content:"\\f41b"}.fa-cc-paypal:before{content:"\\f1f4"}.fa-squarespace:before{content:"\\f5be"}.fa-cc-stripe:before{content:"\\f1f5"}.fa-creative-commons-share:before{content:"\\f4f2"}.fa-bitcoin:before{content:"\\f379"}.fa-keycdn:before{content:"\\f3ba"}.fa-opera:before{content:"\\f26a"}.fa-itch-io:before{content:"\\f83a"}.fa-umbraco:before{content:"\\f8e8"}.fa-galactic-senate:before{content:"\\f50d"}.fa-ubuntu:before{content:"\\f7df"}.fa-draft2digital:before{content:"\\f396"}.fa-stripe:before{content:"\\f429"}.fa-houzz:before{content:"\\f27c"}.fa-gg:before{content:"\\f260"}.fa-dhl:before{content:"\\f790"}.fa-pinterest-square:before,.fa-square-pinterest:before{content:"\\f0d3"}.fa-xing:before{content:"\\f168"}.fa-blackberry:before{content:"\\f37b"}.fa-creative-commons-pd:before{content:"\\f4ec"}.fa-playstation:before{content:"\\f3df"}.fa-quinscape:before{content:"\\f459"}.fa-less:before{content:"\\f41d"}.fa-blogger-b:before{content:"\\f37d"}.fa-opencart:before{content:"\\f23d"}.fa-vine:before{content:"\\f1ca"}.fa-signal-messenger:before{content:"\\e663"}.fa-paypal:before{content:"\\f1ed"}.fa-gitlab:before{content:"\\f296"}.fa-typo3:before{content:"\\f42b"}.fa-reddit-alien:before{content:"\\f281"}.fa-yahoo:before{content:"\\f19e"}.fa-dailymotion:before{content:"\\e052"}.fa-affiliatetheme:before{content:"\\f36b"}.fa-pied-piper-pp:before{content:"\\f1a7"}.fa-bootstrap:before{content:"\\f836"}.fa-odnoklassniki:before{content:"\\f263"}.fa-nfc-symbol:before{content:"\\e531"}.fa-mintbit:before{content:"\\e62f"}.fa-ethereum:before{content:"\\f42e"}.fa-speaker-deck:before{content:"\\f83c"}.fa-creative-commons-nc-eu:before{content:"\\f4e9"}.fa-patreon:before{content:"\\f3d9"}.fa-avianex:before{content:"\\f374"}.fa-ello:before{content:"\\f5f1"}.fa-gofore:before{content:"\\f3a7"}.fa-bimobject:before{content:"\\f378"}.fa-brave-reverse:before{content:"\\e63d"}.fa-facebook-f:before{content:"\\f39e"}.fa-google-plus-square:before,.fa-square-google-plus:before{content:"\\f0d4"}.fa-web-awesome:before{content:"\\e682"}.fa-mandalorian:before{content:"\\f50f"}.fa-first-order-alt:before{content:"\\f50a"}.fa-osi:before{content:"\\f41a"}.fa-google-wallet:before{content:"\\f1ee"}.fa-d-and-d-beyond:before{content:"\\f6ca"}.fa-periscope:before{content:"\\f3da"}.fa-fulcrum:before{content:"\\f50b"}.fa-cloudscale:before{content:"\\f383"}.fa-forumbee:before{content:"\\f211"}.fa-mizuni:before{content:"\\f3cc"}.fa-schlix:before{content:"\\f3ea"}.fa-square-xing:before,.fa-xing-square:before{content:"\\f169"}.fa-bandcamp:before{content:"\\f2d5"}.fa-wpforms:before{content:"\\f298"}.fa-cloudversify:before{content:"\\f385"}.fa-usps:before{content:"\\f7e1"}.fa-megaport:before{content:"\\f5a3"}.fa-magento:before{content:"\\f3c4"}.fa-spotify:before{content:"\\f1bc"}.fa-optin-monster:before{content:"\\f23c"}.fa-fly:before{content:"\\f417"}.fa-aviato:before{content:"\\f421"}.fa-itunes:before{content:"\\f3b4"}.fa-cuttlefish:before{content:"\\f38c"}.fa-blogger:before{content:"\\f37c"}.fa-flickr:before{content:"\\f16e"}.fa-viber:before{content:"\\f409"}.fa-soundcloud:before{content:"\\f1be"}.fa-digg:before{content:"\\f1a6"}.fa-tencent-weibo:before{content:"\\f1d5"}.fa-letterboxd:before{content:"\\e62d"}.fa-symfony:before{content:"\\f83d"}.fa-maxcdn:before{content:"\\f136"}.fa-etsy:before{content:"\\f2d7"}.fa-facebook-messenger:before{content:"\\f39f"}.fa-audible:before{content:"\\f373"}.fa-think-peaks:before{content:"\\f731"}.fa-bilibili:before{content:"\\e3d9"}.fa-erlang:before{content:"\\f39d"}.fa-x-twitter:before{content:"\\e61b"}.fa-cotton-bureau:before{content:"\\f89e"}.fa-dashcube:before{content:"\\f210"}.fa-42-group:before,.fa-innosoft:before{content:"\\e080"}.fa-stack-exchange:before{content:"\\f18d"}.fa-elementor:before{content:"\\f430"}.fa-pied-piper-square:before,.fa-square-pied-piper:before{content:"\\e01e"}.fa-creative-commons-nd:before{content:"\\f4eb"}.fa-palfed:before{content:"\\f3d8"}.fa-superpowers:before{content:"\\f2dd"}.fa-resolving:before{content:"\\f3e7"}.fa-xbox:before{content:"\\f412"}.fa-square-web-awesome-stroke:before{content:"\\e684"}.fa-searchengin:before{content:"\\f3eb"}.fa-tiktok:before{content:"\\e07b"}.fa-facebook-square:before,.fa-square-facebook:before{content:"\\f082"}.fa-renren:before{content:"\\f18b"}.fa-linux:before{content:"\\f17c"}.fa-glide:before{content:"\\f2a5"}.fa-linkedin:before{content:"\\f08c"}.fa-hubspot:before{content:"\\f3b2"}.fa-deploydog:before{content:"\\f38e"}.fa-twitch:before{content:"\\f1e8"}.fa-flutter:before{content:"\\e694"}.fa-ravelry:before{content:"\\f2d9"}.fa-mixer:before{content:"\\e056"}.fa-lastfm-square:before,.fa-square-lastfm:before{content:"\\f203"}.fa-vimeo:before{content:"\\f40a"}.fa-mendeley:before{content:"\\f7b3"}.fa-uniregistry:before{content:"\\f404"}.fa-figma:before{content:"\\f799"}.fa-creative-commons-remix:before{content:"\\f4ee"}.fa-cc-amazon-pay:before{content:"\\f42d"}.fa-dropbox:before{content:"\\f16b"}.fa-instagram:before{content:"\\f16d"}.fa-cmplid:before{content:"\\e360"}.fa-upwork:before{content:"\\e641"}.fa-facebook:before{content:"\\f09a"}.fa-gripfire:before{content:"\\f3ac"}.fa-jedi-order:before{content:"\\f50e"}.fa-uikit:before{content:"\\f403"}.fa-fort-awesome-alt:before{content:"\\f3a3"}.fa-phabricator:before{content:"\\f3db"}.fa-ussunnah:before{content:"\\f407"}.fa-earlybirds:before{content:"\\f39a"}.fa-trade-federation:before{content:"\\f513"}.fa-autoprefixer:before{content:"\\f41c"}.fa-whatsapp:before{content:"\\f232"}.fa-square-upwork:before{content:"\\e67c"}.fa-slideshare:before{content:"\\f1e7"}.fa-google-play:before{content:"\\f3ab"}.fa-viadeo:before{content:"\\f2a9"}.fa-line:before{content:"\\f3c0"}.fa-google-drive:before{content:"\\f3aa"}.fa-servicestack:before{content:"\\f3ec"}.fa-simplybuilt:before{content:"\\f215"}.fa-bitbucket:before{content:"\\f171"}.fa-imdb:before{content:"\\f2d8"}.fa-deezer:before{content:"\\e077"}.fa-raspberry-pi:before{content:"\\f7bb"}.fa-jira:before{content:"\\f7b1"}.fa-docker:before{content:"\\f395"}.fa-screenpal:before{content:"\\e570"}.fa-bluetooth:before{content:"\\f293"}.fa-gitter:before{content:"\\f426"}.fa-d-and-d:before{content:"\\f38d"}.fa-microblog:before{content:"\\e01a"}.fa-cc-diners-club:before{content:"\\f24c"}.fa-gg-circle:before{content:"\\f261"}.fa-pied-piper-hat:before{content:"\\f4e5"}.fa-kickstarter-k:before{content:"\\f3bc"}.fa-yandex:before{content:"\\f413"}.fa-readme:before{content:"\\f4d5"}.fa-html5:before{content:"\\f13b"}.fa-sellsy:before{content:"\\f213"}.fa-square-web-awesome:before{content:"\\e683"}.fa-sass:before{content:"\\f41e"}.fa-wirsindhandwerk:before,.fa-wsh:before{content:"\\e2d0"}.fa-buromobelexperte:before{content:"\\f37f"}.fa-salesforce:before{content:"\\f83b"}.fa-octopus-deploy:before{content:"\\e082"}.fa-medapps:before{content:"\\f3c6"}.fa-ns8:before{content:"\\f3d5"}.fa-pinterest-p:before{content:"\\f231"}.fa-apper:before{content:"\\f371"}.fa-fort-awesome:before{content:"\\f286"}.fa-waze:before{content:"\\f83f"}.fa-bluesky:before{content:"\\e671"}.fa-cc-jcb:before{content:"\\f24b"}.fa-snapchat-ghost:before,.fa-snapchat:before{content:"\\f2ab"}.fa-fantasy-flight-games:before{content:"\\f6dc"}.fa-rust:before{content:"\\e07a"}.fa-wix:before{content:"\\f5cf"}.fa-behance-square:before,.fa-square-behance:before{content:"\\f1b5"}.fa-supple:before{content:"\\f3f9"}.fa-webflow:before{content:"\\e65c"}.fa-rebel:before{content:"\\f1d0"}.fa-css3:before{content:"\\f13c"}.fa-staylinked:before{content:"\\f3f5"}.fa-kaggle:before{content:"\\f5fa"}.fa-space-awesome:before{content:"\\e5ac"}.fa-deviantart:before{content:"\\f1bd"}.fa-cpanel:before{content:"\\f388"}.fa-goodreads-g:before{content:"\\f3a9"}.fa-git-square:before,.fa-square-git:before{content:"\\f1d2"}.fa-square-tumblr:before,.fa-tumblr-square:before{content:"\\f174"}.fa-trello:before{content:"\\f181"}.fa-creative-commons-nc-jp:before{content:"\\f4ea"}.fa-get-pocket:before{content:"\\f265"}.fa-perbyte:before{content:"\\e083"}.fa-grunt:before{content:"\\f3ad"}.fa-weebly:before{content:"\\f5cc"}.fa-connectdevelop:before{content:"\\f20e"}.fa-leanpub:before{content:"\\f212"}.fa-black-tie:before{content:"\\f27e"}.fa-themeco:before{content:"\\f5c6"}.fa-python:before{content:"\\f3e2"}.fa-android:before{content:"\\f17b"}.fa-bots:before{content:"\\e340"}.fa-free-code-camp:before{content:"\\f2c5"}.fa-hornbill:before{content:"\\f592"}.fa-js:before{content:"\\f3b8"}.fa-ideal:before{content:"\\e013"}.fa-git:before{content:"\\f1d3"}.fa-dev:before{content:"\\f6cc"}.fa-sketch:before{content:"\\f7c6"}.fa-yandex-international:before{content:"\\f414"}.fa-cc-amex:before{content:"\\f1f3"}.fa-uber:before{content:"\\f402"}.fa-github:before{content:"\\f09b"}.fa-php:before{content:"\\f457"}.fa-alipay:before{content:"\\f642"}.fa-youtube:before{content:"\\f167"}.fa-skyatlas:before{content:"\\f216"}.fa-firefox-browser:before{content:"\\e007"}.fa-replyd:before{content:"\\f3e6"}.fa-suse:before{content:"\\f7d6"}.fa-jenkins:before{content:"\\f3b6"}.fa-twitter:before{content:"\\f099"}.fa-rockrms:before{content:"\\f3e9"}.fa-pinterest:before{content:"\\f0d2"}.fa-buffer:before{content:"\\f837"}.fa-npm:before{content:"\\f3d4"}.fa-yammer:before{content:"\\f840"}.fa-btc:before{content:"\\f15a"}.fa-dribbble:before{content:"\\f17d"}.fa-stumbleupon-circle:before{content:"\\f1a3"}.fa-internet-explorer:before{content:"\\f26b"}.fa-stubber:before{content:"\\e5c7"}.fa-telegram-plane:before,.fa-telegram:before{content:"\\f2c6"}.fa-old-republic:before{content:"\\f510"}.fa-odysee:before{content:"\\e5c6"}.fa-square-whatsapp:before,.fa-whatsapp-square:before{content:"\\f40c"}.fa-node-js:before{content:"\\f3d3"}.fa-edge-legacy:before{content:"\\e078"}.fa-slack-hash:before,.fa-slack:before{content:"\\f198"}.fa-medrt:before{content:"\\f3c8"}.fa-usb:before{content:"\\f287"}.fa-tumblr:before{content:"\\f173"}.fa-vaadin:before{content:"\\f408"}.fa-quora:before{content:"\\f2c4"}.fa-square-x-twitter:before{content:"\\e61a"}.fa-reacteurope:before{content:"\\f75d"}.fa-medium-m:before,.fa-medium:before{content:"\\f23a"}.fa-amilia:before{content:"\\f36d"}.fa-mixcloud:before{content:"\\f289"}.fa-flipboard:before{content:"\\f44d"}.fa-viacoin:before{content:"\\f237"}.fa-critical-role:before{content:"\\f6c9"}.fa-sitrox:before{content:"\\e44a"}.fa-discourse:before{content:"\\f393"}.fa-joomla:before{content:"\\f1aa"}.fa-mastodon:before{content:"\\f4f6"}.fa-airbnb:before{content:"\\f834"}.fa-wolf-pack-battalion:before{content:"\\f514"}.fa-buy-n-large:before{content:"\\f8a6"}.fa-gulp:before{content:"\\f3ae"}.fa-creative-commons-sampling-plus:before{content:"\\f4f1"}.fa-strava:before{content:"\\f428"}.fa-ember:before{content:"\\f423"}.fa-canadian-maple-leaf:before{content:"\\f785"}.fa-teamspeak:before{content:"\\f4f9"}.fa-pushed:before{content:"\\f3e1"}.fa-wordpress-simple:before{content:"\\f411"}.fa-nutritionix:before{content:"\\f3d6"}.fa-wodu:before{content:"\\e088"}.fa-google-pay:before{content:"\\e079"}.fa-intercom:before{content:"\\f7af"}.fa-zhihu:before{content:"\\f63f"}.fa-korvue:before{content:"\\f42f"}.fa-pix:before{content:"\\e43a"}.fa-steam-symbol:before{content:"\\f3f6"}:host,:root{--fa-font-regular:normal 400 1em/1 "Font Awesome 6 Free"}@font-face{font-family:"Font Awesome 6 Free";font-style:normal;font-weight:400;font-display:block;src:url(../webfonts/fa-regular-400.woff2) format("woff2"),url(../webfonts/fa-regular-400.ttf) format("truetype")}.fa-regular,.far{font-weight:400}:host,:root{--fa-style-family-classic:"Font Awesome 6 Free";--fa-font-solid:normal 900 1em/1 "Font Awesome 6 Free"}@font-face{font-family:"Font Awesome 6 Free";font-style:normal;font-weight:900;font-display:block;src:url(../webfonts/fa-solid-900.woff2) format("woff2"),url(../webfonts/fa-solid-900.ttf) format("truetype")}.fa-solid,.fas{font-weight:900}@font-face{font-family:"Font Awesome 5 Brands";font-display:block;font-weight:400;src:url(../webfonts/fa-brands-400.woff2) format("woff2"),url(../webfonts/fa-brands-400.ttf) format("truetype")}@font-face{font-family:"Font Awesome 5 Free";font-display:block;font-weight:900;src:url(../webfonts/fa-solid-900.woff2) format("woff2"),url(../webfonts/fa-solid-900.ttf) format("truetype")}@font-face{font-family:"Font Awesome 5 Free";font-display:block;font-weight:400;src:url(../webfonts/fa-regular-400.woff2) format("woff2"),url(../webfonts/fa-regular-400.ttf) format("truetype")}@font-face{font-family:"FontAwesome";font-display:block;src:url(../webfonts/fa-solid-900.woff2) format("woff2"),url(../webfonts/fa-solid-900.ttf) format("truetype")}@font-face{font-family:"FontAwesome";font-display:block;src:url(../webfonts/fa-brands-400.woff2) format("woff2"),url(../webfonts/fa-brands-400.ttf) format("truetype")}@font-face{font-family:"FontAwesome";font-display:block;src:url(../webfonts/fa-regular-400.woff2) format("woff2"),url(../webfonts/fa-regular-400.ttf) format("truetype");unicode-range:u+f003,u+f006,u+f014,u+f016-f017,u+f01a-f01b,u+f01d,u+f022,u+f03e,u+f044,u+f046,u+f05c-f05d,u+f06e,u+f070,u+f087-f088,u+f08a,u+f094,u+f096-f097,u+f09d,u+f0a0,u+f0a2,u+f0a4-f0a7,u+f0c5,u+f0c7,u+f0e5-f0e6,u+f0eb,u+f0f6-f0f8,u+f10c,u+f114-f115,u+f118-f11a,u+f11c-f11d,u+f133,u+f147,u+f14e,u+f150-f152,u+f185-f186,u+f18e,u+f190-f192,u+f196,u+f1c1-f1c9,u+f1d9,u+f1db,u+f1e3,u+f1ea,u+f1f7,u+f1f9,u+f20a,u+f247-f248,u+f24a,u+f24d,u+f255-f25b,u+f25d,u+f271-f274,u+f278,u+f27b,u+f28c,u+f28e,u+f29c,u+f2b5,u+f2b7,u+f2ba,u+f2bc,u+f2be,u+f2c0-f2c1,u+f2c3,u+f2d0,u+f2d2,u+f2d4,u+f2dc}@font-face{font-family:"FontAwesome";font-display:block;src:url(../webfonts/fa-v4compatibility.woff2) format("woff2"),url(../webfonts/fa-v4compatibility.ttf) format("truetype");unicode-range:u+f041,u+f047,u+f065-f066,u+f07d-f07e,u+f080,u+f08b,u+f08e,u+f090,u+f09a,u+f0ac,u+f0ae,u+f0b2,u+f0d0,u+f0d6,u+f0e4,u+f0ec,u+f10a-f10b,u+f123,u+f13e,u+f148-f149,u+f14c,u+f156,u+f15e,u+f160-f161,u+f163,u+f175-f178,u+f195,u+f1f8,u+f219,u+f27a}';

// src/PDFViewer.ts
var PDFViewer = class {
  container;
  iframeId = "";
  options;
  constructor(params) {
    this.container = params.container;
    this.options = params.options;
    this.initUI();
  }
  setOptions = (options) => {
    this.options = options;
  };
  loadUrl = async (url) => {
    const response = await fetch(url);
    const blob = await response.blob();
    await this.render(URL.createObjectURL(blob));
  };
  loadBase64 = async (encodedPdf) => {
    await this.render(encodedPdf);
  };
  initUI = () => {
    const iframe = document.createElement("iframe");
    iframe.id = this.iframeId = `${this.container.id}-iframe`;
    this.container.appendChild(iframe);
    const iframeWindow = iframe.contentWindow;
    const iframeDocument = iframe.contentDocument || iframeWindow?.document;
    if (iframeDocument) {
      iframeDocument.open();
      iframeDocument.write(viewer_default);
      iframeDocument.close();
      this.loadStyles(iframeDocument);
      this.loadScripts(iframeDocument);
    }
  };
  render = async (pdf) => {
    const viewerContainer = document.getElementById(this.iframeId);
    if (!viewerContainer) {
      throw new Error(`PDFViewer error: iframe container ${this.iframeId} not found.`);
    }
    const viewerWindow = viewerContainer.contentWindow;
    if (!viewerWindow) {
      throw new Error(`PDFViewer error: iframe window is corrupted.`);
    }
    try {
      await viewerWindow.PDFViewerApplication.open({ url: pdf });
    } catch (e) {
      console.error("PDFViewer error: PDF document can not be loaded - " + e);
      alert("Corrupted PDF file.");
    }
  };
  loadStyles = (document2) => {
    [viewer_default2, all_min_default].forEach((styles) => {
      const stylesElement = document2.createElement("style");
      stylesElement.textContent = styles;
      document2.head.appendChild(stylesElement);
    });
  };
  loadScripts = (document2) => {
    [pdf_min_default, viewer_default3].forEach((script) => {
      const scriptElement = document2.createElement("script");
      scriptElement.type = "module";
      scriptElement.defer = true;
      scriptElement.textContent = script;
      document2.body.appendChild(scriptElement);
    });
  };
};
window.PDFViewer = PDFViewer;
export {
  PDFViewer
};
//# sourceMappingURL=PDFViewer.mjs.map